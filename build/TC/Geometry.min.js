var TC=TC||{};!function(n,e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define([],e):n.Geometry=e()}(TC,function(){const n={isPoint:function(n){return Array.isArray(n)&&n.length>=2&&"number"==typeof n[0]&&"number"==typeof n[1]},isRing:function(e){return Array.isArray(e)&&(0===e.length||n.isPoint(e[0]))},isRingCollection:function(e){return Array.isArray(e)&&(0===e.length||n.isRing(e[0]))},isMultiRingCollection:function(e){return Array.isArray(e)&&(0===e.length||n.isRingCollection(e[0]))},getNearest:function(n,e){return TC.wrap.Geometry.getNearest(n,e)},isInside:function e(t,i){var r=!1;if(n.isPoint(t))if(n.isPoint(i))r=t[0]===i[0]&&t[1]===i[1];else if(n.isRing(i))for(var o=0,s=i.length-1;o<i.length;s=o++){var u=i[o][0],l=i[o][1],c=i[s][0],f=i[s][1];l>t[1]!=f>t[1]&&t[0]<(c-u)*(t[1]-l)/(f-l)+u&&(r=!r)}else if(n.isRingCollection(i)&&i.length>0){if(e(t,i[0])){var a=!1;for(o=1;o<i.length;o++)if(e(t,i[o])){a=!0;break}a||(r=!0)}}else if(n.isMultiRingCollection(i)&&i.length>0){o=0;for(var g=i.length;o<g;o++)if(e(t,i[o])){r=!0;break}}return r},getFlatCoordinates:function(e){const t=function(n,e){return n.concat(e)};switch(!0){case n.isPoint(e):return[e];case n.isRing(e):return e;case n.isRingCollection(e):return e.reduce(t);case n.isMultiRingCollection(e):return e.reduce(t).reduce(t);default:return[]}},intersects:function(e,t){const i=function(e,t){for(var i=0,r=e.length;i<r;i++)if(n.isInside(e[i],t))return!0;return!1};return!(!i(n.getFlatCoordinates(e),t)&&!i(n.getFlatCoordinates(t),e))}};return n});
//# sourceMappingURL=maps/Geometry.min.js.map