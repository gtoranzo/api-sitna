TC.Layer=function(t){this.options=t||{};TC.Util.extend(this,this.options);this.id=this.options.id||TC.getUID();this.map=this.options.map;this.type=this.options.type||TC.Consts.layerType.WMS;this.customLegend=this.options.customLegend;var i=this.options.isBase?TC.Consts.mimeType.JPEG:TC.Consts.mimeType.PNG;this.options.format=this.options.format||i;void 0===this.options.hideTree&&(this.options.hideTree=!0);void 0===this.options.hideTitle&&(this.options.hideTitle=!1);this._cache={visibilityStates:{}};this.tree=null;this.wrap=null};TC.Layer.state={IDLE:"idle",LOADING:"loading"};TC.Layer.prototype.setVisibility=function(t){this.wrap.setVisibility(t)};TC.Layer.prototype.getVisibility=function(){var t=!1;this.map&&(this.isBase&&this.map.getBaseLayer()!==this||(t=this.wrap.getVisibility()));return t};TC.Layer.prototype.getOpacity=function(){var t=!1;this.map&&(this.isBase&&this.map.getBaseLayer()!==this||(t=this.wrap.layer.getOpacity()));return t};TC.Layer.prototype.setOpacity=function(t,i){var e=this;this.wrap.getLayer().then(function(s){s.setOpacity(t);e.opacity=t;e.map&&!i&&e.map.trigger(TC.Consts.event.LAYEROPACITY,{layer:e,opacity:t})})};TC.Layer.prototype.isCompatible=function(t){return!0};TC.Layer.prototype.isValidFromNames=function(){return!0};TC.Layer.prototype.isRaster=function(){var t=!0;switch(this.type){case TC.Consts.layerType.VECTOR:case TC.Consts.layerType.KML:case TC.Consts.layerType.WFS:case TC.Consts.layerType.GROUP:t=!1}return t};TC.Layer.prototype.isVisibleByScale=function(t){return!0};TC.Layer.prototype.isVisibleByName=function(t){return!0};TC.Layer.prototype.getTree=function(){return{name:this.name,title:this.title}};TC.Layer.prototype.findNode=function t(i,e){var s=null;if(e.uid==i)s=e;else for(var o=0;o<e.children.length;o++){var r=t(i,e.children[o]);if(r){s=r;break}}return s};TC.Layer.prototype.setNodeVisibility=function(t,i){this.setVisibility(i)};TC.Layer.prototype.getNodeVisibility=function(t){return TC.Consts.visibility.VISIBLE};TC.Layer.prototype.getResolutions=function(){return this.wrap.getResolutions?this.wrap.getResolutions():[]};TC.Layer.prototype.setProjection=function(){};
//# sourceMappingURL=maps/Layer.min.js.map