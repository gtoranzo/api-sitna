TC.control=TC.control||{};TC.control.FeatureInfoCommons||TC.syncLoadJS(TC.apiLocation+"TC/control/FeatureInfoCommons");!function(){TC.control.FeatureInfo=function(){var e=this;TC.control.FeatureInfoCommons.apply(this,arguments);e.wrap=new TC.wrap.control.FeatureInfo(e);TC.Consts.classes.FROMLEFT="tc-fromleft";TC.Consts.classes.FROMRIGHT="tc-fromright";e.options.displayElevation&&TC.loadJS(!TC.tool||!TC.tool.Elevation,TC.apiLocation+"TC/tool/Elevation",function(){const t="boolean"==typeof e.options.displayElevation?{}:e.options.displayElevation;e.elevation=new TC.tool.Elevation(t)})};TC.inherit(TC.control.FeatureInfo,TC.control.FeatureInfoCommons);var e=TC.control.FeatureInfo.prototype,t=function e(t,r){var a;if($.isArray(t))for(var o=0,n=(a=t.slice()).length;o<n;o++)a[o]=e(a[o]);else a="number"==typeof t?Math.round(t.toFixed(r)):t;return a};e.register=function(e){const t=TC.control.FeatureInfoCommons.prototype.register.call(this,e);document.createElement("div").appendChild(this.div);return t};e.callback=function(e,t){var r=this;if(r.elevation){r.querying=!0;r.elevationRequest=r.elevation.getElevation({crs:r.map.crs,coordinates:e})}if(r.map&&r.filterLayer){var a=r.getLocaleString("featureInfo"),o=$.extend({},r.map.options.styles.marker,r.markerStyle,{title:a,set:a,showsPopup:!1});r.filterLayer.clearFeatures();r.filterLayer.addMarker(e,o).then(function(t){r.map.putLayerOnTop(r.filterLayer);r.filterFeature=t;for(var a=!1,o=0;o<r.map.workLayers.length;o++){var n=r.map.workLayers[o];if(n.type===TC.Consts.layerType.WMS&&n.getVisibility()&&n.names.length>0){a=!0;break}}var s=r.map.getResolution();a?r.wrap.getFeatureInfo(e,s):setTimeout(function(){r.responseCallback({coords:e})})})}};e.responseCallback=function(e){var r=this;const a=function(a){TC.control.FeatureInfoCommons.prototype.responseCallback.call(r,e);if(r.filterFeature){var o=e.services;if(o)for(var n=0;n<o.length;n++){for(var s=o[n],l=0;l<s.layers.length;l++)if(!s.layers[l].features.length){s.layers.splice(l,1);l-=1}if(!s.layers.length){o.splice(n,1);n-=1}}r.info.defaultFeature=e.defaultFeature;var i=r.map.options.locale||TC.Cfg.locale;e.isGeo=r.map.wrap.isGeo();if(a.length){const t=a[0][2];e.elevation=null===t?null:TC.Util.formatNumber(Math.round(t),i)}if(e.coords){e.crs=r.map.crs;e.coords=e.coords.map(function(t){return TC.Util.formatNumber(t.toFixed(e.isGeo?TC.Consts.DEGREE_PRECISION:TC.Consts.METER_PRECISION),i)})}if(o&&o.length||null!==e.elevation)r.renderData(e,function(){r.insertLinks();if(r.sharedFeatureInfo){r.div.querySelectorAll("ul."+r.CLASS+"-services li").forEach(function(e){e.classList.add(TC.Consts.classes.CHECKED)});for(var e,a=r.sharedFeatureInfo,o=0,n=r.info.services.length;o<n;o++){var s=r.info.services[o];if(s.mapLayers.some(function(e){return e.url===a.s})){for(var l=0,i=s.layers.length;l<i;l++){var f=s.layers[l];if(f.name===a.l){for(var u=0,c=f.features.length;u<c;u++){var C=f.features[u];if(C.id===a.f){e=C;var p=hex_md5(JSON.stringify({data:C.getData(),geometry:t(C.geometry,TC.Consts.DEGREE_PRECISION)}));a.h!==p&&TC.alert(r.getLocaleString("finfo.featureChanged.warning"));break}}break}}break}}if(e){r.highlightedFeature=e;r.map.addLayer({id:r.getUID(),type:TC.Consts.layerType.VECTOR,title:r.getLocaleString("foi"),stealth:!0}).then(function(t){r.sharedFeatureLayer=t;r.filterLayer.clearFeatures();t.addFeature(e);r.map.zoomToFeatures([e])})}delete r.sharedFeatureInfo}else r.displayResults()});else{r.resultsLayer.clearFeatures();r.filterLayer.clearFeatures()}}};r.elevationRequest?r.elevationRequest.then(a):a([])};e.loadSharedFeature=function(e){const t=this;if(e){if(0===jQuery.grep(t.map.workLayers,function(t,r){return t.type===TC.Consts.layerType.WMS&&t.url===e.s&&t.getDisgregatedLayerNames().indexOf(e.l)>=0}).length){TC.error(t.getLocaleString("sharedFeatureNotValid"),TC.Consts.msgErrorMode.TOAST);return}t.sharedFeatureInfo=e;TC.loadJS(!window.hex_md5,[TC.apiLocation+TC.Consts.url.HASH],function(){const r=[-100,-100];t.beforeRequest({xy:r});t.filterLayer.clearFeatures();t.filterLayer.addMarker(r).then(function(r){t.filterFeature=r;t.wrap.getFeatureInfo(e.xy,e.r,{serviceUrl:e.s,layerName:e.l,featureId:e.f})})})}}}();
//# sourceMappingURL=../maps/Control/FeatureInfo.min.js.map
