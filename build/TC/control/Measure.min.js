TC.control=TC.control||{};TC.Control||TC.syncLoadJS(TC.apiLocation+"TC/Control");TC.Consts.event.POINT="point.tc";TC.control.Measure=function(){var e=this;TC.Control.apply(e,arguments);e.drawControls=[];e.persistentDrawControls=!1;e.NOMEASURE="-";e.exportsState=!0;this.renderPromise().then(function(){e.measureMode=e.options.mode;e.history=[];e.historyIndex=0;e.reset=!0;e.wrap=new TC.wrap.control.Measure(e);e._len=e.div.querySelector(".tc-ctl-meas-val-len");e._area=e.div.querySelector(".tc-ctl-meas-val-area");e._peri=e.div.querySelector(".tc-ctl-meas-val-peri");e.setMode(e.options.mode)})};TC.inherit(TC.control.Measure,TC.Control);!function(){var e=TC.control.Measure.prototype;e.CLASS="tc-ctl-meas";TC.isDebug?e.template=TC.apiLocation+"TC/templates/Measure.html":e.template=function(){dust.register(e.CLASS,t);function t(e,t){return e.w("<h2>").h("i18n",t,{},{$key:"measure"}).w('</h2><div class="tc-ctl-meas-select"><form><label class="tc-ctl-meas-btn-len"><input type="radio" name="mode" value="polyline" /><span>').h("i18n",t,{},{$key:"length"}).w('</span></label><label class="tc-ctl-meas-btn-area"><input type="radio" name="mode" value="polygon" /><span>').h("i18n",t,{},{$key:"areaAndPerimeter"}).w('</span></label></form></div><div class="tc-ctl-meas-mode tc-ctl-meas-len tc-hidden"><div class="tc-ctl-meas-line"></div><div class="tc-ctl-meas-txt">').h("i18n",t,{},{$key:"length"}).w(': <span class="tc-ctl-meas-val-len"></span></div></div><div class="tc-ctl-meas-mode tc-ctl-meas-area tc-hidden"><div class="tc-ctl-meas-polygon"></div><div class="tc-ctl-meas-txt">').h("i18n",t,{},{$key:"area"}).w(': <span class="tc-ctl-meas-val-area"></span>, ').h("i18n",t,{},{$key:"perimeter"}).w(': <span class="tc-ctl-meas-val-peri"></span></div></div>')}t.__dustBody=!0;return t};e.render=function(e){const t=this;return t._set1stRenderPromise(TC.Control.prototype.render.call(t,function(){TC.loadJS(!TC.control.Draw,TC.apiLocation+"TC/control/Draw",function(){t.options.mode&&t.div.querySelector(".tc-ctl-meas-select").classList.add(TC.Consts.classes.HIDDEN);t.div.querySelectorAll("span").forEach(function(e){e.addEventListener(TC.Consts.event.CLICK,function(e){for(var s=this;s&&"LABEL"!==s.tagName;)s=s.parentElement;var n=s.querySelector("input[type=radio][name=mode]"),o=n.value;n.checked=!0;t.setMode(o,!0)})});$.isFunction(e)&&e()})}))};e.register=function(e){const t=this;return new Promise(function(s,n){TC.Control.prototype.register.call(t,e).then(function(){t.map.on(TC.Consts.event.VIEWCHANGE,function(){t.map.view===TC.Consts.view.PRINTING&&t.trigger(TC.Consts.event.DRAWEND)});const o=t.getUID(),a=t.getUID(),r=t.getUID();t.layerPromise=e.addLayer({id:o,title:t.getLocaleString("measure"),stealth:!0,type:TC.Consts.layerType.VECTOR,styles:{point:e.options.styles.point,line:e.options.styles.line,polygon:e.options.styles.polygon}});Promise.all([t.layerPromise,t.renderPromise()]).then(function(o){const i=o[0];t.layer=i;t.layer.map.putLayerOnTop(t.layer);t._drawLinesPromise=e.addControl("draw",{id:a,div:t.div.querySelector(".tc-ctl-meas-line"),mode:TC.Consts.geom.POLYLINE,measure:!0,persistent:t.persistentDrawControls,styleTools:t.persistentDrawControls,layer:t.layer});t._drawPolygonsPromise=e.addControl("draw",{id:r,div:t.div.querySelector(".tc-ctl-meas-polygon"),mode:TC.Consts.geom.POLYGON,measure:!0,persistent:t.persistentDrawControls,styleTools:t.persistentDrawControls,layer:t.layer});Promise.all([t._drawLinesPromise,t._drawPolygonsPromise]).then(function(e){t.drawLines=e[0];t.drawPolygons=e[1];e.forEach(function(e){e.containerControl=t;t.drawControls.push(e);e.on(TC.Consts.event.MEASURE+" "+TC.Consts.event.MEASUREPARTIAL,function(e){t.showMeasures(e)}).on(TC.Consts.event.DRAWCANCEL,function(e){setTimeout(function(){t.cancel()},100)});e.exportsState=!1});s(t);t.setMode(t.options.mode)}).catch(n)}).catch(n)})})};e.displayMode=function(e){const t=this,s=[];t.div.querySelectorAll(".tc-ctl-meas-mode").forEach(function(e){s.push(e)});switch(e){case TC.Consts.geom.POLYLINE:t._activeMode=s.filter(function(e){return e.matches(".tc-ctl-meas-len")})[0];break;case TC.Consts.geom.POLYGON:t._activeMode=s.filter(function(e){return e.matches(".tc-ctl-meas-area")})[0];break;case null:case void 0:t._activeMode=null}const n=s.filter(function(e){return e!==t._activeMode});if(e){const s=t.div.querySelector("input[type=radio][name=mode][value="+e+"]");s.checked=!0;s.classList.add(TC.Consts.classes.CHECKED);s.nextSibling.classList.add(TC.Consts.classes.CHECKED)}else t.div.querySelectorAll("input[type=radio][name=mode]").forEach(function(e){e.checked=!1;e.classList.remove(TC.Consts.classes.CHECKED);e.nextSibling.classList.remove(TC.Consts.classes.CHECKED)});if(t._activeMode){t._activeMode.classList.remove(TC.Consts.classes.HIDDEN);t._activeMode.querySelector(".tc-ctl").classList.remove(TC.Consts.classes.COLLAPSED)}n.forEach(function(e){e.classList.add(TC.Consts.classes.HIDDEN)});return t};e.setMode=function(e){const t=this;t.mode=e;t.displayMode(e);var s;switch(e){case TC.Consts.geom.POLYLINE:t.drawLines.activate();s=TC.Consts.event.CONTROLACTIVATE;break;case TC.Consts.geom.POLYGON:t.drawPolygons.activate();s=TC.Consts.event.CONTROLACTIVATE;break;case null:case void 0:t.drawControls.forEach(function(e){e.isActive&&e.cancel()});s=TC.Consts.event.CONTROLDEACTIVATE;break;default:s=TC.Consts.event.CONTROLACTIVATE}t.resetValues();s&&t.map&&t.map.trigger(s,{control:t});return t};e.cancel=function(){this.setMode(null,!1);return this};e.showMeasures=function(e){const t=this;var s,n=(e=e||{}).units;const o=t.map.options.locale||TC.Cfg.locale;if(e.area){var a=e.area;if(a>1e4){a/=1e6;n="km"}s="m"===n?0:3;t._area.innerHTML=TC.Util.formatNumber(a.toFixed(s),o)+" "+n+"&sup2;"}if(e.perimeter){var r=e.perimeter;if(r>1e3){r/=1e3;n="km"}s="m"===n?0:3;t._peri.innerHTML=TC.Util.formatNumber(r.toFixed(s),o)+" "+n}if(e.length){var i=e.length;if(i>1e3){i/=1e3;n="km"}s="m"===n?0:3;t._len.innerHTML=TC.Util.formatNumber(i.toFixed(s),o)+" "+n}return t};e.resetValues=function(){const e=this;if(e._len){e._len.textContent=e.NOMEASURE;e._area.textContent=e.NOMEASURE;e._peri.textContent=e.NOMEASURE}return e};e.getDrawLines=function(){};e.exportState=function(){const e=this;return e.exportsState&&e.layer?{id:e.id,layer:e.layer.exportState()}:null};e.importState=function(e){this.layerPromise.then(function(t){t.importState(e.layer)})}}();
//# sourceMappingURL=../maps/Control/Measure.min.js.map
