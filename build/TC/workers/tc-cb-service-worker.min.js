!function(){self.addEventListener("install",function(e){const n="TC.offline.map.common";e.waitUntil(caches.has(n).then(function(e){e&&caches.open(n).then(function(e){e.keys().then(function(e){console.log("Revisando cache...");e.length&&fetch(e[0]).then(function(){caches.delete(n).then(function(){console.log("Cache con bug ("+n+") borrada")})},function(e){console.log(e)})})})}))});self.addEventListener("activate",function(e){e.waitUntil(self.clients.claim())});self.addEventListener("fetch",function(e){e.respondWith(caches.match(e.request).then(function(n){return n||fetch(e.request).catch(function(n){console.log("[fetch] Could not fetch "+e.request.url+": "+n)})}))});const e={},n=function(e){self.clients.matchAll().then(function(n){n.forEach(function(n){n.postMessage(e)})})};self.addEventListener("message",function(t){const c=t.data.action,o=t.data.name,a=t.data.silent,i=t.data.list;switch(c){case"create":e[o]=c;caches.delete(o).finally(function(){caches.open(o).then(function(t){const s=function(l){if(!e[o])return;if(l===i.length){a||n({action:c,name:o,event:"cached"});return}const f=l+1;t.add(i[l]).then(function(){a||n({action:c,name:o,event:"progress",count:f,total:i.length})},function(){n({action:c,name:o,event:"error",url:url})}).finally(function(){s(f)})};s(0)})});break;case"delete":delete e[o];caches.delete(o).then(function(){a||n({action:c,name:o,event:"deleted"})},function(){n({action:c,name:o,event:"error"})})}})}();
//# sourceMappingURL=../maps/workers/tc-cb-service-worker.min.js.map