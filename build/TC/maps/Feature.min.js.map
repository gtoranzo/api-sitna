{"version":3,"sources":["Feature.js"],"names":["TC","feature","Feature","coords","options","this","wrap","parent","$","isArray","geometry","isNative","id","getId","getGeometry","folders","_folders","data","getData","opts","extend","getUID","_visibilityState","Consts","visibility","VISIBLE","undefined","showsPopup","layer","_selected","selected","select","prototype","STYLETYPE","geom","POLYGON","CLASSNAME","getPath","result","group","setVisibility","visible","self","popup","map","getControlsByClass","control","Popup","filter","currentFeature","length","hide","NOT_VISIBLE","setFeatureVisibility","setId","getBounds","setStyle","style","toggleSelectedStyle","condition","getLegend","_legend","getCoords","getCoordsArray","isPoint","elm","flattenFn","val","reduce","reduceFn","acc","concat","getGeometryStride","firstCoord","setCoords","setGeometry","setData","clearData","getInfo","locale","Util","getMapLocale","template","getTemplate","replace","match","p1","html","hSlots","openText","getLocaleString","key","value","isURL","formatNumber","headers","idx","unshift","join","title","clone","nativeClone","cloneFeature","_wrap","constructor","getStyle","showPopup","ctlPromise","popups","i","len","p","caller","Promise","resolve","addControl","then","ctl","forEach","isVisible","attrTable","contentDiv","querySelector","querySelectorAll","maxWidth","getBoundingClientRect","width","h","trigger","event","POPUP","fitToView","showResultsPanel","panel","resultsPanels","ctrl","content","resultsPanelOptions","controlContainer","side","SIDE","RIGHT","div","document","createElement","appendChild","ControlContainer","ResultsPanel","close","remove","menuDiv","innerHTML","open","getInfoContainer","onViewChange","e","off","VIEWCHANGE","on","selectedFeatures","push","selectionOptions","selection","Cfg","styles","unselect","inArray","splice","isSelected","toGML","version","srsName"],"mappings":"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","sourcesContent":["TC.feature = TC.feature || {};\r\nTC.Feature = function (coords, options) {\r\n    var self = this;\r\n\r\n    self.wrap = new TC.wrap.Feature();\r\n    self.wrap.parent = self;\r\n\r\n    if ($.isArray(coords)) {\r\n        self.geometry = coords;\r\n    }\r\n    else if (self.wrap.isNative(coords)) {\r\n        self.wrap.feature = coords;\r\n        self.id = self.wrap.getId();\r\n        self.geometry = self.wrap.getGeometry();\r\n        self.folders = coords._folders;\r\n        self.data = self.wrap.getData();\r\n    }\r\n\r\n    var opts = self.options = $.extend(true, {}, options);\r\n\r\n    self.id = self.id || opts.id || TC.getUID();\r\n    self.data = opts.data || self.data || null;\r\n    self._visibilityState = TC.Consts.visibility.VISIBLE;\r\n    if (opts.showsPopup === undefined) {\r\n        self.showsPopup = true;\r\n    }\r\n    else {\r\n        self.showsPopup = opts.showsPopup;\r\n    }\r\n    self.layer = opts.layer || null;\r\n    self._selected = false;\r\n\r\n    if (opts.selected) {\r\n        self.select();\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.STYLETYPE = TC.Consts.geom.POLYGON;\r\n\r\nTC.Feature.prototype.CLASSNAME = 'TC.Feature';\r\n\r\nTC.Feature.prototype.getPath = function () {\r\n    var result = [];\r\n    var self = this;\r\n    if (self.folders) {\r\n        result = self.folders;\r\n    }\r\n    else if (self.options.group) {\r\n        result = [self.options.group];\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.setVisibility = function (visible) {\r\n    var self = this;\r\n\r\n    // Ocultamos el posible popup\r\n    if (!visible && self.showsPopup && self.layer) {\r\n        var popup = self.layer.map.getControlsByClass(TC.control.Popup).filter(function (popup) {\r\n            return popup.currentFeature === self\r\n        });\r\n\r\n        if (popup.length > 0) {\r\n            popup[0].hide();\r\n        }\r\n    }\r\n\r\n    if ((visible && self._visibilityState === TC.Consts.visibility.NOT_VISIBLE) || (!visible && self._visibilityState === TC.Consts.visibility.VISIBLE)) {\r\n        self._visibilityState = visible ? TC.Consts.visibility.VISIBLE : TC.Consts.visibility.NOT_VISIBLE;\r\n        self.layer.wrap.setFeatureVisibility(self, visible);\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.setId = function (id) {\r\n    var self = this;\r\n    self.id = id;\r\n    self.wrap.setId(id);\r\n};\r\n\r\nTC.Feature.prototype.getBounds = function () {\r\n    return this.wrap.getBounds();\r\n};\r\n\r\nTC.Feature.prototype.setStyle = function (style) {\r\n    this.wrap.setStyle(style);\r\n};\r\n\r\nTC.Feature.prototype.toggleSelectedStyle = function (condition) {\r\n    this.wrap.toggleSelectedStyle(condition);\r\n};\r\n\r\nTC.Feature.prototype.getLegend = function () {\r\n    var self = this;\r\n    if (!self._legend) {\r\n        self._legend = self.wrap.getLegend();\r\n    }\r\n    return self._legend;\r\n};\r\n\r\nTC.Feature.prototype.getCoords = function () {\r\n    const self = this;\r\n    self.geometry = self.wrap.getGeometry();\r\n    return self.geometry;\r\n};\r\n\r\nTC.Feature.prototype.getCoordsArray = function () {\r\n    const self = this;\r\n    const isPoint = function (elm) {\r\n        return $.isArray(elm) && elm.length >= 2 && typeof elm[0] === 'number' && typeof elm[1] === 'number';\r\n    };\r\n    const flattenFn = function (val) {\r\n        return isPoint(val) ? [val] : val.reduce(reduceFn, []);\r\n    }\r\n    const reduceFn = function (acc, elm) {\r\n        if (isPoint(elm)) {\r\n            acc[acc.length] = elm;\r\n        }\r\n        else {\r\n            acc = acc.concat(flattenFn(elm));\r\n        }\r\n        return acc;\r\n    };\r\n    return flattenFn(this.getCoords());\r\n};\r\n\r\nTC.Feature.prototype.getGeometryStride = function () {\r\n    const self = this;\r\n    const coordsArray = self.getCoordsArray();\r\n    const firstCoord = coordsArray[0];\r\n    if (firstCoord) {\r\n        return firstCoord.length;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\nTC.Feature.prototype.setCoords = function (coords) {\r\n    const self = this;\r\n    self.geometry = coords;\r\n    return self.wrap.setGeometry(coords);\r\n};\r\n\r\nTC.Feature.prototype.getData = function () {\r\n    var result = null;\r\n    var self = this;\r\n    if (self.data) {\r\n        result = self.data;\r\n    }\r\n    else {\r\n        result = self.wrap.getData();\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.setData = function (data) {\r\n    var self = this;\r\n    self.data = $.extend(self.data, data);\r\n    self.wrap.setData(data);\r\n};\r\n\r\nTC.Feature.prototype.clearData = function () {\r\n    var self = this;\r\n    self.data = {};\r\n    self.wrap.clearData();\r\n};\r\n\r\nTC.Feature.prototype.getInfo = function (options) {\r\n    var result = null;\r\n    var self = this;\r\n    options = options || {};\r\n    var locale = options.locale || (self.layer && self.layer.map && TC.Util.getMapLocale(self.layer.map));\r\n    var data = self.getData();\r\n    if (typeof data === 'object') {\r\n        var template = self.wrap.getTemplate();\r\n        if (template) {\r\n            // GLS: Contemplo en la expresión regular la opción de que el nombre del campo se componga de $[aaa/abc/loQueMeInteresa] \r\n            // (la expresión no está limitada a 2 niveles), hasta ahora se manejaba $[loQueMeInteresa]\r\n            result = template.replace(/\\$\\[?(?:\\w+\\/)*(\\w+)\\]/g, function (match, p1) {\r\n                return data[p1];\r\n            });\r\n        }\r\n        else {\r\n            var html = [];\r\n            const hSlots = [];\r\n            var openText = TC.Util.getLocaleString(locale, 'open');\r\n            for (var key in data) {\r\n                const value = data[key];\r\n                const match = key.match(/^h(\\d)_/i);\r\n                if (match) {\r\n                    hSlots[match[1]] = value;\r\n                }\r\n                else {\r\n                    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'undefined') {\r\n                        html[html.length] = '<tr><th>';\r\n                        html[html.length] = key;\r\n                        html[html.length] = '</th><td>';\r\n                        var isUrl = TC.Util.isURL(value);\r\n                        if (isUrl) {\r\n                            html[html.length] = '<a href=\"';\r\n                            html[html.length] = value;\r\n                            html[html.length] = '\" target=\"_blank\">';\r\n                            html[html.length] = openText;\r\n                            html[html.length] = '</a>';\r\n                        }\r\n                        else {\r\n                            html[html.length] = value !== undefined ? TC.Util.formatNumber(value, locale) : '&mdash;';\r\n                        }\r\n                        html[html.length] = '</td></tr>';\r\n                    }\r\n                }\r\n            }\r\n            const headers = hSlots\r\n                .map(function (val, idx) {\r\n                    if (val) {\r\n                        return '<h' + idx + '>' + val + '</h' + idx + '>';\r\n                    }\r\n                })\r\n                .filter(function (val) {\r\n                    return val;\r\n                });\r\n            if (headers.length) {\r\n                html = headers.concat(html);\r\n            }\r\n            if (html.length > 0) {\r\n                html.unshift('<table class=\"tc-attr\">');\r\n                html[html.length] = '</table>';\r\n                result = html.join('');\r\n            }\r\n        }\r\n    }\r\n    else if (typeof data === 'string') {\r\n        result = data;\r\n    }\r\n    if (!result) {\r\n        result = self.title;\r\n        if (self.group) {\r\n            result += ' ' + self.group;\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = TC.Util.getLocaleString(locale, 'noData');\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.clone = function () {\r\n    var self = this;\r\n    var nativeClone = self.wrap.cloneFeature();\r\n    nativeClone._wrap = self.wrap;\r\n    return new self.constructor(nativeClone, self.options);\r\n};\r\n\r\nTC.Feature.prototype.getStyle = function () {\r\n    return this.wrap.getStyle();\r\n};\r\n\r\nTC.Feature.prototype.showPopup = function (control) {\r\n    const self = this;\r\n    const map = (self.layer && self.layer.map) || (control && control.map);\r\n    if (map) {\r\n        var ctlPromise;\r\n        var popup = control || self.popup;\r\n        if (!popup) {\r\n            // Buscamos un popup existente que no esté asociado a un control.\r\n            var popups = map.getControlsByClass('TC.control.Popup');\r\n            for (var i = 0, len = popups.length; i < len; i++) {\r\n                var p = popups[i];\r\n                if (!p.caller) {\r\n                    popup = p;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (popup) {\r\n            popup.currentFeature = self;\r\n            ctlPromise = Promise.resolve(popup);\r\n        }\r\n        else {\r\n            ctlPromise = map.addControl('popup');\r\n        }\r\n        ctlPromise.then(function (ctl) {            \r\n            ctl.currentFeature = self;\r\n            map.getControlsByClass(TC.control.Popup).forEach(function (p) {\r\n                if (p.isVisible()) {\r\n                    p.hide();\r\n                }\r\n            });\r\n            self.wrap.showPopup(ctl);\r\n            // Ajustamos el ancho del título al de la tabla de atributos\r\n            const attrTable = ctl.contentDiv.querySelector(\"table.tc-attr\");\r\n            const headers = ctl.contentDiv.querySelectorAll(\"h1,h2,h3,h4,h5\");\r\n            if (attrTable && headers.length) {\r\n                const maxWidth = attrTable.getBoundingClientRect().width + 'px';\r\n                headers.forEach(function (h) {\r\n                    h.style.maxWidth = maxWidth;\r\n                });\r\n            }\r\n            map.trigger(TC.Consts.event.POPUP, { control: ctl });\r\n            ctl.fitToView(true);\r\n        });\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.showResultsPanel = function (control) {\r\n    const self = this;\r\n    const map = (self.layer && self.layer.map) || (control && control.map);\r\n    if (map) {\r\n        var ctlPromise;\r\n        var panel = control;\r\n        if (!panel) {\r\n            // Buscamos un resultsPanel existente que no esté asociado a un control.\r\n            var resultsPanels = map.getControlsByClass('TC.control.ResultsPanel').filter(function (ctrl) { return ctrl.options.content === \"table\" });\r\n            for (var i = 0, len = resultsPanels.length; i < len; i++) {\r\n                var p = resultsPanels[i];\r\n                if (!p.caller) {\r\n                    panel = p;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (panel) {\r\n            panel.currentFeature = self;\r\n            ctlPromise = Promise.resolve(panel);\r\n        }\r\n        else {\r\n            var resultsPanelOptions = {\r\n                content: \"table\"\r\n            };            \r\n            var controlContainer = map.getControlsByClass('TC.control.ControlContainer')[0];\r\n            if (controlContainer) {\r\n                resultsPanelOptions.side = controlContainer.SIDE.RIGHT;\r\n                ctlPromise = controlContainer.addControl('resultsPanel', resultsPanelOptions);\r\n            } else {\r\n                resultsPanelOptions.div = document.createElement('div');\r\n                map.div.appendChild(resultsPanelOptions.div);\r\n                ctlPromise = map.addControl('resultsPanel', resultsPanelOptions);\r\n            }\r\n        }\r\n        ctlPromise.then(function (ctl) {            \r\n            ctl.currentFeature = self;\r\n\r\n            // GLS: si contamos con el contenedor de controles no es necesario cerra el resto de paneles ya que no habrá solape excepto los paneles\r\n            if (map.getControlsByClass(TC.control.ControlContainer).length === 0) {\r\n                map.getControlsByClass(TC.control.ResultsPanel).filter(function (ctrl) { return ctrl.options.content === \"table\" }).forEach(function (p) {\r\n                    p.close();\r\n                });\r\n            }\r\n\r\n            // cerramos los paneles con feature asociada\r\n            const panels = map.getControlsByClass('TC.control.ResultsPanel');\r\n            panels.forEach(function (p) {\r\n                if (p.currentFeature) {\r\n                    p.close();\r\n                }\r\n            });\r\n\r\n            if (ctl.div.querySelector('.tc-ctl-print-btn')) {\r\n                ctl.div.querySelector('.tc-ctl-print-btn').remove();\r\n            }\r\n            ctl.menuDiv.innerHTML = '';\r\n            ctl.open(self.getInfo({ locale: map.options.locale }), ctl.getInfoContainer());            \r\n\r\n            var onViewChange = function (e) {\r\n                map.off(TC.Consts.event.VIEWCHANGE, onViewChange);\r\n\r\n                ctl.close();\r\n            };\r\n            map.on(TC.Consts.event.VIEWCHANGE, onViewChange);\r\n        });\r\n    }\r\n};\r\n\r\n\r\nTC.Feature.prototype.select = function () {\r\n    var self = this;\r\n    self._selected = true;\r\n    if (self.layer) {\r\n        self.layer.selectedFeatures.push(self);\r\n    }\r\n    var selectionOptions = self.options.selection || {};\r\n    self.setStyle($.extend({}, TC.Cfg.styles.selection[self.STYLETYPE], selectionOptions[self.STYLETYPE]));\r\n};\r\n\r\nTC.Feature.prototype.unselect = function () {\r\n    var self = this;\r\n    self._selected = false;\r\n    // Volvemos al estilo por defecto\r\n    self.setStyle(self.options);\r\n\r\n    if (self.layer) {\r\n        var idx = $.inArray(self, self.layer.selectedFeatures);\r\n        if (idx >= 0) {\r\n            self.layer.selectedFeatures.splice(idx, 1);\r\n        }\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.isSelected = function () {\r\n    return this._selected;\r\n};\r\n\r\nTC.Feature.prototype.toGML = function (version, srsName) {\r\n    return this.wrap.toGML(version, srsName);\r\n};\r\n\r\n\r\n"],"file":"../Feature.min.js"}