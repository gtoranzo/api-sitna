{"version":3,"sources":["control/Edit.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Edit","apply","this","arguments","_classSelector","CLASS","_selectors","MODE_RADIO_BUTTON","wrap","layer","callback","Util","isFunction","options","cancelActionConfirmTxt","cancelText","eraseText","styles","layersEditData","pointDrawControl","lineDrawControl","polygonDrawControl","modifyControl","snapping","inherit","mode","MODIFY","ADDPOINT","ADDLINE","ADDPOLYGON","CUT","OTHER","ctlProto","prototype","template","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","blocks","inputText","body_27","inputNumber","body_28","inputCheckbox","body_29","inputDate","body_31","inputTime","body_32","inputDatetime","body_33","shiftBlocks","s","get","block","body_1","f","x","else","body_2","body_34","body_3","body_5","key","body_4","getPath","body_6","body_7","value","body_8","body_9","body_10","body_11","body_12","body_13","body_14","body_15","body_16","body_17","body_18","body_19","body_20","body_21","body_22","body_23","body_24","body_25","body_26","b","getBlock","body_30","p","rebase","map","self","Promise","resolve","reject","call","then","_pointDrawCtlPromise","addControl","id","getUID","div","querySelector","Consts","geom","POINT","_lineDrawCtlPromise","POLYLINE","_polygonDrawCtlPromise","POLYGON","_modifyCtlPromise","all","controls","drawendHandler","e","feature","setStyle","trigger","event","DRAWEND","drawcancelHandler","cancel","on","DRAWCANCEL","FEATUREMODIFY","FEATUREADD","FEATUREREMOVE","displayAttributes","selectedFeatures","getSelectedFeatures","length","_editAttrBtn","classList","add","classes","ACTIVE","attributes","getLayerEditData","attrArray","Object","keys","k","jfa","_joinedFeatureAttributes","data","getData","forEach","attributeObj","name","readOnly","availableValues","jfaObj","val","undefined","sort","a","getRenderedHtml","html","_attributesSection","contentDiv","getAttributeDisplayTarget","remove","HIDDEN","innerHTML","inputs","querySelectorAll","selects","elm","addEventListener","input","target","i","len","select","matches","getAttribute","CLICK","_onAttrOK","closeAttributes","that","type","parseInt","Number","isNaN","parseFloat","Date","setData","Array","isArray","modes","setMode","loaded","setLayer","RESULTSPANELCLOSE","featureImportPanel","featuresToImport","getHighlightsLayer","l","clearFeatures","LAYERREMOVE","FEATURESCLEAR","contains","hlLayer","fti","original","splice","removeFeature","li","getInfoContainer","ii","lli","fli","children","LAYERUPDATE","layerObj","getAvailableFeaturesToImport","filter","list","insertAdjacentHTML","FEATURESADD","features","isFeatureAllowed","displayLayerToImport","title","render","_set1stRenderPromise","m","indexOf","label","parentElement","removeChild","radio","newMode","showFeatureImportPanel","getDownloadDialog","dialog","getLocaleString","fileName","toLowerCase","replace","getFormattedDate","toString","elevation","downloadElevation","open","getGeometryType","geometryType","MULTIPOLYGON","MULTIPOLYLINE","RECTANGLE","getLayer","describeFeatureType","layerEditData","attr","geometryName","substr","catch","err","c","getModifyControl","getPointDrawControl","getLineDrawControl","getPolygonDrawControl","ctl","state","r","disabled","active","hiddenList","activateDraw","draw","activate","activeControl","deactivate","checked","hidden","constrainModes","selector","join","rb","Point","Polyline","MultiPolyline","isMultiple","Polygon","MultiPolygon","setComplexGeometry","optionalLayer","checkedOut","onFeatureClick","isExclusive","show","activateCtl","_previousActiveControl","previousActiveControl","setSelectedFeatures","renderPromise","getFeatureImportPanel","_featureImportPanelPromise","titles","main","panel","_highlightsLayerPromise","addLayer","layerType","VECTOR","stealth","selection","Cfg","highlightsLayer","highlightFeatures","featuresToHighlight","concat","slice","addFeatures","some","newFeature","clone","toggleSelectedStyle","workLayers","isRaster","getFeatureFromImportList","cb","dataset","layerId","getFeatureById","importFeatures","failure","result","featureOptions","geometry","addFeature","toast","msgType","WARNING","handleCheck","checkbox","push","idx","_addImportLayerEvents","ccb","_addImportFeatureEvents","highlightListener","container","layers","close","layerElementSelector","newLi","_downloadDialog"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\n(function () {\r\n\r\n    const setEditState = function (ctl, state) {\r\n        ctl.div.querySelectorAll(ctl._selectors.MODE_RADIO_BUTTON).forEach(r => r.disabled = !state);\r\n    }\r\n\r\n    /* Creamos el constructor, llamando al constructor del padre */\r\n    TC.control.Edit = function () {\r\n        const self = this;\r\n\r\n        TC.Control.apply(this, arguments);\r\n\r\n        self._classSelector = '.' + self.CLASS;\r\n\r\n        self._selectors = {\r\n            MODE_RADIO_BUTTON: 'input[type=radio][name=mode]'\r\n        };\r\n\r\n\r\n        self.wrap = new TC.wrap.control.Edit(self);\r\n        self.layer = null;\r\n        //self.feature = self.options.feature ? self.options.feature : null;\r\n        self.callback = TC.Util.isFunction(arguments[2]) ? arguments[2] : (self.options.callback ? self.options.callback : null);\r\n        self.cancelActionConfirmTxt = self.options.cancelText ? self.options.eraseText : \"Si continua todos los cambios se perderán. ¿Desea continuar?\";\r\n        self.styles = self.options.styles;\r\n        self.layersEditData = {};\r\n        self.pointDrawControl = null;\r\n        self.lineDrawControl = null;\r\n        self.polygonDrawControl = null;\r\n        //self.cutDrawControl = null;\r\n        self.modifyControl = null;\r\n        self.snapping = (typeof self.options.snapping === 'boolean') ? self.options.snapping : true;\r\n\r\n\r\n            //.on(TC.Consts.event.EDITIONSAVE, function (e) {\r\n            //    if (self.callback)\r\n            //        self.callback(e.added, e.removed, e.modified);\r\n            //});\r\n    };\r\n\r\n    TC.inherit(TC.control.Edit, TC.Control);\r\n\r\n    TC.control.Edit.mode = {\r\n        MODIFY: 'modify',\r\n        ADDPOINT: 'addpoint',\r\n        ADDLINE: 'addline',\r\n        ADDPOLYGON: 'addpolygon',\r\n        CUT: 'cut',\r\n        OTHER: 'other'\r\n    }\r\n\r\n    const ctlProto = TC.control.Edit.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-edit';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/Edit.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-attr'] = TC.apiLocation + \"TC/templates/EditAttributes.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-import'] = TC.apiLocation + \"TC/templates/EditImport.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-import-layer'] = TC.apiLocation + \"TC/templates/EditImportLayer.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-import-feature'] = TC.apiLocation + \"TC/templates/EditImportFeature.html\";\r\n\r\n    /* Extendemos el método register. \r\n       La lógica del control suele definirse aquí. */\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            TC.Control.prototype.register.call(self, map).then(function () {\r\n\r\n                const DRAW = 'draw';\r\n                self._pointDrawCtlPromise = map.addControl(DRAW, {\r\n                    id: self.getUID(),\r\n                    div: self.div.querySelector(`.${self.CLASS}-point`),\r\n                    mode: TC.Consts.geom.POINT,\r\n                    layer: false\r\n                });\r\n                self._lineDrawCtlPromise = map.addControl(DRAW, {\r\n                    id: self.getUID(),\r\n                    div: self.div.querySelector(`.${self.CLASS}-line`),\r\n                    mode: TC.Consts.geom.POLYLINE,\r\n                    layer: false\r\n                });\r\n                self._polygonDrawCtlPromise = map.addControl(DRAW, {\r\n                    id: self.getUID(),\r\n                    div: self.div.querySelector(`.${self.CLASS}-polygon`),\r\n                    mode: TC.Consts.geom.POLYGON,\r\n                    layer: false\r\n                });\r\n                //self._cutDrawCtlPromise = map.addControl(DRAW, {\r\n                //    id: self.getUID(),\r\n                //    div: self.div.querySelector(`.${self.CLASS}-cut`),\r\n                //    mode: TC.Consts.geom.POLYLINE,\r\n                //    snapping: true,\r\n                //    styles: {\r\n                //        line: {\r\n                //            lineDash: [5, 5]\r\n                //        }\r\n                //    },\r\n                //    layer: false\r\n                //});\r\n                self._modifyCtlPromise = map.addControl('modify', {\r\n                    id: self.getUID(),\r\n                    div: self.div.querySelector(`.${self.CLASS}-modify`),\r\n                    snapping: self.snapping\r\n                });\r\n                Promise.all([\r\n                    self._pointDrawCtlPromise,\r\n                    self._lineDrawCtlPromise,\r\n                    self._polygonDrawCtlPromise,\r\n                    //self._cutDrawCtlPromise,\r\n                    self._modifyCtlPromise\r\n                ]).then(function (controls) {\r\n                    self.pointDrawControl = controls[0];\r\n                    self.lineDrawControl = controls[1];\r\n                    self.polygonDrawControl = controls[2];\r\n                    //self.cutDrawControl = controls[3];\r\n                    self.modifyControl = controls[3];\r\n\r\n                    const drawendHandler = function (e) {\r\n                        e.feature.setStyle(null); // Por defecto, Draw añade estilo a todo lo que dibuja. No nos conviene cuando está dentro de Edit.\r\n                        self.trigger(TC.Consts.event.DRAWEND, { feature: e.feature });\r\n                    };\r\n                    const drawcancelHandler = function () {\r\n                        self.cancel();\r\n                    };\r\n                    self.pointDrawControl\r\n                        .on(TC.Consts.event.DRAWEND, drawendHandler)\r\n                        .on(TC.Consts.event.DRAWCANCEL, drawcancelHandler);\r\n                    self.lineDrawControl\r\n                        .on(TC.Consts.event.DRAWEND, drawendHandler)\r\n                        .on(TC.Consts.event.DRAWCANCEL, drawcancelHandler);\r\n                    self.polygonDrawControl\r\n                        .on(TC.Consts.event.DRAWEND, drawendHandler)\r\n                        .on(TC.Consts.event.DRAWCANCEL, drawcancelHandler);\r\n                    //self.cutDrawControl\r\n                    //    .on(TC.Consts.event.DRAWEND, function (e) {\r\n                    //        //TC.loadJS(\r\n                    //        //    !window.turf && !turf.lineSplit,\r\n                    //        //    [TC.apiLocation + 'lib/turf/line-split'],\r\n                    //        //    function () {\r\n\r\n                    //        //    }\r\n                    //        //);\r\n\r\n                    //        //self.layer.features.filter(f => f)\r\n                    //    })\r\n                    //    .on(TC.Consts.event.DRAWCANCEL, drawcancelHandler);\r\n                    self.modifyControl\r\n                        .on(TC.Consts.event.FEATUREMODIFY, function (e) {\r\n                            self.trigger(TC.Consts.event.FEATUREMODIFY, { feature: e.feature, layer: e.layer });\r\n                        })\r\n                        .on(TC.Consts.event.FEATUREADD, function (e) {\r\n                            self.trigger(TC.Consts.event.FEATUREADD, { feature: e.feature, layer: e.layer });\r\n                        })\r\n                        .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                            self.trigger(TC.Consts.event.FEATUREREMOVE, { feature: e.feature, layer: e.layer });\r\n                        });\r\n\r\n                    self.modifyControl.displayAttributes = function () {\r\n                        const selectedFeatures = self.getSelectedFeatures();\r\n                        const feature = selectedFeatures[selectedFeatures.length - 1];\r\n                        if (feature) {\r\n                            self.modifyControl._editAttrBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n                            const attributes = self.getLayerEditData(feature.layer).attributes;\r\n                            const attrArray = Object.keys(attributes).map(k => attributes[k]);\r\n                            const jfa = self._joinedFeatureAttributes || [];\r\n                            const data = feature.getData() || {};\r\n\r\n                            attrArray.forEach(function (attributeObj) {\r\n                                attributeObj.value = data[attributeObj.name];\r\n                                if (attributeObj.name === 'id') {\r\n                                    attributeObj.readOnly = true;\r\n                                }\r\n                                attributeObj.availableValues = [];\r\n                                jfa.forEach(function (jfaObj) {\r\n                                    const val = jfaObj[attributeObj.name];\r\n                                    if (val !== undefined && val !== '') {\r\n                                        attributeObj.availableValues[attributeObj.availableValues.length] = val;\r\n                                    }\r\n                                });\r\n                            });\r\n\r\n                            attrArray.sort(function (a, b) {\r\n                                if (a.readOnly ? !b.readOnly : b.readOnly) { //XOR\r\n                                    return !a.readOnly - !b.readOnly; // Primero readOnly\r\n                                }\r\n                                if (a.name > b.name) {\r\n                                    return 1;\r\n                                }\r\n                                if (a.name < b.name) {\r\n                                    return -1;\r\n                                }\r\n                                return 0;\r\n                            });\r\n                            self.getRenderedHtml(self.CLASS + '-attr', { data: attrArray }, function (html) {\r\n                                self.modifyControl._attributesSection;\r\n                                const contentDiv = self.getAttributeDisplayTarget();\r\n                                contentDiv.classList.remove(TC.Consts.classes.HIDDEN);\r\n                                contentDiv.innerHTML = html;\r\n                                const inputs = contentDiv.querySelectorAll('input');\r\n                                const selects = contentDiv.querySelectorAll('select');\r\n                                inputs.forEach(function (elm) {\r\n                                    elm.addEventListener('input', function (e) {\r\n                                        const input = e.target;\r\n                                        for (var i = 0, len = selects.length; i < len; i++) {\r\n                                            const select = selects[i];\r\n                                            if (select.matches(`[name=${e.target.getAttribute('name')}]`) && select.value !== input.value) {\r\n                                                select.value = '';\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                });\r\n                                selects.forEach(function (elm) {\r\n                                    elm.addEventListener('change', function (e) {\r\n                                        const select = e.target;\r\n                                        for (var i = 0, len = inputs.length; i < len; i++) {\r\n                                            const input = inputs[i];\r\n                                            if (input.matches(`[name=${e.target.getAttribute('name')}]`)) {\r\n                                                input.value = select.value;\r\n                                                break;\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                });\r\n\r\n                                contentDiv.querySelector(`.${self.modifyControl.CLASS}-btn-attr-ok`).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                                    self.modifyControl._onAttrOK();\r\n                                });\r\n\r\n                                contentDiv.querySelector(`.${self.modifyControl.CLASS}-btn-attr-cancel`).addEventListener(TC.Consts.event.CLICK, function () {\r\n                                    self.modifyControl.closeAttributes();\r\n                                });\r\n                            });\r\n                        }\r\n                    };\r\n\r\n                    self.modifyControl._onAttrOK = function () {\r\n                        const that = this;\r\n                        const feature = that.getSelectedFeatures()[0];\r\n                        if (feature) {\r\n                            const data = {};\r\n                            const attributes = self.getLayerEditData(feature.layer).attributes;\r\n                            const inputs = that.getAttributeDisplayTarget().querySelectorAll('input');\r\n                            inputs.forEach(function (input) {\r\n                                var name = input.getAttribute('name');\r\n                                var value = input.value;\r\n                                switch (attributes[name].type) {\r\n                                    case 'int':\r\n                                    case 'integer':\r\n                                    case 'byte':\r\n                                    case 'long':\r\n                                    case 'negativeInteger':\r\n                                    case 'nonNegativeInteger':\r\n                                    case 'nonPositiveInteger':\r\n                                    case 'positiveInteger':\r\n                                    case 'short':\r\n                                    case 'unsignedLong':\r\n                                    case 'unsignedInt':\r\n                                    case 'unsignedShort':\r\n                                    case 'unsignedByte':\r\n                                        value = parseInt(value);\r\n                                        if (!Number.isNaN(value)) {\r\n                                            data[name] = value;\r\n                                        }\r\n                                        break;\r\n                                    case 'double':\r\n                                    case 'float':\r\n                                    case 'decimal':\r\n                                        value = parseFloat(value);\r\n                                        if (!Number.isNaN(value)) {\r\n                                            data[name] = value;\r\n                                        }\r\n                                        break;\r\n                                    case 'date':\r\n                                    case 'time':\r\n                                    case 'dateTime':\r\n                                        data[name] = new Date(value);\r\n                                        break;\r\n                                    case 'boolean':\r\n                                        data[name] = !!value;\r\n                                        break;\r\n                                    case undefined:\r\n                                        break;\r\n                                    default:\r\n                                        data[name] = value;\r\n                                        break;\r\n                                }\r\n                            });\r\n                            feature.setData(data);\r\n                            that.trigger(TC.Consts.event.FEATUREMODIFY, { feature: feature, layer: that.layer });\r\n                            that.closeAttributes();\r\n                        }\r\n                    };\r\n\r\n                    if (Array.isArray(self.options.modes) && self.options.modes.length == 1) {\r\n                        self.setMode(self.options.modes[0], null);\r\n                    }\r\n\r\n                    resolve(self);\r\n\r\n                    map.loaded(function () {\r\n                        self.setLayer(self.options.layer);\r\n                    });\r\n\r\n                    map\r\n                        .on(TC.Consts.event.RESULTSPANELCLOSE, function (e) {\r\n                            if (e.control === self.featureImportPanel) {\r\n                                self.featuresToImport = [];\r\n                                self.getHighlightsLayer().then(l => l.clearFeatures());\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.LAYERREMOVE + ' ' + TC.Consts.event.FEATURESCLEAR, function (e) {\r\n                            if (self.featureImportPanel && !self.featureImportPanel.div.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                                self.getHighlightsLayer().then(function (hlLayer) {\r\n                                    for (let i = self.featuresToImport.length - 1; i >= 0; i--) {\r\n                                        const fti = self.featuresToImport[i];\r\n                                        if (fti.layer === e.layer || (fti.original && fti.original.layer === e.layer)) {\r\n                                            self.featuresToImport.splice(i, 1);\r\n                                            hlLayer.removeFeature(fti);\r\n                                        }\r\n                                    }\r\n                                    const li = self.featureImportPanel.getInfoContainer().querySelector(`li[data-layer-id=\"${e.layer.id}\"]`);\r\n                                    if (li) {\r\n                                        li.remove();\r\n                                    }\r\n                                });\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                            if (self.featureImportPanel && !self.featureImportPanel.div.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                                self.getHighlightsLayer().then(function (hlLayer) {\r\n                                    for (let i = 0, ii = self.featuresToImport.length; i < ii; i++) {\r\n                                        const fti = self.featuresToImport[i];\r\n                                        if (fti === e.feature || fti.original === e.feature) {\r\n                                            self.featuresToImport.splice(i, 1);\r\n                                            hlLayer.removeFeature(fti);\r\n                                            const lli = self.featureImportPanel.getInfoContainer().querySelector(`li[data-layer-id=\"${e.layer.id}\"]`);\r\n                                            if (lli) {\r\n                                                const fli = lli.querySelector(`#tc-ctl-edit-import-list-cb-${e.layer.id}-${e.feature.id}`);\r\n                                                if (fli) {\r\n                                                    fli.remove();\r\n                                                }\r\n                                                if (!lli.children.length) {\r\n                                                    lli.remove();\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.LAYERUPDATE, function (e) { // TODO: Actualizar cuando la capa ya existe en la lista\r\n                            if (self.featureImportPanel && !self.featureImportPanel.div.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                                const layerObj = self.getAvailableFeaturesToImport().filter(l => l.id === e.layer.id)[0];\r\n                                if (layerObj) {\r\n                                    self.getRenderedHtml(self.CLASS + '-import-layer', layerObj, function (html) {\r\n                                        const list = self\r\n                                            .featureImportPanel\r\n                                            .getInfoContainer()\r\n                                            .querySelector(`.${self.CLASS}-import-list .tc-layers`);\r\n                                        if (!list.querySelector(`li[data-layer-id=\"${e.layer.id}\"]`)) {\r\n                                            list.insertAdjacentHTML('beforeend', html);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.FEATUREADD + ' ' + TC.Consts.event.FEATURESADD, function (e) {\r\n                            if (self.featureImportPanel && !self.featureImportPanel.div.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                                const layer = e.layer;\r\n                                const features = (e.feature ? [e.feature] : e.features).filter(f => self.isFeatureAllowed(f));\r\n                                if (features.length) {\r\n                                    self.displayLayerToImport({\r\n                                        id: layer.id,\r\n                                        title: layer.title,\r\n                                        features: features\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(TC.Control.prototype.render.call(self, function () {\r\n\r\n            //control de renderizado enfunción del modo de edicion\r\n            if (Array.isArray(self.options.modes) && self.options.modes.length > 0) {\r\n                for (var m in TC.control.Edit.mode)\r\n                    if (typeof m === 'string' && self.options.modes.indexOf(TC.control.Edit.mode[m]) < 0) {\r\n                        const label = self.div.querySelector(`label${self._classSelector}-btn-${TC.control.Edit.mode[m]}`);\r\n                        label.parentElement.removeChild(label);\r\n                        const div = self.div.querySelector(`div${self._classSelector}-${TC.control.Edit.mode[m]}`);\r\n                        div.parentElement.removeChild(div);\r\n                    }\r\n                if (self.options.modes.length === 1) {\r\n                    var mode = self.options.modes[0];\r\n                    const label = self.div.querySelector(`label${self._classSelector}-btn-${mode}`);\r\n                    label.parentElement.removeChild(label);\r\n                }\r\n            }\r\n\r\n            self.div.querySelectorAll(self._selectors.MODE_RADIO_BUTTON).forEach(function (radio) {\r\n                radio.addEventListener('change', function () {\r\n                    var newMode = this.value;\r\n                    var mode = self.mode === newMode ? undefined : newMode;\r\n                    self.setMode(mode);\r\n                });\r\n            });\r\n\r\n            self.div.querySelector(self._classSelector + '-btn-import').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.showFeatureImportPanel();\r\n            });\r\n\r\n            self.div.querySelector(self._classSelector + '-btn-dl').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.getDownloadDialog().then(function (dialog) {\r\n                    const options = {\r\n                        title: self.getLocaleString('download'),\r\n                        fileName: self.layer.id.toLowerCase().replace(' ', '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true),\r\n                        elevation: self.options.downloadElevation\r\n                    };\r\n                    dialog.open(self.layer.features, options);\r\n                });\r\n            });\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.getGeometryType = function (geometryType) {\r\n        switch (geometryType) {\r\n            case 'gml:LinearRingPropertyType':\r\n            case 'gml:PolygonPropertyType':\r\n            case 'LinearRingPropertyType':\r\n            case 'PolygonPropertyType':\r\n                return TC.Consts.geom.POLYGON;\r\n            case 'gml:MultiPolygonPropertyType':\r\n            case 'gml:MultiSurfacePropertyType':\r\n            case 'MultiPolygonPropertyType':\r\n            case 'MultiSurfacePropertyType':\r\n                return TC.Consts.geom.MULTIPOLYGON;\r\n            case 'gml:LineStringPropertyType':\r\n            case 'gml:CurvePropertyType':\r\n            case 'LineStringPropertyType':\r\n            case 'CurvePropertyType':\r\n                return TC.Consts.geom.POLYLINE;\r\n            case 'gml:MultiLineStringPropertyType':\r\n            case 'gml:MultiCurvePropertyType':\r\n            case 'MultiLineStringPropertyType':\r\n            case 'MultiCurvePropertyType':\r\n                return TC.Consts.geom.MULTIPOLYLINE;\r\n            case 'gml:PointPropertyType':\r\n            case 'gml:MultiPointPropertyType':\r\n            case 'PointPropertyType':\r\n            case 'MultiPointPropertyType':\r\n                return TC.Consts.geom.POINT;\r\n            case 'gml:BoxPropertyType':\r\n            case 'BoxPropertyType':\r\n                return TC.Consts.geom.RECTANGLE;\r\n            case 'gml:GeometryCollectionPropertyType':\r\n            case 'gml:GeometryAssociationType':\r\n            case 'gml:GeometryPropertyType':\r\n            case 'GeometryCollectionPropertyType':\r\n            case 'GeometryAssociationType':\r\n            case 'GeometryPropertyType':\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        const self = this;\r\n        self.layer = self.map.getLayer(layer);\r\n        if (self.layer) {\r\n            layer.describeFeatureType()\r\n                .then(function (attributes) {\r\n                    const layerEditData = {\r\n                        attributes: {}\r\n                    };\r\n                    // recogemos los atributos no geométricos y definimos la geometría\r\n                    for (var key in attributes) {\r\n                        const attr = attributes[key];\r\n                        const geometryType = self.getGeometryType(attr.type);\r\n                        if (geometryType) {\r\n                            layerEditData.geometryName = attr.name;\r\n                            layerEditData.geometryType = typeof geometryType === 'boolean' ? null : geometryType;\r\n                        }\r\n                        else {\r\n                            layerEditData.attributes[key] = attr;\r\n                        }\r\n                    }\r\n                    for (var key in layerEditData.attributes) {\r\n                        const attr = layerEditData.attributes[key];\r\n                        attr.type = attr.type.substr(attr.type.indexOf(':') + 1);\r\n                    }\r\n                    self.layersEditData[layer.id] = layerEditData;\r\n                })\r\n                .catch(function (err) {\r\n                    self.layersEditData[layer.id] = {\r\n                        geometryType: null,\r\n                        attributes: {}\r\n                    };\r\n                });\r\n        }\r\n        const setLayer = c => c.setLayer(self.layer);\r\n        self.getModifyControl().then(setLayer);\r\n        self.getPointDrawControl().then(setLayer);\r\n        self.getLineDrawControl().then(setLayer);\r\n        self.getPolygonDrawControl().then(setLayer);\r\n        //self.getCutDrawControl().then(setLayer);\r\n        self.setMode(self.layer ? TC.control.Edit.mode.MODIFY : null);\r\n        setEditState(self, self.layer);\r\n    };\r\n\r\n    ctlProto.setMode = function (mode) {\r\n        var self = this;\r\n        self.mode = mode;\r\n        //setFeatureSelectReadyState(self);\r\n\r\n        var activateDraw = function (draw) {\r\n            if (draw) {\r\n                if (self.snapping) {\r\n                    draw.snapping = self.layer;\r\n                }\r\n                draw.activate();\r\n            }\r\n        };\r\n\r\n        var active;\r\n        var hiddenList;\r\n        Promise.all([\r\n            self._pointDrawCtlPromise,\r\n            self._lineDrawCtlPromise,\r\n            self._polygonDrawCtlPromise,\r\n            //self._cutDrawCtlPromise,\r\n            self._modifyCtlPromise\r\n        ]).then(function (controls) {\r\n            const pointDrawControl = controls[0];\r\n            const lineDrawControl = controls[1];\r\n            const polygonDrawControl = controls[2];\r\n            //const cutDrawControl = controls[3];\r\n            const modifyControl = controls[3];\r\n            switch (mode) {\r\n                case TC.control.Edit.mode.MODIFY:\r\n                    active = self.div.querySelector(self._classSelector + '-modify');\r\n                    hiddenList = self.div.querySelectorAll(self._classSelector + '-point,' + self._classSelector + '-line,' + self._classSelector + '-polygon,' + self._classSelector + '-other');\r\n                    modifyControl.activate();\r\n                    break;\r\n                case TC.control.Edit.mode.ADDPOINT:\r\n                    active = self.div.querySelector(self._classSelector + '-point');\r\n                    hiddenList = self.div.querySelectorAll(self._classSelector + '-modify,' + self._classSelector + '-line,' + self._classSelector + '-polygon,' + self._classSelector + '-other');\r\n                    activateDraw(pointDrawControl);\r\n                    break;\r\n                case TC.control.Edit.mode.ADDLINE:\r\n                    active = self.div.querySelector(self._classSelector + '-line');\r\n                    hiddenList = self.div.querySelectorAll(self._classSelector + '-modify,' + self._classSelector + '-point,' + self._classSelector + '-polygon,' + self._classSelector + '-other');\r\n                    activateDraw(lineDrawControl);\r\n                    break;\r\n                case TC.control.Edit.mode.ADDPOLYGON:\r\n                    active = self.div.querySelector(self._classSelector + '-polygon');\r\n                    hiddenList = self.div.querySelectorAll(self._classSelector + '-modify,' + self._classSelector + '-point,' + self._classSelector + '-line,' + self._classSelector + '-other');\r\n                    activateDraw(polygonDrawControl);\r\n                    break;\r\n                case TC.control.Edit.mode.OTHER:\r\n                    active = self.div.querySelector(self._classSelector + '-other');\r\n                    hiddenList = self.div.querySelectorAll(self._classSelector + '-modify,' + self._classSelector + '-point,' + self._classSelector + '-line,' + self._classSelector + '-polygon');\r\n                    if (controls.indexOf(self.map.activeControl) >= 0) {\r\n                        self.map.activeControl.deactivate();\r\n                    }\r\n                    break;\r\n                default:\r\n                    active = null;\r\n                    hiddenList = self.div.querySelectorAll(self._classSelector + '-modify,' + self._classSelector + '-point,' + self._classSelector + '-line,' + self._classSelector + '-polygon,' + self._classSelector + '-other');\r\n                    if (controls.indexOf(self.map.activeControl) >= 0) {\r\n                        self.map.activeControl.deactivate();\r\n                    }\r\n                    //if (cutDrawControl.isActive) {\r\n                    //    cutDrawControl.deactivate();\r\n                    //}\r\n                    break;\r\n            }\r\n\r\n            if (mode) {\r\n                const radio = self.div.querySelector(`${self._selectors.MODE_RADIO_BUTTON}[value=${mode}]`);\r\n                radio.checked = true;\r\n            }\r\n            else {\r\n                self.div.querySelectorAll(self._selectors.MODE_RADIO_BUTTON).forEach(function (radio) {\r\n                    radio.checked = false;\r\n                });\r\n            }\r\n            if (active) {\r\n                active.classList.remove(TC.Consts.classes.HIDDEN);\r\n            }\r\n            hiddenList.forEach(function (hidden) {\r\n                hidden.classList.add(TC.Consts.classes.HIDDEN);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.constrainModes = function (modes) {\r\n        const self = this;\r\n        if (!Array.isArray(modes)) {\r\n            modes = [];\r\n        }\r\n        self.modes = modes\r\n            .filter(function (m) {\r\n                // Quitamos los valores que no sean modos de edición\r\n                for (var key in TC.control.Edit.mode) {\r\n                    if (TC.control.Edit.mode[key] === m) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            })\r\n            .filter(function (m) {\r\n                // Quitamos los modos de edición que no se definieron en la configuración\r\n                if (!Array.isArray(self.options.modes)) {\r\n                    return true;\r\n                }\r\n                return self.options.modes.indexOf(m) >= 0;\r\n            });\r\n        if (self.modes.indexOf(self.mode) < 0) {\r\n            self.setMode(null);\r\n        }\r\n        const selector = self.modes.map(m => `[value=${m}]`).join() || '[value]';\r\n        self.div.querySelectorAll(self._selectors.MODE_RADIO_BUTTON).forEach(function (rb) {\r\n            rb.disabled = !rb.matches(selector);\r\n        });\r\n    };\r\n\r\n    ctlProto.isFeatureAllowed = function (feature) {\r\n        const self = this;\r\n        switch (true) {\r\n            case TC.feature.Point && feature instanceof TC.feature.Point:\r\n                return self.modes.indexOf(TC.control.Edit.mode.ADDPOINT) >= 0;\r\n            case TC.feature.Polyline && feature instanceof TC.feature.Polyline:\r\n                return self.modes.indexOf(TC.control.Edit.mode.ADDLINE) >= 0;\r\n            case TC.feature.MultiPolyline && feature instanceof TC.feature.MultiPolyline:\r\n                return self.modes.indexOf(TC.control.Edit.mode.ADDLINE) >= 0 && self.isMultiple;\r\n            case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n                return self.modes.indexOf(TC.control.Edit.mode.ADDPOLYGON) >= 0;\r\n            case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                return self.modes.indexOf(TC.control.Edit.mode.ADDPOLYGON) >= 0 && self.isMultiple;\r\n            default:\r\n                return true;\r\n        }\r\n    };\r\n\r\n    ctlProto.setComplexGeometry = function (isMultiple) {\r\n        const self = this;\r\n        self.isMultiple = isMultiple;\r\n        //self.getPointDrawControl().then(c => c.setMode(isMultiple ? TC.Consts.geom.MULTIPOINT : TC.Consts.geom.POINT));\r\n        self.getLineDrawControl().then(c => c.setMode(isMultiple ? TC.Consts.geom.MULTIPOLYLINE : TC.Consts.geom.POLYLINE));\r\n        self.getPolygonDrawControl().then(c => c.setMode(isMultiple ? TC.Consts.geom.MULTIPOLYGON : TC.Consts.geom.POLYGON));\r\n    };\r\n\r\n    ctlProto.getLayerEditData = function (optionalLayer) {\r\n        const self = this;\r\n        const layer = optionalLayer || self.layer;\r\n        if (!layer) {\r\n            return null;\r\n        }\r\n        return self.layersEditData[layer.id] = self.layersEditData[layer.id] || {\r\n            checkedOut: false\r\n        };\r\n    };\r\n\r\n    ctlProto.cancel = function () {\r\n        var self = this;\r\n        if (Array.isArray(self.options.modes) && self.options.modes.length == 1) {\r\n            self.setMode(self.options.modes[0], null);\r\n        }\r\n        else {\r\n            self.setMode(null, false);\r\n        }\r\n        self.wrap.cancel(true, self.cancelActionConfirmTxt);\r\n    };\r\n\r\n    ctlProto.onFeatureClick = function (e) {\r\n        if (!self.activeControl || !self.activeControl.isExclusive()) {\r\n            e.feature.show();\r\n        }\r\n    };\r\n    \r\n    ctlProto.activate = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const activateCtl = function (ctl) {\r\n            if (ctl !== self.map.activeControl) {\r\n                self._previousActiveControl = self.map.activeControl;\r\n            }\r\n        };\r\n        switch (options.mode) {\r\n            case TC.control.Edit.mode.ADDPOINT:\r\n                self.getPointDrawControl().then(activateCtl);\r\n                break;\r\n            case TC.control.Edit.mode.ADDLINE:\r\n                self.getLineDrawControl().then(activateCtl);\r\n                break;\r\n            case TC.control.Edit.mode.ADDPOLYGON:\r\n                self.getPolygonDrawControl().then(activateCtl);\r\n                break;\r\n            default:\r\n                self.getModifyControl().then(activateCtl);\r\n                break;\r\n        }\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        const self = this;\r\n        if (self._previousActiveControl) {\r\n            self.map.previousActiveControl = self._previousActiveControl;\r\n            switch (self.map.activeControl) {\r\n                case self.pointDrawControl:\r\n                    self.pointDrawControl.deactivate();\r\n                    break;\r\n                case self.lineDrawControl:\r\n                    self.lineDrawControl.deactivate();\r\n                    break;\r\n                case self.polygonDrawControl:\r\n                    self.polygonDrawControl.deactivate();\r\n                    break;\r\n                case self.modifyControl:\r\n                    self.modifyControl.deactivate();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        self.modifyControl && self.modifyControl.closeAttributes();\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return true;\r\n    };\r\n\r\n    ctlProto.getAttributeDisplayTarget = function () {\r\n        return this.modifyControl._attributesSection;\r\n    };\r\n\r\n    //ctlProto.joinFeatures = function (features) {\r\n    //    var self = this;\r\n    //    if (self.geometryType === TC.Consts.geom.MULTIPOLYLINE ||\r\n    //        self.geometryType === TC.Consts.geom.MULTIPOLYGON ||\r\n    //        self.geometryType === TC.Consts.geom.MULTIPOINT) {\r\n    //        self._joinedFeatureAttributes = [];\r\n    //        if (features.length > 1) {\r\n    //            var geometries = features.map(function (elm) {\r\n    //                self._joinedFeatureAttributes[self._joinedFeatureAttributes.length] = elm.getData();\r\n    //                return elm.geometry;\r\n    //            });\r\n    //            var newGeometry = geometries.reduce(function (a, b) {\r\n    //                return a.concat(b);\r\n    //            });\r\n    //            var newFeature = new features[0].constructor(newGeometry);\r\n    //            for (var i = 0, len = features.length; i < len; i++) {\r\n    //                var feature = features[i];\r\n    //                self.layer.removeFeature(feature);\r\n    //                self.trigger(TC.Consts.event.FEATUREREMOVE, { feature: feature });\r\n    //            }\r\n    //            self.layer.addFeature(newFeature).then(function (feat) {\r\n    //                self.setSelectedFeatures([newFeature]);\r\n    //                self.trigger(TC.Consts.event.FEATUREADD, { feature: feat });\r\n    //                feat.showPopup(self.attributeEditor);\r\n    //            });\r\n    //        }\r\n    //        setFeatureSelectedState(self, [newFeature]);\r\n    //    }\r\n    //};\r\n\r\n    //ctlProto.splitFeatures = function (features) {\r\n    //    var self = this;\r\n    //    var complexFeatures = features.filter(complexGeometryFilter);\r\n    //    var geometries = complexFeatures.map(function (elm) {\r\n    //        return elm.geometry;\r\n    //    });\r\n    //    var newFeatures = [];\r\n    //    for (var i = 0, ii = complexFeatures.length; i < ii; i++) {\r\n    //        var feature = complexFeatures[i];\r\n    //        var data = feature.getData();\r\n    //        var geometry = geometries[i];\r\n    //        for (var j = 0, jj = geometry.length; j < jj; j++) {\r\n    //            newFeatures[newFeatures.length] = new feature.constructor([geometry[j]], { data: data });\r\n    //        }\r\n    //    }\r\n    //    for (var i = 0, len = complexFeatures.length; i < len; i++) {\r\n    //        var feature = complexFeatures[i];\r\n    //        self.layer.removeFeature(feature);\r\n    //        self.trigger(TC.Consts.event.FEATUREREMOVE, { feature: feature });\r\n    //    }\r\n    //    var newFeatPromises = new Array(newFeatures.length);\r\n    //    for (var i = 0, len = newFeatures.length; i < len; i++) {\r\n    //        const promise = newFeatPromises[i] = self.layer.addFeature(newFeatures[i]);\r\n    //        promise.then(function (feat) {\r\n    //            self.trigger(TC.Consts.event.FEATUREADD, { feature: feat });\r\n    //        });\r\n    //    }\r\n    //    Promise.all(newFeatPromises).then(function() {\r\n    //        self.setSelectedFeatures(newFeatures);\r\n    //    });\r\n    //    setFeatureSelectedState(self, newFeatures);\r\n    //};\r\n\r\n    //ctlProto.deleteFeatures = function (features) {\r\n    //    var self = this;\r\n    //    self.wrap.deleteFeatures(features);\r\n    //    if (self.layer.features.length === 0) {\r\n    //        self._deleteBtn.disabled = true;\r\n    //    }\r\n    //};\r\n\r\n    ctlProto.getSelectedFeatures = function () {\r\n        return this.modifyControl.getSelectedFeatures();\r\n    };\r\n\r\n    ctlProto.setSelectedFeatures = function (features) {\r\n        return this.modifyControl.setSelectedFeatures(features);\r\n    };\r\n\r\n    ctlProto.getLayer = function () {\r\n        var self = this;\r\n        return self.layer;\r\n    };\r\n\r\n    ctlProto.getModifyControl = function () {\r\n        const self = this;\r\n        return self._modifyCtlPromise || new Promise(function (resolve, reject) {\r\n            self.renderPromise().then(() => resolve(self.modifyControl));\r\n        });\r\n    };\r\n\r\n    ctlProto.getPointDrawControl = function () {\r\n        const self = this;\r\n        return self._pointDrawCtlPromise || new Promise(function (resolve, reject) {\r\n            self.renderPromise().then(() => resolve(self.pointDrawControl));\r\n        });\r\n    };\r\n\r\n    ctlProto.getLineDrawControl = function () {\r\n        const self = this;\r\n        return self._lineDrawCtlPromise || new Promise(function (resolve, reject) {\r\n            self.renderPromise().then(() => resolve(self.lineDrawControl));\r\n        });\r\n    };\r\n\r\n    ctlProto.getPolygonDrawControl = function () {\r\n        const self = this;\r\n        return self._polygonDrawCtlPromise || new Promise(function (resolve, reject) {\r\n            self.renderPromise().then(() => resolve(self.polygonDrawControl));\r\n        });\r\n    };\r\n\r\n    //ctlProto.getCutDrawControl = function () {\r\n    //    const self = this;\r\n    //    return self._cutDrawCtlPromise || new Promise(function (resolve, reject) {\r\n    //        self.renderPromise().then(() => resolve(self.cutDrawControl));\r\n    //    });\r\n    //};\r\n\r\n    ctlProto.getFeatureImportPanel = function () {\r\n        const self = this;\r\n        if (!self._featureImportPanelPromise) {\r\n            self._featureImportPanelPromise = self.map.addControl('resultsPanel', {\r\n                titles: {\r\n                    main: self.getLocaleString('importFromOtherLayer')\r\n                }\r\n            });\r\n            self._featureImportPanelPromise.then(panel => self.featureImportPanel = panel);\r\n        }\r\n        return self._featureImportPanelPromise;\r\n    };\r\n\r\n    ctlProto.getHighlightsLayer = function () {\r\n        const self = this;\r\n        if (!self._highlightsLayerPromise) {\r\n            self._highlightsLayerPromise = self.map.addLayer({\r\n                id: self.getUID(),\r\n                type: TC.Consts.layerType.VECTOR,\r\n                title: 'Highlights Layer',\r\n                stealth: true,\r\n                styles: self.map.options.styles.selection || TC.Cfg.styles.selection\r\n            });\r\n            self._highlightsLayerPromise.then(layer => self.highlightsLayer = layer);\r\n        }\r\n        return self._highlightsLayerPromise;\r\n    };\r\n\r\n    ctlProto.highlightFeatures = function (features) {\r\n        const self = this;\r\n        self.getHighlightsLayer().then(function (layer) {\r\n            const featuresToHighlight = self.featuresToImport.concat(features);\r\n            layer.features.slice().forEach(function (feature) {\r\n                if (!feature.original || featuresToHighlight.indexOf(feature.original) < 0) {\r\n                    layer.removeFeature(feature);\r\n                }\r\n            });\r\n            layer.addFeatures(featuresToHighlight\r\n                .filter(function (feature) {\r\n                    return !layer.features.some(function (f) {\r\n                        return f.original && f.original === feature;\r\n                    });\r\n                })\r\n                .map(function (feature) {\r\n                const newFeature = feature.clone();\r\n                newFeature.toggleSelectedStyle(true);\r\n                newFeature.original = feature;\r\n                return newFeature;\r\n            }));\r\n        });\r\n    };\r\n\r\n    ctlProto.getAvailableFeaturesToImport = function () {\r\n        const self = this;\r\n        return self.map.workLayers\r\n            .filter(l => !l.isRaster())\r\n            .filter(l => l !== self.layer)\r\n            .filter(l => l !== self.highlightsLayer)\r\n            .map(function (l) {\r\n                return {\r\n                    id: l.id,\r\n                    title: l.title,\r\n                    features: l.features.filter(function (f) {\r\n                        return self.isFeatureAllowed(f);\r\n                    })\r\n                };\r\n            })\r\n            .filter(l => l.features.length);\r\n    };\r\n\r\n    ctlProto.getFeatureFromImportList = function (elm) {\r\n        const self = this;\r\n        const cb = elm.querySelector('input');\r\n        const layer = self.map.getLayer(elm.parentElement.parentElement.dataset.layerId);\r\n        if (layer) {\r\n            return layer.getFeatureById(cb.value);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importFeatures = function (features) {\r\n        const self = this;\r\n        let failure = false;\r\n        const layerEditData = self.getLayerEditData();\r\n        const featuresToImport = (features || self.featuresToImport || [])\r\n            .filter(f => {\r\n                const result = self.isFeatureAllowed(f);\r\n                if (!result) {\r\n                    failure = true;\r\n                }\r\n                return result;\r\n            });\r\n        featuresToImport.map(function (feature) {\r\n            let newFeature;\r\n            const featureOptions = {\r\n                data: feature.data,\r\n                geometryName: layerEditData.geometryName\r\n            };\r\n            if (self.isMultiple) {\r\n                switch (true) {\r\n                    case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n                        newFeature = new TC.feature.MultiPolygon([feature.geometry], featureOptions);\r\n                        break;\r\n                    case TC.feature.Polyline && feature instanceof TC.feature.Polyline:\r\n                        newFeature = new TC.feature.MultiPolyline([feature.geometry], featureOptions);\r\n                        break;\r\n                    default:\r\n                        newFeature = feature.clone();\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                switch (true) {\r\n                    case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                        newFeature = new TC.feature.Polygon(feature.geometry[0], featureOptions);\r\n                        break;\r\n                    case TC.feature.MultiPolyline && feature instanceof TC.feature.MultiPolyline:\r\n                        newFeature = new TC.feature.Polyline(feature.geometry[0], featureOptions);\r\n                        break;\r\n                    default:\r\n                        newFeature = feature.clone();\r\n                        break;\r\n                }\r\n            }\r\n            newFeature.setStyle(null);\r\n            return newFeature;\r\n        }).forEach(function (feature) {\r\n            self.layer.addFeature(feature);\r\n            self.trigger(TC.Consts.event.FEATUREADD, { feature: feature, layer: self.layer });\r\n        });\r\n        \r\n        if (failure) {\r\n            self.map.toast(self.getLocaleString('importFromOtherLayer.warning'), { type: TC.Consts.msgType.WARNING });\r\n        }\r\n    };\r\n\r\n    const handleCheck = function (ctl, checkbox) {\r\n        const feature = ctl.getFeatureFromImportList(checkbox.parentElement);\r\n        if (checkbox.checked) {\r\n            ctl.featuresToImport.push(feature);\r\n        }\r\n        else {\r\n            const idx = ctl.featuresToImport.indexOf(feature);\r\n            if (idx >= 0) {\r\n                ctl.featuresToImport.splice(idx, 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto._addImportLayerEvents = function (li) {\r\n        const self = this;\r\n        \r\n        li.querySelector('input').addEventListener('change', function (e) {\r\n            const cb = this;\r\n            cb.parentElement.querySelectorAll('li.tc-feature input').forEach(function (ccb) {\r\n                if (ccb.checked !== cb.checked) {\r\n                    ccb.checked = cb.checked;\r\n                    handleCheck(self, ccb);\r\n                }\r\n            });\r\n            self.highlightFeatures([]);\r\n        });\r\n\r\n        li.querySelectorAll('li.tc-feature').forEach(function (elm) {\r\n            self._addImportFeatureEvents(elm);\r\n        });\r\n    };\r\n\r\n    ctlProto._addImportFeatureEvents = function (li) {\r\n        const self = this;\r\n        const highlightListener = function (e) {\r\n            const feature = self.getFeatureFromImportList(this);\r\n            if (feature) {\r\n                self.highlightFeatures([feature]);\r\n            }\r\n        };\r\n        li.addEventListener(TC.Consts.event.CLICK, highlightListener);\r\n        li.addEventListener('mouseover', highlightListener);\r\n        li.querySelector('input').addEventListener('change', function (e) {\r\n            handleCheck(self, this);\r\n        });\r\n    };\r\n\r\n    ctlProto.showFeatureImportPanel = function () {\r\n        const self = this;\r\n\r\n        self.featuresToImport = [];\r\n\r\n        self.getFeatureImportPanel().then(function (panel) {\r\n            const container = panel.getInfoContainer();\r\n            self.getRenderedHtml(self.CLASS + '-import', { layers: self.getAvailableFeaturesToImport() }, function (html) {\r\n                panel.open(html, container);\r\n                container.querySelector('ul').addEventListener('mouseout', function (e) {\r\n                    self.highlightFeatures([]);\r\n                });\r\n                container.querySelectorAll('li.tc-layer').forEach(function (elm) {\r\n                    self._addImportLayerEvents(elm);\r\n                });\r\n                container.querySelector(`.${self.CLASS}-import-btn-ok`).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    self.importFeatures();\r\n                    self.featureImportPanel.close();\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.displayLayerToImport = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.featureImportPanel && !self.featureImportPanel.div.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                const container = self.featureImportPanel.getInfoContainer();\r\n                const list = container.querySelector(`.${self.CLASS}-import-list .tc-layers`);\r\n                const layerElementSelector = `li[data-layer-id=\"${layer.id}\"]`;\r\n                const li = list.querySelector(layerElementSelector);\r\n                if (li) {\r\n                    features.forEach(function (feature) {\r\n                        if (self.isFeatureAllowed(feature)) {\r\n                            self.getRenderedHtml(self.CLASS + '-import-feature', layerObj, function (html) {\r\n                                li.insertAdjacentHTML('beforeend', html);\r\n                                self._addImportFeatureEvents(li.querySelector('li:last-child'));\r\n                            });\r\n                        }\r\n                    });\r\n                    resolve(li);\r\n                }\r\n                else {\r\n                    self.getRenderedHtml(self.CLASS + '-import-layer', { id: layer.id, title: layer.title, features: layer.features }, function (html) {\r\n                        list.insertAdjacentHTML('beforeend', html);\r\n                        const newLi = list.querySelector(layerElementSelector);\r\n                        self._addImportLayerEvents(newLi);\r\n                        resolve(newLi);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getDownloadDialog = function () {\r\n        const self = this;\r\n        if (self._downloadDialog) {\r\n            return Promise.resolve(self._downloadDialog);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            self.map.addControl('FeatureDownloadDialog').then(ctl => {\r\n                self._downloadDialog = ctl;\r\n                resolve(ctl);\r\n            })\r\n        });\r\n    };\r\n\r\n})();"]}