{"version":3,"sources":["control/FileImport.js"],"names":["TC","Control","syncLoadJS","apiLocation","control","FileImport","self","this","apply","arguments","Array","isArray","options","formats","Consts","format","KML","GML","GML2","GEOJSON","WKT","GPX","window","JSZip","Promise","then","splice","KMZ","layers","apiAttribution","mainDataAttribution","dataAttributions","exportsState","inherit","ctlProto","prototype","CLASS","template","dust","register","body_0","chk","ctx","w","h","$key","s","get","block","body_1","__dustBody","f","getPath","body_2","map","result","call","enableDragAndDrop","wrap","on","event","FEATURESIMPORT","e","fileName","target","dropTarget","features","gpxPattern","toLowerCase","indexOf","length","div","addLayer","id","getUID","title","owner","type","layerType","VECTOR","layer","push","flatten","prev","cur","concat","projectGeom","feature","geom","geometry","coordinates","Point","MultiPoint","Polyline","MultiPolyline","Polygon","reduce","MultiPolygon","every","coord","Math","abs","setCoords","Util","reproject","crs","i","len","projectedFeature","addFeature","setTimeout","zoomToFeatures","FEATURESIMPORTERROR","dictKey","file","name","substr","error","getLocaleString","msgErrorMode","TOAST","reader","FileReader","onload","EMAIL","readAsText","FEATUREREMOVE","removeLayer","LAYERREMOVE","idx","render","_set1stRenderPromise","renderData","fileInput","querySelector","addEventListener","CLICK","form","document","createElement","parent","parentElement","insertBefore","appendChild","reset","insertAdjacentElement","removeChild","console","log","loadFiles","files","exportState","state","importState","layerPromises","forEach","layerData","all"],"mappings":"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","sourcesContent":["if (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.FileImport = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    if (Array.isArray(self.options.formats)) {\r\n        self.formats = self.options.formats;\r\n    }\r\n    else {\r\n        self.formats = [\r\n            TC.Consts.format.KML,\r\n            TC.Consts.format.GML,\r\n            TC.Consts.format.GML2,\r\n            TC.Consts.format.GEOJSON,\r\n            TC.Consts.format.WKT,\r\n            TC.Consts.format.GPX\r\n        ];\r\n    }\r\n    if (window.JSZip) {\r\n        if (window.JSZip instanceof Promise)\r\n            window.JSZip.then(function () {\r\n                self.formats.splice(1, 0, TC.Consts.format.KMZ);\r\n            });\r\n        else\r\n            self.formats.splice(1, 0, TC.Consts.format.KMZ);\r\n    }\r\n\r\n    self.layers = [];\r\n\r\n    self.apiAttribution = '';\r\n    self.mainDataAttribution = '';\r\n    self.dataAttributions = [];\r\n\r\n    self.exportsState = true;\r\n};\r\n\r\nTC.inherit(TC.control.FileImport, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.FileImport.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-file';\r\n\r\n    ctlProto.template = TC.apiLocation + \"TC/templates/FileImport.html\";\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        if (self.options.enableDragAndDrop) {\r\n            map.wrap.enableDragAndDrop(self.options);\r\n        }\r\n\r\n        map\r\n            .on(TC.Consts.event.FEATURESIMPORT, function (e) {\r\n                const fileName = e.fileName;\r\n                const target = e.dropTarget;\r\n                const features = e.features;\r\n                // Ignoramos los GPX (se supone que los gestionar√° Geolocation)\r\n                var gpxPattern = '.' + TC.Consts.format.GPX.toLowerCase();\r\n                if (fileName.toLowerCase().indexOf(gpxPattern) === fileName.length - gpxPattern.length || target !== self.map.div && target !== self) {\r\n                    return;\r\n                }\r\n                \r\n                map.addLayer({\r\n                    id: self.getUID(),\r\n                    title: fileName,\r\n                    owner: self,\r\n                    type: TC.Consts.layerType.VECTOR\r\n                }).then(function (layer) {\r\n                    self.layers.push(layer);\r\n                    var geogCrs = 'EPSG:4326';\r\n                    const flatten = function (prev, cur) {\r\n                        return prev.concat(cur);\r\n                    };\r\n                    var projectGeom = function (feature) {\r\n                        var geom = feature.geometry;\r\n                        if (geom) {\r\n                            var coordinates;\r\n                            switch (true) {\r\n                                case TC.feature.Point && feature instanceof TC.feature.Point:\r\n                                    coordinates = [geom];\r\n                                    break;\r\n                                case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                                case TC.feature.Polyline && feature instanceof TC.feature.Polyline:\r\n                                    coordinates = geom;\r\n                                    break;\r\n                                case TC.feature.MultiPolyline && feature instanceof TC.feature.MultiPolyline:\r\n                                case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n                                    coordinates = geom.reduce(flatten);\r\n                                    break;\r\n                                case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                                    coordinates = geom.reduce(flatten).reduce(flatten);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            if (coordinates && coordinates.every(function (coord) {\r\n                                return Math.abs(coord[0]) <= 180 && Math.abs(coord[1]) <= 90; // Parecen geogr√°ficas\r\n                            })) {\r\n                                feature.setCoords(TC.Util.reproject(geom, geogCrs, self.map.crs));\r\n                            }\r\n                        }\r\n\r\n                        return feature;\r\n                    };\r\n\r\n                    for (var i = 0, len = features.length; i < len; i++) {\r\n                        var projectedFeature = projectGeom(features[i]);\r\n                        layer.addFeature(projectedFeature);\r\n                    }\r\n                    setTimeout(function () {\r\n                        map.zoomToFeatures(layer.features);\r\n                    }, 100);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.FEATURESIMPORTERROR, function (e) {\r\n                var dictKey;\r\n                var fileName = e.file.name;\r\n                if (fileName.toLowerCase().substr(fileName.length - 4) === '.kmz') {\r\n                    dictKey = 'fileImport.error.reasonKmz';\r\n                }\r\n                else {\r\n                    dictKey = 'fileImport.error.reasonUnknown';\r\n                }\r\n\r\n                TC.error(self.getLocaleString(dictKey, { fileName: fileName }), TC.Consts.msgErrorMode.TOAST);\r\n\r\n                var reader = new FileReader();\r\n                reader.onload = function (event) {\r\n                    TC.error(\"Nombre del archivo: \" + fileName + \" \\n Contenido del archivo: \\n\\n\" + event.target.result, TC.Consts.msgErrorMode.EMAIL, \"Error en la subida de un archivo\");\r\n                };\r\n                reader.readAsText(e.file);\r\n            })\r\n            .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                // Eliminamos la capa cuando ya no quedan features en ella\r\n                const layer = e.layer;\r\n                if (self.layers.indexOf(layer) >= 0) {\r\n                    if (!layer.features.length) {\r\n                        self.map.removeLayer(layer);\r\n                    }\r\n                }\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                const idx = self.layers.indexOf(e.layer);\r\n                if (idx >= 0) {\r\n                    self.layers.splice(idx, 1);\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function () {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.renderData({ formats: self.formats }, function () {            \r\n            const fileInput = self.div.querySelector('input[type=file]');\r\n            // GLS: Eliminamos el archivo subido, sin ello no podemos subir el mismo archivo seguido varias veces\r\n            fileInput.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                const input = this;\r\n                // Envolvemos el input en un form\r\n                const form = document.createElement('form');\r\n                const parent = input.parentElement;\r\n                parent.insertBefore(form, input);\r\n                form.appendChild(input);\r\n                form.reset();\r\n                // Desenvolvemos el input del form\r\n                form.insertAdjacentElement('afterend', input);\r\n                parent.removeChild(form);\r\n            });\r\n            fileInput.addEventListener('change', function (e) {\r\n                if (self.map) {\r\n                    console.log('salta el change');\r\n                    self.map.wrap.loadFiles(e.target.files, { control: self });\r\n                }\r\n            });\r\n        }));\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState) {\r\n            return {\r\n                id: self.id,\r\n                layers: self.layers.map(function (layer) {\r\n                    return {\r\n                        title: layer.title,\r\n                        state: layer.exportState()\r\n                    };\r\n                })\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        if (self.map) {\r\n            const layerPromises = [];\r\n            state.layers.forEach(function (layerData) {\r\n                layerPromises.push(self.map.addLayer({\r\n                    id: self.getUID(),\r\n                    title: layerData.title,\r\n                    owner: self,\r\n                    type: TC.Consts.layerType.VECTOR\r\n                }));\r\n            });\r\n\r\n            Promise.all(layerPromises).then(function (layers) {\r\n                for (var i = 0, len = layers.length; i < len; i++) {\r\n                    const layer = layers[i];\r\n                    layer.importState(state.layers[i].state);\r\n                    self.layers.push(layer);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n})();\r\n"]}