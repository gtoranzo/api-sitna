{"version":3,"sources":["Control/FeatureTools.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","POPUP","POPUPHIDE","DRAWCHART","DRAWTABLE","FeatureTools","self","this","apply","arguments","layer","exportsState","cs","_classSelector","CLASS","_selectors","ELEVATION_CHECKBOX","INTERPOLATION_RADIO","INTERPOLATION_DISTANCE","options","displayElevation","loadJS","tool","Elevation","elevationOptions","elevation","_dialogDiv","Util","getDiv","dialogDiv","_$dialogDiv","$","document","body","appendChild","inherit","ctlProto","prototype","TITLE_SEPARATOR","FILE_TITLE_SEPARATOR","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","s","get","block","body_1","f","x","body_2","map","on","e","currentDisplay","caller","currentFeature","highlightedFeature","showsPopup","addUI","RESULTSPANELCLOSE","FEATUREADD","feature","FEATUREREMOVE","clone","getControlsByClass","concat","forEach","ctl","getHighlightLayer","then","addFeature","Promise","resolve","reject","all","call","renderPromise","addControl","id","getUID","div","querySelector","includeControls","_shareCtl","catch","err","Error","render","callback","_set1stRenderPromise","getRenderedHtml","checkboxId","html","innerHTML","addEventListener","CLICK","EventTarget","listenerBySelector","closeModal","li","getLoadingIndicator","waitId","addWait","shareOptions","checked","interpolateCoords","value","resolution","parseFloat","prepareFeatureToShare","exportFeatures","fileName","_getFeatureFilename","format","target","dataset","error","errors","MAX_COORD_QUANTITY_EXCEEDED","getLocaleString","alert","finally","removeWait","showDownloadDialog","idDiv","classList","add","classes","HIDDEN","remove","trigger","CONTROLRENDER","isFunction","menuContainer","getMenuElement","menuIsMissing","tools","DOMParser","parseFromString","firstChild","updateUI","stateful","shareBtn","parentElement","removeChild","_setToolButtonHandlers","_decorateDisplay","getContainerElement","container","zoomToCurrentFeature","setAttribute","Print","printTitle","title","uiDiv","ACTIVE","clearTimeout","_uiUpdateTimeout","setTimeout","getCurrentFeature","showShareDialog","removeCurrentFeature","addLayer","type","layerType","VECTOR","stealth","dialog","isLine","Point","MultiPoint","Polyline","MultiPolyline","isPolygon","Polygon","MultiPolygon","ipDiv","gpxBtn","showModal","openCallback","onShowShareDialog","closeCallback","featureToShare","zoomToFeatures","animate","removeFeature","closeDisplay","close","hide","confirm","setId","mustGetElevations","getGeometryStride","elevOptions","crs","features","maxCoordQuantity","sampleNumber","setGeometry","coordsArray","getCoordsArray","firstCoord","length","coord","setCoords","geometry","shareCtl","extraParams","shareDiv","link","generateLink","generateIframe","getFeatureTitle","result","toString","replace","RegExp","toLowerCase","getFormattedDate","Date","exportState","importState","state"],"mappings":"AAACA,GAAGC,QAAUD,GAAGC,YAEZD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGK,OAAOC,MAAMC,MAAQP,GAAGK,OAAOC,MAAMC,OAAS,WACjDP,GAAGK,OAAOC,MAAME,UAAYR,GAAGK,OAAOC,MAAME,WAAa,eACzDR,GAAGK,OAAOC,MAAMG,UAAYT,GAAGK,OAAOC,MAAMG,WAAa,eACzDT,GAAGK,OAAOC,MAAMI,UAAYV,GAAGK,OAAOC,MAAMI,WAAa,eAEzDV,GAAGC,QAAQU,aAAe,WACtB,MAAMC,EAAOC,KAEbb,GAAGE,QAAQY,MAAMF,EAAMG,WAEvBH,EAAKI,MAAQ,KACbJ,EAAKK,cAAe,EAEpB,MAAMC,EAAKN,EAAKO,eAAiB,IAAMP,EAAKQ,MAC5CR,EAAKS,YACDC,mBAAoBJ,EAAK,oCACzBK,oBAAqB,0CACrBC,uBAAwBN,EAAK,gBAG7BN,EAAKa,QAAQC,kBACb1B,GAAG2B,QACE3B,GAAG4B,OAAS5B,GAAG4B,KAAKC,UACrB7B,GAAGI,YAAc,oBACjB,WACI,MAAM0B,EAA4D,kBAAlClB,EAAKa,QAAQC,oBAAsCd,EAAKa,QAAQC,iBAChGd,EAAKmB,UAAY,IAAI/B,GAAG4B,KAAKC,UAAUC,KAKnDlB,EAAKoB,WAAahC,GAAGiC,KAAKC,OAAOtB,EAAKa,QAAQU,WAC9CvB,EAAKwB,YAAcC,EAAEzB,EAAKoB,YACrBpB,EAAKa,QAAQU,WACdG,SAASC,KAAKC,YAAY5B,EAAKoB,aAIvChC,GAAGyC,QAAQzC,GAAGC,QAAQU,aAAcX,GAAGE,UAEvC,WACI,IAAIwC,EAAW1C,GAAGC,QAAQU,aAAagC,UAEvCD,EAAStB,MAAQ,gBAEjBsB,EAASE,gBAAkB,WAC3BF,EAASG,qBAAuB,KAEhCH,EAASI,YACT,GAAI9C,GAAG+C,QAAS,CACZL,EAASI,SAASJ,EAAStB,OAASpB,GAAGI,YAAc,iCACrDsC,EAASI,SAASJ,EAAStB,MAAQ,WAAapB,GAAGI,YAAc,2CAEhE,CACDsC,EAASI,SAASJ,EAAStB,OAAS,WAAc4B,KAAKC,SAASP,EAAStB,MAAO8B,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,2EAAgFC,EAAE,OAAQF,MAAWG,KAAQ,aAAcF,EAAE,MAAOC,EAAE,OAAQF,MAAWG,KAAQ,aAAcF,EAAE,4DAA+DC,EAAE,OAAQF,MAAWG,KAAQ,UAAWF,EAAE,MAAOC,EAAE,OAAQF,MAAWG,KAAQ,UAAWF,EAAE,2DAA8DC,EAAE,OAAQF,MAAWG,KAAQ,kBAAmBF,EAAE,MAAOC,EAAE,OAAQF,MAAWG,KAAQ,kBAAmBF,EAAE,0DAA6DC,EAAE,OAAQF,MAAWG,KAAQ,kBAAmBF,EAAE,MAAOC,EAAE,OAAQF,MAAWG,KAAQ,kBAAmBF,EAAE,mBAAsBH,EAAOM,YAAa,EAAI,OAAON,GACn1BR,EAASI,SAASJ,EAAStB,MAAQ,WAAa,WAAc4B,KAAKC,SAASP,EAAStB,MAAQ,UAAW8B,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,2LAAmMC,EAAE,OAAQF,MAAWG,KAAQ,YAAaF,EAAE,OAAOC,EAAE,OAAQF,MAAWG,KAAQ,aAAcF,EAAE,4EAAgFI,EAAEL,EAAIM,KAAK,cAAc,GAAQN,GAAOO,MAASC,OAAcP,EAAE,yxBAAi0BC,EAAE,OAAQF,MAAWG,KAAQ,YAAaF,EAAE,OAAOC,EAAE,OAAQF,MAAWG,KAAQ,UAAWF,EAAE,gJAAyJH,EAAOM,YAAa,EAAI,SAASI,EAAOT,EAAKC,GAAO,OAAOD,EAAIE,EAAE,sDAAyDQ,EAAET,EAAIM,KAAK,eAAe,GAAQN,EAAK,KAAKC,EAAE,kCAAsCQ,EAAET,EAAIM,KAAK,eAAe,GAAQN,EAAK,KAAKC,EAAE,8CAAiDC,EAAE,OAAQF,MAAWG,KAAQ,sBAAuBF,EAAE,kBAAkBS,EAAEV,EAAIM,KAAK,eAAe,GAAQN,GAAOO,MAASI,OAAiBH,EAAOJ,YAAa,EAAI,SAASO,EAAOZ,EAAKC,GAAO,OAAOD,EAAIE,EAAE,uDAAyDC,EAAE,OAAQF,MAAWG,KAAQ,qCAAsCF,EAAE,qFAA2FC,EAAE,OAAQF,MAAWG,KAAQ,OAAQF,EAAE,sFAA4FC,EAAE,OAAQF,MAAWG,KAAQ,QAASF,EAAE,oEAAsEC,EAAE,OAAQF,MAAWG,KAAQ,8BAA+BF,EAAE,oEAA6EQ,EAAET,EAAIM,KAAK,eAAe,GAAQN,EAAK,KAAKC,EAAE,QAASC,EAAE,OAAQF,MAAWG,KAAQ,8BAA+BF,EAAE,gBAAmBU,EAAOP,YAAa,EAAI,OAAON,GAG93FR,EAASO,SAAW,SAAUe,GAC1B,MAAMpD,EAAOC,KACbmD,EACKC,GAAGjE,GAAGK,OAAOC,MAAMC,MAAQ,IAAMP,GAAGK,OAAOC,MAAMI,UAAY,IAAMV,GAAGK,OAAOC,MAAMG,UAAW,SAAUyD,GACrGtD,EAAKuD,eAAiBD,EAAEjE,QACxB,GAAIW,EAAKuD,eAAeC,SAAYxD,EAAKuD,eAAeC,QAAUxD,EAAKuD,eAAeE,eAAiB,CACnGzD,EAAK0D,mBAAwB1D,EAAKuD,eAAeC,SAAUxD,EAAKuD,eAAeE,eAAkBzD,EAAKuD,eAAeC,OAAOE,mBAAqB1D,EAAKuD,eAAeE,eACjKzD,EAAK0D,qBACL1D,EAAK0D,mBAAmBC,YAAa,GAG7C3D,EAAK4D,MAAM5D,EAAKuD,kBAEnBF,GAAGjE,GAAGK,OAAOC,MAAME,UAAY,IAAMR,GAAGK,OAAOC,MAAMmE,kBAAmB,SAAUP,GAC/EtD,EAAKuD,eAAiB,OAEzBF,GAAGjE,GAAGK,OAAOC,MAAMoE,WAAY,SAAUR,GACtC,MAAMS,EAAUT,EAAES,QAClB,GAAI/D,EAAKuD,gBAAkBvD,EAAKuD,eAAeC,QAAUO,IAAY/D,EAAKuD,eAAeC,OAAOE,mBAAoB,CAChH1D,EAAK0D,mBAAqBK,EAC1B/D,EAAK0D,mBAAmBC,YAAa,KAG5CN,GAAGjE,GAAGK,OAAOC,MAAMsE,cAAe,SAAUV,GACzC,MAAMS,EAAUT,EAAES,QAClB,GAAIA,IAAY/D,EAAK0D,mBAAoB,CACrC,MAAMA,EAAqBK,EAAQE,QACnCP,EAAmBC,YAAa,EAGhCP,EAAIc,mBAAmB,oBAAoBC,OAAOf,EAAIc,mBAAmB,4BAA4BE,QAAQ,SAAUC,GAC/GA,EAAIZ,iBAAmBzD,EAAK0D,qBAC5BW,EAAIZ,eAAiBC,KAG7B1D,EAAKsE,oBAAoBC,KAAK,SAAUnE,GACpCA,EAAMoE,WAAWd,QAKjC,OAAO,IAAIe,QAAQ,SAAUC,EAASC,GAClCF,QAAQG,KAAKxF,GAAGE,QAAQyC,UAAUM,SAASwC,KAAK7E,EAAMoD,GAAMpD,EAAK8E,kBAAkBP,KAAK,WACpFvE,EAAKoD,IAAI2B,WAAW,SAChBC,GAAIhF,EAAKiF,SACTC,IAAKlF,EAAKoB,WAAW+D,cAAc,mBAAqBnF,EAAKQ,MAAQ,qBACrE4E,iBAAiB,IAClBb,KAAK,SAAUF,GACdrE,EAAKqF,UAAYhB,EACjBK,EAAQ1E,KACTsF,MAAM,SAAUC,GACfZ,EAAOY,aAAeC,MAAQD,EAAMC,MAAMD,WAM1DzD,EAAS2D,OAAS,SAAUC,GACxB,MAAM1F,EAAOC,KACb,OAAOD,EAAK2F,qBAAqB3F,EAAK4F,gBAAgB5F,EAAKQ,MAAQ,WAC/DqF,WAAY7F,EAAKiF,SACjB9D,UAAWnB,EAAKa,QAAQC,kBACzB,SAAUgF,GACT9F,EAAKoB,WAAW2E,UAAYD,EAC5B9F,EAAKoB,WAAW4E,iBAAiB5G,GAAGK,OAAOC,MAAMuG,MAAO7G,GAAG8G,YAAYC,mBAAmB,sBAAuB,SAAU7C,GACvHlE,GAAGiC,KAAK+E,aACR,MAAMC,EAAKrG,EAAKoD,IAAIkD,sBACdC,EAASF,GAAMA,EAAGG,UAElBC,KACN,GAAIzG,EAAKoB,WAAW+D,cAAcnF,EAAKS,WAAWC,qBAAuBV,EAAKoB,WAAW+D,cAAcnF,EAAKS,WAAWC,oBAAoBgG,QAAS,CAChJ,MAAMC,EAA8G,MAA1F3G,EAAKoB,WAAW+D,cAAcnF,EAAKS,WAAWE,oBAAsB,YAAYiG,MAC1GH,EAAatF,WACT0F,WAAYF,EAAoBG,WAAW9G,EAAKoB,WAAW+D,cAAcnF,EAAKS,WAAWG,uBAAyB,uBAAuBgG,QAAU5G,EAAKa,QAAQC,iBAAiB+F,WAAa,GAGtME,EAAsB/G,EAAMyG,GACvBlC,KACD,SAAUR,GACN/D,EAAKoD,IAAI4D,gBAAgBjD,IACrBkD,SAAUjH,EAAKkH,oBAAoBnD,GACnCoD,OAAQ7D,EAAE8D,OAAOC,QAAQF,UAGjC,SAAUG,GACFA,IAAUlI,GAAG4B,KAAKC,UAAUsG,OAAOC,4BAIvCpI,GAAGkI,MAAMtH,EAAKyH,gBAAgB,oBAH1BrI,GAAGsI,MAAM1H,EAAKyH,gBAAgB,6CAMrCE,QAAQ,WACLtB,GAAMA,EAAGuB,WAAWrB,QAGhCvG,EAAKoB,WAAW4E,iBAAiB,SAAU5G,GAAG8G,YAAYC,mBAAmBnG,EAAKS,WAAWC,mBAAoB,SAAU4C,GACvHtD,EAAK6H,wBAET7H,EAAKoB,WAAW4E,iBAAiB,SAAU5G,GAAG8G,YAAYC,mBAAmBnG,EAAKS,WAAWE,oBAAqB,SAAU2C,GACxH,MAAMwE,EAAQ9H,EAAKoB,WAAW+D,cAAcnF,EAAKS,WAAWG,wBACrC,MAAnB0C,EAAE8D,OAAOR,MACTkB,EAAMC,UAAUC,IAAI5I,GAAGK,OAAOwI,QAAQC,QAGtCJ,EAAMC,UAAUI,OAAO/I,GAAGK,OAAOwI,QAAQC,WAIjDlI,EAAKoI,QAAQhJ,GAAGK,OAAOC,MAAM2I,eACzB5G,EAAE6G,WAAW5C,IACbA,QAKZ5D,EAAS8B,MAAQ,SAAUS,GACvB,MAAMrE,EAAOC,KACPsI,EAAgBlE,EAAImE,iBAEpBC,EAAgB,WAClB,OAAOF,IAAkBA,EAAcpD,cAAc,IAAMnF,EAAKQ,QAEhEiI,IAEAzI,EAAK4F,gBAAgB5F,EAAKQ,MAAO,KAAM,SAAUsF,GAC7C,GAAI2C,IAAiB,CACjB,MACMC,GADS,IAAIC,WACEC,gBAAgB9C,EAAM,aAAanE,KAAKkH,WAC7DN,EAAc3G,YAAY8G,GAE1B1I,EAAK8I,SAASzE,GAEd,IAAKrE,EAAKoD,IAAIvC,QAAQkI,SAAU,CAE5B,MAAMC,EAAWN,EAAMvD,cAAc,IAAMnF,EAAKQ,MAAQ,cACxDwI,EAASC,cAAcC,YAAYF,GAEvChJ,EAAKmJ,uBAAuBT,GAC5B1I,EAAKoJ,iBAAiB/E,EAAIgF,0BAKlCrJ,EAAK8I,SAASzE,IAItBvC,EAASsH,iBAAmB,SAAUE,GAClC,MAAMtJ,EAAOC,KAEb,GAAID,EAAK0D,mBAAoB,CAGzB,GAAI4F,EAAUnE,cAAc,iBAAkB,CAC1CmE,EAAUnE,cAAc,iBAAiBa,iBAAiB5G,GAAGK,OAAOC,MAAMuG,MAAO,SAAU3C,GACvFtD,EAAKuJ,yBAGTD,EAAUnE,cAAc,iBAAiB4C,UAAUC,IAAIhI,EAAKQ,MAAQ,SACpE8I,EAAUnE,cAAc,iBAAiBqE,aAAa,QAASxJ,EAAKyH,gBAAgB,kBAIxFrI,GAAG2B,QACE3B,GAAGC,QAAQoK,OACXrK,GAAGI,YAAc,oBAClB,WACI,IAAIkK,EAAa,GAEjB,GAAI1J,EAAK0D,mBAAoB,CACzBgG,EAAa1J,EAAK0D,mBAAmBsB,IAEM,IAAvChF,EAAK0D,mBAAmBC,YACxB,IAAIvE,GAAGC,QAAQoK,OACXrC,OAAQkC,EACRK,MAAOD,SAQnC5H,EAASgH,SAAW,SAAUzE,GAC1B,MAAMrE,EAAOC,KACP2J,EAAQvF,EAAImE,iBAAiBrD,cAAc,IAAMnF,EAAKQ,OAC5DoJ,EAAM7B,UAAUI,OAAO/I,GAAGK,OAAOwI,QAAQ4B,QACzCC,aAAa9J,EAAK+J,kBAClB/J,EAAK+J,iBAAmBC,WAAW,WAC/B,MAAMvG,EAAiBzD,EAAKiK,oBACxBxG,GAAkBA,EAAeE,WACjCiG,EAAM7B,UAAUC,IAAI5I,GAAGK,OAAOwI,QAAQ4B,QAGtCD,EAAM7B,UAAUI,OAAO/I,GAAGK,OAAOwI,QAAQ4B,SAE9C,MAGP/H,EAASqH,uBAAyB,SAAUG,GACxC,MAAMtJ,EAAOC,KAGbqJ,EAAUnE,cAAc,IAAMnF,EAAKQ,MAAQ,WAAWwF,iBAAiB5G,GAAGK,OAAOC,MAAMuG,MAAO,SAAU3C,GACpGtD,EAAK6H,uBAGL7H,EAAKoD,IAAIvC,QAAQkI,UAEjBO,EAAUnE,cAAc,IAAMnF,EAAKQ,MAAQ,cAAcwF,iBAAiB5G,GAAGK,OAAOC,MAAMuG,MAAO,SAAU3C,GACvGtD,EAAKkK,oBAKbZ,EAAUnE,cAAc,IAAMnF,EAAKQ,MAAQ,aAAawF,iBAAiB5G,GAAGK,OAAOC,MAAMuG,MAAO,SAAU3C,GACtGtD,EAAKuJ,yBAITD,EAAUnE,cAAc,IAAMnF,EAAKQ,MAAQ,YAAYwF,iBAAiB5G,GAAGK,OAAOC,MAAMuG,MAAO,SAAU3C,GACrGtD,EAAKmK,0BAIbrI,EAASwC,kBAAoB,WACzB,MAAMtE,EAAOC,KACb,OAAO,IAAIwE,QAAQ,SAAUC,EAASC,GAC9B3E,EAAKI,MACLsE,EAAQ1E,EAAKI,OAGbJ,EAAKoD,IAAIgH,UACLpF,GAAIhF,EAAKiF,SACT0E,MAAO3J,EAAKQ,MAAQ,+BACpB6J,KAAMjL,GAAGK,OAAO6K,UAAUC,OAC1BC,SAAS,IACVjG,KAAK,SAAUnE,GACTJ,EAAKI,QACNJ,EAAKI,MAAQA,GAEjBsE,EAAQ1E,EAAKI,YAM7B0B,EAAS+F,mBAAqB,WAC1B,MAAM7H,EAAOC,KAEPwK,EAASzK,EAAKoB,WAAW+D,cAAc,IAAMnF,EAAKQ,MAAQ,WAC1DuD,EAAU/D,EAAKiK,oBAGfS,GAFWtL,GAAG2E,QAAQ4G,OAAS5G,aAAmB3E,GAAG2E,QAAQ4G,OAC9DvL,GAAG2E,QAAQ6G,YAAiCxL,GAAG2E,QAAQ6G,WAC5CxL,GAAG2E,QAAQ8G,UAAY9G,aAAmB3E,GAAG2E,QAAQ8G,UAChEzL,GAAG2E,QAAQ+G,eAAiB/G,aAAmB3E,GAAG2E,QAAQ+G,eACzDC,EAAa3L,GAAG2E,QAAQiH,SAAWjH,aAAmB3E,GAAG2E,QAAQiH,SAClE5L,GAAG2E,QAAQkH,cAAgBlH,aAAmB3E,GAAG2E,QAAQkH,aAGxDC,EAAQT,EAAOtF,cAAc,IAAMnF,EAAKQ,MAAQ,cAClD0K,IACKlL,EAAKoB,WAAW+D,cAAcnF,EAAKS,WAAWC,sBAAwBV,EAAKoB,WAAW+D,cAAcnF,EAAKS,WAAWC,oBAAoBgG,UAAcgE,IAAWK,EAClKG,EAAMnD,UAAUC,IAAI5I,GAAGK,OAAOwI,QAAQC,QAGtCgD,EAAMnD,UAAUI,OAAO/I,GAAGK,OAAOwI,QAAQC,SAIjD,MAAMiD,EAASV,EAAOtF,cAAc,2BAChC4F,EACAI,EAAOpD,UAAUC,IAAI5I,GAAGK,OAAOwI,QAAQC,QAGvCiD,EAAOpD,UAAUI,OAAO/I,GAAGK,OAAOwI,QAAQC,QAG9C9I,GAAGiC,KAAK+J,UAAUpL,EAAKoB,WAAW+D,cAAc,IAAMnF,EAAKQ,MAAQ,gBAGvEsB,EAASoI,gBAAkB,WACvB,MAAMlK,EAAOC,KACbb,GAAGiC,KAAK+J,UAAUpL,EAAKoB,WAAW+D,cAAc,IAAMnF,EAAKQ,MAAQ,kBAC/D6K,aAAc,WACVrL,EAAKsL,qBAETC,cAAe,WACXvL,EAAKqF,UAAUmG,eAAiB,SAK5C1J,EAASmI,kBAAoB,WAEzB,OADahK,KACDsD,iBADCtD,KACwBsD,eAAeC,QADvCvD,KACsDsD,eAAeC,OAAOE,oBAD5EzD,KAEJsD,eAAeE,iBAG5B3B,EAASyH,qBAAuB,WAC5B,MAAMvJ,EAAOC,KACTD,EAAKoD,KACLpD,EAAKoD,IAAIqI,gBAAgBzL,EAAKiK,sBAAwByB,SAAS,KAIvE5J,EAASqI,qBAAuB,WAC5B,MAAMnK,EAAOC,KACPwD,EAAiBzD,EAAKiK,oBACtB0B,EAAgB,WAClB3L,EAAK0D,mBAAqB,KACtBD,GAAkBA,EAAerD,OACjCqD,EAAerD,MAAMuL,cAAclI,IAGrCmI,EAAe,WACb5L,EAAKuD,iBACLvD,EAAKuD,eAAesI,MAAQ7L,EAAKuD,eAAesI,QAAU7L,EAAKuD,eAAeuI,SAItF,GAAK9L,EAAKuD,gBAAkBvD,EAAKuD,eAAeC,QAAUxD,EAAKuD,eAAeC,OAAOE,qBAAuBD,GACxGA,EAAerD,QAAUJ,EAAKI,MAAO,CACrCuL,IACAC,SAGAxM,GAAG2M,QAAQ/L,EAAKyH,gBAAgB,yBAA0B,WACtDkE,IACAC,OAKZ,MAAM7E,EAAwB,SAAU1C,EAAKxD,GACzCA,EAAUA,MACV,OAAO,IAAI4D,QAAQ,SAAUC,EAASC,GAClC,MAAMlB,EAAiBY,EAAI4F,oBAC3B,GAAIxG,EAAgB,CAChB,MAAMM,EAAUN,EAAeQ,QAC/BF,EAAQiI,MAAMvI,EAAeuB,IAC7BjB,EAAQ3D,MAAQqD,EAAerD,MAC/B,GAAIS,EAAQM,UAAW,CACnB,IAAI8K,GAAoB,GACnBpL,EAAQM,UAAU0F,YAAc9C,EAAQmI,oBAAsB,IAC/DD,GAAoB,GAExB,GAAIA,EAAmB,CACnB,MAAME,GACFC,IAAK/H,EAAIjB,IAAIgJ,IACbC,UAAWtI,GACXuI,iBAAkBjI,EAAIxD,QAAQC,kBAAoBuD,EAAIxD,QAAQC,iBAAiBwL,iBAC/EzF,WAAYhG,EAAQM,UAAU0F,WAC9B0F,aAAc,GAElBlI,EAAIlD,UAAUqL,YAAYL,GAAa5H,KACnC,SAAU8H,GACN3H,EAAQ2H,EAAS,KAErB,SAAU/E,GACN3C,EAAOa,MAAM8B,WAKrB5C,EAAQX,OAGX,CACD,MAAM0I,EAAc1I,EAAQ2I,iBACtBC,EAAaF,EAAY,GAC/B,GAAIE,GAAcA,EAAWC,OAAS,EAAG,CACrCH,EAAYrI,QAAQ,SAAUyI,GAC1BA,EAAMD,OAAS,IAEnB7I,EAAQ+I,UAAU/I,EAAQgJ,UAE9BrI,EAAQX,SAIZW,EAAQ,SAKpB5C,EAASwJ,kBAAoB,WACzB,MACM0B,EADO/M,KACSoF,UACtB2H,EAASC,YAAc,KACvBlG,EAHa9G,MAGesE,KAAK,SAAUR,GACvCiJ,EAASxB,eAAiBzH,EAC1B,MAAMmJ,EAAWF,EAAS9H,IACpBiI,EAAOH,EAASI,eACtBF,EAAS/H,cAAc,4BAA4ByB,MAAQuG,EAC3DD,EAAS/H,cAAc,+BAA+ByB,MAAQoG,EAASK,eAAeF,MAI9FrL,EAASwL,gBAAkB,SAAUvJ,GAEjC,IAAIwJ,EAAS,GACTxJ,IACAwJ,EAASxJ,EAAQiB,IAErB,OAAOuI,GAGXzL,EAASoF,oBAAsB,SAAUnD,GAGrC,OAFa9D,KACWqN,gBAAgBvJ,GAASyJ,WAAWC,QAAQ,IAAIC,OAD3DzN,KACuE+B,gBAAiB,KADxF/B,KACmGgC,uBADnGhC,KACiIwH,gBAAgB,YAC5IkG,cAAcF,QAAQ,OAAQ,KAAO,IAAMrO,GAAGiC,KAAKuM,kBAAiB,IAAIC,MAAOL,YAAY,IAGjH1L,EAASgM,YAAc,WACnB,MAAM9N,EAAOC,KACb,OAAID,EAAKK,cAAgBL,EAAKI,OAEtB4E,GAAIhF,EAAKgF,GACT5E,MAAOJ,EAAKI,MAAM0N,eAGnB,MAGXhM,EAASiM,YAAc,SAAUC,GAC7B,MAAMhO,EAAOC,KACT+N,EAAM5N,OACNJ,EAAKsE,oBAAoBC,KAAK,SAAUnE,GACpCA,EAAM2N,YAAYC,EAAM5N,UAhcxC","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.POPUP = TC.Consts.event.POPUP || 'popup.tc';\r\nTC.Consts.event.POPUPHIDE = TC.Consts.event.POPUPHIDE || 'popuphide.tc';\r\nTC.Consts.event.DRAWCHART = TC.Consts.event.DRAWCHART || 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = TC.Consts.event.DRAWTABLE || 'drawtable.tc';\r\n\r\nTC.control.FeatureTools = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.layer = null;\r\n    self.exportsState = true;\r\n\r\n    const cs = self._classSelector = '.' + self.CLASS;\r\n    self._selectors = {\r\n        ELEVATION_CHECKBOX: cs + '-dialog-elev input[type=checkbox]',\r\n        INTERPOLATION_RADIO: 'input[type=radio][name=finfo-ip-coords]',\r\n        INTERPOLATION_DISTANCE: cs + '-dialog-ip-m'\r\n    };\r\n\r\n    if (self.options.displayElevation) {\r\n        TC.loadJS(\r\n            !TC.tool || !TC.tool.Elevation,\r\n            TC.apiLocation + 'TC/tool/Elevation',\r\n            function () {\r\n                const elevationOptions = typeof self.options.displayElevation === 'boolean' ? {} : self.options.displayElevation;\r\n                self.elevation = new TC.tool.Elevation(elevationOptions);\r\n            }\r\n        );\r\n    }\r\n\r\n    self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n    self._$dialogDiv = $(self._dialogDiv);\r\n    if (!self.options.dialogDiv) {\r\n        document.body.appendChild(self._dialogDiv);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.FeatureTools, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.FeatureTools.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-ftools';\r\n\r\n    ctlProto.TITLE_SEPARATOR = ' • ';\r\n    ctlProto.FILE_TITLE_SEPARATOR = '__';\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/FeatureTools.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/FeatureToolsDialog.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools\\\"><button class=\\\"tc-ctl-ftools-dl-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"download\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"download\" }).w(\"</button><button class=\\\"tc-ctl-ftools-share-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"share\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"share\" }).w(\"</button><button class=\\\"tc-ctl-ftools-zoom-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"zoomToFeature\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"zoomToFeature\" }).w(\"</button><button class=\\\"tc-ctl-ftools-del-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteFeature\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteFeature\" }).w(\"</button></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools-dialog tc-ctl-ftools-dl-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"feature\" }).w(\" - \").h(\"i18n\", ctx, {}, { \"$key\": \"download\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\">\").s(ctx.get([\"elevation\"], false), ctx, { \"block\": body_1 }, {}).w(\"<div class=\\\"tc-ctl-ftools-dialog-dl\\\"><div><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-kml\\\" data-format=\\\"KML\\\" title=\\\"KML\\\">KML</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-gml\\\" data-format=\\\"GML\\\" title=\\\"GML\\\">GML</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-geojson\\\" data-format=\\\"GeoJSON\\\" title=\\\"GeoJSON\\\">GeoJSON</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-wkt\\\" data-format=\\\"WKT\\\" title=\\\"WKT\\\">WKT</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-gpx\\\" data-format=\\\"GPX\\\" title=\\\"GPX\\\">GPX</button></div></div></div></div></div><div class=\\\"tc-ctl-ftools-dialog tc-ctl-ftools-share-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"feature\" }).w(\" - \").h(\"i18n\", ctx, {}, { \"$key\": \"share\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><div class=\\\"tc-ctl-ftools-share-dialog-ctl\\\"></div></div></div></div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools-dialog-elev\\\"><input id=\\\"\").f(ctx.get([\"checkboxId\"], false), ctx, \"h\").w(\"\\\" type=\\\"checkbox\\\"><label for=\\\"\").f(ctx.get([\"checkboxId\"], false), ctx, \"h\").w(\"\\\" class=\\\"tc-ctl-ftools-dialog-elev-label\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"includeElevations\" }).w(\"</label></div>\").x(ctx.get([\"resolution\"], false), ctx, { \"block\": body_2 }, {}); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools-dialog-ip tc-hidden\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"interpolateCoordsFromElevProfile\" }).w(\"</h4><label><input type=\\\"radio\\\" name=\\\"finfo-ip-coords\\\" value=\\\"0\\\" checked /><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"no\" }).w(\"</span></label><label><input type=\\\"radio\\\" name=\\\"finfo-ip-coords\\\" value=\\\"1\\\"/><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"yes\" }).w(\"</span></label><div class=\\\"tc-ctl-ftools-dialog-ip-m tc-hidden\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"interpolateEveryXMeters.1\" }).w(\"<input type=\\\"number\\\" min=\\\"1\\\" step=\\\"1\\\" class=\\\"tc-textbox\\\" value=\\\"\").f(ctx.get([\"resolution\"], false), ctx, \"h\").w(\"\\\" />\").h(\"i18n\", ctx, {}, { \"$key\": \"interpolateEveryXMeters.2\" }).w(\"</div></div>\"); } body_2.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        map\r\n            .on(TC.Consts.event.POPUP + ' ' + TC.Consts.event.DRAWTABLE + ' ' + TC.Consts.event.DRAWCHART, function (e) {\r\n                self.currentDisplay = e.control;              // caso feature compartida\r\n                if (self.currentDisplay.caller || (!self.currentDisplay.caller && self.currentDisplay.currentFeature)) {\r\n                    self.highlightedFeature = !(!self.currentDisplay.caller && self.currentDisplay.currentFeature) ? self.currentDisplay.caller.highlightedFeature : self.currentDisplay.currentFeature;\r\n                    if (self.highlightedFeature) {\r\n                        self.highlightedFeature.showsPopup = true;\r\n                    }\r\n                }\r\n                self.addUI(self.currentDisplay);\r\n            })\r\n            .on(TC.Consts.event.POPUPHIDE + ' ' + TC.Consts.event.RESULTSPANELCLOSE, function (e) {\r\n                self.currentDisplay = null;\r\n            })\r\n            .on(TC.Consts.event.FEATUREADD, function (e) {\r\n                const feature = e.feature;\r\n                if (self.currentDisplay && self.currentDisplay.caller && feature === self.currentDisplay.caller.highlightedFeature) {\r\n                    self.highlightedFeature = feature;\r\n                    self.highlightedFeature.showsPopup = true;\r\n                }\r\n            })\r\n            .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                const feature = e.feature;\r\n                if (feature === self.highlightedFeature) {\r\n                    const highlightedFeature = feature.clone();\r\n                    highlightedFeature.showsPopup = true;\r\n                    // Si la feature se eliminó por un cierre de popup provocado por la apertura de otro, \r\n                    // reasignamos la feature nueva al popup, ya que este está apuntando a una feature que ya no está en el mapa.\r\n                    map.getControlsByClass('TC.control.Popup').concat(map.getControlsByClass('TC.control.ResultsPanel')).forEach(function (ctl) {\r\n                        if (ctl.currentFeature === self.highlightedFeature) {\r\n                            ctl.currentFeature = highlightedFeature;\r\n                        }\r\n                    });\r\n                    self.getHighlightLayer().then(function (layer) {\r\n                        layer.addFeature(highlightedFeature);\r\n                    });\r\n                }\r\n            });\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all([TC.Control.prototype.register.call(self, map), self.renderPromise()]).then(function () {\r\n                self.map.addControl('share', {\r\n                    id: self.getUID(),\r\n                    div: self._dialogDiv.querySelector('.tc-modal-body .' + self.CLASS + '-share-dialog-ctl'),\r\n                    includeControls: false // Establecemos el control para que no exporte estados de controles, así no se comparte la feature dos veces\r\n                }).then(function (ctl) {\r\n                    self._shareCtl = ctl;\r\n                    resolve(self);\r\n                }).catch(function (err) {\r\n                    reject(err instanceof Error ? err : Error(err));\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.getRenderedHtml(self.CLASS + '-dialog', {\r\n            checkboxId: self.getUID(),\r\n            elevation: self.options.displayElevation\r\n        }, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n            self._dialogDiv.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button[data-format]', function (e) {\r\n                TC.Util.closeModal();\r\n                const li = self.map.getLoadingIndicator();\r\n                const waitId = li && li.addWait();\r\n\r\n                const shareOptions = {};\r\n                if (self._dialogDiv.querySelector(self._selectors.ELEVATION_CHECKBOX) && self._dialogDiv.querySelector(self._selectors.ELEVATION_CHECKBOX).checked) {\r\n                    const interpolateCoords = self._dialogDiv.querySelector(self._selectors.INTERPOLATION_RADIO + ':checked').value === \"1\";\r\n                    shareOptions.elevation = {\r\n                        resolution: interpolateCoords ? parseFloat(self._dialogDiv.querySelector(self._selectors.INTERPOLATION_DISTANCE + ' input[type=number]').value) || self.options.displayElevation.resolution : 0\r\n                    };\r\n                }\r\n                prepareFeatureToShare(self, shareOptions)\r\n                    .then(\r\n                    function (feature) {\r\n                        self.map.exportFeatures([feature], {\r\n                            fileName: self._getFeatureFilename(feature),\r\n                            format: e.target.dataset.format\r\n                        });\r\n                    },\r\n                    function (error) {\r\n                        if (error === TC.tool.Elevation.errors.MAX_COORD_QUANTITY_EXCEEDED) {\r\n                            TC.alert(self.getLocaleString('tooManyCoordinatesForElevation.warning'));\r\n                            return;\r\n                        }\r\n                        TC.error(self.getLocaleString('elevation.error'));\r\n                    }\r\n                    )\r\n                    .finally(function () {\r\n                        li && li.removeWait(waitId);\r\n                    });\r\n            }));\r\n            self._dialogDiv.addEventListener('change', TC.EventTarget.listenerBySelector(self._selectors.ELEVATION_CHECKBOX, function (e) {\r\n                self.showDownloadDialog(); // Recalculamos todo el aspecto del diálogo de descarga\r\n            }));\r\n            self._dialogDiv.addEventListener('change', TC.EventTarget.listenerBySelector(self._selectors.INTERPOLATION_RADIO, function (e) {\r\n                const idDiv = self._dialogDiv.querySelector(self._selectors.INTERPOLATION_DISTANCE);\r\n                if (e.target.value === '0') {\r\n                    idDiv.classList.add(TC.Consts.classes.HIDDEN);\r\n                }\r\n                else {\r\n                    idDiv.classList.remove(TC.Consts.classes.HIDDEN);\r\n                }\r\n            }));\r\n\r\n            self.trigger(TC.Consts.event.CONTROLRENDER);\r\n            if ($.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.addUI = function (ctl) {\r\n        const self = this;\r\n        const menuContainer = ctl.getMenuElement();\r\n        // Nos aseguramos de que el se decora el control una sola vez\r\n        const menuIsMissing = function () {\r\n            return menuContainer && !menuContainer.querySelector('.' + self.CLASS);\r\n        };\r\n        if (menuIsMissing()) {\r\n            // Añadimos los botones de herramientas\r\n            self.getRenderedHtml(self.CLASS, null, function (html) {\r\n                if (menuIsMissing()) {\r\n                    const parser = new DOMParser();\r\n                    const tools = parser.parseFromString(html, 'text/html').body.firstChild;\r\n                    menuContainer.appendChild(tools);\r\n\r\n                    self.updateUI(ctl);\r\n\r\n                    if (!self.map.options.stateful) {\r\n                        // Compartir no funciona sin estado\r\n                        const shareBtn = tools.querySelector('.' + self.CLASS + '-share-btn');\r\n                        shareBtn.parentElement.removeChild(shareBtn);\r\n                    }\r\n                    self._setToolButtonHandlers(tools);\r\n                    self._decorateDisplay(ctl.getContainerElement());\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            self.updateUI(ctl);\r\n        }\r\n    };\r\n\r\n    ctlProto._decorateDisplay = function (container) {\r\n        const self = this;        \r\n\r\n        if (self.highlightedFeature) {\r\n\r\n            // Añadimos un zoom a la feature al pulsar en la tabla\r\n            if (container.querySelector('table.tc-attr')) {\r\n                container.querySelector('table.tc-attr').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    self.zoomToCurrentFeature();\r\n                });\r\n\r\n                container.querySelector('table.tc-attr').classList.add(self.CLASS + '-zoom');\r\n                container.querySelector('table.tc-attr').setAttribute('title', self.getLocaleString('clickToCenter'));\r\n            }                        \r\n\r\n            // Añadimos botón de imprimir\r\n            TC.loadJS(\r\n                !TC.control.Print,\r\n                [TC.apiLocation + 'TC/control/Print'],\r\n                function () {\r\n                    var printTitle = \"\";\r\n\r\n                    if (self.highlightedFeature) {\r\n                        printTitle = self.highlightedFeature.id;\r\n\r\n                        if (self.highlightedFeature.showsPopup === true) {\r\n                            new TC.control.Print({\r\n                                target: container,\r\n                                title: printTitle\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n        }        \r\n    };\r\n\r\n    ctlProto.updateUI = function (ctl) {\r\n        const self = this;\r\n        const uiDiv = ctl.getMenuElement().querySelector('.' + self.CLASS);\r\n        uiDiv.classList.remove(TC.Consts.classes.ACTIVE);\r\n        clearTimeout(self._uiUpdateTimeout);\r\n        self._uiUpdateTimeout = setTimeout(function () {\r\n            const currentFeature = self.getCurrentFeature();\r\n            if (currentFeature && currentFeature.showsPopup) {\r\n                uiDiv.classList.add(TC.Consts.classes.ACTIVE);\r\n            }\r\n            else {\r\n                uiDiv.classList.remove(TC.Consts.classes.ACTIVE);\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    ctlProto._setToolButtonHandlers = function (container) {\r\n        const self = this;\r\n\r\n        // Evento para mostrar diálogo modal de descarga\r\n        container.querySelector('.' + self.CLASS + '-dl-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.showDownloadDialog();\r\n        });\r\n\r\n        if (self.map.options.stateful) {\r\n            // Evento para mostrar diálogo modal de compartir\r\n            container.querySelector('.' + self.CLASS + '-share-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.showShareDialog();\r\n            });\r\n        }\r\n\r\n        // Evento para hacer zoom\r\n        container.querySelector('.' + self.CLASS + '-zoom-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.zoomToCurrentFeature();\r\n        });\r\n\r\n        // Evento para borrar la feature\r\n        container.querySelector('.' + self.CLASS + '-del-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.removeCurrentFeature();\r\n        });\r\n    };\r\n\r\n    ctlProto.getHighlightLayer = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.layer) {\r\n                resolve(self.layer);\r\n            }\r\n            else {\r\n                self.map.addLayer({\r\n                    id: self.getUID(),\r\n                    title: self.CLASS + ': Highlighted features layer',\r\n                    type: TC.Consts.layerType.VECTOR,\r\n                    stealth: true\r\n                }).then(function (layer) {\r\n                    if (!self.layer) {\r\n                        self.layer = layer;\r\n                    }\r\n                    resolve(self.layer);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.showDownloadDialog = function () {\r\n        const self = this;\r\n\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-dialog');\r\n        const feature = self.getCurrentFeature();\r\n        const isPoint = (TC.feature.Point && feature instanceof TC.feature.Point) ||\r\n            (TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint);\r\n        const isLine = (TC.feature.Polyline && feature instanceof TC.feature.Polyline) ||\r\n            (TC.feature.MultiPolyline && feature instanceof TC.feature.MultiPolyline);\r\n        const isPolygon = (TC.feature.Polygon && feature instanceof TC.feature.Polygon) ||\r\n            (TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon);\r\n\r\n        // Si no es una línea o polígono, no es necesario preguntar si queremos interpolar\r\n        const ipDiv = dialog.querySelector('.' + self.CLASS + '-dialog-ip');\r\n        if (ipDiv) {\r\n            if ((self._dialogDiv.querySelector(self._selectors.ELEVATION_CHECKBOX) && !self._dialogDiv.querySelector(self._selectors.ELEVATION_CHECKBOX).checked) || (!isLine && !isPolygon)) {\r\n                ipDiv.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n            else {\r\n                ipDiv.classList.remove(TC.Consts.classes.HIDDEN);\r\n            }\r\n        }\r\n        // Si es un polígono, no es necesario mostrar el botón de GPX\r\n        const gpxBtn = dialog.querySelector('button[data-format=GPX]');\r\n        if (isPolygon) {\r\n            gpxBtn.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n        else {\r\n            gpxBtn.classList.remove(TC.Consts.classes.HIDDEN);\r\n        }\r\n\r\n        TC.Util.showModal(self._dialogDiv.querySelector('.' + self.CLASS + '-dl-dialog'));\r\n    };\r\n\r\n    ctlProto.showShareDialog = function () {\r\n        const self = this;\r\n        TC.Util.showModal(self._dialogDiv.querySelector('.' + self.CLASS + '-share-dialog'), {\r\n            openCallback: function () {\r\n                self.onShowShareDialog();\r\n            },\r\n            closeCallback: function () {\r\n                self._shareCtl.featureToShare = null;\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getCurrentFeature = function () {\r\n        const self = this;\r\n        return self.currentDisplay && ((self.currentDisplay.caller && self.currentDisplay.caller.highlightedFeature) ||\r\n            self.currentDisplay.currentFeature);\r\n    };\r\n\r\n    ctlProto.zoomToCurrentFeature = function () {\r\n        const self = this;\r\n        if (self.map) {\r\n            self.map.zoomToFeatures([self.getCurrentFeature()], { animate: true });\r\n        }\r\n    };\r\n\r\n    ctlProto.removeCurrentFeature = function () {\r\n        const self = this;\r\n        const currentFeature = self.getCurrentFeature();\r\n        const removeFeature = function () {\r\n            self.highlightedFeature = null;\r\n            if (currentFeature && currentFeature.layer) {\r\n                currentFeature.layer.removeFeature(currentFeature);\r\n            }\r\n        };\r\n        const closeDisplay = function () {\r\n            if (self.currentDisplay) {\r\n                self.currentDisplay.close ? self.currentDisplay.close() : self.currentDisplay.hide();\r\n            }\r\n        };\r\n        // No pedimos confirmación para borrar si es un resalte de GFI o una de las features añadidas por FeatureTools.\r\n        if ((self.currentDisplay && self.currentDisplay.caller && self.currentDisplay.caller.highlightedFeature === currentFeature) ||\r\n            currentFeature.layer === self.layer) {\r\n            removeFeature();\r\n            closeDisplay();\r\n        }\r\n        else {\r\n            TC.confirm(self.getLocaleString('deleteFeature.confirm'), function () {\r\n                removeFeature();\r\n                closeDisplay();\r\n            });\r\n        }\r\n    };\r\n\r\n    const prepareFeatureToShare = function (ctl, options) {\r\n        options = options || {};\r\n        return new Promise(function (resolve, reject) {\r\n            const currentFeature = ctl.getCurrentFeature();\r\n            if (currentFeature) {\r\n                const feature = currentFeature.clone();\r\n                feature.setId(currentFeature.id);\r\n                feature.layer = currentFeature.layer;\r\n                if (options.elevation) {\r\n                    var mustGetElevations = true;\r\n                    if (!options.elevation.resolution && feature.getGeometryStride() > 2) {\r\n                        mustGetElevations = false;\r\n                    }\r\n                    if (mustGetElevations) {\r\n                        const elevOptions = {\r\n                            crs: ctl.map.crs,\r\n                            features: [feature],\r\n                            maxCoordQuantity: ctl.options.displayElevation && ctl.options.displayElevation.maxCoordQuantity,\r\n                            resolution: options.elevation.resolution,\r\n                            sampleNumber: 0 // No queremos determinar el número de muestras\r\n                        };\r\n                        ctl.elevation.setGeometry(elevOptions).then(\r\n                            function (features) {\r\n                                resolve(features[0]);\r\n                            },\r\n                            function (error) {\r\n                                reject(Error(error));\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        resolve(feature);\r\n                    }\r\n                }\r\n                else {\r\n                    const coordsArray = feature.getCoordsArray();\r\n                    const firstCoord = coordsArray[0];\r\n                    if (firstCoord && firstCoord.length > 2) {\r\n                        coordsArray.forEach(function (coord) {\r\n                            coord.length = 2;\r\n                        });\r\n                        feature.setCoords(feature.geometry);\r\n                    }\r\n                    resolve(feature);\r\n                }\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.onShowShareDialog = function () {\r\n        const self = this;\r\n        const shareCtl = self._shareCtl;\r\n        shareCtl.extraParams = null;\r\n        prepareFeatureToShare(self).then(function (feature) {\r\n            shareCtl.featureToShare = feature;\r\n            const shareDiv = shareCtl.div;\r\n            const link = shareCtl.generateLink();\r\n            shareDiv.querySelector(\".tc-url input[type=text]\").value = link;\r\n            shareDiv.querySelector(\".tc-iframe input[type=text]\").value = shareCtl.generateIframe(link);\r\n        });\r\n    };\r\n\r\n    ctlProto.getFeatureTitle = function (feature) {\r\n        const self = this;\r\n        var result = \"\";\r\n        if (feature) {\r\n            result = feature.id;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto._getFeatureFilename = function (feature) {\r\n        const self = this;\r\n        const layerTitle = self.getFeatureTitle(feature).toString().replace(new RegExp(self.TITLE_SEPARATOR, 'g'), self.FILE_TITLE_SEPARATOR) || self.getLocaleString('feature');\r\n        return layerTitle.toLowerCase().replace(/\\s/gi, '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true);\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState && self.layer) {\r\n            return {\r\n                id: self.id,\r\n                layer: self.layer.exportState()\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        if (state.layer) {\r\n            self.getHighlightLayer().then(function (layer) {\r\n                layer.importState(state.layer);\r\n            });\r\n        }\r\n    };\r\n})();\r\n"],"file":"../../Control/FeatureTools.min.js"}