{"version":3,"sources":["control/FeatureTools.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","POPUP","POPUPHIDE","DRAWCHART","DRAWTABLE","FeatureTools","self","this","apply","arguments","layer","exportsState","cs","_classSelector","CLASS","_selectors","ELEVATION_CHECKBOX","INTERPOLATION_RADIO","INTERPOLATION_DISTANCE","options","displayElevation","loadJS","tool","Elevation","elevationOptions","elevation","_dialogDiv","Util","getDiv","dialogDiv","window","$","_$dialogDiv","document","body","appendChild","inherit","ctlProto","prototype","TITLE_SEPARATOR","FILE_TITLE_SEPARATOR","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","s","get","block","body_1","f","x","body_2","map","on","e","currentDisplay","caller","currentFeature","highlightedFeature","showsPopup","addUI","RESULTSPANELCLOSE","FEATUREADD","feature","FEATUREREMOVE","clone","getControlsByClass","concat","forEach","ctl","getHighlightLayer","then","addFeature","Promise","resolve","reject","all","call","renderPromise","addControl","id","getUID","div","querySelector","includeControls","_shareCtl","catch","err","Error","render","callback","_set1stRenderPromise","getRenderedHtml","checkboxId","html","innerHTML","addEventListener","CLICK","EventTarget","listenerBySelector","closeModal","li","getLoadingIndicator","waitId","addWait","shareOptions","checked","interpolateCoords","value","resolution","parseFloat","prepareFeatureToShare","exportFeatures","fileName","_getFeatureFilename","format","target","dataset","error","message","errors","MAX_COORD_QUANTITY_EXCEEDED","alert","getLocaleString","finally","removeWait","showDownloadDialog","classList","toggle","classes","HIDDEN","trigger","CONTROLRENDER","isFunction","menuContainer","getMenuElement","menuIsMissing","tools","DOMParser","parseFromString","firstChild","updateUI","stateful","shareBtn","parentElement","removeChild","_setToolButtonHandlers","_decorateDisplay","getContainerElement","container","attributeTable","zoomToCurrentFeature","querySelectorAll","a","stopPropagation","add","setAttribute","Print","printTitle","title","uiDiv","remove","ACTIVE","clearTimeout","_uiUpdateTimeout","setTimeout","getCurrentFeature","showShareDialog","removeCurrentFeature","addLayer","type","layerType","VECTOR","stealth","dialog","isLine","Polyline","MultiPolyline","isPolygon","Polygon","MultiPolygon","showModal","openCallback","onShowShareDialog","closeCallback","featureToShare","zoomToFeatures","animate","removeFeature","closeDisplay","close","hide","confirm","setId","mustGetElevations","getGeometryStride","elevOptions","crs","features","maxCoordQuantity","sampleNumber","setGeometry","coordsArray","getCoordsArray","firstCoord","length","coord","setCoords","geometry","shareCtl","extraParams","shareDiv","link","generateLink","generateIframe","getFeatureTitle","result","toString","replace","RegExp","toLowerCase","getFormattedDate","Date","exportState","importState","state"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.POPUP = TC.Consts.event.POPUP || 'popup.tc';\r\nTC.Consts.event.POPUPHIDE = TC.Consts.event.POPUPHIDE || 'popuphide.tc';\r\nTC.Consts.event.DRAWCHART = TC.Consts.event.DRAWCHART || 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = TC.Consts.event.DRAWTABLE || 'drawtable.tc';\r\n\r\nTC.control.FeatureTools = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.layer = null;\r\n    self.exportsState = true;\r\n\r\n    const cs = self._classSelector = '.' + self.CLASS;\r\n    self._selectors = {\r\n        ELEVATION_CHECKBOX: cs + '-dialog-elev input[type=checkbox]',\r\n        INTERPOLATION_RADIO: 'input[type=radio][name=finfo-ip-coords]',\r\n        INTERPOLATION_DISTANCE: cs + '-dialog-ip-m'\r\n    };\r\n\r\n    if (self.options.displayElevation) {\r\n        TC.loadJS(\r\n            !TC.tool || !TC.tool.Elevation,\r\n            TC.apiLocation + 'TC/tool/Elevation',\r\n            function () {\r\n                const elevationOptions = typeof self.options.displayElevation === 'boolean' ? {} : self.options.displayElevation;\r\n                self.elevation = new TC.tool.Elevation(elevationOptions);\r\n            }\r\n        );\r\n    }\r\n\r\n    self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n    if (window.$) {\r\n        self._$dialogDiv = $(self._dialogDiv);\r\n    }\r\n    if (!self.options.dialogDiv) {\r\n        document.body.appendChild(self._dialogDiv);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.FeatureTools, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.FeatureTools.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-ftools';\r\n\r\n    ctlProto.TITLE_SEPARATOR = ' • ';\r\n    ctlProto.FILE_TITLE_SEPARATOR = '__';\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/FeatureTools.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/FeatureToolsDialog.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools\\\"><button class=\\\"tc-ctl-ftools-dl-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"download\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"download\" }).w(\"</button><button class=\\\"tc-ctl-ftools-share-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"share\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"share\" }).w(\"</button><button class=\\\"tc-ctl-ftools-zoom-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"zoomToFeature\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"zoomToFeature\" }).w(\"</button><button class=\\\"tc-ctl-ftools-del-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteFeature\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteFeature\" }).w(\"</button></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools-dialog tc-ctl-ftools-dl-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"feature\" }).w(\" - \").h(\"i18n\", ctx, {}, { \"$key\": \"download\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\">\").s(ctx.get([\"elevation\"], false), ctx, { \"block\": body_1 }, {}).w(\"<div class=\\\"tc-ctl-ftools-dialog-dl\\\"><div><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-kml\\\" data-format=\\\"KML\\\" title=\\\"KML\\\">KML</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-gml\\\" data-format=\\\"GML\\\" title=\\\"GML\\\">GML</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-geojson\\\" data-format=\\\"GeoJSON\\\" title=\\\"GeoJSON\\\">GeoJSON</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-wkt\\\" data-format=\\\"WKT\\\" title=\\\"WKT\\\">WKT</button><button class=\\\"tc-button tc-btn-dl tc-ctl-ftools-dl-btn-gpx\\\" data-format=\\\"GPX\\\" title=\\\"GPX\\\">GPX</button></div></div></div></div></div><div class=\\\"tc-ctl-ftools-dialog tc-ctl-ftools-share-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"feature\" }).w(\" - \").h(\"i18n\", ctx, {}, { \"$key\": \"share\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><div class=\\\"tc-ctl-ftools-share-dialog-ctl\\\"></div></div></div></div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools-dialog-elev\\\"><input id=\\\"\").f(ctx.get([\"checkboxId\"], false), ctx, \"h\").w(\"\\\" type=\\\"checkbox\\\"><label for=\\\"\").f(ctx.get([\"checkboxId\"], false), ctx, \"h\").w(\"\\\" class=\\\"tc-ctl-ftools-dialog-elev-label\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"includeElevations\" }).w(\"</label></div>\").x(ctx.get([\"resolution\"], false), ctx, { \"block\": body_2 }, {}); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-ftools-dialog-ip tc-hidden\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"interpolateCoordsFromElevProfile\" }).w(\"</h4><label><input type=\\\"radio\\\" name=\\\"finfo-ip-coords\\\" value=\\\"0\\\" checked /><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"no\" }).w(\"</span></label><label><input type=\\\"radio\\\" name=\\\"finfo-ip-coords\\\" value=\\\"1\\\"/><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"yes\" }).w(\"</span></label><div class=\\\"tc-ctl-ftools-dialog-ip-m tc-hidden\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"interpolateEveryXMeters.1\" }).w(\"<input type=\\\"number\\\" min=\\\"1\\\" step=\\\"1\\\" class=\\\"tc-textbox\\\" value=\\\"\").f(ctx.get([\"resolution\"], false), ctx, \"h\").w(\"\\\" />\").h(\"i18n\", ctx, {}, { \"$key\": \"interpolateEveryXMeters.2\" }).w(\"</div></div>\"); } body_2.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        map\r\n            .on(TC.Consts.event.POPUP + ' ' + TC.Consts.event.DRAWTABLE + ' ' + TC.Consts.event.DRAWCHART, function (e) {\r\n                self.currentDisplay = e.control;              // caso feature compartida\r\n                if (self.currentDisplay.caller || (!self.currentDisplay.caller && self.currentDisplay.currentFeature)) {\r\n                    self.highlightedFeature = !(!self.currentDisplay.caller && self.currentDisplay.currentFeature) ? self.currentDisplay.caller.highlightedFeature : self.currentDisplay.currentFeature;\r\n                    if (self.highlightedFeature) {\r\n                        self.highlightedFeature.showsPopup = true;\r\n                    }\r\n\r\n                    self.addUI(self.currentDisplay);\r\n                }                \r\n            })\r\n            .on(TC.Consts.event.POPUPHIDE + ' ' + TC.Consts.event.RESULTSPANELCLOSE, function (e) {\r\n                self.currentDisplay = null;\r\n            })\r\n            .on(TC.Consts.event.FEATUREADD, function (e) {\r\n                const feature = e.feature;\r\n                if (self.currentDisplay && self.currentDisplay.caller && feature === self.currentDisplay.caller.highlightedFeature) {\r\n                    self.highlightedFeature = feature;\r\n                    self.highlightedFeature.showsPopup = true;\r\n                }\r\n            })\r\n            .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                const feature = e.feature;\r\n                if (feature === self.highlightedFeature) {\r\n                    const highlightedFeature = feature.clone();\r\n                    highlightedFeature.showsPopup = true;\r\n                    // Si la feature se eliminó por un cierre de popup provocado por la apertura de otro, \r\n                    // reasignamos la feature nueva al popup, ya que este está apuntando a una feature que ya no está en el mapa.\r\n                    map.getControlsByClass('TC.control.Popup').concat(map.getControlsByClass('TC.control.ResultsPanel')).forEach(function (ctl) {\r\n                        if (ctl.currentFeature === self.highlightedFeature) {\r\n                            ctl.currentFeature = highlightedFeature;\r\n                        }\r\n                    });\r\n                    self.getHighlightLayer().then(function (layer) {\r\n                        layer.addFeature(highlightedFeature);\r\n                    });\r\n                }\r\n            });\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all([TC.Control.prototype.register.call(self, map), self.renderPromise()]).then(function () {\r\n                self.map.addControl('share', {\r\n                    id: self.getUID(),\r\n                    div: self._dialogDiv.querySelector('.tc-modal-body .' + self.CLASS + '-share-dialog-ctl'),\r\n                    includeControls: false // Establecemos el control para que no exporte estados de controles, así no se comparte la feature dos veces\r\n                }).then(function (ctl) {\r\n                    self._shareCtl = ctl;\r\n                    resolve(self);\r\n                }).catch(function (err) {\r\n                    reject(err instanceof Error ? err : Error(err));\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.getRenderedHtml(self.CLASS + '-dialog', {\r\n            checkboxId: self.getUID(),\r\n            elevation: self.options.displayElevation\r\n        }, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n            self._dialogDiv.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button[data-format]', function (e) {\r\n                TC.Util.closeModal();\r\n                const li = self.map.getLoadingIndicator();\r\n                const waitId = li && li.addWait();\r\n\r\n                const shareOptions = {};\r\n                if (self.options.displayElevation && self._dialogDiv.querySelector(self._selectors.ELEVATION_CHECKBOX).checked) {\r\n                    const interpolateCoords = self._dialogDiv.querySelector(self._selectors.INTERPOLATION_RADIO + ':checked').value === \"1\";\r\n                    shareOptions.elevation = {\r\n                        resolution: interpolateCoords ? parseFloat(self._dialogDiv.querySelector(self._selectors.INTERPOLATION_DISTANCE + ' input[type=number]').value) || self.options.displayElevation.resolution : 0\r\n                    };\r\n                }\r\n                prepareFeatureToShare(self, shareOptions)\r\n                    .then(\r\n                    function (feature) {\r\n                        self.map.exportFeatures([feature], {\r\n                            fileName: self._getFeatureFilename(feature),\r\n                            format: e.target.dataset.format\r\n                        });\r\n                    },\r\n                    function (error) {\r\n                        if (TC.tool.Elevation && error.message === TC.tool.Elevation.errors.MAX_COORD_QUANTITY_EXCEEDED) {\r\n                            TC.alert(self.getLocaleString('tooManyCoordinatesForElevation.warning'));\r\n                            return;\r\n                        }\r\n                        TC.error(self.getLocaleString('elevation.error'));\r\n                    }\r\n                    )\r\n                    .finally(function () {\r\n                        li && li.removeWait(waitId);\r\n                    });\r\n            }));\r\n            self._dialogDiv.addEventListener('change', TC.EventTarget.listenerBySelector(self._selectors.ELEVATION_CHECKBOX, function (e) {\r\n                self.showDownloadDialog(); // Recalculamos todo el aspecto del diálogo de descarga\r\n            }));\r\n            self._dialogDiv.addEventListener('change', TC.EventTarget.listenerBySelector(self._selectors.INTERPOLATION_RADIO, function (e) {\r\n                const idDiv = self._dialogDiv.querySelector(self._selectors.INTERPOLATION_DISTANCE);\r\n                idDiv.classList.toggle(TC.Consts.classes.HIDDEN, e.target.value === '0');\r\n            }));\r\n\r\n            self.trigger(TC.Consts.event.CONTROLRENDER);\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.addUI = function (ctl) {\r\n        const self = this;\r\n        const menuContainer = ctl.getMenuElement();\r\n        // Nos aseguramos de que el se decora el control una sola vez\r\n        const menuIsMissing = function () {\r\n            return menuContainer && !menuContainer.querySelector('.' + self.CLASS);\r\n        };\r\n        if (menuIsMissing()) {\r\n            // Añadimos los botones de herramientas\r\n            self.getRenderedHtml(self.CLASS, null, function (html) {\r\n                if (menuIsMissing()) {\r\n                    const parser = new DOMParser();\r\n                    const tools = parser.parseFromString(html, 'text/html').body.firstChild;\r\n                    menuContainer.appendChild(tools);\r\n\r\n                    self.updateUI(ctl);\r\n\r\n                    if (!self.map.options.stateful) {\r\n                        // Compartir no funciona sin estado\r\n                        const shareBtn = tools.querySelector('.' + self.CLASS + '-share-btn');\r\n                        shareBtn.parentElement.removeChild(shareBtn);\r\n                    }\r\n                    self._setToolButtonHandlers(tools);\r\n                    self._decorateDisplay(ctl.getContainerElement());\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            self.updateUI(ctl);\r\n        }\r\n    };\r\n\r\n    ctlProto._decorateDisplay = function (container) {\r\n        const self = this;        \r\n\r\n        if (self.highlightedFeature) {\r\n\r\n            // Añadimos un zoom a la feature al pulsar en la tabla\r\n            const attributeTable = container.querySelector('table.tc-attr');\r\n            if (attributeTable) {\r\n                attributeTable.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    self.zoomToCurrentFeature();\r\n                });\r\n\r\n                attributeTable.querySelectorAll('a').forEach(function (a) {\r\n                    a.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                        e.stopPropagation(); // No queremos zoom si pulsamos en un enlace\r\n                    });\r\n                });\r\n\r\n                attributeTable.classList.add(self.CLASS + '-zoom');\r\n                attributeTable.setAttribute('title', self.getLocaleString('clickToCenter'));\r\n            }                        \r\n\r\n            // Añadimos botón de imprimir\r\n            TC.loadJS(\r\n                !TC.control.Print,\r\n                [TC.apiLocation + 'TC/control/Print'],\r\n                function () {\r\n                    var printTitle = \"\";\r\n\r\n                    if (self.highlightedFeature) {\r\n                        printTitle = self.highlightedFeature.id;\r\n\r\n                        if (self.highlightedFeature.showsPopup === true) {\r\n                            new TC.control.Print({\r\n                                target: container,\r\n                                title: printTitle\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n        }        \r\n    };\r\n\r\n    ctlProto.updateUI = function (ctl) {\r\n        const self = this;\r\n        const uiDiv = ctl.getMenuElement().querySelector('.' + self.CLASS);\r\n        uiDiv.classList.remove(TC.Consts.classes.ACTIVE);\r\n        clearTimeout(self._uiUpdateTimeout);\r\n        self._uiUpdateTimeout = setTimeout(function () {\r\n            const currentFeature = self.getCurrentFeature();\r\n            uiDiv.classList.toggle(TC.Consts.classes.ACTIVE, !!(currentFeature && currentFeature.showsPopup));\r\n        }, 100);\r\n    };\r\n\r\n    ctlProto._setToolButtonHandlers = function (container) {\r\n        const self = this;\r\n\r\n        // Evento para mostrar diálogo modal de descarga\r\n        container.querySelector('.' + self.CLASS + '-dl-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.showDownloadDialog();\r\n        });\r\n\r\n        if (self.map.options.stateful) {\r\n            // Evento para mostrar diálogo modal de compartir\r\n            container.querySelector('.' + self.CLASS + '-share-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.showShareDialog();\r\n            });\r\n        }\r\n\r\n        // Evento para hacer zoom\r\n        container.querySelector('.' + self.CLASS + '-zoom-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.zoomToCurrentFeature();\r\n        });\r\n\r\n        // Evento para borrar la feature\r\n        container.querySelector('.' + self.CLASS + '-del-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.removeCurrentFeature();\r\n        });\r\n    };\r\n\r\n    ctlProto.getHighlightLayer = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.layer) {\r\n                resolve(self.layer);\r\n            }\r\n            else {\r\n                self.map.addLayer({\r\n                    id: self.getUID(),\r\n                    title: self.CLASS + ': Highlighted features layer',\r\n                    type: TC.Consts.layerType.VECTOR,\r\n                    stealth: true\r\n                }).then(function (layer) {\r\n                    if (!self.layer) {\r\n                        self.layer = layer;\r\n                    }\r\n                    resolve(self.layer);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.showDownloadDialog = function () {\r\n        const self = this;\r\n\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-dialog');\r\n        const feature = self.getCurrentFeature();\r\n        const isLine = (TC.feature.Polyline && feature instanceof TC.feature.Polyline) ||\r\n            (TC.feature.MultiPolyline && feature instanceof TC.feature.MultiPolyline);\r\n        const isPolygon = (TC.feature.Polygon && feature instanceof TC.feature.Polygon) ||\r\n            (TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon);\r\n\r\n        if (self.options.displayElevation) {\r\n            // Si no es una línea o polígono, no es necesario preguntar si queremos interpolar\r\n            const ipDiv = dialog.querySelector('.' + self.CLASS + '-dialog-ip');\r\n            ipDiv.classList.toggle(TC.Consts.classes.HIDDEN, !self._dialogDiv.querySelector(self._selectors.ELEVATION_CHECKBOX).checked || (!isLine && !isPolygon));\r\n        }\r\n        // Si es un polígono, no es necesario mostrar el botón de GPX\r\n        const gpxBtn = dialog.querySelector('button[data-format=GPX]');\r\n        gpxBtn.classList.toggle(TC.Consts.classes.HIDDEN, isPolygon);\r\n\r\n        TC.Util.showModal(self._dialogDiv.querySelector('.' + self.CLASS + '-dl-dialog'));\r\n    };\r\n\r\n    ctlProto.showShareDialog = function () {\r\n        const self = this;\r\n        TC.Util.showModal(self._dialogDiv.querySelector('.' + self.CLASS + '-share-dialog'), {\r\n            openCallback: function () {\r\n                self.onShowShareDialog();\r\n            },\r\n            closeCallback: function () {\r\n                self._shareCtl.featureToShare = null;\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getCurrentFeature = function () {\r\n        const self = this;\r\n        return self.currentDisplay && ((self.currentDisplay.caller && self.currentDisplay.caller.highlightedFeature) ||\r\n            self.currentDisplay.currentFeature);\r\n    };\r\n\r\n    ctlProto.zoomToCurrentFeature = function () {\r\n        const self = this;\r\n        if (self.map) {\r\n            self.map.zoomToFeatures([self.getCurrentFeature()], { animate: true });\r\n        }\r\n    };\r\n\r\n    ctlProto.removeCurrentFeature = function () {\r\n        const self = this;\r\n        const currentFeature = self.getCurrentFeature();\r\n        const removeFeature = function () {\r\n            self.highlightedFeature = null;\r\n            if (currentFeature && currentFeature.layer) {\r\n                currentFeature.layer.removeFeature(currentFeature);\r\n            }\r\n        };\r\n        const closeDisplay = function () {\r\n            if (self.currentDisplay) {\r\n                self.currentDisplay.close ? self.currentDisplay.close() : self.currentDisplay.hide();\r\n            }\r\n        };\r\n        // No pedimos confirmación para borrar si es un resalte de GFI o una de las features añadidas por FeatureTools.\r\n        if ((self.currentDisplay && self.currentDisplay.caller && self.currentDisplay.caller.highlightedFeature === currentFeature) ||\r\n            currentFeature.layer === self.layer) {\r\n            removeFeature();\r\n            closeDisplay();\r\n        }\r\n        else {\r\n            TC.confirm(self.getLocaleString('deleteFeature.confirm'), function () {\r\n                removeFeature();\r\n                closeDisplay();\r\n            });\r\n        }\r\n    };\r\n\r\n    const prepareFeatureToShare = function (ctl, options) {\r\n        options = options || {};\r\n        return new Promise(function (resolve, reject) {\r\n            const currentFeature = ctl.getCurrentFeature();\r\n            if (currentFeature) {\r\n                const feature = currentFeature.clone();\r\n                feature.setId(currentFeature.id);\r\n                feature.layer = currentFeature.layer;\r\n                if (options.elevation) {\r\n                    var mustGetElevations = true;\r\n                    if (!options.elevation.resolution && feature.getGeometryStride() > 2) {\r\n                        mustGetElevations = false;\r\n                    }\r\n                    if (mustGetElevations) {\r\n                        const elevOptions = {\r\n                            crs: ctl.map.crs,\r\n                            features: [feature],\r\n                            maxCoordQuantity: ctl.options.displayElevation && ctl.options.displayElevation.maxCoordQuantity,\r\n                            resolution: options.elevation.resolution,\r\n                            sampleNumber: 0 // No queremos determinar el número de muestras\r\n                        };\r\n                        ctl.elevation.setGeometry(elevOptions).then(\r\n                            function (features) {\r\n                                resolve(features[0]);\r\n                            },\r\n                            function (error) {\r\n                                reject(error instanceof Error ? error : Error(error));\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        resolve(feature);\r\n                    }\r\n                }\r\n                else {\r\n                    const coordsArray = feature.getCoordsArray();\r\n                    const firstCoord = coordsArray[0];\r\n                    if (firstCoord && firstCoord.length > 2) {\r\n                        coordsArray.forEach(function (coord) {\r\n                            coord.length = 2;\r\n                        });\r\n                        feature.setCoords(feature.geometry);\r\n                    }\r\n                    resolve(feature);\r\n                }\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.onShowShareDialog = function () {\r\n        const self = this;\r\n        const shareCtl = self._shareCtl;\r\n        shareCtl.extraParams = null;\r\n        prepareFeatureToShare(self).then(function (feature) {\r\n            shareCtl.featureToShare = feature;\r\n            const shareDiv = shareCtl.div;\r\n            const link = shareCtl.generateLink();\r\n            shareDiv.querySelector(\".tc-url input[type=text]\").value = link;\r\n            shareDiv.querySelector(\".tc-iframe input[type=text]\").value = shareCtl.generateIframe(link);\r\n        });\r\n    };\r\n\r\n    ctlProto.getFeatureTitle = function (feature) {\r\n        const self = this;\r\n        var result = \"\";\r\n        if (feature) {\r\n            result = feature.id;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto._getFeatureFilename = function (feature) {\r\n        const self = this;\r\n        const layerTitle = self.getFeatureTitle(feature).toString().replace(new RegExp(self.TITLE_SEPARATOR, 'g'), self.FILE_TITLE_SEPARATOR) || self.getLocaleString('feature');\r\n        return layerTitle.toLowerCase().replace(/\\s/gi, '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true);\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState && self.layer) {\r\n            return {\r\n                id: self.id,\r\n                layer: self.layer.exportState()\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        if (state.layer) {\r\n            self.getHighlightLayer().then(function (layer) {\r\n                layer.importState(state.layer);\r\n            });\r\n        }\r\n    };\r\n})();\r\n"]}