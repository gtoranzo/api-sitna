{"version":3,"sources":["control/FeatureTools.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","POPUP","POPUPHIDE","DRAWCHART","DRAWTABLE","FeatureTools","self","this","apply","arguments","cs","_classSelector","CLASS","_selectors","ELEVATION_CHECKBOX","INTERPOLATION_RADIO","INTERPOLATION_DISTANCE","options","displayElevation","loadJS","tool","Elevation","elevationOptions","elevation","_dialogDiv","Util","getDiv","dialogDiv","window","$","_$dialogDiv","document","body","appendChild","inherit","ctlProto","prototype","TITLE_SEPARATOR","FILE_TITLE_SEPARATOR","template","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","downloadDialog","map","on","e","currentDisplay","caller","currentFeature","highlightedFeature","addUI","RESULTSPANELCLOSE","FEATUREADD","feature","Promise","resolve","reject","all","call","renderPromise","then","addControl","id","getUID","div","querySelector","includeControls","ctl","_shareCtl","catch","err","Error","render","_set1stRenderPromise","getRenderedHtml","checkboxId","html","innerHTML","menuContainer","getMenuElement","menuIsMissing","tools","DOMParser","parseFromString","firstChild","updateUI","stateful","shareBtn","parentElement","removeChild","_setToolButtonHandlers","container","getContainerElement","_decorateDisplay","Print","printTitle","querySelectorAll","length","showsPopup","target","printableElement","title","attributeTable","addEventListener","CLICK","zoomToCurrentFeature","forEach","a","stopPropagation","classList","add","setAttribute","getLocaleString","uiDiv","remove","classes","ACTIVE","clearTimeout","_uiUpdateTimeout","setTimeout","getCurrentFeature","toggle","layer","owner","filterLayer","showDownloadDialog","showShareDialog","removeCurrentFeature","fileName","_getFeatureFilename","Object","assign","MultiPolygon","Polygon","excludedFormats","open","showModal","openCallback","onShowShareDialog","closeCallback","featureToShare","zoomToFeatures","animate","removeFeature","closeDisplay","close","hide","resultsLayer","confirm","shareCtl","extraParams","clone","setId","mustGetElevations","resolution","getGeometryStride","elevOptions","crs","features","maxCoordQuantity","sampleNumber","setGeometry","error","coordsArray","getCoordsArray","firstCoord","coord","setCoords","geometry","prepareFeatureToShare","shareDiv","link","generateLink","value","generateIframe","getFeatureTitle","result","toString","replace","RegExp","toLowerCase","getFormattedDate","Date"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.POPUP = TC.Consts.event.POPUP || 'popup.tc';\r\nTC.Consts.event.POPUPHIDE = TC.Consts.event.POPUPHIDE || 'popuphide.tc';\r\nTC.Consts.event.DRAWCHART = TC.Consts.event.DRAWCHART || 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = TC.Consts.event.DRAWTABLE || 'drawtable.tc';\r\n\r\nTC.control.FeatureTools = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    const cs = self._classSelector = '.' + self.CLASS;\r\n    self._selectors = {\r\n        ELEVATION_CHECKBOX: cs + '-dialog-elev input[type=checkbox]',\r\n        INTERPOLATION_RADIO: 'input[type=radio][name=finfo-ip-coords]',\r\n        INTERPOLATION_DISTANCE: cs + '-dialog-ip-m'\r\n    };\r\n\r\n    if (self.options.displayElevation) {\r\n        TC.loadJS(\r\n            !TC.tool || !TC.tool.Elevation,\r\n            TC.apiLocation + 'TC/tool/Elevation',\r\n            function () {\r\n                const elevationOptions = typeof self.options.displayElevation === 'boolean' ? {} : self.options.displayElevation;\r\n                self.elevation = new TC.tool.Elevation(elevationOptions);\r\n            }\r\n        );\r\n    }\r\n\r\n    self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n    if (window.$) {\r\n        self._$dialogDiv = $(self._dialogDiv);\r\n    }\r\n    if (!self.options.dialogDiv) {\r\n        document.body.appendChild(self._dialogDiv);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.FeatureTools, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.FeatureTools.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-ftools';\r\n\r\n    ctlProto.TITLE_SEPARATOR = ' • ';\r\n    ctlProto.FILE_TITLE_SEPARATOR = '__';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/FeatureTools.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/FeatureToolsDialog.html\";\r\n\r\n    var downloadDialog = null;\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        map\r\n            .on(TC.Consts.event.POPUP + ' ' + TC.Consts.event.DRAWTABLE + ' ' + TC.Consts.event.DRAWCHART, function (e) {\r\n                self.currentDisplay = e.control;              // caso feature compartida\r\n                if (self.currentDisplay.caller || (!self.currentDisplay.caller && self.currentDisplay.currentFeature)) {\r\n                    self.highlightedFeature = !(!self.currentDisplay.caller && self.currentDisplay.currentFeature) ? self.currentDisplay.caller.highlightedFeature : self.currentDisplay.currentFeature;\r\n                    self.addUI(self.currentDisplay);\r\n                }\r\n            })\r\n            .on(TC.Consts.event.POPUPHIDE + ' ' + TC.Consts.event.RESULTSPANELCLOSE, function (e) {\r\n                self.currentDisplay = null;\r\n            })\r\n            .on(TC.Consts.event.FEATUREADD, function (e) {\r\n                const feature = e.feature;\r\n                if (self.currentDisplay && self.currentDisplay.caller && feature === self.currentDisplay.caller.highlightedFeature) {\r\n                    self.highlightedFeature = feature;\r\n                }\r\n            });\r\n        //.on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n        //    const feature = e.feature;\r\n        //    if (feature === self.highlightedFeature) {\r\n        //        const highlightedFeature = feature.clone();\r\n        //        highlightedFeature.showsPopup = true;\r\n        //        // Si la feature se eliminó por un cierre de popup provocado por la apertura de otro, \r\n        //        // reasignamos la feature nueva al popup, ya que este está apuntando a una feature que ya no está en el mapa.\r\n        //        map.getControlsByClass('TC.control.Popup').concat(map.getControlsByClass('TC.control.ResultsPanel')).forEach(function (ctl) {\r\n        //            if (ctl.currentFeature === self.highlightedFeature) {\r\n        //                ctl.currentFeature = highlightedFeature;\r\n        //            }\r\n        //        });\r\n        //        self.getHighlightLayer().then(function (layer) {\r\n        //            layer.addFeature(highlightedFeature);\r\n        //        });\r\n        //    }\r\n        //});\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all([TC.Control.prototype.register.call(self, map), self.renderPromise()]).then(function () {\r\n                self.map.addControl('share', {\r\n                    id: self.getUID(),\r\n                    div: self._dialogDiv.querySelector('.tc-modal-body .' + self.CLASS + '-share-dialog-ctl'),\r\n                    includeControls: false // Establecemos el control para que no exporte estados de controles, así no se comparte la feature dos veces\r\n                }).then(function (ctl) {\r\n                    self._shareCtl = ctl;\r\n                    resolve(self);\r\n                }).catch(function (err) {\r\n                    reject(err instanceof Error ? err : Error(err));\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function () {\r\n        const self = this;\r\n\r\n        return self._set1stRenderPromise(self.getRenderedHtml(self.CLASS + '-dialog', {\r\n            checkboxId: self.getUID(),\r\n            elevation: self.options.displayElevation\r\n        }, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n            if (!downloadDialog) {\r\n                self.map.addControl('FeatureDownloadDialog').then(ctl => {\r\n                    downloadDialog = ctl;\r\n                });\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.addUI = function (ctl) {\r\n        const self = this;\r\n        const menuContainer = ctl.getMenuElement();\r\n        // Nos aseguramos de que el se decora el control una sola vez\r\n        const menuIsMissing = function () {\r\n            return menuContainer && !menuContainer.querySelector('.' + self.CLASS);\r\n        };\r\n        if (menuIsMissing()) {\r\n            // Añadimos los botones de herramientas\r\n            self.getRenderedHtml(self.CLASS, null, function (html) {\r\n                if (menuIsMissing()) {                    \r\n\r\n                    const parser = new DOMParser();\r\n                    const tools = parser.parseFromString(html, 'text/html').body.firstChild;\r\n                    menuContainer.appendChild(tools);\r\n\r\n                    self.updateUI(ctl);\r\n\r\n                    if (!self.map.options.stateful) {\r\n                        // Compartir no funciona sin estado\r\n                        const shareBtn = tools.querySelector('.' + self.CLASS + '-share-btn');\r\n                        shareBtn.parentElement.removeChild(shareBtn);\r\n                    }\r\n                    self._setToolButtonHandlers(tools);\r\n\r\n                    const container = ctl.getContainerElement();\r\n                    self._decorateDisplay(container);\r\n\r\n                    // Añadimos botón de imprimir\r\n                    TC.loadJS(\r\n                        !TC.control.Print,\r\n                        [TC.apiLocation + 'TC/control/Print'],\r\n                        function () {\r\n                            var printTitle = \"\";\r\n\r\n                            if (!container.querySelectorAll('.' + TC.control.Print.prototype.CLASS + '-btn').length) {\r\n                                if (self.highlightedFeature) {\r\n                                    printTitle = self.highlightedFeature.id;\r\n\r\n                                    if (self.highlightedFeature.showsPopup === true) {\r\n                                        new TC.control.Print({\r\n                                            target: menuContainer,\r\n                                            printableElement: container,\r\n                                            title: printTitle\r\n                                        });\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            self.updateUI(ctl);\r\n        }\r\n    };\r\n\r\n    ctlProto._decorateDisplay = function (container) {\r\n        const self = this;\r\n\r\n        if (self.highlightedFeature) {\r\n\r\n            // Añadimos un zoom a la feature al pulsar en la tabla\r\n            const attributeTable = container.querySelector('table.tc-attr');\r\n            if (attributeTable) {\r\n                attributeTable.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    self.zoomToCurrentFeature();\r\n                });\r\n\r\n                attributeTable.querySelectorAll('a, table label, table input').forEach(function (a) {\r\n                    a.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                        e.stopPropagation(); // No queremos zoom si pulsamos en un enlace\r\n                    });\r\n                });\r\n\r\n                attributeTable.classList.add(self.CLASS + '-zoom');\r\n                attributeTable.setAttribute('title', self.getLocaleString('clickToCenter'));\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.updateUI = function (ctl) {\r\n        const self = this;\r\n        const uiDiv = ctl.getMenuElement().querySelector('.' + self.CLASS);\r\n        uiDiv.classList.remove(TC.Consts.classes.ACTIVE);\r\n        clearTimeout(self._uiUpdateTimeout);\r\n        self._uiUpdateTimeout = setTimeout(function () {\r\n            const currentFeature = self.getCurrentFeature();\r\n            uiDiv.classList.toggle(TC.Consts.classes.ACTIVE, currentFeature && currentFeature.layer.owner ? currentFeature.layer.owner.filterLayer !== currentFeature.layer : true);\r\n        }, 100);\r\n    };\r\n\r\n    ctlProto._setToolButtonHandlers = function (container) {\r\n        const self = this;\r\n\r\n        // Evento para mostrar diálogo modal de descarga\r\n        container.querySelector('.' + self.CLASS + '-dl-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.showDownloadDialog();\r\n        });\r\n\r\n        if (self.map.options.stateful) {\r\n            // Evento para mostrar diálogo modal de compartir\r\n            container.querySelector('.' + self.CLASS + '-share-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.showShareDialog();\r\n            });\r\n        }\r\n\r\n        // Evento para hacer zoom\r\n        container.querySelector('.' + self.CLASS + '-zoom-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.zoomToCurrentFeature();\r\n        });\r\n\r\n        // Evento para borrar la feature\r\n        container.querySelector('.' + self.CLASS + '-del-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.removeCurrentFeature();\r\n        });\r\n    };\r\n\r\n    ctlProto.showDownloadDialog = function () {\r\n        const self = this;\r\n\r\n        const feature = self.getCurrentFeature();\r\n\r\n        var options = {\r\n            title: self.getLocaleString(\"feature\") + \" - \" + self.getLocaleString(\"download\"),\r\n            fileName: self._getFeatureFilename(feature)\r\n        };\r\n\r\n        if (self.options.displayElevation !== true)\r\n            options = Object.assign({}, options, { elevation: Object.assign({}, self.map.elevation && self.map.elevation.options, self.options.displayElevation) });\r\n        else\r\n            options = Object.assign({}, options, { elevation: self.map.elevation && self.map.elevation.options });\r\n\r\n        if (TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon || TC.feature.Polygon && feature instanceof TC.feature.Polygon)\r\n            options = Object.assign({}, options, { excludedFormats: [\"GPX\"] });\r\n\r\n        downloadDialog.open(feature, options);\r\n    };\r\n\r\n    ctlProto.showShareDialog = function () {\r\n        const self = this;\r\n        TC.Util.showModal(self._dialogDiv.querySelector('.' + self.CLASS + '-share-dialog'), {\r\n            openCallback: function () {\r\n                self.onShowShareDialog();\r\n            },\r\n            closeCallback: function () {\r\n                self._shareCtl.featureToShare = null;\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getCurrentFeature = function () {\r\n        const self = this;\r\n        return self.currentDisplay && ((self.currentDisplay.caller && self.currentDisplay.caller.highlightedFeature) ||\r\n            self.currentDisplay.currentFeature);\r\n    };\r\n\r\n    ctlProto.zoomToCurrentFeature = function () {\r\n        const self = this;\r\n        if (self.map) {\r\n            self.map.zoomToFeatures([self.getCurrentFeature()], { animate: true });\r\n        }\r\n    };\r\n\r\n    ctlProto.removeCurrentFeature = function () {\r\n        const self = this;\r\n        const currentFeature = self.getCurrentFeature();\r\n        const removeFeature = function () {\r\n            self.highlightedFeature = null;\r\n            if (currentFeature && currentFeature.layer) {\r\n                currentFeature.layer.removeFeature(currentFeature);\r\n            }\r\n        };\r\n        const closeDisplay = function () {\r\n            if (self.currentDisplay) {\r\n                self.currentDisplay.close ? self.currentDisplay.close() : self.currentDisplay.hide();\r\n            }\r\n        };\r\n        // No pedimos confirmación para borrar si es un resalte de GFI.\r\n        if (currentFeature && currentFeature.layer.owner && currentFeature.layer === currentFeature.layer.owner.resultsLayer) {\r\n            removeFeature();\r\n            closeDisplay();\r\n        }\r\n        else {\r\n            TC.confirm(self.getLocaleString('deleteFeature.confirm'), function () {\r\n                removeFeature();\r\n                closeDisplay();\r\n            });\r\n        }\r\n    };\r\n\r\n    const prepareFeatureToShare = function (ctl, options) {\r\n        options = options || {};\r\n        return new Promise(function (resolve, reject) {\r\n            const currentFeature = ctl.getCurrentFeature();\r\n            if (currentFeature) {\r\n                const feature = currentFeature.clone();\r\n                feature.setId(currentFeature.id);\r\n                feature.layer = currentFeature.layer;\r\n                if (options.elevation) {\r\n                    var mustGetElevations = true;\r\n                    if (!options.elevation.resolution && feature.getGeometryStride() > 2) {\r\n                        mustGetElevations = false;\r\n                    }\r\n                    if (mustGetElevations) {\r\n                        const elevOptions = {\r\n                            crs: ctl.map.crs,\r\n                            features: [feature],\r\n                            maxCoordQuantity: ctl.options.displayElevation && ctl.options.displayElevation.maxCoordQuantity,\r\n                            resolution: options.elevation.resolution,\r\n                            sampleNumber: 0 // No queremos determinar el número de muestras\r\n                        };\r\n                        ctl.elevation.setGeometry(elevOptions).then(\r\n                            function (features) {\r\n                                resolve(features[0]);\r\n                            },\r\n                            function (error) {\r\n                                reject(error instanceof Error ? error : Error(error));\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        resolve(feature);\r\n                    }\r\n                }\r\n                else {\r\n                    const coordsArray = feature.getCoordsArray();\r\n                    const firstCoord = coordsArray[0];\r\n                    if (firstCoord && firstCoord.length > 2) {\r\n                        coordsArray.forEach(function (coord) {\r\n                            coord.length = 2;\r\n                        });\r\n                        feature.setCoords(feature.geometry);\r\n                    }\r\n                    resolve(feature);\r\n                }\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.onShowShareDialog = function () {\r\n        const self = this;\r\n        const shareCtl = self._shareCtl;\r\n        shareCtl.extraParams = null;\r\n        prepareFeatureToShare(self).then(function (feature) {\r\n            shareCtl.featureToShare = feature;\r\n            const shareDiv = shareCtl.div;\r\n            const link = shareCtl.generateLink();\r\n            shareDiv.querySelector(\".tc-url input[type=text]\").value = link;\r\n            shareDiv.querySelector(\".tc-iframe input[type=text]\").value = shareCtl.generateIframe(link);\r\n        });\r\n    };\r\n\r\n    ctlProto.getFeatureTitle = function (feature) {\r\n        const self = this;\r\n        var result = \"\";\r\n        if (feature) {\r\n            result = feature.id;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto._getFeatureFilename = function (feature) {\r\n        const self = this;\r\n        const layerTitle = self.getFeatureTitle(feature).toString().replace(new RegExp(self.TITLE_SEPARATOR, 'g'), self.FILE_TITLE_SEPARATOR) || self.getLocaleString('feature');\r\n        return layerTitle.toLowerCase().replace(/\\s/gi, '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true);\r\n    };\r\n\r\n})();\r\n"]}