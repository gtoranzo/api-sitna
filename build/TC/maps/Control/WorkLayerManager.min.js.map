{"version":3,"sources":["control/WorkLayerManager.js"],"names":["TC","control","TOC","syncLoadJS","apiLocation","WorkLayerManager","options","apply","this","arguments","layers","layerTools","inherit","ctlProto","prototype","CLASS","CLICKEVENT","Consts","classes","DRAG","DRAGEND","event","TOOLSOPEN","template","dust","register","body_0","chk","ctx","w","h","$key","s","get","block","body_1","__dustBody","p","rebase","getPath","x","else","body_2","body_3","body_5","body_6","f","nx","body_8","body_9","body_10","body_11","body_12","body_15","body_16","body_4","body_7","body_13","body_14","body_17","findLayerElement","ctl","layer","getLayerUIElements","filter","li","dataset","layerId","id","getElligibleLayersNumber","length","shouldBeDelAllVisible","some","unremovable","moveLayer","listItem","oldIndex","newIndex","callback","layerItems","targetItem","sourceLayer","map","getLayer","targetLayer","newIdx","i","insertLayer","render","self","_set1stRenderPromise","renderData","Util","extend","getLayerTree","addUIEventListeners","loadJS","window","Sortable","workLayers","stealth","forEach","updateLayerTree","ul","div","querySelector","_sortable","create","handle","animation","onSort","e","item","addEventListener","EventTarget","listenerBySelector","elm","target","tagName","parentElement","swap","oldIdx","sortableItems","toArray","buffer","sort","listItems","elmIdx","indexOf","test","key","focus","stopPropagation","blur","Promise","reject","Error","resolve","call","then","loaded","updateScale","on","LAYEROPACITY","value","Math","round","opacity","FEATURESIMPORT","fileName","features","pattern","format","GPX","toLowerCase","one","LAYERADD","title","layout","accordion","classList","contains","COLLAPSED","controls","containerControl","add","trigger","remove","onExternalServiceAdded","checkbox","matches","setVisibility","checked","inputRangeListener","range","setOpacity","removeLayer","confirm","getLocaleString","a","info","querySelectorAll","img","styleLegendImage","toggle","HIDDEN","CHECKED","updateLayerVisibility","visible","getVisibility","isBase","MapContents","alreadyExists","len","push","layerTitle","wrap","getServiceTitle","layerData","hideTitle","hide","renderOptions","customLegend","isRaster","layerNames","path","shift","name","names","getInfo","legend","metadata","hasInfo","hasOwnProperty","tree","children","j","md","formatDescription","getSimpleMimeType","method","getLegendGraphicImage","src","catch","err","error","getLegendImgByPost","getRenderedHtml","out","DOMParser","parseFromString","body","firstChild","layerNode","isGroup","layerNodes","getAllLayerNodes","node","getName","getLayerNodes","typeElm","className","normalizeLayerNode","tip","mapDiv","typeElmRect","getBoundingClientRect","document","createElement","innerHTML","style","top","offsetTop","right","offsetWidth","left","offsetLeft","appendChild","removeChild","lis","layerList","l","layerIdx","tool","addLayerToolUI","inserted","ii","referenceLi","insertAdjacentElement","domReadyPromise","elligibleLayersNum","numElm","emptyElm","contentElm","textContent","VISIBLE","isVisible","isVisibleByScale","updateLayerOrder","idx","splice","numberElm","nChildren","Array","from","isFunction","renderFn","button","actionFn","CLICK","preventDefault","updateFn","updateEvents","join","addLayerTool"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.TOC) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/TOC');\r\n}\r\n\r\nTC.control.WorkLayerManager = function (options) {\r\n    var self = this;\r\n    TC.control.TOC.apply(self, arguments);\r\n    self.layers = [];\r\n    self.layerTools = [];\r\n};\r\n\r\nTC.inherit(TC.control.WorkLayerManager, TC.control.TOC);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.WorkLayerManager.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-wlm';\r\n    ctlProto.CLICKEVENT = 'click';\r\n\r\n    TC.Consts.classes.DRAG = TC.Consts.classes.DRAG || 'tc-drag';\r\n    TC.Consts.classes.DRAGEND = TC.Consts.classes.DRAGEND || 'tc-dragend';\r\n\r\n    TC.Consts.event.TOOLSOPEN = TC.Consts.event.TOOLSOPEN || 'toolsopen.tc';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/WorkLayerManager.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-elm'] = TC.apiLocation + \"TC/templates/WorkLayerManagerElement.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-type-sgl'] = TC.apiLocation + \"TC/templates/WorkLayerManagerTooltipSingle.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-type-grp'] = TC.apiLocation + \"TC/templates/WorkLayerManagerTooltipGroup.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-type-grp-node'] = TC.apiLocation + \"TC/templates/WorkLayerManagerTooltipGroupNode.html\";\r\n\r\n    const findLayerElement = function (ctl, layer) {\r\n        return ctl.getLayerUIElements().filter(function (li) {\r\n            return li.dataset.layerId === layer.id;\r\n        })[0];\r\n    };\r\n\r\n    var getElligibleLayersNumber = function (ctl) {\r\n        return ctl.layers.length;\r\n    };\r\n\r\n    const shouldBeDelAllVisible = function (ctl) {\r\n        return !ctl.layers.some(function (layer) { return layer.unremovable });\r\n    };\r\n\r\n    const moveLayer = function (ctl, listItem, oldIndex, newIndex, callback) {\r\n        const layerItems = ctl.getLayerUIElements();\r\n        var targetItem;\r\n        if (newIndex > oldIndex) {\r\n            targetItem = layerItems[newIndex - 1];\r\n        }\r\n        else if (newIndex < oldIndex) {\r\n            targetItem = layerItems[newIndex + 1];\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        const sourceLayer = ctl.map.getLayer(listItem.dataset.layerId);\r\n        const targetLayer = ctl.map.getLayer(targetItem.dataset.layerId);\r\n        var newIdx = -1;\r\n        for (var i = 0; i < ctl.map.layers.length; i++) {\r\n            if (targetLayer === ctl.map.layers[i]) {\r\n                newIdx = i;\r\n                break;\r\n            }\r\n        }\r\n        if (newIdx >= 1 && newIdx < ctl.map.layers.length) {\r\n            ctl.map.insertLayer(sourceLayer, newIdx, callback);\r\n        }\r\n    };\r\n\r\n    ctlProto.render = function (callback, options) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.map ? self.renderData(options ? TC.Util.extend(self.map.getLayerTree(), options) : self.map.getLayerTree(), function () {\r\n            self.addUIEventListeners();\r\n            TC.loadJS(\r\n                !window.Sortable,\r\n                [TC.apiLocation + 'lib/sortable/Sortable.min.js'],\r\n                function () {\r\n                    self.map.workLayers\r\n                        .filter(function (layer) {\r\n                            return !layer.stealth;\r\n                        })\r\n                        .forEach(function (layer) {\r\n                            self.updateLayerTree(layer);\r\n                        });\r\n\r\n\r\n                    const ul = self.div.querySelector('ul');\r\n                    self._sortable = Sortable.create(ul, {\r\n                        handle: '.' + self.CLASS + '-dd',\r\n                        animation: 150,\r\n                        onSort: function (e) {\r\n                            moveLayer(self, e.item, e.oldIndex, e.newIndex);\r\n                        }\r\n                    });\r\n\r\n                    ul.addEventListener('keydown', TC.EventTarget.listenerBySelector('li', function (e) {\r\n                        // Para mover capas con el teclado.\r\n                        var elm = e.target;\r\n                        while (elm.tagName !== 'LI') {\r\n                            elm = elm.parentElement;\r\n                            if (!elm) {\r\n                                return;\r\n                            }\r\n                        }\r\n                        const swap = function (oldIdx, newIdx) {\r\n                            const sortableItems = self._sortable.toArray();\r\n                            const buffer = sortableItems[oldIdx];\r\n                            sortableItems[oldIdx] = sortableItems[newIdx];\r\n                            sortableItems[newIdx] = buffer;\r\n                            self._sortable.sort(sortableItems);\r\n                            moveLayer(self, elm, oldIdx, newIdx);\r\n                        };\r\n                        const listItems = self.getLayerUIElements();\r\n                        const elmIdx = listItems.indexOf(elm);\r\n                        switch (true) {\r\n                            case /Up$/.test(e.key):\r\n                                if (elmIdx > 0) {\r\n                                    swap(elmIdx, elmIdx - 1);\r\n                                    elm.focus();\r\n                                    e.stopPropagation();\r\n                                }\r\n                                break;\r\n                            case /Down$/.test(e.key):\r\n                                if (elmIdx < listItems.length - 1) {\r\n                                    swap(elmIdx, elmIdx + 1);\r\n                                    elm.focus();\r\n                                    e.stopPropagation();\r\n                                }\r\n                                break;\r\n                            case /Enter$/.test(e.key):\r\n                                elm.blur();\r\n                                e.stopPropagation();\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    }));\r\n\r\n                    if (typeof callback === 'function') {\r\n                        callback();\r\n                    }\r\n                }\r\n            );\r\n        }) : Promise.reject(Error('Cannot render: control has no map')));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            TC.control.TOC.prototype.register.call(self, map).then(function () {\r\n\r\n                map.loaded(function () {                   \r\n                    self.updateScale();\r\n                });\r\n\r\n                map\r\n                    .on(TC.Consts.event.LAYEROPACITY, function (e) {\r\n                        const li = findLayerElement(self, e.layer);\r\n                        if (li) {\r\n                            li.querySelector('input[type=range]').value = Math.round(e.opacity * 100);\r\n                        }\r\n                    })\r\n                    .on(TC.Consts.event.FEATURESIMPORT, function (e) {\r\n                        var fileName = e.fileName;\r\n                        if (e.features && e.features.length > 0) { // GLS: Escuchamos al evento FEATURESIMPORT para poder desplegar el control de capas cargadas\r\n                            // Ignoramos los GPX (se supone que los gestionará Geolocation)\r\n                            var pattern = '.' + TC.Consts.format.GPX.toLowerCase();\r\n                            if (e.fileName.toLowerCase().indexOf(pattern) === e.fileName.length - pattern.length) {\r\n                                return;\r\n                            }\r\n\r\n                            map.one(TC.Consts.event.LAYERADD, function (e) {\r\n                                if (e && e.layer && e.layer.title == fileName) {\r\n                                    // Desplegamos el control capas cargadas\r\n                                    if (self.map && self.map.layout && self.map.layout.accordion) {\r\n                                        if (self.div.classList.contains(TC.Consts.classes.COLLAPSED)) {\r\n                                            self.map.controls\r\n                                                .filter(function (ctl) {\r\n                                                    // Todos los otros controles que no cuelgan de otro control\r\n                                                    return ctl !== self && !ctl.containerControl;\r\n                                                })\r\n                                                .forEach(function (ctl) {\r\n                                                    ctl.div.classList.add(TC.Consts.classes.COLLAPSED);\r\n                                                });\r\n                                        }\r\n                                    }\r\n\r\n                                    // abrimos el panel de herramientas\r\n                                    self.map.trigger(TC.Consts.event.TOOLSOPEN);\r\n\r\n                                    self.div.classList.remove(TC.Consts.classes.COLLAPSED);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                resolve(self);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.onExternalServiceAdded = function (e) {\r\n        // Este control no tiene que aceptar servicios externos directamente\r\n    };\r\n\r\n    ctlProto.addUIEventListeners = function () {\r\n        const self = this;\r\n\r\n        self.div.addEventListener(self.CLICKEVENT, TC.EventTarget.listenerBySelector('input[type=checkbox]', function (e) {\r\n            // al estar en ipad el evento pasa a ser touchstart en la constante: TC.Consts.event.CLICK, los checkbox no funcionan bien con este evento\r\n            const checkbox = e.target;\r\n            var li = checkbox;\r\n            do {\r\n                li = li.parentElement;\r\n            }\r\n            while (li && !li.matches('li.' + self.CLASS + '-elm'));\r\n\r\n            const layer = self.map.getLayer(li.dataset.layerId);\r\n            layer.setVisibility(checkbox.checked);\r\n            e.stopPropagation();\r\n        }));\r\n\r\n        const inputRangeListener = function (e) {\r\n            const range = e.target;\r\n            var li = range;\r\n            do {\r\n                li = li.parentElement;\r\n            }\r\n            while (li && li.tagName !== 'LI');\r\n\r\n            const layer = self.map.getLayer(li.dataset.layerId);\r\n            layer.setOpacity(range.value / 100);\r\n        };\r\n        self.div.addEventListener('change', TC.EventTarget.listenerBySelector('input[type=range]', inputRangeListener));\r\n        self.div.addEventListener('input', TC.EventTarget.listenerBySelector('input[type=range]', inputRangeListener));\r\n\r\n        self.div.addEventListener(self.CLICKEVENT, TC.EventTarget.listenerBySelector(`.${self.CLASS}-btn-del:not(.disabled)`, function (e) {\r\n            var li = e.target;\r\n            do {\r\n                li = li.parentElement;\r\n            }\r\n            while (li && li.tagName !== 'LI');\r\n            const layer = self.map.getLayer(li.dataset.layerId);\r\n            self.map.removeLayer(layer);\r\n        }));\r\n\r\n        self.div.addEventListener(self.CLICKEVENT, TC.EventTarget.listenerBySelector('.' + self.CLASS + '-del-all', function (e) {\r\n            TC.confirm(self.getLocaleString('layersRemove.confirm'), function () {\r\n                self.getLayerUIElements()\r\n                    .map(function (li) {\r\n                        return self.map.getLayer(li.dataset.layerId);\r\n                    })\r\n                    .forEach(function (layer) {\r\n                        self.map.removeLayer(layer);\r\n                    });\r\n            });\r\n        }));\r\n\r\n        self.div.addEventListener(self.CLICKEVENT, TC.EventTarget.listenerBySelector('.' + self.CLASS + '-btn-info', function (e) {\r\n            const a = e.target;\r\n            var li = a;\r\n            do {\r\n                li = li.parentElement;\r\n            }\r\n            while (li && li.tagName !== 'LI');\r\n            const info = li.querySelector('.' + self.CLASS + '-info');\r\n            const layer = self.map.getLayer(li.dataset.layerId);\r\n            // Cargamos la imagen de la leyenda\r\n            info.querySelectorAll('.' + self.CLASS + '-legend img').forEach(function (img) {\r\n                self.styleLegendImage(img, layer);\r\n            });\r\n            info.classList.toggle(TC.Consts.classes.HIDDEN);\r\n\r\n            if (li.querySelector('input[type=\"checkbox\"]').checked) {\r\n                const dragHandle = li.querySelector('.' + self.CLASS + '-dd');\r\n                dragHandle.classList.toggle(TC.Consts.classes.HIDDEN, !info.classList.contains(TC.Consts.classes.HIDDEN));\r\n            }\r\n\r\n            a.classList.toggle(TC.Consts.classes.CHECKED);\r\n        }));\r\n    };\r\n\r\n    ctlProto.updateLayerVisibility = function (layer) {\r\n        const self = this;\r\n        const li = findLayerElement(self, layer);\r\n        if (li) {\r\n            const visible = layer.getVisibility();\r\n            li.querySelector('input[type=\"checkbox\"]').checked = visible;\r\n        }\r\n    };\r\n\r\n    ctlProto.updateLayerTree = function (layer) {\r\n        var self = this;        \r\n\r\n        var getLegendImgByPost = function (layer) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (layer && layer.options.method && layer.options.method === \"POST\") {\r\n                    layer.getLegendGraphicImage()\r\n                        .then(function (src) {\r\n                            resolve(src);\r\n                        })\r\n                        .catch(function (err) { TC.error(err); });\r\n                } else {\r\n                    resolve();\r\n                }\r\n            });\r\n        };\r\n\r\n        if (!layer.isBase && !layer.options.stealth) {\r\n            TC.control.MapContents.prototype.updateLayerTree.call(self, layer);\r\n\r\n            var alreadyExists = false;\r\n            for (var i = 0, len = self.layers.length; i < len; i++) {\r\n                if (layer === self.layers[i]) {\r\n                    alreadyExists = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!alreadyExists) {\r\n                self.layers.push(layer);\r\n\r\n                var domReadyPromise;\r\n                var layerTitle = layer.title || layer.wrap.getServiceTitle();\r\n                var layerData = {\r\n                    title: layer.options.hideTitle ? '' : layerTitle,\r\n                    hide: layer.renderOptions && layer.renderOptions.hide ? true : false,\r\n                    opacity: layer.renderOptions && layer.renderOptions.opacity ? (layer.renderOptions.opacity * 100) : 100,\r\n                    customLegend: layer.customLegend,\r\n                    unremovable: layer.unremovable,\r\n                    id: layer.id\r\n                };\r\n                var isRaster = layer.isRaster();\r\n                if (isRaster) {\r\n                    layerData.layerNames = layer.layerNames;\r\n                    var path = layer.getPath();\r\n                    path.shift();\r\n                    layerData.path = path;\r\n                    var name = layer.names[0];\r\n                    var info = layer.wrap.getInfo(name);\r\n                    layerData.legend = info.legend;\r\n                    layerData['abstract'] = info['abstract'];\r\n                    var hasInfo = (info.hasOwnProperty('abstract') || info.hasOwnProperty('legend') || info.hasOwnProperty('metadata'));\r\n                    var metadata;\r\n                    if (layer.tree && layer.tree.children && layer.tree.children.length && layer.tree.children[0].children && layer.tree.children[0].children.length) {\r\n                        metadata = null;\r\n                    }\r\n                    else {\r\n                        metadata = info.metadata;\r\n                        if (metadata) {\r\n                            for (var j = 0, len = metadata.length; j < len; j++) {\r\n                                var md = metadata[j];\r\n                                md.formatDescription = self.getLocaleString(TC.Util.getSimpleMimeType(md.format)) || self.getLocaleString('viewMetadata');\r\n                            }\r\n                        }\r\n                    }\r\n                    layerData.metadata = metadata;\r\n                }\r\n\r\n\r\n                getLegendImgByPost(layer).then(function (src) {\r\n                    if (src) {\r\n                        legend.src = src; // ya se ha validado en getLegendImgByPost\r\n                    }\r\n                             \r\n                    self.getRenderedHtml(self.CLASS + '-elm', layerData).then(function (out) {\r\n                        const parser = new DOMParser();\r\n                        const li = parser.parseFromString(out, 'text/html').body.firstChild;\r\n                        var layerNode;\r\n                        var isGroup = false;\r\n                        if (isRaster) {\r\n                            isGroup = layer.names.length > 1;\r\n                            if (!isGroup) {\r\n                                var layerNodes = layer.wrap.getAllLayerNodes();\r\n                                for (var i = 0; i < layerNodes.length; i++) {\r\n                                    var node = layerNodes[i];\r\n                                    if (layer.wrap.getName(node) === name) {\r\n                                        layerNode = node;\r\n                                        if (layer.wrap.getLayerNodes(node).length > 0) {\r\n                                            isGroup = true;\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        const typeElm = li.querySelector('.' + self.CLASS + '-type');\r\n                        const className = isGroup ? self.CLASS + '-type-grp' : self.CLASS + '-type-sgl';\r\n                        typeElm.classList.add(className);\r\n\r\n                        if (!hasInfo) {\r\n                            li.querySelector('.' + self.CLASS + '-btn-info').classList.add(TC.Consts.classes.HIDDEN);\r\n                        }\r\n\r\n                        if (layerNode) {\r\n                            layer.wrap.normalizeLayerNode(layerNode);\r\n\r\n                            self.getRenderedHtml(className, layerNode).then(function (out) {\r\n                                var tip;\r\n\r\n                                typeElm.addEventListener('mouseover', function (e) {\r\n                                    const mapDiv = self.map.div;\r\n                                    const typeElmRect = typeElm.getBoundingClientRect();\r\n                                    tip = document.createElement('div');\r\n                                    tip.classList.add(self.CLASS + '-tip');\r\n                                    tip.innerHTML = out;\r\n                                    tip.style.top = (typeElmRect.top - mapDiv.offsetTop) + 'px';\r\n                                    tip.style.right = mapDiv.offsetWidth - (typeElmRect.left - mapDiv.offsetLeft) + 'px';\r\n                                    mapDiv.appendChild(tip);\r\n                                });\r\n                                typeElm.addEventListener('mouseout', function (e) {\r\n                                    tip.parentElement.removeChild(tip);\r\n                                });\r\n                            });\r\n                        }\r\n                        const ul = self.div.querySelector('ul');\r\n                        li.dataset.layerId = layer.id;\r\n\r\n                        const lis = self.getLayerUIElements();\r\n                        const layerList = self.map.workLayers\r\n                            .filter(function (l) {\r\n                                return !l.stealth;\r\n                            });\r\n                        const layerIdx = layerList.indexOf(layer);\r\n\r\n                        self.layerTools.forEach(tool => self.addLayerToolUI(li, tool));\r\n\r\n                        var inserted = false;\r\n                        for (var i = 0, ii = lis.length; i < ii; i++) {\r\n                            const referenceLi = lis[i];\r\n                            const referenceLayerIdx = layerList.indexOf(self.map.getLayer(referenceLi.dataset.layerId));\r\n                            if (referenceLayerIdx < layerIdx) {\r\n                                referenceLi.insertAdjacentElement('beforebegin', li);\r\n                                inserted = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!inserted) {\r\n                            ul.appendChild(li);\r\n                        }\r\n\r\n                        if (domReadyPromise) domReadyPromise(li);\r\n                        self.updateScale();\r\n                    });\r\n                });\r\n\r\n                var elligibleLayersNum = getElligibleLayersNumber(self);\r\n                const numElm = self.div.querySelector('.' + self.CLASS + '-n');\r\n                const emptyElm = self.div.querySelector('.' + self.CLASS + '-empty');\r\n                const contentElm = self.div.querySelector('.' + self.CLASS + '-content');\r\n                numElm.textContent = elligibleLayersNum;\r\n                if (elligibleLayersNum > 0) {\r\n                    numElm.classList.add(TC.Consts.classes.VISIBLE);\r\n                    emptyElm.classList.add(TC.Consts.classes.HIDDEN);\r\n                    contentElm.classList.remove(TC.Consts.classes.HIDDEN);\r\n                }\r\n                else {\r\n                    numElm.classList.remove(TC.Consts.classes.VISIBLE);\r\n                    emptyElm.classList.remove(TC.Consts.classes.HIDDEN);\r\n                    contentElm.classList.add(TC.Consts.classes.HIDDEN);\r\n                }\r\n\r\n                const deleteAllElm = self.div.querySelector('.' + self.CLASS + '-del-all');\r\n                deleteAllElm.classList.toggle(TC.Consts.classes.HIDDEN, !shouldBeDelAllVisible(self));\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.updateScale = function () {\r\n        var self = this;\r\n        self.getLayerUIElements().forEach(function (li) {\r\n            var layer = self.map.getLayer(li.dataset.layerId);\r\n            if (layer && layer.names) {\r\n                var isVisible = false;\r\n                for (var i = 0; i < layer.names.length; i++) {\r\n                    if (layer.isVisibleByScale(layer.names[i])) {\r\n                        isVisible = true;\r\n                        break;\r\n                    }\r\n                }\r\n                li.classList.toggle(self.CLASS + '-elm-notvisible', !isVisible);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.updateLayerOrder = function (layer, oldIdx, newIdx) {\r\n        //TC.control.MapContents.prototype.updateLayerOrder.call(this, layer, oldIdx, newIdx);\r\n        const self = this;\r\n        self.map.workLayers\r\n            .filter(function (layer) {\r\n                return !layer.stealth;\r\n            })\r\n            .forEach(function (layer) {\r\n                const li = findLayerElement(self, layer);\r\n                if (li) {\r\n                    li.parentElement.firstChild.insertAdjacentElement('beforebegin', li);\r\n                }\r\n            });\r\n    };\r\n\r\n    ctlProto.removeLayer = function (layer) {\r\n        var self = this;\r\n        var idx = self.layers.indexOf(layer);\r\n        if (idx >= 0) {\r\n            self.layers.splice(idx, 1);\r\n        }\r\n        self.getLayerUIElements().forEach(function (li) {\r\n            if (li.dataset.layerId === layer.id) {\r\n                li.parentElement.removeChild(li);\r\n            }\r\n        });\r\n        const contentElm = self.div.querySelector('.' + self.CLASS + '-content');\r\n        const emptyElm = self.div.querySelector('.' + self.CLASS + '-empty');\r\n        const numberElm = self.div.querySelector('.' + self.CLASS + '-n');\r\n        var nChildren = getElligibleLayersNumber(self);\r\n        numberElm.textContent = nChildren;\r\n        if (nChildren > 0) {\r\n            contentElm.classList.remove(TC.Consts.classes.HIDDEN);\r\n            emptyElm.classList.add(TC.Consts.classes.HIDDEN);\r\n            numberElm.classList.add(TC.Consts.classes.VISIBLE);\r\n        }\r\n        else {\r\n            if (shouldBeDelAllVisible(self)) {\r\n                self.div.querySelector('.' + self.CLASS + '-del-all').classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n            contentElm.classList.add(TC.Consts.classes.HIDDEN);\r\n            emptyElm.classList.remove(TC.Consts.classes.HIDDEN);\r\n            numberElm.classList.remove(TC.Consts.classes.VISIBLE);\r\n        }\r\n    };\r\n\r\n    ctlProto.getLayerUIElements = function () {\r\n        const self = this;\r\n        return Array.from(self.div.querySelectorAll(`ul > li.${self.CLASS}-elm`));\r\n    };\r\n\r\n    ctlProto.addLayerToolUI = function (elm, tool) {\r\n        const self = this;\r\n        if (TC.Util.isFunction(tool.renderFn)) {\r\n            const button = tool.renderFn(elm.querySelector(`.${self.CLASS}-tools`), elm.dataset.layerId);\r\n            if (button) {\r\n                if (TC.Util.isFunction(tool.actionFn)) {\r\n                    button.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                        e.preventDefault();\r\n                        tool.actionFn.call(button);\r\n                    });\r\n                }\r\n                if (TC.Util.isFunction(tool.updateFn) && tool.updateEvents) {\r\n                    map.on(tool.updateEvents.join(' '), function (e) {\r\n                        if (!e.layer || e.layer.id === button.dataset.layerId) {\r\n                            tool.updateFn.call(button, e);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.addLayerTool = function (options) {\r\n        const self = this;\r\n        self.layerTools.push(options);\r\n        self.getLayerUIElements().forEach(function (elm) {\r\n            self.addLayerToolUI(elm, options);\r\n        });\r\n    };\r\n})();"]}