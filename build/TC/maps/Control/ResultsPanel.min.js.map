{"version":3,"sources":["control/ResultsPanel.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","RESULTTOOLTIP","RESULTTOOLTIPEND","DRAWCHART","DRAWTABLE","RESULTSPANELMIN","RESULTSPANELMAX","RESULTSPANELCLOSE","ResultsPanel","apply","this","arguments","wrap","data","classes","FA","SHOW_IN","SHOW_OUT","contentType","TABLE","fnOpen","prototype","openTable","collapsedClass","CHART","openChart","content","Util","isEmptyObject","options","toUpperCase","chart","table","save","inherit","ctlProto","CLASS","template","CHART_SIZE","MIN_HEIGHT","MAX_HEIGHT","MIN_WIDTH","MEDIUM_WIDTH","MAX_WIDTH","isDebug","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","s","get","block","body_1","body_2","f","getPath","body_3","on","x","else","isElementVisible","elm","computedStyle","getComputedStyle","hidden","display","visibility","isVisible","bodyElm","div","querySelector","maximizeElm","isMinimized","manageClassList","classElement","toAdd","toRemove","classList","add","remove","show","style","call","hide","doVisible","HIDDEN","render","callback","self","mainTitleElm","minimizeButton","addEventListener","minimize","closeButton","close","maximizeButton","maximize","saveButton","exportToExcel","removeAttribute","titles","main","setAttribute","innerHTML","max","getLocaleString","infoDiv","tableDiv","menuDiv","browserFeatures","touch","swipe","left","collapsedElm","map","trigger","destroy","body","getControlsByClass","filter","ctl","forEach","msg","toast","elevationProfileCoordinates","coords","renderElevationProfileChart","getLoadingIndicator","loadJS","window","c3","url","D3C3","ele","val","locale","getMapLocale","getRenderedHtml","upHill","toLocaleString","downHill","out","titleElm","chartOptions","extend","bindto","padding","top","right","bottom","legend","createChartOptions","tooltip","contents","d","fn","getFNFromString","eval","onmouseout","onrendered","isFunction","_onrendered","svg","_isOverriden","internal","generateDrawLine","lineIndices","isSub","$$","config","line","d3","getPoints","generateGetLinePoints","yScaleGetter","getSubYScale","getYScale","xValue","subxx","xx","yValue","i","data_groups","length","id","value","axis_rotated","y","line_connectNull","defined","path","values","filterRemoveNull","subX","x0","y0","isLineType","data_regions","lineWithRegions","isStepType","convertValuesToStep","interpolate","generateDrawArea","areaIndices","area","generateGetAreaPoints","value0","value1","x1","y1","isAreaType","generate","closeOpenedTableResultsPanel","css","columns","k","push","tableData","results","then","html","parent","parentElement","removeChild","appendChild","open","container","toCheck","requestIsRendered","requestAnimationFrame","clientRect","getBoundingClientRect","width","cancelAnimationFrame","bind","tableElm","getTableContainer","collapsed","result","chartType","getChartSize","docWidth","document","documentElement","clientWidth","height","maxHeight","minHeight","maxWidth","mediumWidth","minWidth","maxy","Number","NEGATIVE_INFINITY","miny","POSITIVE_INFINITY","Math","min","gradId","getUID","concat","types","colors","size","point","axis","tick","outer","count","format","dist","measure","round","parseInt","toFixed","onresize","api","resize","time","slice","m","svgDefsElement","getElementsByTagName","xmlns","grad","createElementNS","setAttributeNS","stop0","stop50","stop100","d3Node","select","node","parentNode","selectAll","e","stopPropagation","index","feature","Point","zoomToFeatures","pattern","attr","exec","replace","svgRect","chartSize","setMultilineLabels","scale","ordinal","rangeRoundBands","textNode","each","d3text","childNodes","clone","cloneNode","words","text","split","textContent","dy","getAttribute","parseFloat","rangeBand","elevationChartLabelsRAF","undefined","hasSize","getTime","timeFrom","timeTo","diff","daysDifference","floor","hoursDifference","minutesDifference","toString","getElevationChartTooltip","distance","p","doneTime","getInfoContainer","getMenuElement","getContainerElement","openOn","one","args","closeOn","_ctl","rows","row","hasOwnProperty","_fncSave","exporter","fileName","title","Save","ExcelExport"],"mappings":"AACAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGK,OAAOC,MAAMC,cAAgB,mBAChCP,GAAGK,OAAOC,MAAME,iBAAmB,sBACnCR,GAAGK,OAAOC,MAAMG,UAAY,eAC5BT,GAAGK,OAAOC,MAAMI,UAAY,eAC5BV,GAAGK,OAAOC,MAAMK,gBAAkB,qBAClCX,GAAGK,OAAOC,MAAMM,gBAAkB,qBAClCZ,GAAGK,OAAOC,MAAMO,kBAAoB,uBAEpCb,GAAGC,QAAQa,aAAe,WAGtBd,GAAGE,QAAQa,MAFAC,KAEYC,WAFZD,KAINE,KAAO,IAAIlB,GAAGkB,KAAKjB,QAAQa,aAJrBE,MAAAA,KAMNG,KAAO,GANDH,KAONI,QAAU,CACXC,GAAI,KACJC,QAAS,SACTC,SAAU,WAVHP,KAaNQ,YAAc,CACfC,MAAO,CACHC,OAAQ1B,GAAGC,QAAQa,aAAaa,UAAUC,UAC1CC,eAAgB,gBAEpBC,MAAO,CACHJ,OAAQ1B,GAAGC,QAAQa,aAAaa,UAAUI,UAC1CF,eAAgB,mBApBbb,KAwBNgB,QAxBMhB,KAwBSQ,YAAYC,MAE5BzB,GAAGiC,KAAKC,cA1BDlB,KA0BoBmB,WA1BpBnB,KA2BFmB,QAAU,CAAEH,QAAS,UA3BnBhB,KA8BFmB,QA9BEnB,KA+BEmB,QAAQH,UA/BVhB,KAgCEgB,QAhCFhB,KAgCiBQ,YAhCjBR,KAgCkCmB,QAAQH,QAAQI,gBAhClDpB,KAkCEmB,QAAQE,QAlCVrB,KAmCEqB,MAnCFrB,KAmCemB,QAAQE,OAnCvBrB,KAqCEmB,QAAQG,QArCVtB,KAsCEsB,MAtCFtB,KAsCemB,QAAQG,OAtCvBtB,KAwCEmB,QAAQI,OAxCVvB,KAyCEuB,KAzCFvB,KAyCcmB,QAAQI,OAIrCvC,GAAGwC,QAAQxC,GAAGC,QAAQa,aAAcd,GAAGE,UAEvC,WAEI,MAAMuC,SAAWzC,GAAGC,QAAQa,aAAaa,UAEzCc,SAASC,MAAQ,mBAEjBD,SAASE,SAAW,GAEpBF,SAASG,WAAa,CAClBC,WAAY,GACZC,WAAY,IAEZC,UAAW,IACXC,aAAc,IACdC,UAAW,KAGf,GAAIjD,GAAGkD,QAAS,CACZT,SAASE,SAASF,SAASC,OAAS1C,GAAGI,YAAc,iCACrDqC,SAASE,SAASF,SAASC,MAAQ,UAAY1C,GAAGI,YAAc,sCAChEqC,SAASE,SAASF,SAASC,MAAQ,UAAY1C,GAAGI,YAAc,0CAC7D,CACHqC,SAASE,SAASF,SAASC,OAAS,WAAcS,KAAKC,SAASX,SAASC,MAAOW,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,0TAAyUC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,UAAWF,EAAE,4IAAkJC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,SAAUF,EAAE,0JAAgKC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,iBAAkBF,EAAE,8cAAkeC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,WAAYF,EAAE,6FAAqGH,EAAOM,YAAa,EAAI,OAAON,GAClhDZ,SAASE,SAASF,SAASC,MAAQ,UAAY,WAAcS,KAAKC,SAASX,SAASC,MAAQ,SAAUW,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,sDAA0DI,EAAEL,EAAIM,IAAI,CAAC,YAAY,GAAQN,EAAK,CAAEO,MAASC,GAAU,IAAIP,EAAE,mBAAmBI,EAAEL,EAAIM,IAAI,CAAC,YAAY,GAAQN,EAAK,CAAEO,MAASE,GAAU,IAAIR,EAAE,oBAAuBH,EAAOM,YAAa,EAAI,SAASI,EAAOT,EAAKC,GAAO,OAAOD,EAAIE,EAAE,QAAQS,EAAEV,EAAIW,SAAQ,EAAM,IAAKX,EAAK,KAAKC,EAAE,SAAYO,EAAOJ,YAAa,EAAI,SAASK,EAAOV,EAAKC,GAAO,OAAOD,EAAIE,EAAE,QAAQC,EAAE,UAAWF,EAAK,CAAEO,MAASK,GAAU,CAAEC,GAAMb,EAAIW,SAAQ,EAAM,MAAOV,EAAE,SAAYQ,EAAOL,YAAa,EAAI,SAASQ,EAAOb,EAAKC,GAAO,OAAOD,EAAIE,EAAE,QAAQS,EAAEV,EAAIM,IAAI,CAAC,UAAU,GAAQN,EAAK,KAAKC,EAAE,SAAYW,EAAOR,YAAa,EAAI,OAAON,GAChzBZ,SAASE,SAASF,SAASC,MAAQ,UAAY,WAAcS,KAAKC,SAASX,SAASC,MAAQ,SAAUW,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,gCAAkCa,EAAEd,EAAIM,IAAI,CAAC,QAAQ,GAAQN,EAAK,CAAEe,KAAQP,EAAQD,MAASE,GAAU,IAAIR,EAAE,UAAaH,EAAOM,YAAa,EAAI,SAASI,EAAOT,EAAKC,GAAO,OAAOD,EAAIE,EAAE,8BAAgCC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,gCAAiCF,EAAE,OAAOS,EAAEV,EAAIM,IAAI,CAAC,WAAW,GAAQN,EAAK,KAAKC,EAAE,QAAQS,EAAEV,EAAIM,IAAI,CAAC,aAAa,GAAQN,EAAK,KAAKC,EAAE,wCAA6CO,EAAOJ,YAAa,EAAI,SAASK,EAAOV,EAAKC,GAAO,OAAOD,EAAIW,EAAEV,EAAIM,IAAI,CAAC,QAAQ,GAAQN,EAAK,KAAQS,EAAOL,YAAa,EAAI,OAAON,GAG/sB,MAAMkB,iBAAmB,SAAUC,GAC/B,MAAMC,EAAgBC,iBAAiBF,GACvC,OAAQA,IAAQA,EAAIG,QAAoC,SAA1BF,EAAcG,SAAmD,WAA7BH,EAAcI,YAGpFpC,SAASqC,UAAY,WACjB,MACMC,EADO/D,KACQgE,IAAIC,cAAc,mBACjCC,EAFOlE,KAEYgE,IAAIC,cAAc,oBAC3C,OAAOV,iBAAiBQ,IAAYR,iBAAiBW,IAGzDzC,SAAS0C,YAAc,WACnB,MACMJ,EADO/D,KACQgE,IAAIC,cAAc,mBACjCC,EAFOlE,KAEYgE,IAAIC,cAAc,oBAC3C,OAAOV,iBAAiBW,KAAiBX,iBAAiBQ,IAG9D,MAAMK,gBAAkB,SAAUC,EAAcC,EAAOC,GACnD,MAEMf,EAFOxD,KAEIgE,IAAIC,cAAc,IAAMI,GACzC,GAAIb,EAAK,CACLA,EAAIgB,UAAUC,IAAIH,GAClBd,EAAIgB,UAAUE,OAAOH,KAI7B9C,SAASkD,KAAO,SAAUN,GACtB,MAEMb,EAFOxD,KAEIgE,IAAIC,cAAc,IAAMI,GACrCb,GAA6B,SAAtBA,EAAIoB,MAAMhB,UACjBJ,EAAIoB,MAAMhB,QAAU,IAGxBQ,gBAAgBS,KAPH7E,KAOcqE,EAPdrE,KAOiCI,QAAQE,QAPzCN,KAOuDI,QAAQG,WAGhFkB,SAASqD,KAAO,SAAUT,GAGtBD,gBAAgBS,KAFH7E,KAEcqE,EAFdrE,KAEiCI,QAAQG,SAFzCP,KAEwDI,QAAQE,SAE7E,MAAMkD,EAJOxD,KAIIgE,IAAIC,cAAc,IAAMI,GACrCb,IACAA,EAAIoB,MAAMhB,QAAU,SAI5BnC,SAASsD,UAAY,WACJ/E,KAERgE,IAAIQ,UAAUE,OAAO1F,GAAGK,OAAOe,QAAQ4E,QAF/BhF,KAGR2E,KAAK,mBAGdlD,SAASwD,OAAS,SAAUC,GACxB,MAAMC,EAAOnF,KAEbmF,EAAKnB,IAAIQ,UAAUC,IAAIzF,GAAGK,OAAOe,QAAQ4E,QAEzC,OAAOhG,GAAGE,QAAQyB,UAAUsE,OAAOJ,KAAKM,EAAM,WAE1CA,EAAKC,aAAeD,EAAKnB,IAAIC,cAAc,uBAE3CkB,EAAKE,eAAiBF,EAAKnB,IAAIC,cAAc,kCAC7CkB,EAAKE,eAAeC,iBAAiB,QAAS,WAC1CH,EAAKI,aAGTJ,EAAKK,YAAcL,EAAKnB,IAAIC,cAAc,oCAC1CkB,EAAKK,YAAYF,iBAAiB,QAAS,WACvCH,EAAKM,UAGTN,EAAKO,eAAiBP,EAAKnB,IAAIC,cAAc,oBAC7CkB,EAAKO,eAAeJ,iBAAiB,QAAS,WAC1CH,EAAKQ,aAGT,GAAIR,EAAK5D,KAAM,CACX4D,EAAKS,WAAaT,EAAKnB,IAAIC,cAAc,kCACzCkB,EAAKS,WAAWN,iBAAiB,QAAS,WACtCH,EAAKU,kBAETV,EAAKS,WAAWE,gBAAgB,UAGpC,GAAIX,EAAKnE,QAAS,CACdmE,EAAKnE,QAAUmE,EAAKnE,QAEpB,GAAImE,EAAKhE,QAAQ4E,OAAQ,CAErB,GAAIZ,EAAKhE,QAAQ4E,OAAOC,KAAM,CAC1Bb,EAAKC,aAAaa,aAAa,QAASd,EAAKhE,QAAQ4E,OAAOC,MAC5Db,EAAKC,aAAac,UAAYf,EAAKhE,QAAQ4E,OAAOC,KAGlDb,EAAKhE,QAAQ4E,OAAOI,KACpBhB,EAAKO,eAAeO,aAAa,QAASd,EAAKhE,QAAQ4E,OAAOI,SAE/D,CACHhB,EAAKC,aAAaa,aAAa,QAASd,EAAKiB,gBAAgB,cAC7DjB,EAAKC,aAAac,UAAYf,EAAKiB,gBAAgB,cAItCjB,EAAKnB,IAAIC,cAAckB,EAAKnE,QAAQH,gBAE5C2D,UAAUC,IAAIU,EAAK/E,QAAQC,IAExC8E,EAAKkB,QAAUlB,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,SACzDyD,EAAKmB,SAAWnB,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,UAE1DyD,EAAKoB,QAAUpB,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,SAErD1C,GAAGwH,gBAAgBC,SACnBzH,GAAGiC,KAAKyF,MAAMvB,EAAKnB,IAAK,CACpB2C,KAAM,WACFxB,EAAKI,cAKbL,GAAkC,mBAAf,GACnBA,EAASL,UAIrBpD,SAAS8D,SAAW,WAChB,MAAMJ,EAAOnF,KAEP4G,EAAezB,EAAKnB,IAAIC,cAAckB,EAAKnE,QAAQH,gBACzD,IAAK0C,iBAAiBqD,GAAe,CACjCA,EAAapC,UAAUC,IAAIU,EAAK/E,QAAQC,IACxCuG,EAAajD,QAAS,EAEtBwB,EAAKL,KAAK,kBACVK,EAAKR,KAAK,mBAEVQ,EAAK0B,IAAIC,QAAQ9H,GAAGK,OAAOC,MAAMK,gBAAiB,CAAEV,QAASkG,MAIrE1D,SAASkE,SAAW,WAChB,MAAMR,EAAOnF,KAEP4G,EAAezB,EAAKnB,IAAIC,cAAckB,EAAKnE,QAAQH,gBACzD,GAAI0C,iBAAiBqD,GAAe,CAChCA,EAAajD,QAAS,EAEtBwB,EAAKR,KAAK,kBACVQ,EAAKL,KAAK,mBAEVK,EAAK0B,IAAIC,QAAQ9H,GAAGK,OAAOC,MAAMM,gBAAiB,CAAEX,QAASkG,MAIrE1D,SAASgE,MAAQ,WACb,MAAMN,EAAOnF,KAEbmF,EAAKnB,IAAIQ,UAAUC,IAAIzF,GAAGK,OAAOe,QAAQ4E,QAErCG,EAAK9D,OAAS8D,EAAK9D,MAAMA,QACzB8D,EAAK9D,MAAMA,MAAQ8D,EAAK9D,MAAMA,MAAM0F,WAGxC,MAAMC,EAAO7B,EAAKnB,IAAIC,cAAc,mBACpC,GAAI+C,EAAM,CACNA,EAAKpC,MAAMhB,QAAU,OACrBuB,EAAKnB,IAAIC,cAAc,oBAAoBW,MAAMhB,QAAU,OAE3D,MAAMgD,EAAezB,EAAKnB,IAAIC,cAAckB,EAAKnE,QAAQH,gBACzD+F,EAAajD,QAAS,EACtBiD,EAAapC,UAAUE,OAAOS,EAAK/E,QAAQC,IAE3C8E,EAAK0B,IAAIC,QAAQ9H,GAAGK,OAAOC,MAAMO,kBAAmB,CAAEZ,QAASkG,MAIvE1D,SAASV,UAAY,SAAUZ,GAC3B,MAAMgF,EAAOnF,KAEbmF,EAAKnB,IAAIQ,UAAUE,OAAO1F,GAAGK,OAAOe,QAAQ4E,QAG5CG,EAAK0B,IAAII,mBAAmBjI,GAAGC,QAAQa,cAClCoH,OAAO,SAAUC,GACd,OAAOA,IAAQhC,IAElB+B,OAAO,SAAUC,GACd,MAA+B,UAAxBA,EAAIhG,QAAQH,UAEtBoG,QAAQ,SAAUD,GACfA,EAAI1B,UAGZ,GAAItF,EAEA,GAAIA,EAAKkH,IACLlC,EAAK0B,IAAIS,MAAMnH,EAAKkH,SAEnB,CACDlC,EAAKoC,4BAA8BpH,EAAKqH,OACxCrC,EAAKsC,4BAA4B,CAC7BtH,KAAMA,EACN6D,IAAKmB,EAAKnB,IAAIC,cAAc,IAAMxC,SAASC,MAAQ,iBAI3DyD,EAAK0B,IAAIS,MAAMnG,QAAQkG,KAG3BlC,EAAK0B,IAAIa,sBAAsB5C,QAGnCrD,SAASgG,4BAA8B,SAAUtG,SAC7C,MAAMgE,KAAOnF,KACbmB,QAAUA,SAAW,GACrBnC,GAAG2I,QAAQC,OAAOC,GACd7I,GAAGK,OAAOyI,IAAIC,MAAQ/I,GAAGI,YAAc,uBACvC,WACI,MAAMe,KAAOgB,QAAQhB,KACrBA,KAAK6H,IAAM7H,KAAK6H,IAAInB,IAAIoB,GAAe,OAARA,EAAe,EAAIA,GAClD,MAAMjE,IAAM7C,QAAQ6C,IACpB,IAAIkE,OAASlJ,GAAGiC,KAAKkH,aAAahD,KAAK0B,KACvC1B,KAAKiD,gBAAgB3G,SAASC,MAAQ,SAAU,CAC5C2G,OAAQlI,KAAKkI,OAASlI,KAAKkI,OAAOC,eAAeJ,QAAU,IAC3DK,SAAUpI,KAAKoI,SAAWpI,KAAKoI,SAASD,eAAeJ,QAAU,KAClE,SAAUM,KAETxE,IAAIkC,UAAYsC,IAChBxE,IAAIY,MAAMhB,QAAU,GAEpB,GAAIuB,KAAKhE,QAAQ4E,OAAQ,CAErB,GAAIZ,KAAKhE,QAAQ4E,OAAOC,KAAM,CAC1B,MAAMyC,EAAWtD,KAAKnB,IAAIC,cAAc,uBACxCwE,EAASxC,aAAa,QAASd,KAAKhE,QAAQ4E,OAAOC,MACnDyC,EAASvC,UAAYf,KAAKhE,QAAQ4E,OAAOC,KAGzCb,KAAKhE,QAAQ4E,OAAOI,KACpBhB,KAAKnB,IAAIC,cAAc,oBAAoBgC,aAAa,QAASd,KAAKhE,QAAQ4E,OAAOI,KAG7F,IAAIuC,aAAe1J,GAAGiC,KAAK0H,OAAO,CAC9BC,OAAQ5E,IAAIC,cAAc,aAC1B4E,QAAS,CACLC,IAAK,EACLC,MAAO,GACPC,OAAQ,EACRrC,KAAM,IAEVsC,OAAQ,CACJtE,MAAM,IAEXQ,KAAK+D,mBAAmB/I,OAEvBgF,KAAK9D,MAAM8H,UACXT,aAAaS,QAAU,CACnBC,SAAU,SAAUC,GAChB,IAAIC,GAAKnE,KAAK9D,MAAM8H,QACA,mBAAT,KACPG,GAAKtK,GAAGiC,KAAKsI,gBAAgBpE,KAAK9D,MAAM8H,UAC5C,OAAOG,GAAGzE,KAAK2E,KAAKrE,KAAK9D,MAAMkB,KAAM8G,MAK7ClE,KAAK9D,OAAS8D,KAAK9D,MAAMoI,aACzBf,aAAae,WAAa,WACtB,IAAIH,GAAKnE,KAAK9D,MAAMoI,WACA,mBAAT,KACPH,GAAKtK,GAAGiC,KAAKsI,gBAAgBpE,KAAK9D,MAAMoI,aAC5CH,GAAGzE,KAAK2E,KAAKrE,KAAK9D,MAAMkB,QAIhCmG,aAAagB,WAAa,WAClB1K,GAAGiC,KAAK0I,WAAWjB,aAAakB,cAChClB,aAAakB,YAAY/E,KAAK7E,MAElCmF,KAAK0B,IAAIC,QAAQ9H,GAAGK,OAAOC,MAAMG,UAAW,CAAER,QAASkG,KAAM0E,IAAK7J,KAAK6J,IAAI,GAAG,GAAIxI,MAAOrB,QAG7F,GAAI4H,OAAOC,GAAI,CAEX,IAAKA,GAAGiC,aAAc,CAElBlC,OAAOC,GAAGxG,MAAM0I,SAAST,GAAGU,iBAAmB,SAAUC,EAAaC,GAClE,IAAIC,EAAKnK,KAAMoK,EAASD,EAAGC,OACvBC,EAAOF,EAAGG,GAAGT,IAAIQ,OACjBE,EAAYJ,EAAGK,sBAAsBP,EAAaC,GAClDO,EAAeP,EAAQC,EAAGO,aAAeP,EAAGQ,UAC5CC,EAAS,SAAUvB,GAAK,OAAQa,EAAQC,EAAGU,MAAQV,EAAGW,IAAIjG,KAAKsF,EAAId,IACnE0B,EAAS,SAAU1B,EAAG2B,GAClB,OAAOZ,EAAOa,YAAYC,OAAS,EAAIX,EAAUlB,EAAG2B,GAAG,GAAG,GAAKP,EAAa5F,KAAKsF,EAAId,EAAE8B,GAAxBV,CAA4BpB,EAAE+B,QAErGf,EAAOD,EAAOiB,aAAehB,EAAKhH,EAAE0H,GAAQO,EAAEV,GAAUP,EAAKhH,EAAEuH,GAAQU,EAAEP,GACpEX,EAAOmB,mBAAoBlB,EAAOA,EAAKmB,QAAQ,SAAUnC,GAAK,OAAkB,MAAXA,EAAE+B,SAC5E,OAAO,SAAU/B,GACb,IACiFoC,EAD7EC,EAAStB,EAAOmB,iBAAmBpB,EAAGwB,iBAAiBtC,EAAEqC,QAAUrC,EAAEqC,OACrErI,EAAI6G,EAAQC,EAAG9G,EAAI8G,EAAGyB,KAAMN,EAAIb,EAAa5F,KAAKsF,EAAId,EAAE8B,IAAKU,EAAK,EAAGC,EAAK,EAC9E,GAAI3B,EAAG4B,WAAW1C,GACd,GAAIe,EAAO4B,aAAa3C,EAAE8B,IACtBM,EAAOtB,EAAG8B,gBAAgBP,EAAQrI,EAAGiI,EAAGlB,EAAO4B,aAAa3C,EAAE8B,SAC3D,CACChB,EAAG+B,WAAW7C,KAAMqC,EAASvB,EAAGgC,oBAAoBT,IACxDD,EAAOpB,EAAK+B,YAAY,SAAjB/B,CAA2BqB,OAEnC,CACH,GAAIA,EAAO,GAAI,CACXG,EAAKxI,EAAEqI,EAAO,GAAGrI,GACjByI,EAAKR,EAAEI,EAAO,GAAGN,OAErBK,EAAOrB,EAAOiB,aAAe,KAAOS,EAAK,IAAMD,EAAK,KAAOA,EAAK,IAAMC,EAE1E,OAAOL,GAAc,UAG7B7D,OAAOC,GAAGxG,MAAM0I,SAAST,GAAG+C,iBAAmB,SAAUC,EAAapC,GAClE,IAAIC,EAAKnK,KAAMoK,EAASD,EAAGC,OAAQmC,EAAOpC,EAAGG,GAAGT,IAAI0C,OAChDhC,EAAYJ,EAAGqC,sBAAsBF,EAAapC,GAClDO,EAAeP,EAAQC,EAAGO,aAAeP,EAAGQ,UAC5CC,EAAS,SAAUvB,GAAK,OAAQa,EAAQC,EAAGU,MAAQV,EAAGW,IAAIjG,KAAKsF,EAAId,IACnEoD,EAAS,SAAUpD,EAAG2B,GAClB,OAAOZ,EAAOa,YAAYC,OAAS,EAAIX,EAAUlB,EAAG2B,GAAG,GAAG,GAAKP,EAAa5F,KAAKsF,EAAId,EAAE8B,GAAxBV,CAA4B,IAE/FiC,EAAS,SAAUrD,EAAG2B,GAClB,OAAOZ,EAAOa,YAAYC,OAAS,EAAIX,EAAUlB,EAAG2B,GAAG,GAAG,GAAKP,EAAa5F,KAAKsF,EAAId,EAAE8B,GAAxBV,CAA4BpB,EAAE+B,QAErGmB,EAAOnC,EAAOiB,aAAekB,EAAKV,GAAGY,GAAQE,GAAGD,GAAQpB,EAAEV,GAAU2B,EAAKlJ,EAAEuH,GAAQkB,GAAGW,GAAQG,GAAGF,GAC5FtC,EAAOmB,mBACRgB,EAAOA,EAAKf,QAAQ,SAAUnC,GAAK,OAAmB,OAAZA,EAAE+B,SAEhD,OAAO,SAAU/B,GACb,IACoBoC,EADhBC,EAAStB,EAAOmB,iBAAmBpB,EAAGwB,iBAAiBtC,EAAEqC,QAAUrC,EAAEqC,OACrEG,EAAK,EAAGC,EAAK,EACjB,GAAI3B,EAAG0C,WAAWxD,GAAI,CACdc,EAAG+B,WAAW7C,KAAMqC,EAASvB,EAAGgC,oBAAoBT,IACxDD,EAAOc,EAAKH,YAAY,SAAjBG,CAA2Bb,OAC/B,CACH,GAAIA,EAAO,GAAI,CACXG,EAAK1B,EAAG9G,EAAEqI,EAAO,GAAGrI,GACpByI,EAAK3B,EAAGQ,UAAUtB,EAAE8B,GAAfhB,CAAmBuB,EAAO,GAAGN,OAEtCK,EAAOrB,EAAOiB,aAAe,KAAOS,EAAK,IAAMD,EAAK,KAAOA,EAAK,IAAMC,EAE1E,OAAOL,GAAc,UAG7B5D,GAAGiC,cAAe,EAGtB3E,KAAK9D,MAAMA,MAAQwG,GAAGiF,SAASpE,oBAOnD,MAAMqE,6BAA+B,WACjC,MAAM5H,EAAOnF,KAEbmF,EAAK0B,IAAII,mBAAmBjI,GAAGC,QAAQa,cAClCoH,OAAO,SAAUC,GACd,OAAOA,IAAQhC,GAAQgC,EAAIrD,cAE9BoD,OAAO,SAAUC,GACd,OAAOA,EAAIhG,QAAQH,UAAYmE,EAAK3E,YAAYM,QAEnDsG,QAAQ,SAAUD,GACfA,EAAI1B,WAIhBhE,SAASb,UAAY,WACjB,IAAIuE,EAAOnF,KAEXmF,EAAKnB,IAAIQ,UAAUE,OAAO1F,GAAGK,OAAOe,QAAQ4E,QAG5C,GADI7E,EAAOF,UAAU,GACX,CAEN,IAAI+M,EACA7M,EAAK6M,MACLA,EAAM7M,EAAK6M,KAEf,IAC4B7M,EADxB+E,EAAW/E,EAAK+E,SAChB+H,EAAU9M,EAAK8M,QAEnB,IAF4B9M,EAAOA,EAAKA,OAE5BA,EAAK+K,OAAS,EAAG,CAEzB,IAAK+B,EAAS,CACVA,EAAU,GACV,IAAK,IAAIC,KAAK/M,EAAK,GACf8M,EAAQE,KAAKD,GAMrB/H,EAAKiI,UAAY,CACbH,QAASA,EACTI,QAASlN,EACT6M,IAAKA,EACL9H,SAAUA,GAEdC,EAAKiD,gBAAgBjD,EAAKzD,MAAQ,SAAUyD,EAAKiI,WAAWE,KAAK,SAAUC,GACvE,MAAMjM,EAAQ6D,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,UAClD8L,EAASlM,EAAMmM,cACrBD,EAAOE,YAAYpM,GACnBA,EAAM4E,UAAYqH,EAClBC,EAAOG,YAAYrM,GACf6D,EAAKiI,UAAUlI,UACfC,EAAKiI,UAAUlI,SAAS5D,GAG5ByL,6BAA6BlI,KAAKM,GAElCA,EAAK0B,IAAIC,QAAQ9H,GAAGK,OAAOC,MAAMI,UAAW,CAAET,QAASkG,MAG3DA,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,UAAUkD,MAAMhB,QAAU,OACpEuB,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,SAASkD,MAAMhB,QAAU,OAEnEuB,EAAKR,KAAK,mBAIlBQ,EAAK0B,IAAIa,sBAAsB5C,QAInCrD,SAASmM,KAAO,SAAUL,EAAMM,GAC5B,MAAM1I,EAAOnF,KAEbmF,EAAKnB,IAAIQ,UAAUE,OAAO1F,GAAGK,OAAOe,QAAQ4E,QAE5C,MAAM8I,EAAUD,GAAa1I,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,UAWvEyD,EAAK4I,kBAAoBnG,OAAOoG,sBAVV,WAClB,IAAIC,EAAaH,EAAQI,wBACzB,GAAID,GAAcA,EAAWE,MAAQ,IAAK,CACtCvG,OAAOwG,qBAAqBpO,KAAK+N,mBAGjC/N,KAAK6G,IAAIC,QAAQ9H,GAAGK,OAAOC,MAAMI,UAAW,CAAET,QAASkG,MAIOkJ,KAAKlJ,IAE1DA,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,UAClDkD,MAAMhB,QAAU,OACzB,MAAM0K,EAAWnJ,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,UAC3D4M,EAAS1J,MAAMhB,QAAU,OACTuB,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,SAClDkD,MAAMhB,QAAU,OAExB,GAAI2J,EACA,GAAIM,EAAW,CACX1I,EAAKoJ,kBAAoB,WACrB,OAAOV,GAEXA,EAAU3H,UAAYqH,EACtBM,EAAUjJ,MAAMhB,QAAU,OACvB,CACH0K,EAASpI,UAAYqH,EACrBe,EAAS1J,MAAMhB,QAAU,GAIjC,MAAMM,EAAciB,EAAKnB,IAAIC,cAAc,oBAE3C,GAAIkB,EAAKhE,QAAQ4E,OAAQ,CAErB,GAAIZ,EAAKhE,QAAQ4E,OAAOC,KAAM,CAC1B,MAAMyC,EAAWtD,EAAKnB,IAAIC,cAAc,uBACxCwE,EAASxC,aAAa,QAASd,EAAKhE,QAAQ4E,OAAOC,MACnDyC,EAASvC,UAAYf,EAAKhE,QAAQ4E,OAAOC,KAGzCb,EAAKhE,QAAQ4E,OAAOI,KACpBjC,EAAY+B,aAAa,QAASd,EAAKhE,QAAQ4E,OAAOI,KAI1DhB,EAAKhE,QAAQf,SACT+E,EAAKhE,QAAQf,QAAQoO,WACrBtK,EAAYD,cAAc,iBAAiBO,UAAUC,IAAIU,EAAKhE,QAAQf,QAAQoO,WAKtF,MAAM5H,EAAezB,EAAKnB,IAAIC,cAAckB,EAAKnE,QAAQH,gBACrD0C,iBAAiBqD,IACjBzB,EAAKQ,WAGTR,EAAKR,KAAK,kBACVQ,EAAKL,KAAK,mBAEVK,EAAK0B,IAAIa,sBAAsB5C,QAGnCrD,SAASyH,mBAAqB,SAAU/H,GACpC,MAAMgE,EAAOnF,KACb,IAAIyO,EAAS,GAEb,MAAMvG,GADN/G,EAAUA,GAAW,IACE+G,QAAUlJ,GAAGiC,KAAKkH,aAAahD,EAAK0B,KACnD1F,EAAQuN,UAER,GAAmB,MAAfvN,EAAQ6G,IAAa,CACrB,MAAM2G,EAAe,WACjB,MAAMC,EAAWC,SAASC,gBAAgBC,YAAc,IAAM,GAC9D,MAAO,CACHC,OAAQJ,EAAW,IAAMzN,EAAQ8N,WAAa9J,EAAKvD,WAAWE,WAAaX,EAAQ+N,WAAa/J,EAAKvD,WAAWC,WAChHsM,MAAOS,EAAW,IAAMzN,EAAQgO,UAAYhK,EAAKvD,WAAWK,UAAY2M,EAAW,IAAMzN,EAAQiO,aAAejK,EAAKvD,WAAWI,aAAeb,EAAQkO,UAAYlK,EAAKvD,WAAWG,YAI3L,IAAIuN,EAAOC,OAAOC,kBACdC,EAAOF,OAAOG,kBAClBvO,EAAQ6G,IAAIZ,QAAQ,SAAUkE,GAC1B,GAAiB,iBAANA,EAAgB,CACvBgE,EAAOK,KAAKxJ,IAAImF,EAAGgE,GACnBG,EAAOE,KAAKC,IAAItE,EAAGmE,MAI3B,MAAMI,EAAS,OAAS7Q,GAAG8Q,SAE3BrB,EAAS,CACLtO,KAAM,CACFkD,EAAG,IACH4J,QAAS,CAAC,CAAC,KAAK8C,OAAO5O,EAAQkC,GAAI,CAAC,OAAO0M,OAAO5O,EAAQ6G,MAC1DgI,MAAO,CAAEhI,IAAO,eAAiBiI,OAAQ,CACrCjI,IAAO,QAAU6H,EAAS,MAGlCK,KAAMvB,IACNwB,MAAO,CACHxL,MAAM,GAEVyL,KAAM,CACF/M,EAAG,CACCgN,KAAM,CACFC,OAAO,EACPC,MAAO,EAAGC,OAAQ,SAAUnH,GAExB,IAAIoH,EACAC,EACJ,IAHArH,GAAQ,KAGA,EAAG,CACPoH,EAAOd,KAAKgB,MAAU,IAAJtH,GAClBqH,EAAU,SACP,CACHD,EAAOd,KAAKgB,MAAU,IAAJtH,GAAW,IAC7BqH,EAAU,MAId,OADAD,EAAOA,EAAKnI,eAAeJ,IACbwI,KAI1BpF,EAAG,CACCzC,QAAS,CACLC,IAAK,EAAGE,OAAQ,GAEpB7C,IAAKmJ,EACLM,IAAKH,EACLY,KAAM,CACFE,MAAO,EACPC,OAAQ,SAAUnH,GACd,OAAQuH,SAASvH,EAAEwH,QAAQ,KAAO,GAAGvI,eAAeJ,GAAU,QAK9E4I,SAAU,WACN9Q,KAAK+Q,IAAIC,OAAOrC,OAIpBxN,EAAQ8P,OAAMxC,EAAOwC,MAAQ,QAAU9P,EAAQ8P,KAAKxO,GAAGyO,OAAO,GAAK,KAAO,QAAU/P,EAAQ8P,KAAKE,GAAGD,OAAO,GAAK,KAAO,QAAU/P,EAAQ8P,KAAKrO,GAAGsO,OAAO,IAE5JzC,EAAO7E,YAAc,WACjB,MAAMC,EAAM7J,KAAK6J,IAAI,GAAG,GACxB,IAAIuH,EAAiBvH,EAAIwH,qBAAqB,QAAQ,GAClDC,EAAQ,6BACRC,EAAO1C,SAAS2C,gBAAgBF,EAAO,kBAC3CC,EAAKE,eAAe,KAAM,KAAM5B,GAChC0B,EAAKE,eAAe,KAAM,KAAM,MAChCF,EAAKE,eAAe,KAAM,KAAM,MAChCF,EAAKE,eAAe,KAAM,KAAM,MAChCF,EAAKE,eAAe,KAAM,KAAM,QAChCF,EAAKE,eAAe,KAAM,gBAAiB,kBAE3C,MAAMC,EAAQ7C,SAAS2C,gBAAgBF,EAAO,QAC9CI,EAAMD,eAAe,KAAM,SAAU,MACrCC,EAAMD,eAAe,KAAM,aAAc,OACzCC,EAAMD,eAAe,KAAM,eAAgB,OAC3CF,EAAK5D,YAAY+D,GAEjB,MAAMC,EAAS9C,SAAS2C,gBAAgBF,EAAO,QAC/CK,EAAOF,eAAe,KAAM,SAAU,OACtCE,EAAOF,eAAe,KAAM,aAAc,UAC1CE,EAAOF,eAAe,KAAM,eAAgB,OAC5CF,EAAK5D,YAAYgE,GAEjB,MAAMC,EAAU/C,SAAS2C,gBAAgBF,EAAO,QAChDM,EAAQH,eAAe,KAAM,SAAU,QACvCG,EAAQH,eAAe,KAAM,aAAc,SAC3CG,EAAQH,eAAe,KAAM,eAAgB,KAC7CF,EAAK5D,YAAYiE,GAEjBR,EAAezD,YAAY4D,GAE3B,MAAMM,EAASvH,GAAGwH,OAAO,aAAaC,OAClCF,GACAA,EAAOG,WAAWtE,YAAYmE,GAGlCvH,GAAGwH,OAAO,0CACLG,UAAU,QACVrN,MAAM,SAAU,WAChBxB,GAAG,QAAS,SAAU8O,GACnB5H,GAAGhL,MAAM6S,kBACT,MAAMhC,EAAQhL,EAAKoC,4BAA4B2K,EAAEE,OAAOlB,MAAM,EAAG,GAC7Df,GACAnR,GAAG2I,QAAQ3I,GAAGqT,SAAYrT,GAAGqT,UAAYrT,GAAGqT,QAAQC,MAChD,CAACtT,GAAGI,YAAc,oBAClB,WACI+F,EAAK0B,IAAI0L,eAAe,CAAC,IAAIvT,GAAGqT,QAAQC,MAAMnC,SAMlE,IAAIqC,EAAUlI,GAAGwH,OAAO,sBAAsBA,OAAO,QAAQW,KAAK,KAElE,GADY,6BAA6BC,KAAKF,GACnC,CACPA,EAAUA,EAAQG,QAAQ,aAAc,OAAOA,QAAQ,iBAAkB,OACzErI,GAAGwH,OAAO,sBAAsBA,OAAO,QAAQW,KAAK,IAAKD,OACtD,CAEH,GADY,2CAA2CE,KAAKF,GACjD,CACPA,EAAUA,EAAQG,QAAQ,eAAgB,OAAOA,QAAQ,uBAAwB,OACjFrI,GAAGwH,OAAO,sBAAsBA,OAAO,QAAQW,KAAK,IAAKD,IAIjE,MAAMI,EAAU/I,EAAIqE,wBACd2E,EAAY,CACd1E,MAAOyE,EAAQzE,MACfa,OAAQ4D,EAAQ5D,QAIpB,IAAI8D,EAAqB,WACrB,IAAIzP,EAAIiH,GAAGyI,MAAMC,UAAUC,gBAAgB,CAAC,EAAGJ,EAAU1E,OAAQ,GAAI,IACrE7D,GAAGwH,OAAO,cAAcG,UAAU,8BAC7BpN,KAAK,SAAUqO,EAAU/E,GACtB+E,EAASC,KAAK,WACVD,EAASC,KAAK,SAAU9J,EAAG2B,GACvB,GAAS,GAALA,EAAJ,CAEAoI,OAAS9I,GAAGwH,OAAO9R,MAEnB,GAAwC,IAApCoT,OAAOrB,OAAOsB,WAAWnI,OAAc,CACvC,IAAIoI,EAAQF,OAAOtB,OAAO,SAASC,OAAOwB,YACtCC,EAAQJ,OAAOK,OAAOC,MAAM,KAEhCN,OAAOtB,OAAO,SAAS2B,KAAKD,EAAM,IAClCF,EAAMK,YAAcH,EAAM,GAC1B,IAAII,EAAKN,EAAMO,aAAa,MAE5BD,GADAA,EAAKA,EAAKE,WAAWR,EAAMO,aAAa,OAAS,KACvC,IAAO,KACjBP,EAAMrN,aAAa,KAAM2N,GACzBR,OAAOrB,OAAOpE,YAAY2F,UAIvCjQ,EAAE0Q,cAEb,GAAKzJ,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OA2BjD7D,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAAS0E,EAAU1E,MAAQ7D,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAChF,IAA/D7D,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAAe0E,EAAU1E,MAAQ7D,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAAS,KACzJ2E,QA7B+D,CAE/D,GAAI3N,EAAK6O,wBAAyB,CAC9BpM,OAAOwG,qBAAqBjJ,EAAK6O,yBACjC7O,EAAK6O,6BAA0BC,EAqBnC9O,EAAK6O,wBAA0BhG,sBAlB/B,SAASkG,IACL,GAAI5J,GAAGwH,OAAO,cAAc5G,SAAYZ,GAAGwH,OAAO,cAAcC,OAC5D5M,EAAK6O,wBAA0BhG,sBAAsBkG,QAEpD,GAAI5J,GAAGwH,OAAO,cAAc5G,QAAUZ,GAAGwH,OAAO,cAAcC,SAC9DzH,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,MACxDhJ,EAAK6O,wBAA0BhG,sBAAsBkG,OAClD,CACHtM,OAAOwG,qBAAqBjJ,EAAK6O,yBACjC7O,EAAK6O,6BAA0BC,GAEzB3J,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAAS0E,EAAU1E,MAAQ7D,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAC3E,IAA/D7D,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAAe0E,EAAU1E,MAAQ7D,GAAGwH,OAAO,cAAcC,OAAO7D,wBAAwBC,OAAS,KACzJ2E,OAYhB,IAAK3N,EAAKhB,cAAe,CACrBgB,EAAKR,KAAK,kBACVQ,EAAKL,KAAK,mBAIdK,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,UAAUkD,MAAMhB,QAAU,GACpEuB,EAAKnB,IAAIC,cAAc,IAAMkB,EAAKzD,MAAQ,SAASkD,MAAMhB,QAAU,SAIvE6K,EAAS,CACLpH,IAAKlC,EAAKiB,gBAAgB,6BAK1C,OAAOqI,GAGX,MAAM0F,QAAU,SAAUC,EAAUC,GAChC,IAAIC,EAAOD,EAASD,EAChB/K,EAAI,GACJkL,EAAiB5E,KAAK6E,MAAMF,EAAO,IAAO,GAAK,GAAK,IACxDA,GAAyB,IAAjBC,EAAwB,GAAK,GAAK,GAE1C,IAAIE,EAAkB9E,KAAK6E,MAAMF,EAAO,IAAO,GAAK,IACpDA,GAA0B,IAAlBG,EAAyB,GAAK,GAEtCpL,EAAE5G,EAAIgS,EAAoC,GAAjBF,EAEzB,IAAIG,EAAoB/E,KAAK6E,MAAMF,EAAO,IAAO,IACjDA,GAA4B,IAApBI,EAA2B,GAEnCrL,EAAE8H,EAAIuD,EAENrL,EAAEzG,EAAI+M,KAAK6E,MAAMF,EAAO,KAExB,OAAOtV,GAAGiC,KAAK0H,OAAO,GAAIU,EAAG,CAAEsL,UAAW,QAAUtL,EAAE5G,GAAGyO,OAAO,GAAK,KAAO,QAAU7H,EAAE8H,GAAGD,OAAO,GAAK,KAAO,QAAU7H,EAAEzG,GAAGsO,OAAO,MAGxIzP,SAASmT,yBAA2B,SAAUzU,GAC1C,MACMqH,EADOxH,KACOuH,4BACpB,IAAIsN,EAAW1U,EAAK,GAAGkD,EACvBwR,GAAsB,IAEtB,MAAMC,EAAItN,EAAOrH,EAAK,GAAGiS,OACzB,IAAI2C,EACoB,GAApBvN,EAAO,GAAG0D,QAAe1D,EAAO,GAAG,GAAK,IACxCuN,EAAWZ,QAAQ3M,EAAO,GAAG,GAAIsN,EAAE,KAGvC,MAAM5M,EAXOlI,KAWO6G,IAAI1F,QAAQ+G,QAXnBlI,KAWkC6G,IAAI1F,QAAQ+G,OAAOyK,QAAQ,IAAK,WAAQsB,EACjFjM,EAAM4I,SAASzQ,EAAK,GAAGiL,MAAMyF,QAAQ,IAAIvI,eAAeJ,GAC9D,IAAIuI,EACAC,EACJ,GAAImE,EAAW,EAAG,CACdpE,EAAOd,KAAKgB,MAAiB,IAAXkE,GAClBnE,EAAU,SACP,CACHD,EAAOd,KAAKgB,MAAiB,IAAXkE,GAAkB,IACpCnE,EAAU,MAGd,MAAO,mDAAqD1I,EAAM,wBADlEyI,EAAOA,EAAKnI,eAAeJ,IACuEwI,EAAU,kBAAoBqE,EAAW,SAAWA,EAASJ,SAAW,gBAAkB,KAGhMlT,SAAS8M,kBAAoB,WACzB,OAAOvO,KAAKsG,UAGhB7E,SAASuT,iBAAmB,WACxB,OAAOhV,KAAKqG,SAGhB5E,SAASwT,eAAiB,WACtB,OAAOjV,KAAKuG,SAGhB9E,SAASyT,oBAAsB,WAC3B,OAAOlV,KAAKgE,KAAO,MAGvBvC,SAASW,SAAW,SAAUyE,GAC1B,MAAM1B,EAAOnF,KAEPyO,EAASzP,GAAGE,QAAQyB,UAAUyB,SAASyC,KAAKM,EAAM0B,GAExD1B,EAAKjF,KAAKkC,SAASyE,GAEf1B,EAAKgQ,QACLhQ,EAAK0B,IAAIuO,IAAIjQ,EAAKgQ,OAAQ,SAAUjD,EAAGmD,GACnClQ,EAAKnE,QAAQN,OAAOmE,KAAKM,EAAM+M,EAAE/R,QAIrCgF,EAAKmQ,SACLnQ,EAAK0B,IAAIuO,IAAIjQ,EAAKmQ,QAAS,SAAUpD,EAAGmD,GACpClQ,EAAKM,UAITN,EAAKhE,QAAQgU,QACbhQ,EAAK0B,IAAIzD,GAAG+B,EAAKhE,QAAQgU,OAAQ,SAAUjD,EAAGmD,GAC1ClQ,EAAKnE,QAAQN,OAAOmE,KAAKM,EAAM+M,EAAE/R,QAIrCgF,EAAKhE,QAAQmU,SACbnQ,EAAK0B,IAAIzD,GAAG+B,EAAKhE,QAAQmU,QAAS,SAAUpD,EAAGmD,GAC3ClQ,EAAKM,UAab,OAAOgJ,GAGXhN,SAASoE,cAAgB,WACrB,IAAI0P,EAAOvV,KAEPwV,EAAO,CAACD,EAAKnI,UAAUH,SAE3BsI,EAAKnI,UAAUC,QAAQjG,QAAQ,SAAUgE,GACrC,IAAIqK,EAAM,GACV,IAAK,IAAIvI,KAAK9B,EACNA,EAAMsK,eAAexI,IAAY,OAANA,GAAoB,SAANA,GACzCuI,EAAItI,KAAK/B,EAAM8B,IAGvBsI,EAAKrI,KAAKsI,KAEd,IAAIE,EAAW,SAAUC,GACrB,IAAIC,EAAWN,EAAKhU,KAAKsU,SAAWN,EAAKhU,KAAKsU,SAAW,iBACrDC,EAASP,EAAKpU,QAAQ4E,QAAUwP,EAAKpU,QAAQ4E,OAAOC,KAAOuP,EAAKpU,QAAQ4E,OAAOC,KAAO,KAC1F4P,EAASG,KAAKF,EAAUL,EAAMM,IAE7B9W,GAAGiC,KAAK+U,YAMTL,EAAS,IAAI3W,GAAGiC,KAAK+U,aALrBhX,GAAG2I,QAAO,EAAM3I,GAAGI,YAAc,sBAAuB,WACpDuW,EAAS,IAAI3W,GAAGiC,KAAK+U,gBA/3BrC","sourcesContent":["\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.RESULTTOOLTIP = 'resulttooltip.tc';\r\nTC.Consts.event.RESULTTOOLTIPEND = 'resulttooltipend.tc';\r\nTC.Consts.event.DRAWCHART = 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = 'drawtable.tc';\r\nTC.Consts.event.RESULTSPANELMIN = 'resultspanelmin.tc';\r\nTC.Consts.event.RESULTSPANELMAX = 'resultspanelmax.tc';\r\nTC.Consts.event.RESULTSPANELCLOSE = 'resultspanelclose.tc';\r\n\r\nTC.control.ResultsPanel = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.wrap = new TC.wrap.control.ResultsPanel(self);\r\n\r\n    self.data = {};\r\n    self.classes = {\r\n        FA: 'fa',\r\n        SHOW_IN: 'showIn',\r\n        SHOW_OUT: 'showOut'\r\n    };\r\n\r\n    self.contentType = {\r\n        TABLE: {\r\n            fnOpen: TC.control.ResultsPanel.prototype.openTable,\r\n            collapsedClass: '.fa-list-alt'\r\n        },\r\n        CHART: {\r\n            fnOpen: TC.control.ResultsPanel.prototype.openChart,\r\n            collapsedClass: '.fa-area-chart'\r\n        }\r\n    };\r\n\r\n    self.content = self.contentType.TABLE;\r\n\r\n    if (TC.Util.isEmptyObject(self.options)) {\r\n        self.options = { content: \"table\" };\r\n    }\r\n\r\n    if (self.options || { content: \"table\" }) {\r\n        if (self.options.content)\r\n            self.content = self.contentType[self.options.content.toUpperCase()];\r\n\r\n        if (self.options.chart)\r\n            self.chart = self.options.chart;\r\n\r\n        if (self.options.table)\r\n            self.table = self.options.table;\r\n\r\n        if (self.options.save)\r\n            self.save = self.options.save;\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.ResultsPanel, TC.Control);\r\n\r\n(function () {\r\n\r\n    const ctlProto = TC.control.ResultsPanel.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-p-results';\r\n\r\n    ctlProto.template = {};\r\n\r\n    ctlProto.CHART_SIZE = {\r\n        MIN_HEIGHT: 75,\r\n        MAX_HEIGHT: 128,\r\n\r\n        MIN_WIDTH: 215,\r\n        MEDIUM_WIDTH: 310,\r\n        MAX_WIDTH: 445\r\n    };\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/ResultsPanel.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-table'] = TC.apiLocation + \"TC/templates/ResultsPanelTable.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-chart'] = TC.apiLocation + \"TC/templates/ResultsPanelChart.html\";\r\n    } else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"prpanel-group prsidebar-body \\\" style=\\\"display: none\\\" data-no-cb><div class=\\\"prpanel prpanel-default\\\"><div class=\\\"prpanel-heading\\\"><h4 class=\\\"prpanel-title\\\"><span class=\\\"prpanel-title-text\\\"></span><span class=\\\"prcollapsed-pull-right prcollapsed-slide-submenu prcollapsed-slide-submenu-close\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"\\\"><i class=\\\"fa fa-times\\\"></i></span><span class=\\\"prcollapsed-pull-right prcollapsed-slide-submenu prcollapsed-slide-submenu-min\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"hide\" }).w(\"\\\"><i class=\\\"fa fa-chevron-left\\\"></i></span><span class=\\\"prcollapsed-pull-right prcollapsed-slide-submenu prcollapsed-slide-submenu-csv\\\" hidden title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"export.excel\" }).w(\"\\\"><i class=\\\"fa fa-file-excel-o\\\"></i></span></h4></div><div id=\\\"results\\\" class=\\\"prpanel-collapse collapse in\\\"><div class=\\\"tc-ctl-p-results-menu\\\"></div><div class=\\\"prpanel-body list-group tc-ctl-p-results-info\\\"></div><div class=\\\"prpanel-body list-group tc-ctl-p-results-table\\\"></div><div class=\\\"prpanel-body list-group tc-ctl-p-results-chart\\\"></div></div></div></div><div class=\\\"prcollapsed prcollapsed-max prcollapsed-pull-left\\\" style=\\\"display: none;\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"expand\" }).w(\"\\\" data-no-cb><i class=\\\"fa-list-alt\\\" hidden></i><i class=\\\"fa-area-chart\\\" hidden></i></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-table'] = function () { dust.register(ctlProto.CLASS + '-table', body_0); function body_0(chk, ctx) { return chk.w(\"<table class=\\\"table\\\" style=\\\"display:none;\\\"><thead>\").s(ctx.get([\"columns\"], false), ctx, { \"block\": body_1 }, {}).w(\"</thead><tbody>\").s(ctx.get([\"results\"], false), ctx, { \"block\": body_2 }, {}).w(\"</tbody></table>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<th>\").f(ctx.getPath(true, []), ctx, \"h\").w(\"</th>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<tr>\").h(\"iterate\", ctx, { \"block\": body_3 }, { \"on\": ctx.getPath(true, []) }).w(\"</tr>\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<td>\").f(ctx.get([\"value\"], false), ctx, \"h\").w(\"</td>\"); } body_3.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-chart'] = function () { dust.register(ctlProto.CLASS + '-chart', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-track-chart\\\">\").x(ctx.get([\"msg\"], false), ctx, { \"else\": body_1, \"block\": body_2 }, {}).w(\"</div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<span id=\\\"elevationGain\\\" >\").h(\"i18n\", ctx, {}, { \"$key\": \"geo.trk.chart.elevationGain\" }).w(\": +\").f(ctx.get([\"upHill\"], false), ctx, \"h\").w(\"m, -\").f(ctx.get([\"downHill\"], false), ctx, \"h\").w(\"m</span><div class=\\\"tc-chart\\\"></div>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.f(ctx.get([\"msg\"], false), ctx, \"h\"); } body_2.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const isElementVisible = function (elm) {\r\n        const computedStyle = getComputedStyle(elm);\r\n        return (elm && !elm.hidden && computedStyle.display !== 'none' && computedStyle.visibility !== 'hidden');\r\n    };\r\n\r\n    ctlProto.isVisible = function () {\r\n        const self = this;\r\n        const bodyElm = self.div.querySelector('.prsidebar-body');\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n        return isElementVisible(bodyElm) || isElementVisible(maximizeElm);\r\n    };\r\n\r\n    ctlProto.isMinimized = function () {\r\n        const self = this;\r\n        const bodyElm = self.div.querySelector('.prsidebar-body');\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n        return isElementVisible(maximizeElm) && !isElementVisible(bodyElm);\r\n    };\r\n\r\n    const manageClassList = function (classElement, toAdd, toRemove) {\r\n        const self = this;\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm) {\r\n            elm.classList.add(toAdd);\r\n            elm.classList.remove(toRemove);\r\n        }\r\n    };\r\n\r\n    ctlProto.show = function (classElement) {\r\n        const self = this;\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm && elm.style.display === 'none') {\r\n            elm.style.display = '';\r\n        }\r\n\r\n        manageClassList.call(self, classElement, self.classes.SHOW_IN, self.classes.SHOW_OUT);\r\n    };\r\n\r\n    ctlProto.hide = function (classElement) {\r\n        const self = this;\r\n\r\n        manageClassList.call(self, classElement, self.classes.SHOW_OUT, self.classes.SHOW_IN);\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm) {\r\n            elm.style.display = 'none';\r\n        }\r\n    };\r\n\r\n    ctlProto.doVisible = function () {\r\n        const self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.show('prsidebar-body');\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        self.div.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n        return TC.Control.prototype.render.call(self, function () {\r\n\r\n            self.mainTitleElm = self.div.querySelector('.prpanel-title-text');\r\n\r\n            self.minimizeButton = self.div.querySelector('.prcollapsed-slide-submenu-min');\r\n            self.minimizeButton.addEventListener('click', function () {\r\n                self.minimize();\r\n            });\r\n\r\n            self.closeButton = self.div.querySelector('.prcollapsed-slide-submenu-close');\r\n            self.closeButton.addEventListener('click', function () {\r\n                self.close();\r\n            });\r\n\r\n            self.maximizeButton = self.div.querySelector('.prcollapsed-max');\r\n            self.maximizeButton.addEventListener('click', function () {\r\n                self.maximize();\r\n            });\r\n\r\n            if (self.save) {\r\n                self.saveButton = self.div.querySelector('.prcollapsed-slide-submenu-csv');\r\n                self.saveButton.addEventListener('click', function () {\r\n                    self.exportToExcel();\r\n                });\r\n                self.saveButton.removeAttribute('hidden');\r\n            }\r\n\r\n            if (self.content) {\r\n                self.content = self.content;\r\n\r\n                if (self.options.titles) {\r\n\r\n                    if (self.options.titles.main) {\r\n                        self.mainTitleElm.setAttribute('title', self.options.titles.main);\r\n                        self.mainTitleElm.innerHTML = self.options.titles.main;\r\n                    }\r\n\r\n                    if (self.options.titles.max) {\r\n                        self.maximizeButton.setAttribute('title', self.options.titles.max);\r\n                    }\r\n                } else {\r\n                    self.mainTitleElm.setAttribute('title', self.getLocaleString(\"rsp.title\"));\r\n                    self.mainTitleElm.innerHTML = self.getLocaleString(\"rsp.title\");\r\n                }\r\n            }\r\n\r\n            const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n            //collapsedElm.hidden = false;\r\n            collapsedElm.classList.add(self.classes.FA);\r\n\r\n            self.infoDiv = self.div.querySelector('.' + self.CLASS + '-info');\r\n            self.tableDiv = self.div.querySelector('.' + self.CLASS + '-table');\r\n            //self.$divChart = self._$div.find('.' + self.CLASS + '-chart');\r\n            self.menuDiv = self.div.querySelector('.' + self.CLASS + '-menu');\r\n\r\n            if (TC.browserFeatures.touch()) {\r\n                TC.Util.swipe(self.div, {\r\n                    left: function () {\r\n                        self.minimize();\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (callback && typeof (callback) === \"function\")\r\n                callback.call();\r\n        });\r\n    };\r\n\r\n    ctlProto.minimize = function () {\r\n        const self = this;\r\n\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (!isElementVisible(collapsedElm)) { // ya está minimizado\r\n            collapsedElm.classList.add(self.classes.FA);\r\n            collapsedElm.hidden = false;\r\n\r\n            self.hide('prsidebar-body');\r\n            self.show('prcollapsed-max');\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELMIN, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.maximize = function () {\r\n        const self = this;\r\n\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (isElementVisible(collapsedElm)) { // ya está maximizado\r\n            collapsedElm.hidden = true;\r\n\r\n            self.show('prsidebar-body');\r\n            self.hide('prcollapsed-max');\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELMAX, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.close = function () {\r\n        const self = this;\r\n\r\n        self.div.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n        if (self.chart && self.chart.chart) {\r\n            self.chart.chart = self.chart.chart.destroy();\r\n        }\r\n\r\n        const body = self.div.querySelector('.prsidebar-body');\r\n        if (body) {\r\n            body.style.display = 'none';\r\n            self.div.querySelector('.prcollapsed-max').style.display = 'none';\r\n\r\n            const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n            collapsedElm.hidden = true;\r\n            collapsedElm.classList.remove(self.classes.FA);\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELCLOSE, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.openChart = function (data) {\r\n        const self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        // Cerramos el resto de los perfiles\r\n        self.map.getControlsByClass(TC.control.ResultsPanel)\r\n            .filter(function (ctl) {\r\n                return ctl !== self;\r\n            })\r\n            .filter(function (ctl) {\r\n                return ctl.options.content === 'chart';\r\n            })\r\n            .forEach(function (ctl) {\r\n                ctl.close();\r\n            });\r\n\r\n        if (data) {\r\n\r\n            if (data.msg) {\r\n                self.map.toast(data.msg);\r\n            }\r\n            else {\r\n                self.elevationProfileCoordinates = data.coords;\r\n                self.renderElevationProfileChart({\r\n                    data: data,\r\n                    div: self.div.querySelector('.' + ctlProto.CLASS + '-chart')\r\n                });\r\n            }\r\n        } else {\r\n            self.map.toast(options.msg);\r\n        }\r\n\r\n        self.map.getLoadingIndicator().hide();\r\n    };\r\n\r\n    ctlProto.renderElevationProfileChart = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        TC.loadJS(!window.c3,\r\n            TC.Consts.url.D3C3 || TC.apiLocation + 'lib/d3c3/d3c3.min.js',\r\n            function () {\r\n                const data = options.data;\r\n                data.ele = data.ele.map(val => val === null ? 0 : val);\r\n                const div = options.div;\r\n                var locale = TC.Util.getMapLocale(self.map);\r\n                self.getRenderedHtml(ctlProto.CLASS + '-chart', {\r\n                    upHill: data.upHill ? data.upHill.toLocaleString(locale) : '0',\r\n                    downHill: data.downHill ? data.downHill.toLocaleString(locale) : '0'\r\n                }, function (out) {\r\n\r\n                    div.innerHTML = out;\r\n                    div.style.display = '';\r\n\r\n                    if (self.options.titles) {\r\n\r\n                        if (self.options.titles.main) {\r\n                            const titleElm = self.div.querySelector('.prpanel-title-text');\r\n                            titleElm.setAttribute('title', self.options.titles.main);\r\n                            titleElm.innerHTML = self.options.titles.main;\r\n                        }\r\n\r\n                        if (self.options.titles.max) {\r\n                            self.div.querySelector('.prcollapsed-max').setAttribute('title', self.options.titles.max);\r\n                        }\r\n                    }\r\n                    var chartOptions = TC.Util.extend({\r\n                        bindto: div.querySelector('.tc-chart'),\r\n                        padding: {\r\n                            top: 0,\r\n                            right: 15,\r\n                            bottom: 0,\r\n                            left: 45,\r\n                        },\r\n                        legend: {\r\n                            show: false\r\n                        }\r\n                    }, self.createChartOptions(data));\r\n\r\n                    if (self.chart.tooltip) {\r\n                        chartOptions.tooltip = {\r\n                            contents: function (d) {\r\n                                var fn = self.chart.tooltip;\r\n                                if (typeof (fn) !== \"function\")\r\n                                    fn = TC.Util.getFNFromString(self.chart.tooltip);\r\n                                return fn.call(eval(self.chart.ctx), d);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self.chart && self.chart.onmouseout) {\r\n                        chartOptions.onmouseout = function () {\r\n                            var fn = self.chart.onmouseout;\r\n                            if (typeof (fn) !== \"function\")\r\n                                fn = TC.Util.getFNFromString(self.chart.onmouseout);\r\n                            fn.call(eval(self.chart.ctx));\r\n                        };\r\n                    }\r\n\r\n                    chartOptions.onrendered = function () {                        \r\n                        if (TC.Util.isFunction(chartOptions._onrendered)) {\r\n                            chartOptions._onrendered.call(this);\r\n                        }\r\n                        self.map.trigger(TC.Consts.event.DRAWCHART, { control: self, svg: this.svg[0][0], chart: this });\r\n                    };\r\n\r\n                    if (window.c3) {\r\n\r\n                        if (!c3._isOverriden) {\r\n                            // GLS: Override de la función generateDrawLine y generateDrawArea para establecer otro tipo de interpolación en la línea\r\n                            window.c3.chart.internal.fn.generateDrawLine = function (lineIndices, isSub) {\r\n                                var $$ = this, config = $$.config,\r\n                                    line = $$.d3.svg.line(),\r\n                                    getPoints = $$.generateGetLinePoints(lineIndices, isSub),\r\n                                    yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n                                    xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\r\n                                    yValue = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\r\n                                    };\r\n                                line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\r\n                                if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\r\n                                return function (d) {\r\n                                    var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                                        x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\r\n                                    if ($$.isLineType(d)) {\r\n                                        if (config.data_regions[d.id]) {\r\n                                            path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\r\n                                        } else {\r\n                                            if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\r\n                                            path = line.interpolate('linear')(values);\r\n                                        }\r\n                                    } else {\r\n                                        if (values[0]) {\r\n                                            x0 = x(values[0].x);\r\n                                            y0 = y(values[0].value);\r\n                                        }\r\n                                        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n                                    }\r\n                                    return path ? path : \"M 0 0\";\r\n                                };\r\n                            };\r\n                            window.c3.chart.internal.fn.generateDrawArea = function (areaIndices, isSub) {\r\n                                var $$ = this, config = $$.config, area = $$.d3.svg.area(),\r\n                                    getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\r\n                                    yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n                                    xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\r\n                                    value0 = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(0);\r\n                                    },\r\n                                    value1 = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\r\n                                    };\r\n                                area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(value0).y1(value1);\r\n                                if (!config.line_connectNull) {\r\n                                    area = area.defined(function (d) { return d.value !== null; });\r\n                                }\r\n                                return function (d) {\r\n                                    var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                                        x0 = 0, y0 = 0, path;\r\n                                    if ($$.isAreaType(d)) {\r\n                                        if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\r\n                                        path = area.interpolate('linear')(values);\r\n                                    } else {\r\n                                        if (values[0]) {\r\n                                            x0 = $$.x(values[0].x);\r\n                                            y0 = $$.getYScale(d.id)(values[0].value);\r\n                                        }\r\n                                        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n                                    }\r\n                                    return path ? path : \"M 0 0\";\r\n                                };\r\n                            };\r\n                            c3._isOverriden = true;\r\n                        }\r\n\r\n                        self.chart.chart = c3.generate(chartOptions);\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    const closeOpenedTableResultsPanel = function () {\r\n        const self = this;\r\n\r\n        self.map.getControlsByClass(TC.control.ResultsPanel)\r\n            .filter(function (ctl) {\r\n                return ctl !== self && ctl.isVisible();\r\n            })\r\n            .filter(function (ctl) {\r\n                return ctl.options.content !== self.contentType.CHART;\r\n            })\r\n            .forEach(function (ctl) {\r\n                ctl.close();\r\n            });\r\n    };\r\n\r\n    ctlProto.openTable = function () {\r\n        var self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        var data = arguments[0];\r\n        if (data) {\r\n\r\n            var css;\r\n            if (data.css) {\r\n                css = data.css;\r\n            }\r\n            var callback = data.callback;\r\n            var columns = data.columns, data = data.data;\r\n\r\n            if (data && data.length > 0) {\r\n                //Si no recibe columnas, las extrae de las claves del primer objeto de la colección de datos\r\n                if (!columns) {\r\n                    columns = [];\r\n                    for (var k in data[0]) {\r\n                        columns.push(k);\r\n                    }\r\n                }\r\n\r\n                //deleteColumns();\r\n\r\n                self.tableData = {\r\n                    columns: columns,\r\n                    results: data,\r\n                    css: css,\r\n                    callback: callback\r\n                }\r\n                self.getRenderedHtml(self.CLASS + '-table', self.tableData).then(function (html) {\r\n                    const table = self.div.querySelector('.' + self.CLASS + '-table');\r\n                    const parent = table.parentElement;\r\n                    parent.removeChild(table);\r\n                    table.innerHTML = html;\r\n                    parent.appendChild(table);\r\n                    if (self.tableData.callback) {\r\n                        self.tableData.callback(table);\r\n                    }\r\n\r\n                    closeOpenedTableResultsPanel.call(self);\r\n\r\n                    self.map.trigger(TC.Consts.event.DRAWTABLE, { control: self });\r\n                });\r\n\r\n                self.div.querySelector('.' + self.CLASS + '-chart').style.display = 'none';\r\n                self.div.querySelector('.' + self.CLASS + '-info').style.display = 'none';\r\n\r\n                self.show('prsidebar-body');\r\n            }\r\n        }\r\n\r\n        self.map.getLoadingIndicator().hide();\r\n\r\n    };\r\n\r\n    ctlProto.open = function (html, container) {\r\n        const self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        const toCheck = container || self.div.querySelector('.' + self.CLASS + '-table');\r\n        var checkIsRendered = function () {\r\n            var clientRect = toCheck.getBoundingClientRect();\r\n            if (clientRect && clientRect.width > 100) {\r\n                window.cancelAnimationFrame(this.requestIsRendered);\r\n\r\n                //closeOpenedTableResultsPanel.call(self);\r\n                this.map.trigger(TC.Consts.event.DRAWTABLE, { control: self });\r\n            }\r\n        };\r\n\r\n        self.requestIsRendered = window.requestAnimationFrame(checkIsRendered.bind(self));\r\n\r\n        const chartElm = self.div.querySelector('.' + self.CLASS + '-chart');\r\n        chartElm.style.display = 'none';\r\n        const tableElm = self.div.querySelector('.' + self.CLASS + '-table');\r\n        tableElm.style.display = 'none';\r\n        const infoElm = self.div.querySelector('.' + self.CLASS + '-info');\r\n        infoElm.style.display = 'none';\r\n\r\n        if (html) {\r\n            if (container) {\r\n                self.getTableContainer = function () {\r\n                    return container;\r\n                };\r\n                container.innerHTML = html;\r\n                container.style.display = '';\r\n            } else {\r\n                tableElm.innerHTML = html;\r\n                tableElm.style.display = '';\r\n            }\r\n        }\r\n\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n\r\n        if (self.options.titles) {\r\n\r\n            if (self.options.titles.main) {\r\n                const titleElm = self.div.querySelector('.prpanel-title-text');\r\n                titleElm.setAttribute('title', self.options.titles.main);\r\n                titleElm.innerHTML = self.options.titles.main;\r\n            }\r\n\r\n            if (self.options.titles.max) {\r\n                maximizeElm.setAttribute('title', self.options.titles.max);\r\n            }\r\n        }\r\n\r\n        if (self.options.classes) {\r\n            if (self.options.classes.collapsed) {\r\n                maximizeElm.querySelector('i.fa-list-alt').classList.add(self.options.classes.collapsed);\r\n            }\r\n        }\r\n\r\n        // si está minimizado\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (isElementVisible(collapsedElm)) {\r\n            self.maximize();\r\n        }\r\n\r\n        self.show('prsidebar-body');\r\n        self.hide('prcollapsed-max');\r\n\r\n        self.map.getLoadingIndicator().hide();\r\n    };\r\n\r\n    ctlProto.createChartOptions = function (options) {\r\n        const self = this;\r\n        var result = {};\r\n        options = options || {};\r\n        const locale = options.locale || TC.Util.getMapLocale(self.map);\r\n        switch (options.chartType) {\r\n            default:\r\n                if (options.ele != null) {\r\n                    const getChartSize = function () {\r\n                        const docWidth = document.documentElement.clientWidth / 100 * 40; // css panel contendor\r\n                        return {\r\n                            height: docWidth > 445 ? options.maxHeight || self.CHART_SIZE.MAX_HEIGHT : options.minHeight || self.CHART_SIZE.MIN_HEIGHT,\r\n                            width: docWidth > 445 ? options.maxWidth || self.CHART_SIZE.MAX_WIDTH : docWidth > 310 ? options.mediumWidth || self.CHART_SIZE.MEDIUM_WIDTH : options.minWidth || self.CHART_SIZE.MIN_WIDTH\r\n                        };\r\n                    };\r\n\r\n                    var maxy = Number.NEGATIVE_INFINITY;\r\n                    var miny = Number.POSITIVE_INFINITY;\r\n                    options.ele.forEach(function (y) {\r\n                        if (typeof y === 'number') {\r\n                            maxy = Math.max(y, maxy);\r\n                            miny = Math.min(y, miny);\r\n                        }\r\n                    });\r\n\r\n                    const gradId = 'grad' + TC.getUID();\r\n\r\n                    result = {\r\n                        data: {\r\n                            x: 'x',\r\n                            columns: [['x'].concat(options.x), ['ele'].concat(options.ele)],\r\n                            types: { 'ele': 'area-spline' }, colors: {\r\n                                \"ele\": 'url(#' + gradId + ')'\r\n                            }\r\n                        },\r\n                        size: getChartSize(),\r\n                        point: {\r\n                            show: false\r\n                        },\r\n                        axis: {\r\n                            x: {\r\n                                tick: {\r\n                                    outer: false,\r\n                                    count: 5, format: function (d) {\r\n                                        d = d / 1000;\r\n                                        var dist;\r\n                                        var measure;\r\n                                        if (d < 1) {\r\n                                            dist = Math.round(d * 1000);\r\n                                            measure = ' m';\r\n                                        } else {\r\n                                            dist = Math.round(d * 100) / 100;\r\n                                            measure = ' km';\r\n                                        }\r\n\r\n                                        dist = dist.toLocaleString(locale);\r\n                                        return dist + measure;\r\n                                    }\r\n                                }\r\n                            },\r\n                            y: {\r\n                                padding: {\r\n                                    top: 0, bottom: 0\r\n                                },\r\n                                max: maxy,\r\n                                min: miny,\r\n                                tick: {\r\n                                    count: 2,\r\n                                    format: function (d) {\r\n                                        return (parseInt(d.toFixed(0)) || 0).toLocaleString(locale) + 'm';\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        onresize: function () {\r\n                            this.api.resize(getChartSize());                            \r\n                        }\r\n                    }\r\n\r\n                    if (options.time) result.time = (\"00000\" + options.time.h).slice(-2) + ':' + (\"00000\" + options.time.m).slice(-2) + ':' + (\"00000\" + options.time.s).slice(-2);\r\n\r\n                    result._onrendered = function () {\r\n                        const svg = this.svg[0][0];\r\n                        var svgDefsElement = svg.getElementsByTagName('defs')[0];\r\n                        var xmlns = \"http://www.w3.org/2000/svg\";\r\n                        var grad = document.createElementNS(xmlns, \"linearGradient\");\r\n                        grad.setAttributeNS(null, \"id\", gradId);\r\n                        grad.setAttributeNS(null, \"x1\", \"0%\");\r\n                        grad.setAttributeNS(null, \"x2\", \"0%\");\r\n                        grad.setAttributeNS(null, \"y1\", \"0%\");\r\n                        grad.setAttributeNS(null, \"y2\", \"100%\");\r\n                        grad.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\r\n\r\n                        const stop0 = document.createElementNS(xmlns, \"stop\");\r\n                        stop0.setAttributeNS(null, \"offset\", \"0%\");\r\n                        stop0.setAttributeNS(null, \"stop-color\", \"red\");\r\n                        stop0.setAttributeNS(null, \"stop-opacity\", \"0.7\");\r\n                        grad.appendChild(stop0);\r\n\r\n                        const stop50 = document.createElementNS(xmlns, \"stop\");\r\n                        stop50.setAttributeNS(null, \"offset\", \"50%\");\r\n                        stop50.setAttributeNS(null, \"stop-color\", \"orange\");\r\n                        stop50.setAttributeNS(null, \"stop-opacity\", \"0.9\");\r\n                        grad.appendChild(stop50);\r\n\r\n                        const stop100 = document.createElementNS(xmlns, \"stop\");\r\n                        stop100.setAttributeNS(null, \"offset\", \"100%\");\r\n                        stop100.setAttributeNS(null, \"stop-color\", \"green\");\r\n                        stop100.setAttributeNS(null, \"stop-opacity\", \"1\");\r\n                        grad.appendChild(stop100);\r\n\r\n                        svgDefsElement.appendChild(grad);\r\n\r\n                        const d3Node = d3.select(\".c3-brush\").node();\r\n                        if (d3Node) {\r\n                            d3Node.parentNode.removeChild(d3Node);\r\n                        }\r\n\r\n                        d3.select(\".c3-event-rects,.c3-event-rects-single\")\r\n                            .selectAll(\"rect\")\r\n                            .style(\"cursor\", \"pointer\")\r\n                            .on(\"click\", function (e) {\r\n                                d3.event.stopPropagation();\r\n                                const point = self.elevationProfileCoordinates[e.index].slice(0, 2);\r\n                                if (point) {\r\n                                    TC.loadJS(!TC.feature || (TC.feature && !TC.feature.Point),\r\n                                        [TC.apiLocation + 'TC/feature/Point'],\r\n                                        function () {\r\n                                            self.map.zoomToFeatures([new TC.feature.Point(point)]);\r\n                                        }\r\n                                    );\r\n                                }\r\n                            });\r\n\r\n                        var pattern = d3.select('.c3-axis.c3-axis-x').select('path').attr('d');\r\n                        var match = /^M\\d\\,(\\d)V\\dH\\d{3}V(\\d)$/i.exec(pattern);\r\n                        if (match) { // quitamos las barritas de los extremos del axis-x\r\n                            pattern = pattern.replace(/(M\\d\\,)\\d/i, \"$10\").replace(/(H\\d{3}V)(\\d)/i, \"$10\");\r\n                            d3.select('.c3-axis.c3-axis-x').select('path').attr('d', pattern);\r\n                        } else {\r\n                            var match = /^M\\s\\d\\s(\\d)\\sV\\s\\d\\sH\\s\\d{3}\\sV\\s(\\d)$/i.exec(pattern);\r\n                            if (match) { // quitamos las barritas de los extremos del axis-x\r\n                                pattern = pattern.replace(/(M\\s\\d\\s)\\d/i, \"$10\").replace(/(H\\s\\d{3}\\sV\\s)(\\d)/i, \"$10\");\r\n                                d3.select('.c3-axis.c3-axis-x').select('path').attr('d', pattern);\r\n                            }\r\n                        }\r\n\r\n                        const svgRect = svg.getBoundingClientRect();\r\n                        const chartSize = {\r\n                            width: svgRect.width,\r\n                            height: svgRect.height\r\n                        };\r\n\r\n                        // ¿es necesario pasar los labels a multiline?\r\n                        var setMultilineLabels = function () {\r\n                            var x = d3.scale.ordinal().rangeRoundBands([0, chartSize.width], .1, .3);\r\n                            d3.select('.c3-axis-x').selectAll('text:not(.c3-axis-x-label)')\r\n                                .call(function (textNode, width) {\r\n                                    textNode.each(function () {\r\n                                        textNode.each(function (d, i) {\r\n                                            if (i == 0) return;\r\n\r\n                                            d3text = d3.select(this);\r\n                                            \r\n                                            if (d3text.node().childNodes.length === 1) {                                                \r\n                                                var clone = d3text.select('tspan').node().cloneNode();\r\n                                                var words = d3text.text().split(' ');\r\n\r\n                                                d3text.select('tspan').text(words[0]);\r\n                                                clone.textContent = words[1];\r\n                                                var dy = clone.getAttribute('dy');\r\n                                                dy = dy ? parseFloat(clone.getAttribute('dy')) : .71;\r\n                                                dy = dy + 0.18 + 'em';\r\n                                                clone.setAttribute('dy', dy);\r\n                                                d3text.node().appendChild(clone);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }, x.rangeBand());\r\n                        };\r\n                        if (!d3.select('.c3-axis-x').node().getBoundingClientRect().width) {\r\n\r\n                            if (self.elevationChartLabelsRAF) {\r\n                                window.cancelAnimationFrame(self.elevationChartLabelsRAF);\r\n                                self.elevationChartLabelsRAF = undefined;\r\n                            }\r\n\r\n                            function hasSize() {\r\n                                if (d3.select('.c3-axis-x').length && !(d3.select('.c3-axis-x').node())) {\r\n                                    self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                                }\r\n                                else if (d3.select('.c3-axis-x').length && d3.select('.c3-axis-x').node() &&\r\n                                    !d3.select('.c3-axis-x').node().getBoundingClientRect().width) {\r\n                                    self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                                } else {\r\n                                    window.cancelAnimationFrame(self.elevationChartLabelsRAF);\r\n                                    self.elevationChartLabelsRAF = undefined;\r\n\r\n                                    if (((d3.select('.c3-axis-x').node().getBoundingClientRect().width >= chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) ||\r\n                                        (d3.select('.c3-axis-x').node().getBoundingClientRect().width * 100 / (chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) > 90))) {\r\n                                        setMultilineLabels();\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                        }\r\n                        else if (((d3.select('.c3-axis-x').node().getBoundingClientRect().width >= chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) ||\r\n                            (d3.select('.c3-axis-x').node().getBoundingClientRect().width * 100 / (chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) > 90))) {\r\n                            setMultilineLabels();\r\n                        }\r\n\r\n                        if (!self.isMinimized()) {\r\n                            self.show('prsidebar-body');\r\n                            self.hide('prcollapsed-max');\r\n                        }\r\n\r\n\r\n                        self.div.querySelector('.' + self.CLASS + '-table').style.display = '';\r\n                        self.div.querySelector('.' + self.CLASS + '-info').style.display = '';\r\n                    }\r\n                }\r\n                else {\r\n                    result = {\r\n                        msg: self.getLocaleString(\"geo.trk.chart.chpe.empty\")\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const getTime = function (timeFrom, timeTo) {\r\n        var diff = timeTo - timeFrom;\r\n        var d = {};\r\n        var daysDifference = Math.floor(diff / 1000 / 60 / 60 / 24);\r\n        diff -= daysDifference * 1000 * 60 * 60 * 24;\r\n\r\n        var hoursDifference = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hoursDifference * 1000 * 60 * 60;\r\n\r\n        d.h = hoursDifference + (daysDifference * 24);\r\n\r\n        var minutesDifference = Math.floor(diff / 1000 / 60);\r\n        diff -= minutesDifference * 1000 * 60;\r\n\r\n        d.m = minutesDifference;\r\n\r\n        d.s = Math.floor(diff / 1000);\r\n\r\n        return TC.Util.extend({}, d, { toString: (\"00000\" + d.h).slice(-2) + ':' + (\"00000\" + d.m).slice(-2) + ':' + (\"00000\" + d.s).slice(-2) });\r\n    };\r\n\r\n    ctlProto.getElevationChartTooltip = function (data) {\r\n        const self = this;\r\n        const coords = self.elevationProfileCoordinates;\r\n        var distance = data[0].x;\r\n        distance = distance / 1000;\r\n\r\n        const p = coords[data[0].index];\r\n        var doneTime;\r\n        if (coords[0].length == 4 && coords[0][3] > 0) {\r\n            doneTime = getTime(coords[0][3], p[3]);\r\n        }\r\n\r\n        const locale = self.map.options.locale && self.map.options.locale.replace('_', '-') || undefined;\r\n        const ele = parseInt(data[0].value.toFixed(0)).toLocaleString(locale);\r\n        var dist;\r\n        var measure;\r\n        if (distance < 1) {\r\n            dist = Math.round(distance * 1000);\r\n            measure = ' m';\r\n        } else {\r\n            dist = Math.round(distance * 100) / 100;\r\n            measure = ' km';\r\n        }\r\n        dist = dist.toLocaleString(locale);\r\n        return '<div class=\"track-elevation-tooltip\"><div><span>' + ele + ' m </span><br><span>' + dist + measure + ' </span></div>' + (doneTime ? '<span>' + doneTime.toString + '</span><div/>' : '');\r\n    };\r\n\r\n    ctlProto.getTableContainer = function () {\r\n        return this.tableDiv;\r\n    };\r\n\r\n    ctlProto.getInfoContainer = function () {\r\n        return this.infoDiv;\r\n    };\r\n\r\n    ctlProto.getMenuElement = function () {\r\n        return this.menuDiv;\r\n    };\r\n\r\n    ctlProto.getContainerElement = function () {\r\n        return this.div || null;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.wrap.register(map);\r\n\r\n        if (self.openOn) {\r\n            self.map.one(self.openOn, function (e, args) {\r\n                self.content.fnOpen.call(self, e.data);\r\n            });\r\n        }\r\n\r\n        if (self.closeOn) {\r\n            self.map.one(self.closeOn, function (e, args) {\r\n                self.close();\r\n            });\r\n        }\r\n\r\n        if (self.options.openOn) {\r\n            self.map.on(self.options.openOn, function (e, args) {\r\n                self.content.fnOpen.call(self, e.data);\r\n            });\r\n        }\r\n\r\n        if (self.options.closeOn) {\r\n            self.map.on(self.options.closeOn, function (e, args) {\r\n                self.close();\r\n            });\r\n        }\r\n\r\n        //map.on(TC.Consts.event.VIEWCHANGE, function () {\r\n\r\n        //    map.getControlsByClass(TC.control.ResultsPanel).filter(function (ctl) {\r\n        //        return ctl.options.content !== \"chart\" && ($(ctl.div).find('.' + ctl.CLASS + '-info:visible').length === 1 || $(ctl.div).find('.' + ctl.CLASS + '-table:visible').length === 1);\r\n        //    }).forEach(function (ctl) {\r\n        //        ctl.close();\r\n        //    });\r\n        //});\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.exportToExcel = function () {\r\n        var _ctl = this;\r\n\r\n        var rows = [_ctl.tableData.columns];\r\n\r\n        _ctl.tableData.results.forEach(function (value) {\r\n            var row = [];\r\n            for (var k in value) {\r\n                if (value.hasOwnProperty(k) && k !== \"Id\" && k !== \"Geom\") { //Las columnas ID y Geom no aparece en la exportaci\\u00f3n\r\n                    row.push(value[k]);\r\n                }\r\n            }\r\n            rows.push(row);\r\n        });\r\n        var _fncSave = function (exporter) {\r\n            var fileName = _ctl.save.fileName ? _ctl.save.fileName : 'resultados.xls';\r\n            var title = (_ctl.options.titles && _ctl.options.titles.main ? _ctl.options.titles.main : null);\r\n            exporter.Save(fileName, rows, title);\r\n        }\r\n        if (!TC.Util.ExcelExport) {\r\n            TC.loadJS(true, TC.apiLocation + 'TC/Util.ExcelExport', function () {\r\n                _fncSave(new TC.Util.ExcelExport());\r\n            });\r\n        }\r\n        else {\r\n            _fncSave(new TC.Util.ExcelExport());\r\n        }\r\n    };\r\n})();"]}