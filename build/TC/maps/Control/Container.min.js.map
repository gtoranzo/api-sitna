{"version":3,"sources":["Control/Container.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Container","apply","this","arguments","controlOptions","options","controls","ctlCount","Array","length","Object","keys","defaultSelection","inherit","ctlProto","prototype","register","map","self","result","call","uids","forEach","elm","idx","arr","getUID","Promise","resolve","rejetc","all","renderPromise","then","onRenderPromise","render","callback","getControl","promise","_ctlPromises","reject"],"mappings":"AAACA,GAAGC,QAAUD,GAAGC,YAEZD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGC,QAAQI,UAAY,WAGnBL,GAAGE,QAAQI,MAFAC,KAEYC,WAFZD,KAINE,eAJMF,KAIgBG,QAAQC,aAJxBJ,KAMNK,SANML,KAMUE,0BAA0BI,MANpCN,KAMiDE,eAAeK,OAASC,OAAOC,KANhFT,KAM0FE,gBAAgBK,OAN1GP,KAONU,iBAPMV,KAOkBG,QAAQO,kBAGzCjB,GAAGkB,QAAQlB,GAAGC,QAAQI,UAAWL,GAAGE,UAEpC,WACI,IAAIiB,EAAWnB,GAAGC,QAAQI,UAAUe,UAEpCD,EAASE,SAAW,SAAUC,GAC1B,MAAMC,EAAOhB,KACPiB,EAASxB,GAAGE,QAAQkB,UAAUC,SAASI,KAAKF,EAAMD,GAExDC,EAAKG,KAAO,IAAIb,MAAMU,EAAKX,UAC3BW,EAAKG,KAAKC,QAAQ,SAAUC,EAAKC,EAAKC,GAClCA,EAAID,GAAON,EAAKQ,WAGpB,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAClCF,QAAQG,KAAKX,EAAQD,EAAKa,kBAAkBC,KAAK,WAC7Cd,EAAKe,kBAELL,SAKZd,EAASmB,gBAAkB,aAE3BnB,EAASoB,OAAS,SAAUC,KAE5BrB,EAASsB,WAAa,SAAUZ,GAC5B,IAAIa,EAAUnC,KAAKoC,aAAad,GAChC,OAAKa,GACM,IAAIV,QAAQ,SAAUC,EAASW,GAClCA,OA7BhB","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.Container = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);    \r\n\r\n    self.controlOptions = self.options.controls || [];\r\n\r\n    self.ctlCount = self.controlOptions instanceof Array ? self.controlOptions.length : Object.keys(self.controlOptions).length;    \r\n    self.defaultSelection = self.options.defaultSelection;\r\n};\r\n\r\nTC.inherit(TC.control.Container, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.Container.prototype;\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.uids = new Array(self.ctlCount);\r\n        self.uids.forEach(function (elm, idx, arr) {\r\n            arr[idx] = self.getUID();\r\n        });\r\n\r\n        return new Promise(function (resolve, rejetc) {\r\n            Promise.all([result, self.renderPromise()]).then(function () {\r\n                self.onRenderPromise();\r\n\r\n                resolve();\r\n            });\r\n        });        \r\n    };\r\n\r\n    ctlProto.onRenderPromise = function () { };\r\n\r\n    ctlProto.render = function (callback) { };\r\n\r\n    ctlProto.getControl = function (idx) {\r\n        var promise = this._ctlPromises[idx];\r\n        if (!promise) {\r\n            return new Promise(function (resolve, reject) {\r\n                reject();\r\n            });            \r\n        }\r\n\r\n        return promise;\r\n    };\r\n\r\n})();\r\n"],"file":"../../Control/Container.min.js"}