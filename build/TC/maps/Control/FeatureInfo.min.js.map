{"version":3,"sources":["control/FeatureInfo.js"],"names":["TC","control","FeatureInfoCommons","syncLoadJS","apiLocation","FeatureInfo","self","this","apply","arguments","wrap","Consts","classes","FROMLEFT","FROMRIGHT","options","displayElevation","loadJS","tool","Elevation","elevationOptions","elevation","inherit","ctlProto","prototype","roundCoordinates","obj","precision","result","$","isArray","i","len","slice","length","Math","round","toFixed","register","map","call","document","createElement","appendChild","div","callback","coords","xy","querying","elevationRequest","getElevation","crs","coordinates","filterLayer","title","getLocaleString","markerOptions","extend","styles","marker","markerStyle","set","showsPopup","clearFeatures","addMarker","then","putLayerOnTop","filterFeature","visibleLayers","workLayers","layer","type","layerType","WMS","getVisibility","names","resolution","getResolution","getFeatureInfo","setTimeout","responseCallback","endCallback","elevCoords","services","service","j","layers","features","splice","info","defaultFeature","locale","Cfg","isGeo","elevationValue","Util","formatNumber","value","DEGREE_PRECISION","METER_PRECISION","renderData","insertLinks","sharedFeatureInfo","querySelectorAll","CLASS","forEach","li","classList","add","CHECKED","sharedFeature","featureObj","ii","mapLayers","some","ml","url","s","jj","name","l","k","kk","feature","id","f","hash","hex_md5","JSON","stringify","data","getData","geometry","h","alert","highlightedFeature","addLayer","getUID","VECTOR","stealth","sharedFeatureLayer","addFeature","zoomToFeatures","displayResults","resultsLayer","loadSharedFeature","jQuery","grep","item","getDisgregatedLayerNames","indexOf","error","msgErrorMode","TOAST","window","HASH","beforeRequest","r","serviceUrl","layerName","featureId"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.FeatureInfoCommons) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/FeatureInfoCommons');\r\n}\r\n\r\n(function () {\r\n    TC.control.FeatureInfo = function () {\r\n        var self = this;\r\n        TC.control.FeatureInfoCommons.apply(this, arguments);\r\n        self.wrap = new TC.wrap.control.FeatureInfo(self);\r\n\r\n        TC.Consts.classes.FROMLEFT = 'tc-fromleft';\r\n        TC.Consts.classes.FROMRIGHT = 'tc-fromright';\r\n\r\n        if (self.options.displayElevation) {\r\n            TC.loadJS(\r\n                !TC.tool || !TC.tool.Elevation,\r\n                TC.apiLocation + 'TC/tool/Elevation',\r\n                function () {\r\n                    const elevationOptions = typeof self.options.displayElevation === 'boolean' ? {} : self.options.displayElevation;\r\n                    self.elevation = new TC.tool.Elevation(elevationOptions);\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    TC.inherit(TC.control.FeatureInfo, TC.control.FeatureInfoCommons);\r\n\r\n    var ctlProto = TC.control.FeatureInfo.prototype;\r\n\r\n    var roundCoordinates = function roundCoordinates(obj, precision) {\r\n        var result;\r\n        var n = 20;\r\n        if ($.isArray(obj)) {\r\n            result = obj.slice();\r\n            for (var i = 0, len = result.length; i < len; i++) {\r\n                result[i] = roundCoordinates(result[i]);\r\n            }\r\n        }\r\n        else if (typeof obj === \"number\") {\r\n            result = Math.round(obj.toFixed(precision));\r\n        }\r\n        else {\r\n            result = obj;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.control.FeatureInfoCommons.prototype.register.call(self, map);\r\n\r\n        // Le ponemos un padre al div. Evitamos con esto que se añada el div al mapa (no es necesario, ya que es un mero buffer)\r\n        document.createElement('div').appendChild(self.div);\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.callback = function (coords, xy) {\r\n        var self = this;\r\n\r\n        if (self.elevation) {\r\n            self.querying = true;\r\n\r\n            self.elevationRequest = self.elevation.getElevation({\r\n                crs: self.map.crs,\r\n                coordinates: coords\r\n            });\r\n        }\r\n\r\n        if (self.map && self.filterLayer) {\r\n            //aquí se pone el puntito temporal\r\n            var title = self.getLocaleString('featureInfo');\r\n            var markerOptions = $.extend({}, self.map.options.styles.marker, self.markerStyle, { title: title, set: title, showsPopup: false });\r\n            self.filterLayer.clearFeatures();\r\n            self.filterLayer.addMarker(coords, markerOptions).then(function (marker) {\r\n                ////cuando se queda el puntito es porque esto sucede tras el cierre de la popup\r\n                ////o sea\r\n                ////lo normal es que primero se ejecute esto, y luego se procesen los eventos FEATUREINFO o NOFEATUREINFO\r\n                ////pero en el caso raro (la primera vez), ocurre al revés. Entonces, ya se habrá establecido lastFeatureCount (no será null)\r\n                //if (self.lastFeatureCount === null) {\r\n                //    self.map.putLayerOnTop(self.filterLayer);\r\n                //    self.filterFeature = marker;\r\n                //}\r\n                //else {\r\n                //    self.filterLayer.clearFeatures();\r\n                //}\r\n                self.map.putLayerOnTop(self.filterLayer);\r\n                self.filterFeature = marker;\r\n\r\n                var visibleLayers = false;\r\n                for (var i = 0; i < self.map.workLayers.length; i++) {\r\n                    var layer = self.map.workLayers[i];\r\n                    if (layer.type === TC.Consts.layerType.WMS) {\r\n                        if (layer.getVisibility() && layer.names.length > 0) {\r\n                            visibleLayers = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                var resolution = self.map.getResolution();\r\n                if (visibleLayers) {\r\n                    self.wrap.getFeatureInfo(coords, resolution);\r\n                }\r\n                else {\r\n                    // Metemos setTimeout para salirnos del hilo. Sin él se corre el riesgo de que se ejecute esto antes del evento BEFOREFEATUREINFO\r\n                    setTimeout(function () {\r\n                        self.responseCallback({ coords: coords });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.responseCallback = function (options) {\r\n        var self = this;\r\n        const endCallback = function (elevCoords) {\r\n\r\n            TC.control.FeatureInfoCommons.prototype.responseCallback.call(self, options);\r\n\r\n            if (self.filterFeature) {\r\n                var services = options.services;\r\n\r\n                // Eliminamos capas sin resultados\r\n                if (services) {\r\n                    for (var i = 0; i < services.length; i++) {\r\n                        var service = services[i];\r\n                        for (var j = 0; j < service.layers.length; j++) {\r\n                            if (!service.layers[j].features.length) {\r\n                                service.layers.splice(j, 1);\r\n                                j = j - 1;\r\n                            }\r\n                        }\r\n                        if (!service.layers.length) {\r\n                            services.splice(i, 1);\r\n                            i = i - 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                self.info.defaultFeature = options.defaultFeature;\r\n\r\n                var locale = self.map.options.locale || TC.Cfg.locale;\r\n                options.isGeo = self.map.wrap.isGeo();\r\n                if (elevCoords.length) {\r\n                    const elevationValue = elevCoords[0][2];\r\n                    options.elevation = elevationValue === null ? null : TC.Util.formatNumber(Math.round(elevationValue), locale);\r\n                }\r\n                if (options.coords) {\r\n                    options.crs = self.map.crs;\r\n                    options.coords = options.coords.map(function (value) {\r\n                        return TC.Util.formatNumber(value.toFixed(options.isGeo ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION), locale);\r\n                    });\r\n                }\r\n                if ((services && services.length) || options.elevation !== null) {\r\n                    self.renderData(options, function () {\r\n                        self.insertLinks();\r\n\r\n                        if (self.sharedFeatureInfo) {\r\n                            self.div.querySelectorAll('ul.' + self.CLASS + '-services li').forEach(function (li) {\r\n                                li.classList.add(TC.Consts.classes.CHECKED);\r\n                            })\r\n                            var sharedFeature;\r\n                            var featureObj = self.sharedFeatureInfo;\r\n                            for (var i = 0, ii = self.info.services.length; i < ii; i++) {\r\n                                var service = self.info.services[i];\r\n                                if (service.mapLayers.some(function (ml) { return ml.url === featureObj.s })) {\r\n                                    for (var j = 0, jj = service.layers.length; j < jj; j++) {\r\n                                        var layer = service.layers[j];\r\n                                        if (layer.name === featureObj.l) {\r\n                                            for (var k = 0, kk = layer.features.length; k < kk; k++) {\r\n                                                var feature = layer.features[k];\r\n                                                if (feature.id === featureObj.f) {\r\n                                                    sharedFeature = feature;\r\n                                                    var hash = hex_md5(JSON.stringify({\r\n                                                        data: feature.getData(),\r\n                                                        geometry: roundCoordinates(feature.geometry, TC.Consts.DEGREE_PRECISION) // Redondeamos a la precisión más fina (grado)\r\n                                                    }));\r\n                                                    if (featureObj.h !== hash) {\r\n                                                        TC.alert(self.getLocaleString('finfo.featureChanged.warning'));\r\n                                                    }\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (sharedFeature) {\r\n                                self.highlightedFeature = sharedFeature;\r\n                                self.map.addLayer({\r\n                                    id: self.getUID(),\r\n                                    type: TC.Consts.layerType.VECTOR,\r\n                                    title: self.getLocaleString('foi'),\r\n                                    stealth: true\r\n                                }).then(function (layer) {\r\n                                    self.sharedFeatureLayer = layer;\r\n                                    self.filterLayer.clearFeatures();\r\n                                    layer.addFeature(sharedFeature);\r\n                                    self.map.zoomToFeatures([sharedFeature]);\r\n                                });\r\n                            }\r\n                            delete self.sharedFeatureInfo;\r\n                        }\r\n                        else {\r\n                            self.displayResults();\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    self.resultsLayer.clearFeatures();\r\n                    self.filterLayer.clearFeatures();\r\n                }\r\n            }\r\n\r\n        };\r\n        if (self.elevationRequest) {\r\n            self.elevationRequest.then(endCallback);\r\n        }\r\n        else {\r\n            endCallback([]);\r\n        }\r\n    };\r\n\r\n    ctlProto.loadSharedFeature = function (featureObj) {\r\n        // Función para dar compatibilidad hacia atrás, ahora las features se comparten por URL\r\n        const self = this;\r\n        if (featureObj) {\r\n            //buscamos si la feature compartida pertenece a alguna de las capas añadidas\r\n            if (jQuery.grep(self.map.workLayers, function (item, i) {\r\n                return item.type === TC.Consts.layerType.WMS && item.url === featureObj.s && item.getDisgregatedLayerNames().indexOf(featureObj.l) >= 0\r\n            }).length === 0) {\r\n                TC.error(self.getLocaleString('sharedFeatureNotValid'), TC.Consts.msgErrorMode.TOAST);\r\n                return;\r\n            }\r\n            self.sharedFeatureInfo = featureObj;\r\n            TC.loadJS(\r\n                !window.hex_md5,\r\n                [TC.apiLocation + TC.Consts.url.HASH],\r\n                function () {\r\n                    // Creamos una consulta getFeatureInfo ad-hoc, con la resolución a la que estaba la consulta original.\r\n                    const coords = [-100, -100];\r\n                    self.beforeRequest({ xy: coords }); // xy negativo para que no se vea el marcador, ya que no sabemos dónde ponerlo.\r\n                    //aquí se pone el puntito temporal\r\n                    self.filterLayer.clearFeatures();\r\n                    self.filterLayer.addMarker(coords).then(function (marker) {\r\n                        self.filterFeature = marker;\r\n                        self.wrap.getFeatureInfo(featureObj.xy, featureObj.r, {\r\n                            serviceUrl: featureObj.s,\r\n                            layerName: featureObj.l,\r\n                            featureId: featureObj.f\r\n                        });\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n})();"],"file":"../../control/FeatureInfo.min.js"}