{"version":3,"sources":["control/FeatureInfo.js"],"names":["TC","control","FeatureInfoCommons","syncLoadJS","apiLocation","FeatureInfo","apply","this","arguments","wrap","Consts","classes","FROMLEFT","FROMRIGHT","inherit","ctlProto","prototype","roundCoordinates","obj","precision","result","Array","isArray","i","len","slice","length","Math","round","toFixed","register","map","self","call","document","createElement","appendChild","div","options","displayElevation","elevation","loadJS","tool","Elevation","elevationOptions","callback","coords","xy","querying","elevationRequest","getElevation","crs","coordinates","filterLayer","title","getLocaleString","markerOptions","Util","extend","styles","marker","markerStyle","set","showsPopup","clearFeatures","highlightedFeature","filterFeature","addMarker","then","putLayerOnTop","renderResults","geometry","loading","displayResults","visibleLayers","workLayers","layer","type","layerType","WMS","getVisibility","names","resolution","getResolution","getFeatureInfo","setTimeout","responseCallback","services","service","j","layers","features","splice","info","defaultFeature","insertLinks","sharedFeatureInfo","querySelectorAll","CLASS","forEach","li","classList","add","CHECKED","sharedFeature","featureObj","ii","mapLayers","some","ml","url","s","jj","name","l","k","kk","feature","id","f","hash","hex_md5","JSON","stringify","data","getData","DEGREE_PRECISION","h","alert","addLayer","getUID","VECTOR","owner","stealth","sharedFeatureLayer","addFeature","zoomToFeatures","label","addEventListener","event","CLICK","e","stopPropagation","displayResultsCallback","ctl","getDisplayControl","getDisplayTarget","querySelector","HIDDEN","elevationCoords","currentFeature","currentCoords","formatCoord","isGeo","METER_PRECISION","elevationValue","closeResults","locale","Cfg","value","formatNumber","renderData","elevationString","elevationDisplay","toggle","innerHTML","loadSharedFeature","filter","item","getDisgregatedLayerNames","indexOf","error","msgErrorMode","TOAST","window","HASH","beforeRequest","r","serviceUrl","layerName","featureId"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.FeatureInfoCommons) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/FeatureInfoCommons');\r\n}\r\n\r\n(function () {\r\n    TC.control.FeatureInfo = function () {\r\n        var self = this;\r\n        TC.control.FeatureInfoCommons.apply(this, arguments);\r\n        self.wrap = new TC.wrap.control.FeatureInfo(self);\r\n\r\n        TC.Consts.classes.FROMLEFT = 'tc-fromleft';\r\n        TC.Consts.classes.FROMRIGHT = 'tc-fromright';\r\n    };\r\n\r\n    TC.inherit(TC.control.FeatureInfo, TC.control.FeatureInfoCommons);\r\n\r\n    var ctlProto = TC.control.FeatureInfo.prototype;\r\n\r\n    var roundCoordinates = function roundCoordinates(obj, precision) {\r\n        var result;\r\n        var n = 20;\r\n        if (Array.isArray(obj)) {\r\n            result = obj.slice();\r\n            for (var i = 0, len = result.length; i < len; i++) {\r\n                result[i] = roundCoordinates(result[i]);\r\n            }\r\n        }\r\n        else if (typeof obj === \"number\") {\r\n            result = Math.round(obj.toFixed(precision));\r\n        }\r\n        else {\r\n            result = obj;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.control.FeatureInfoCommons.prototype.register.call(self, map);\r\n\r\n        // Le ponemos un padre al div. Evitamos con esto que se aÃ±ada el div al mapa (no es necesario, ya que es un mero buffer)\r\n        document.createElement('div').appendChild(self.div);\r\n\r\n        if (self.options.displayElevation || self.map.options.elevation) {\r\n            TC.loadJS(\r\n                !TC.tool || !TC.tool.Elevation,\r\n                TC.apiLocation + 'TC/tool/Elevation',\r\n                function () {\r\n                    const elevationOptions = self.options.displayElevation ? (typeof self.options.displayElevation === 'boolean' ? {} : self.options.displayElevation) : (typeof self.map.options.elevation === 'boolean' ? {} : self.map.options.elevation);\r\n                    self.elevation = new TC.tool.Elevation(elevationOptions);\r\n                }\r\n            );\r\n        }        \r\n        return result;\r\n    };\r\n\r\n    ctlProto.callback = function (coords, xy) {\r\n        const self = this;\r\n\r\n        self.querying = true;\r\n\r\n        if (self.elevation) {\r\n            self.elevationRequest = self.elevation.getElevation({\r\n                crs: self.map.crs,\r\n                coordinates: coords\r\n            });\r\n        }\r\n\r\n        if (self.map && self.filterLayer) {\r\n            //aquÃ­ se pone el puntito temporal\r\n            var title = self.getLocaleString('featureInfo');\r\n            var markerOptions = TC.Util.extend({}, self.map.options.styles.marker, self.markerStyle, { title: title, set: title, showsPopup: false });\r\n            self.filterLayer.clearFeatures();\r\n            self.highlightedFeature = null;\r\n            self.filterFeature = null;\r\n            self.filterLayer.addMarker(coords, markerOptions).then(function (marker) {\r\n                ////cuando se queda el puntito es porque esto sucede tras el cierre de la popup\r\n                ////o sea\r\n                ////lo normal es que primero se ejecute esto, y luego se procesen los eventos FEATUREINFO o NOFEATUREINFO\r\n                ////pero en el caso raro (la primera vez), ocurre al revÃ©s. Entonces, ya se habrÃ¡ establecido lastFeatureCount (no serÃ¡ null)\r\n                //if (self.lastFeatureCount === null) {\r\n                //    self.map.putLayerOnTop(self.filterLayer);\r\n                //    self.filterFeature = marker;\r\n                //}\r\n                //else {\r\n                //    self.filterLayer.clearFeatures();\r\n                //}\r\n                self.map.putLayerOnTop(self.filterLayer);\r\n                self.filterFeature = marker;\r\n\r\n                self.renderResults({ coords: marker.geometry, displayElevation: self.elevation, loading: true }, function () {\r\n                    self.displayResults();\r\n                });\r\n\r\n                var visibleLayers = false;\r\n                for (var i = 0; i < self.map.workLayers.length; i++) {\r\n                    var layer = self.map.workLayers[i];\r\n                    if (layer.type === TC.Consts.layerType.WMS) {\r\n                        if (layer.getVisibility() && layer.names.length > 0) {\r\n                            visibleLayers = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                var resolution = self.map.getResolution();\r\n                if (visibleLayers) {\r\n                    self.wrap.getFeatureInfo(coords, resolution);\r\n                }\r\n                else {\r\n                    // Metemos setTimeout para salirnos del hilo. Sin Ã©l se corre el riesgo de que se ejecute esto antes del evento BEFOREFEATUREINFO\r\n                    setTimeout(function () {\r\n                        self.responseCallback({ coords: coords });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.responseCallback = function (options) {\r\n        const self = this;\r\n\r\n        TC.control.FeatureInfoCommons.prototype.responseCallback.call(self, options);\r\n        if (self.filterFeature) {\r\n            var services = options.services;\r\n\r\n            // Eliminamos capas sin resultados\r\n            if (services) {\r\n                for (var i = 0; i < services.length; i++) {\r\n                    var service = services[i];\r\n                    for (var j = 0; j < service.layers.length; j++) {\r\n                        if (!service.layers[j].features.length) {\r\n                            service.layers.splice(j, 1);\r\n                            j = j - 1;\r\n                        }\r\n                    }\r\n                    if (!service.layers.length) {\r\n                        services.splice(i, 1);\r\n                        i = i - 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            self.info.defaultFeature = options.defaultFeature;\r\n\r\n            if (self.elevationRequest) {\r\n                options.displayElevation = true;\r\n            }\r\n            self.renderResults(options, function () {\r\n                self.insertLinks();\r\n\r\n                if (self.sharedFeatureInfo) {\r\n                    self.div.querySelectorAll('ul.' + self.CLASS + '-services li').forEach(function (li) {\r\n                        li.classList.add(TC.Consts.classes.CHECKED);\r\n                    })\r\n                    var sharedFeature;\r\n                    var featureObj = self.sharedFeatureInfo;\r\n                    for (var i = 0, ii = self.info.services.length; i < ii; i++) {\r\n                        var service = self.info.services[i];\r\n                        if (service.mapLayers.some(function (ml) { return ml.url === featureObj.s })) {\r\n                            for (var j = 0, jj = service.layers.length; j < jj; j++) {\r\n                                var layer = service.layers[j];\r\n                                if (layer.name === featureObj.l) {\r\n                                    for (var k = 0, kk = layer.features.length; k < kk; k++) {\r\n                                        var feature = layer.features[k];\r\n                                        if (feature.id === featureObj.f) {\r\n                                            sharedFeature = feature;\r\n                                            var hash = hex_md5(JSON.stringify({\r\n                                                data: feature.getData(),\r\n                                                geometry: roundCoordinates(feature.geometry, TC.Consts.DEGREE_PRECISION) // Redondeamos a la precisiÃ³n mÃ¡s fina (grado)\r\n                                            }));\r\n                                            if (featureObj.h !== hash) {\r\n                                                TC.alert(self.getLocaleString('finfo.featureChanged.warning'));\r\n                                            }\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (sharedFeature) {\r\n                        self.highlightedFeature = sharedFeature;\r\n                        self.map.addLayer({\r\n                            id: self.getUID(),\r\n                            type: TC.Consts.layerType.VECTOR,\r\n                            title: self.getLocaleString('foi'),\r\n                            owner: self,\r\n                            stealth: true\r\n                        }).then(function (layer) {\r\n                            self.sharedFeatureLayer = layer;\r\n                            self.filterLayer.clearFeatures();\r\n                            self.filterFeature = null;\r\n                            layer.addFeature(sharedFeature);\r\n                            self.map.zoomToFeatures([sharedFeature]);\r\n                        });\r\n                    }\r\n                    delete self.sharedFeatureInfo;\r\n                }\r\n                else {\r\n                    self.displayResults();\r\n                }\r\n                //capturamos el click de label y enlaces para no propagarlos a las tablas y que haga zoom cuando no se quiere\r\n                self.div.querySelectorAll('ul.' + self.CLASS + '-services label, ul.' + self.CLASS + '-services a').forEach(function (label) {\r\n                    label.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                        e.stopPropagation();\r\n                    })\r\n                })\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.displayResultsCallback = function () {\r\n        const self = this;\r\n        TC.control.FeatureInfoCommons.prototype.displayResultsCallback.call(self);\r\n\r\n        if (self.elevationRequest) {\r\n            const ctl = self.getDisplayControl();\r\n            self.getDisplayTarget().querySelector(`.${self.CLASS}-elev`).classList.add(TC.Consts.classes.HIDDEN);\r\n            self.elevationRequest.then(function (elevationCoords) {\r\n                if (ctl.currentFeature) {\r\n                    const currentCoords = ctl.currentFeature.geometry;                    \r\n                    if (TC.Util.formatCoord(currentCoords[0], self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION) === TC.Util.formatCoord(elevationCoords[0][0], self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION) &&\r\n                        TC.Util.formatCoord(currentCoords[1], self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION) === TC.Util.formatCoord(elevationCoords[0][1], self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION)) {\r\n                        const elevationValue = elevationCoords.length ? elevationCoords[0][2] : null;\r\n                        self.displayElevation(elevationValue);\r\n                    }\r\n                }\r\n                //self.elevationRequest = null;\r\n            });\r\n        }\r\n        else if (!self.querying && (!self.info || !self.info.services)) {\r\n            self.closeResults();\r\n        }\r\n    };\r\n\r\n    ctlProto.renderResults = function (options, callback) {\r\n        const self = this;\r\n        if (self.filterFeature) {\r\n            const currentCoords = self.filterFeature.geometry;\r\n            if (options.coords && currentCoords[0] === options.coords[0] && currentCoords[1] === options.coords[1]) {\r\n                const locale = self.map.options.locale || TC.Cfg.locale;\r\n                options.isGeo = self.map.wrap.isGeo();\r\n                if (options.coords) {\r\n                    options.crs = self.map.crs;\r\n                    options.coords = options.coords.map(function (value) {\r\n                        return TC.Util.formatNumber(value.toFixed(options.isGeo ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION), locale);\r\n                    });\r\n                }\r\n                self.renderData(options, callback);\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.displayElevation = function (value) {\r\n        const self = this;\r\n        const locale = self.map.options.locale || TC.Cfg.locale;\r\n        const elevationString = value === null ? '-' : TC.Util.formatNumber(Math.round(value), locale) + ' m';\r\n        const elevationDisplay = self.getDisplayTarget().querySelector(`.${self.CLASS}-elev`);\r\n        elevationDisplay.classList.toggle(TC.Consts.classes.HIDDEN, value === null);\r\n        elevationDisplay.querySelector(`.${self.CLASS}-coords-val`).innerHTML = elevationString;\r\n    };\r\n\r\n    ctlProto.loadSharedFeature = function (featureObj) {\r\n        // FunciÃ³n para dar compatibilidad hacia atrÃ¡s, ahora las features se comparten por URL\r\n        const self = this;\r\n        if (featureObj) {\r\n            //buscamos si la feature compartida pertenece a alguna de las capas aÃ±adidas\r\n            if (self.map.workLayers.filter(function (item, i) {\r\n                return item.type === TC.Consts.layerType.WMS && item.url === featureObj.s && item.getDisgregatedLayerNames().indexOf(featureObj.l) >= 0\r\n            }).length === 0) {\r\n                TC.error(self.getLocaleString('sharedFeatureNotValid'), TC.Consts.msgErrorMode.TOAST);\r\n                return;\r\n            }\r\n            self.sharedFeatureInfo = featureObj;\r\n            TC.loadJS(\r\n                !window.hex_md5,\r\n                [TC.apiLocation + TC.Consts.url.HASH],\r\n                function () {\r\n                    // Creamos una consulta getFeatureInfo ad-hoc, con la resoluciÃ³n a la que estaba la consulta original.\r\n                    const coords = [-100, -100];\r\n                    self.beforeRequest({ xy: coords }); // xy negativo para que no se vea el marcador, ya que no sabemos dÃ³nde ponerlo.\r\n                    //aquÃ­ se pone el puntito temporal\r\n                    self.filterLayer.clearFeatures();\r\n                    self.filterFeature = null;\r\n                    self.filterLayer.addMarker(coords).then(function (marker) {\r\n                        self.filterFeature = marker;\r\n                        self.wrap.getFeatureInfo(featureObj.xy, featureObj.r, {\r\n                            serviceUrl: featureObj.s,\r\n                            layerName: featureObj.l,\r\n                            featureId: featureObj.f\r\n                        });\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n})();"]}