{"version":3,"sources":["Control/MapInfo.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","MapInfo","apply","this","arguments","inherit","ctlProto","prototype","CLASS","register","map","self","result","call","QR_MAX_URL_LENGTH","SHORTEN_URL_LENGTH","exportsState","includeControls","undefined","options","ready","controlStates","state","ctl","_controlStatesLoaded","importControlStates","exportControlStates","controls","exportState","filter","key","hasOwnProperty","stateArray","forEach","getControlById","id","loaded","importState","featureToShare","sharedFeaturesLayer","layerState","clone","showsPopup","layer","features","crs","length","addLayer","getUID","type","Consts","layerType","VECTOR","title","getLocaleString","stealth","then","zoomToFeatures","manageMaxLengthExceed","generateLink","currentUrl","window","location","href","hashPosition","indexOf","substring","extraParams","params","Util","getQueryStringParams","$","extend","qsPosition","concat","param","getParameterByName","replace","push","extraStates","hashState","getMapState","url","browser","URL_MAX_LENGTH","qr","shortenedLink","wait","Promise","resolve","reject","start","end","generateLinkWithoutParams","getLoadingIndicator","addWait","tool","Proxification","data","FormData","append","proxify","allowedMixedContent","fetch","catch","error","shortenUrl","response","responseText","removeWait","onerror","toast","msgType","ERROR","onError","makeQRCode","codeContainer","width","height","loadJS","QRCode","text","MutationObserver","mutationsList","observer","srcMutation","mutation","attributeName","disconnect","target","src","observe","attributes","childList","subtree","drawScaleBarIntoCanvas","canvas","sb","getControlsByClass","ScaleBar","ctx","document","createElement","getContext","save","node","getElementsByClassName","item","boundingCR","getBoundingClientRect","textContent","beginPath","strokeStyle","getComputedStyle","borderColor","setSize","left","top","moveTo","lineTo","stroke","measureText","textPosition","x","y","fill","fillnode","fillBoundingCR","globalAlpha","fillStyle","backgroundColor","fillRect","drawFill","textColor","color","font","fontSize","fontFamily","textAlign","textBaseline","fillText","registerListeners","registeredListeners","on","event","LAYERADD","bind","LAYERREMOVE","FEATUREADD","FEATUREREMOVE","FEATURESCLEAR"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.MapInfo = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n};\r\n\r\nTC.inherit(TC.control.MapInfo, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.MapInfo.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-mi';\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.QR_MAX_URL_LENGTH = 150;\r\n        self.SHORTEN_URL_LENGTH = 32715;\r\n\r\n        self.exportsState = false;\r\n\r\n        self.includeControls = self.options.includeControls === undefined || self.options.includeControls;\r\n\r\n        map.ready(function () {\r\n            const controlStates = map.state && map.state.ctl;\r\n            if (controlStates) {\r\n                if (!map._controlStatesLoaded) { // Para evitar que si hay varios controles Share cargados, cada uno importe por su cuenta.\r\n                    self.importControlStates(controlStates);\r\n                    map._controlStatesLoaded = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    ctlProto.exportControlStates = function () {\r\n        const self = this;\r\n        if (self.map) {\r\n            return self.map.controls\r\n                .map(function (ctl) {\r\n                    return ctl.exportState();\r\n                })\r\n                .filter(function (state) {\r\n                    // Quitamos los estados nulos o vacíos\r\n                    if (state) {\r\n                        for (var key in state) {\r\n                            if (state.hasOwnProperty(key)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                });\r\n        }\r\n        return [];\r\n    };\r\n\r\n    ctlProto.importControlStates = function (stateArray) {\r\n        const self = this;\r\n        if (self.map) {\r\n            stateArray.forEach(function (state) {\r\n                const ctl = self.map.getControlById(state.id);\r\n                if (ctl) {\r\n                    self.map.loaded(function () {\r\n                        ctl.importState(state);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState) {\r\n            const state = {};\r\n            if (self.featureToShare || self.sharedFeaturesLayer) {\r\n                var layerState;\r\n                state.id = self.id;\r\n                if (self.featureToShare) {\r\n                    const featureToShare = self.featureToShare.clone();\r\n                    featureToShare.showsPopup = true;\r\n                    layerState = self.featureToShare.layer.exportState({\r\n                        features: [featureToShare]\r\n                    });\r\n                }\r\n                else {\r\n                    layerState = self.sharedFeaturesLayer.exportState();\r\n                }\r\n                state.features = layerState.features;\r\n                if (layerState.crs) {\r\n                    state.crs = layerState.crs;\r\n                }\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        if (self.map && state.features.length) {\r\n            self.map.addLayer({\r\n                id: self.getUID(),\r\n                type: TC.Consts.layerType.VECTOR,\r\n                title: self.getLocaleString('foi'),\r\n                stealth: true\r\n            }).then(function (layer) {\r\n                self.sharedFeaturesLayer = layer;\r\n                layer.importState({ features: state.features, crs: state.crs }).then(function () {\r\n                    self.map.zoomToFeatures(layer.features);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.manageMaxLengthExceed = function () {\r\n        throw \"Falta implementación del método manageMaxLengthExceed\";\r\n    };\r\n\r\n    ctlProto.generateLink = function () {\r\n        var self = this;\r\n\r\n        var currentUrl = window.location.href;\r\n        var hashPosition = currentUrl.indexOf('#');\r\n        if (hashPosition > 0) {\r\n            currentUrl = currentUrl.substring(0, hashPosition);\r\n        }\r\n\r\n        if (self.extraParams) {\r\n            // Hacemos merge de parámetros de URL\r\n            var params = TC.Util.getQueryStringParams(currentUrl);\r\n            $.extend(params, self.extraParams);\r\n            var qsPosition = currentUrl.indexOf('?');\r\n            if (qsPosition >= 0) {\r\n                currentUrl = currentUrl.substring(0, qsPosition);\r\n            }\r\n            currentUrl = currentUrl.concat('?', $.param(params));\r\n        }\r\n\r\n        // eliminamos el parámetro del idioma, si no lo arrastramos al compartir\r\n        if (TC.Util.getParameterByName('lang').length > 0) {\r\n            if (currentUrl.indexOf('&') > -1) { // tenemos más parámetros en la url\r\n                currentUrl = currentUrl.replace(\"lang\" + \"=\" + TC.Util.getParameterByName('lang') + '&', '');\r\n            } else {\r\n                currentUrl = currentUrl.replace('?' + \"lang\" + \"=\" + TC.Util.getParameterByName('lang'), '');\r\n            }\r\n        }\r\n\r\n        const controlStates = self.includeControls ? self.exportControlStates() : [];\r\n        if (self.exportsState && (self.featureToShare || self.sharedFeaturesLayer)) {\r\n            controlStates.push(self.exportState());\r\n        }\r\n        const extraStates = controlStates.length ? { ctl: controlStates } : undefined;\r\n\r\n        var hashState = self.map.getMapState(extraStates);\r\n\r\n        var url = currentUrl.concat(\"#\", hashState);\r\n        self.manageMaxLengthExceed({ browser: url.length > TC.Consts.URL_MAX_LENGTH, qr: url.length > self.SHORTEN_URL_LENGTH });\r\n        return url;\r\n    };\r\n\r\n    ctlProto.shortenedLink = function () {\r\n        const self = this;\r\n        var wait;\r\n\r\n        const generateLinkWithoutParams = function () {\r\n            var url = self.generateLink();\r\n            var start = url.indexOf('?');\r\n            var end = url.indexOf('#');\r\n\r\n            //Borramos los parámetros de la URL y dejamos sólo el hash\r\n            if (start > 0) {\r\n                if (start < end) {\r\n                    url = url.replace(url.substring(start, end), '');\r\n                } else {\r\n                    url = url.replace(url.substring(start, url.length - 1), '');\r\n                }\r\n            }\r\n\r\n            return url;\r\n        };\r\n        const shortenUrl = function (url) {\r\n            var shortenServiceUrl = \"https://tinyurl.com/api-create.php\";\r\n\r\n            if (!TC.tool || !TC.tool.Proxification) {\r\n                TC.syncLoadJS(TC.apiLocation + 'TC/tool/Proxification');\r\n            }\r\n\r\n            var data = new FormData();\r\n            data.append(\"url\", url);\r\n\r\n            var toolProxification = new TC.tool.Proxification(TC.proxify, { allowedMixedContent: false });\r\n            return toolProxification.fetch(shortenServiceUrl, {\r\n                type: 'POST',\r\n                data: data\r\n            }).then(function (data) {\r\n                return data;\r\n            }).catch(function (error) {\r\n                return null;\r\n            });\r\n        };\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            const onError = function () {\r\n                self.map.toast(self.getLocaleString(\"urlTooLongForShortener\"), { type: TC.Consts.msgType.ERROR });\r\n                self.map.getLoadingIndicator().removeWait(wait);\r\n                resolve(\"\");\r\n            };\r\n\r\n            var url = generateLinkWithoutParams();\r\n\r\n            if (url.length > self.QR_MAX_URL_LENGTH && url.length < self.SHORTEN_URL_LENGTH) {\r\n\r\n                wait = self.map.getLoadingIndicator().addWait();\r\n\r\n                shortenUrl(url).then(function (response) {\r\n                    if (response && response.responseText) {\r\n                        self.map.getLoadingIndicator().removeWait(wait);\r\n                        resolve(response.responseText.replace('http://', 'https://'));\r\n                    } else {\r\n                        onerror();\r\n                    }\r\n                }, onerror);\r\n            } else {\r\n                if (url.length >= self.SHORTEN_URL_LENGTH) {\r\n                    onError();\r\n                }\r\n\r\n                resolve(\"\");\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.makeQRCode = function (codeContainer, width, height) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            TC.loadJS(\r\n                typeof QRCode === 'undefined',\r\n                [TC.apiLocation + 'lib/qrcode/qrcode.min.js'],\r\n                function () {\r\n                    self.shortenedLink().then(function (url) {\r\n                        url = url || \"\";\r\n                        if (url.length > 0) {\r\n                            var options = {\r\n                                text: url\r\n                            };\r\n\r\n                            if (width && height) {\r\n                                options.width = width;\r\n                                options.height = height;\r\n                            }\r\n\r\n                            var config = { attributes: true, childList: true, subtree: true };\r\n                            var observer = new MutationObserver(function (mutationsList, observer) {\r\n                                var srcMutation = mutationsList.filter(function (mutation) {\r\n                                    return mutation.type === \"attributes\"\r\n                                }).filter(function (mutation) {\r\n                                    return mutation.attributeName.indexOf('src') > -1;\r\n                                });\r\n\r\n                                if (srcMutation.length > 0) {\r\n                                    observer.disconnect();\r\n                                    resolve(srcMutation[0].target.src);\r\n                                }\r\n                            });\r\n                            observer.observe(codeContainer, config);\r\n                            new QRCode(codeContainer, options);\r\n                        } else {\r\n                            resolve();\r\n                        }\r\n                    });\r\n                });\r\n        });\r\n    };\r\n\r\n    ctlProto.drawScaleBarIntoCanvas = function (options) {\r\n        const self = this;\r\n        var canvas;\r\n        var sb = self.map.getControlsByClass(TC.control.ScaleBar);\r\n        if (sb.length == 0) {\r\n            return null;\r\n        }\r\n\r\n        options = options || {};\r\n\r\n        const drawFill = function (ctx, width, height) {\r\n            var elem = document.getElementsByClassName(sb[0].CLASS);\r\n            var fillnode = elem.item(0);\r\n            var fillBoundingCR = $.extend({}, fillnode.getBoundingClientRect());\r\n\r\n            fillBoundingCR.left = (options.left || 15) - 2;\r\n\r\n            fillBoundingCR.top = options.top || 15;\r\n            fillBoundingCR.top--;\r\n\r\n            ctx.globalAlpha = 0.5;\r\n            ctx.fillStyle = window.getComputedStyle(fillnode).backgroundColor;\r\n            width += 4;\r\n            height += 4;\r\n            ctx.fillRect(fillBoundingCR.left, fillBoundingCR.top, width, height);\r\n        };\r\n\r\n        if (!options.canvas) {\r\n            canvas = document.createElement('CANVAS');\r\n        } else {\r\n            canvas = options.canvas;\r\n        }\r\n\r\n        var ctx = canvas.getContext(\"2d\");\r\n        ctx.save();\r\n\r\n        var elem = document.getElementsByClassName(\"ol-scale-line-inner\");\r\n        var node = elem.item(0);\r\n        var boundingCR = $.extend({}, node.getBoundingClientRect());\r\n\r\n        var text = node.textContent;\r\n\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = window.getComputedStyle(node).borderColor;\r\n\r\n        var width, height;\r\n\r\n        if (boundingCR.width > boundingCR.height) {\r\n\r\n            width = boundingCR.width;\r\n            height = boundingCR.height;\r\n        }\r\n        else {\r\n\r\n            width = boundingCR.height;\r\n            height = boundingCR.width;\r\n        }\r\n\r\n        if (options.setSize) {\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n        }        \r\n\r\n        boundingCR.left = options.left != undefined ? options.left : 15;\r\n        boundingCR.top = options.top != undefined ? options.top : 15;\r\n\r\n        ctx.moveTo(boundingCR.left, boundingCR.top);\r\n        ctx.lineTo(boundingCR.left, boundingCR.top + height);\r\n        ctx.lineTo(boundingCR.left + width, boundingCR.top + height);\r\n        ctx.lineTo(boundingCR.left + width, boundingCR.top);\r\n\r\n        ctx.stroke();\r\n\r\n        var textMetrics = ctx.measureText(text);\r\n        var textPosition = {\r\n            x: boundingCR.left + width / 2,\r\n            y: boundingCR.top + height / 2\r\n        };\r\n\r\n        if (options.fill) {\r\n            drawFill(ctx, width, height);\r\n        }\r\n\r\n        ctx.globalAlpha = 1.0;\r\n        ctx.fillStyle = options.textColor != undefined ? options.textColor : window.getComputedStyle(node).color;\r\n\r\n        ctx.font = options.font != undefined ? options.font : window.getComputedStyle(node).fontSize + \" \" + window.getComputedStyle(node).fontFamily;\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.fillText(text, textPosition.x, textPosition.y);\r\n\r\n        return canvas;\r\n    };\r\n\r\n    ctlProto.registerListeners = function () {\r\n        const self = this;\r\n\r\n        if (!self.registeredListeners) {\r\n            self.map.on(TC.Consts.event.LAYERADD, self.generateLink.bind(self))\r\n                .on(TC.Consts.event.LAYERREMOVE, self.generateLink.bind(self))\r\n                .on(TC.Consts.event.FEATUREADD, self.generateLink.bind(self))\r\n                .on(TC.Consts.event.FEATUREREMOVE + ' ' + TC.Consts.event.FEATURESCLEAR, self.generateLink.bind(self));\r\n\r\n            self.registeredListeners = true;\r\n        }\r\n    };\r\n\r\n})();"],"file":"../../Control/MapInfo.min.js"}