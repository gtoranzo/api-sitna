{"version":3,"sources":["Control/ProjectionSelector.js"],"names":["TC","control","MapContents","syncLoadJS","apiLocation","ProjectionSelector","self","this","Control","apply","arguments","_cssClasses","LOAD_CRS_BUTTON","CLASS","CRS_DIALOG","CRS_LIST","CURRENT_CRS_NAME","CURRENT_CRS_CODE","CHANGE","NO_CHANGE","_dialogDiv","Util","getDiv","options","dialogDiv","_$dialogDiv","$","document","body","appendChild","addEventListener","Consts","event","CLICK","EventTarget","listenerBySelector","e","crs","target","dataset","crsCode","setProjection","allowFallbackLayer","loadFallbackProjections","inherit","ctlProto","prototype","render","callback","result","call","getRenderedHtml","html","innerHTML","getAvailableCRS","map","getCompatibleCRS","includeFallbacks","showProjectionChangeDialog","dialog","querySelector","classList","add","classes","LOADING","ul","blFirstOption","baseLayer","firstOption","blFallback","getFallbackLayer","blCRSList","loadProjs","loadProjections","crsList","orderBy","then","projList","hasFallbackCRS","forEach","projObj","CRSCodesEqual","code","textContent","name","button","createElement","li","filter","length","HIDDEN","WARNING","getLocaleString","querySelectorAll","visibleLi","elm","style","display","remove","getCapabilitiesPromise","showModal","loadProjDef","lis","p"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.MapContents) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.control.ProjectionSelector = function () {\r\n        const self = this;\r\n\r\n        TC.Control.apply(self, arguments);\r\n\r\n        self._cssClasses = {\r\n            LOAD_CRS_BUTTON: self.CLASS + '-crs-btn-load',\r\n            CRS_DIALOG: self.CLASS + '-crs-dialog',\r\n            CRS_LIST: self.CLASS + '-crs-list',\r\n            CURRENT_CRS_NAME: self.CLASS + '-cur-crs-name',\r\n            CURRENT_CRS_CODE: self.CLASS + '-cur-crs-code',\r\n            CHANGE: self.CLASS + '-change',\r\n            NO_CHANGE: self.CLASS + '-no-change'\r\n        };\r\n\r\n        self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n        self._$dialogDiv = $(self._dialogDiv);\r\n        if (!self.options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        self._dialogDiv.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button:not(.' + self._cssClasses.LOAD_CRS_BUTTON + ')', function (e) {\r\n            const crs = e.target.dataset.crsCode;\r\n            if (crs) {\r\n                self.setProjection({\r\n                    crs: crs,\r\n                    allowFallbackLayer: true\r\n                });\r\n            }\r\n        }));\r\n\r\n        self._dialogDiv.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button.' + self._cssClasses.LOAD_CRS_BUTTON, function (e) {\r\n            self.loadFallbackProjections();\r\n        }));\r\n    };\r\n\r\n    TC.inherit(TC.control.ProjectionSelector, TC.Control);\r\n\r\n    const ctlProto = TC.control.ProjectionSelector.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-projs';\r\n\r\n    const _dataKeys = {\r\n        LAYER: 'tcLayer',\r\n        FALLBACK_LAYER: 'tcFallbackLayer'\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.render.call(self, callback);\r\n\r\n        self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n        });\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getAvailableCRS = function (options) {\r\n        return this.map.getCompatibleCRS({ includeFallbacks: true })\r\n    };\r\n\r\n    ctlProto.showProjectionChangeDialog = function (options) {\r\n        const self = this;\r\n\r\n        const dialog = self._dialogDiv.querySelector('.' + self._cssClasses.CRS_DIALOG);\r\n        const body = dialog.querySelector('.tc-modal-body');\r\n        body.classList.add(TC.Consts.classes.LOADING);\r\n        const ul = body.querySelector('ul.' + self._cssClasses.CRS_LIST);\r\n        ul.innerHTML = '';\r\n        const blFirstOption = self.map.baseLayer.firstOption || self.map.baseLayer;\r\n        const blFallback = blFirstOption.getFallbackLayer();\r\n        const blCRSList = blFirstOption.getCompatibleCRS();\r\n\r\n        const loadProjs = function () {\r\n            self.map.loadProjections({\r\n                crsList: self.getAvailableCRS(options),\r\n                orderBy: 'name'\r\n            }).then(function (projList) {\r\n                var hasFallbackCRS = false;\r\n                projList\r\n                    .forEach(function (projObj) {\r\n                        if (TC.Util.CRSCodesEqual(self.map.crs, projObj.code)) {\r\n                            dialog.querySelector('.' + self._cssClasses.CURRENT_CRS_NAME).textContent = projObj.name;\r\n                            dialog.querySelector('.' + self._cssClasses.CURRENT_CRS_CODE).textContent = projObj.code;\r\n                        }\r\n                        else {\r\n                            const button = document.createElement('button');\r\n                            button.textContent = projObj.name + ' (' + projObj.code + ')';\r\n                            button.dataset.crsCode = projObj.code;\r\n                            const li = document.createElement('li');\r\n                            li.appendChild(button);\r\n                            if (blCRSList.filter(function (crs) {\r\n                                return TC.Util.CRSCodesEqual(crs, projObj.code)\r\n                            }).length === 0) {\r\n                                // Es un CRS del fallback\r\n                                hasFallbackCRS = true;\r\n                                li.classList.add(TC.Consts.classes.HIDDEN);\r\n                                button.classList.add(TC.Consts.classes.WARNING);\r\n                            }\r\n                            ul.appendChild(li);\r\n                        }\r\n                    });\r\n                if (hasFallbackCRS) {\r\n                    const li = document.createElement('li');\r\n                    const button = document.createElement('button');\r\n                    button.classList.add(self._cssClasses.LOAD_CRS_BUTTON);\r\n                    button.innerHTML = self.getLocaleString('showOnTheFlyProjections');\r\n                    li.appendChild(button);\r\n                    ul.appendChild(li);\r\n                }\r\n\r\n                // Mostramos un aviso si no hay CRS compatibles\r\n                if (ul.querySelectorAll('li').length === 0) {\r\n                    const li = document.createElement('li');\r\n                    li.innerHTML = self.getLocaleString('thereAreNoCompatibleCRS');\r\n                    ul.appendChild(li);\r\n                }\r\n                const visibleLi = ul.querySelectorAll('li:not(.' + TC.Consts.classes.HIDDEN + ')');\r\n                dialog.querySelectorAll('.' + self._cssClasses.CHANGE).forEach(function (elm) {\r\n                    elm.style.display = visibleLi.length > 1 ? '' : 'none';\r\n                });\r\n                dialog.querySelectorAll('.' + self._cssClasses.NO_CHANGE).forEach(function (elm) {\r\n                    elm.style.display = visibleLi.length > 1 ? 'none' : '';\r\n                });\r\n                dialog.querySelector('ul.' + self._cssClasses.CRS_LIST).style.display = visibleLi.length > 0 || hasFallbackCRS ? '' : 'none';\r\n                body.classList.remove(TC.Consts.classes.LOADING);\r\n            });\r\n        };\r\n\r\n        if (blFallback) {\r\n            blFallback.getCapabilitiesPromise().then(loadProjs);\r\n        }\r\n        else {\r\n            loadProjs();\r\n        }\r\n        TC.Util.showModal(dialog, options);\r\n    };\r\n\r\n    ctlProto.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        TC.loadProjDef({\r\n            crs: options.crs,\r\n            callback: function () {\r\n                self.map.setProjection(options);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.loadFallbackProjections = function () {\r\n        const self = this;\r\n        const lis = self._dialogDiv\r\n            .querySelector('.' + self._cssClasses.CRS_DIALOG)\r\n            .querySelectorAll('ul.' + self._cssClasses.CRS_LIST + ' li');\r\n        lis.forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.HIDDEN);\r\n            if (li.querySelector('button.' + self._cssClasses.LOAD_CRS_BUTTON)) {\r\n                li.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n        });\r\n        self._dialogDiv.querySelectorAll('p.' + TC.Consts.classes.WARNING).forEach(function (p) {\r\n            p.classList.remove(TC.Consts.classes.HIDDEN);\r\n        })\r\n        self._dialogDiv.querySelectorAll('.' + self._cssClasses.CHANGE).forEach(function (elm) {\r\n            elm.style.display = lis.length > 1 ? '' : 'none';\r\n        });\r\n        self._dialogDiv.querySelectorAll('.' + self._cssClasses.NO_CHANGE).forEach(function (elm) {\r\n            elm.style.display = lis.length > 1 ? 'none' : '';\r\n        });\r\n    };\r\n\r\n})();\r\n"],"file":"../../Control/ProjectionSelector.min.js"}