{"version":3,"sources":["control/PrintMap.js"],"names":["TC","control","MapInfo","syncLoadJS","apiLocation","PrintMap","Control","apply","this","arguments","inherit","ctlProto","prototype","CLASS","ORIENTATION","PAGE_SIZE","a4_portrait","logoWidth","logoHeight","layoutPDF","pageSize","width","height","pageMargins","content","columns","image","margin","text","alignment","table","widths","body","layout","paddingLeft","i","node","paddingRight","paddingTop","paddingBottom","reset","a4_landscape","a3_portrait","a3_landscape","getLayout","orientation","format","getLogoColumn","getScaleBarColumn","options","sideLength","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","hasLegend","map","workLayers","some","layer","type","Consts","layerType","WMS","getVisibility","self","result","call","mustBeExportable","manageLegendOnZoom","toString","toUpperCase","div","addEventListener","EventTarget","listenerBySelector","setView","view","PRINTING","codeContainer","document","querySelector","checked","createElement","classList","add","appendChild","innerHTML","makeQRCode","printBtnSelector","on","event","STARTLOADING","printBtn","disabled","STOPLOADING","remove","ZOOM","updateCanvas","printFormat","bounding","getBoundingClientRect","Number","isInteger","style","Math","round","toast","getLocaleString","msgType","INFO","duration","wrap","updateSize","resetPrinting","off","toastHide","currentFormat","removeProperty","DEFAULT","_viewDiv","classes","HIDDEN","Util","getDiv","getRenderedHtml","html","lastElementChild","insertAdjacentHTML","createPdf","bind","value","evt","generateLink","registerListeners","loadingCtrl","getControlsByClass","LoadingIndicator","hasWait","addWait","loadJS","window","pdfMake","url","PDFMAKE","olViewport","querySelectorAll","len","length","elm","parentElement","contains","canvas","printLayout","createPDF","filename","location","host","title","trim","getFormattedDate","Date","download","replace","error","ERROR","message","stack","msgErrorMode","EMAIL","removeWait","imageErrorHandling","imageUrl","getLegend","legendByGroup","_process","parentLayer","treeLevel","isVisibleByScale","name","src","srcBase64","params","base64LegendSrc","legend","push","level","_traverse","o","func","Array","isArray","hasOwnProperty","children","header","filter","forEach","hideTree","tree","getTree","layers","Promise","resolve","reject","all","imagePromises","j","k","l","tool","Proxification","proxify","allowedMixedContent","fetchImage","exportable","then","img","complete","imageDetail","imgTagToDataUrl","base64","_getLegendImages","group","index","groupIndex","item","reduce","prev","current","vector","sort","a","b","groupWithHeight","rows","colSpan","fontSize","headerRows","concat","toLowerCase","headerItem","itemIndex","position","indexOf","imageWidth","imageHeight","data","splice","dontBreakRows","keepWithHeaderRows","getGroupTable","basics","onLogoError","logoColumn","logo","imgToDataUrl","dataUrl","calculateAspectRatioFit","titleColumn","getTitleColumn","onError","scaleBarColumn","scaleCtrl","ScaleBar","elem","getElementsByClassName","styling","getComputedStyle","leftBorder","parseInt","getPropertyValue","rightBorder","border","getText","qrTarget","qrCodeBase64","addToCanvas","x","y","mapCanvas","fn","basicsDone","mapPlace","getMap","toDataURL","visible","names","pageBreak","pageOrientation","manageMaxLengthExceed","maxLengthExceed","alertElm","qr"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.MapInfo) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/MapInfo');\r\n}\r\n\r\nTC.control.PrintMap = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n};\r\n\r\nTC.inherit(TC.control.PrintMap, TC.control.MapInfo);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.PrintMap.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-printMap';\r\n\r\n    var self = this;\r\n\r\n    const ORIENTATION = {\r\n        PORTRAIT: 'portrait',\r\n        LANDSCAPE: 'landscape'\r\n    };\r\n    const PAGE_SIZE = {\r\n        A4: 'A4',\r\n        A3: 'A3'\r\n    };\r\n\r\n    /*\r\n        GLS:\r\n        La librería makePDF se basa en la librería PDFKit explicación sobre la unidad de medida que usa:\r\n        PDF points (72 per inch)\r\n        https://stackoverflow.com/questions/51540144/pdfkit-node-js-measurement-unit\r\n        https://www.ninjaunits.com/converters/pixels/points-pixels/\r\n        https://www.ninjaunits.com/converters/pixels/pixels-points/\r\n\r\n        La clave es mantener las dimensiones del mapa en px enteros (canvas sólo admite px enteros), ajustando el layout que está en puntos y que sí admite decimales\r\n    */\r\n\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-printMap-portrait-a4 indicando el valor en px la sección del mapa   */\r\n    var a4_portrait = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 595,\r\n                height: 842\r\n            },\r\n            pageMargins: [29.5, 14, 29.5, 22.5],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0]\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 534,\r\n                                height: 775.5\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0]\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 534,\r\n                                height: 775.5\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-printMap-landscape-a4 indicando el valor en px la sección del mapa   */\r\n    var a4_landscape = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 842,\r\n                height: 595\r\n            },\r\n            pageMargins: [30, 14, 30, 22],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 528\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 528\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-printMap-portrait-a3 indicando el valor en px la sección del mapa   */\r\n    var a3_portrait = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 841.89,\r\n                height: 1190.55\r\n            },\r\n            pageMargins: [29.954, 14, 29.954, 21.55],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            margin: [0, 10, 0, 0],\r\n                            alignment: 'center'\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 1125\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            margin: [0, 10, 0, 0],\r\n                            alignment: 'center'\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 1125\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-printMap-landscape-a3 indicando el valor en px la sección del mapa   */\r\n    var a3_landscape = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 1190.55,\r\n                height: 841.89\r\n            },\r\n            pageMargins: [28.775, 14, 28.775, 14.89],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 1131,\r\n                                height: 783\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 1131,\r\n                                height: 783\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n\r\n    const getLayout = function (orientation, format) {\r\n        switch (orientation) {\r\n            case ORIENTATION.PORTRAIT: {\r\n                switch (format) {\r\n                    case PAGE_SIZE.A4: {\r\n                        return a4_portrait;\r\n                    }\r\n                    case PAGE_SIZE.A3: {\r\n                        return a3_portrait;\r\n                    }\r\n                    default:\r\n                }\r\n                break;\r\n            }\r\n            case ORIENTATION.LANDSCAPE: {\r\n                switch (format) {\r\n                    case PAGE_SIZE.A4: {\r\n                        return a4_landscape;\r\n                    }\r\n                    case PAGE_SIZE.A3: {\r\n                        return a3_landscape;\r\n                    }\r\n                    default:\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                return a4_portrait;\r\n        }\r\n    };\r\n\r\n    const getLogoColumn = function (layout) {\r\n        return layout.layoutPDF.content[0].columns[0];\r\n    };\r\n    const getTitleColumn = function (layout) {\r\n        return layout.layoutPDF.content[0].columns[1];\r\n    };\r\n    const getScaleBarColumn = function (layout) {\r\n        return layout.layoutPDF.content[0].columns[2];\r\n    };\r\n    const getMap = function (layout) {\r\n        return layout.layoutPDF.content[1].table.body[0][0];\r\n    };\r\n\r\n    const options = {\r\n        qrCode: {\r\n            sideLength: 85\r\n        }\r\n    };\r\n\r\n    ctlProto.template = {};\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/PrintMap.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-view'] = TC.apiLocation + \"TC/templates/PrintMapView.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-tools'] = TC.apiLocation + \"TC/templates/PrintMapTools.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"print\" }).w(\"</h2><div><div class=\\\"tc-ctl-printMap-div\\\"><div class=\\\"tc-group tc-ctl-printMap-cnt\\\"><label>\").h(\"i18n\", ctx, {}, { \"$key\": \"title\" }).w(\":</label><input type=\\\"text\\\" class=\\\"tc-ctl-printMap-title tc-textbox\\\" maxlength=\\\"30\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"mapTitle\" }).w(\"\\\" /></div><div class=\\\"tc-group tc-ctl-printMap-cnt\\\"><label>\").h(\"i18n\", ctx, {}, { \"$key\": \"layout\" }).w(\":</label><select id=\\\"print-design\\\" class=\\\"tc-combo\\\"><option value=\\\"landscape\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"landscape\" }).w(\"</option><option value=\\\"portrait\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"portrait\" }).w(\"</option></select></div><div class=\\\"tc-group tc-ctl-printMap-cnt\\\"><label>\").h(\"i18n\", ctx, {}, { \"$key\": \"size\" }).w(\":</label><select id=\\\"print-size\\\" class=\\\"tc-combo\\\"><option value=\\\"a4\\\">A4</option><option value=\\\"a3\\\">A3</option></select></div><div class=\\\"tc-group tc-ctl-printMap-cnt tc-ctl-printMap-cnt-btn\\\"><input id=\\\"tc-ctl-printMap-image-qr\\\" class=\\\"tc-hidden\\\" type=\\\"checkbox\\\" checked style=\\\"display:none;\\\" /><label for=\\\"tc-ctl-printMap-image-qr\\\" class=\\\"tc-ctl-printMap-image-qr-label\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"createQrCodeToImage\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"appendQRCode\" }).w(\"</label><button class=\\\"tc-ctl-printMap-btn tc-button tc-icon-button\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"printMap\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"print\" }).w(\"</button></div><div class=\\\"tc-group tc-ctl-printMap-cnt\\\"><div class=\\\"tc-ctl-printMap-alert tc-alert alert-warning tc-hidden\\\"><p>\").h(\"i18n\", ctx, {}, { \"$key\": \"qrAdvice|s\" }).w(\"</p></div></div></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-view'] = function () { dust.register(ctlProto.CLASS + '-view', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-printMap-view\\\"> </div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-tools'] = function () { dust.register(ctlProto.CLASS + '-tools', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-printMap-tools\\\"><div class=\\\"tc-ctl-printMap-btn-pdf\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"printpdf\" }).w(\"\\\"></div><div class=\\\"tc-ctl-printMap-btn-close\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"\\\"></div></div> \"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const hasLegend = function () {\r\n        const self = this;\r\n\r\n        return self.map.workLayers.some(function (layer) {\r\n            return layer.type === TC.Consts.layerType.WMS && layer.getVisibility();\r\n        });\r\n    };\r\n\r\n    const hasLegendToPrint = function () {\r\n        const self = this;\r\n\r\n        return self.map.workLayers.some(function (layer) {\r\n            if (layer.type === TC.Consts.layerType.WMS && layer.getVisibility()) {\r\n                for (var i = 0; i < layer.names.length; i++) {\r\n                    if (layer.isVisibleByScale(layer.names[i])) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return false;\r\n        });\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.control.MapInfo.prototype.register.call(self, map);\r\n\r\n        // GLS: Añado el flag al mapa para tenerlo en cuenta cuando se establece la función de carga de imágenes\r\n        self.map.mustBeExportable = true;\r\n\r\n        const manageLegendOnZoom = function () {\r\n            var layout = getLayout(self.orientation || ORIENTATION.PORTRAIT, self.format.toString().toUpperCase() || \"A4\");\r\n            layout.reset();\r\n        };\r\n\r\n        const print = function () {\r\n\r\n            self.map.setView(TC.Consts.view.PRINTING);\r\n\r\n            var codeContainer = document.querySelector('.' + self.CLASS + '-qrcode');\r\n            if (document.querySelector(\"#\" + self.CLASS + \"-image-qr\").checked) {\r\n                if (!codeContainer) {\r\n                    codeContainer = document.createElement('div');\r\n                    codeContainer.classList.add(self.CLASS + '-qrcode');\r\n                    self.map.div.appendChild(codeContainer);\r\n                }\r\n\r\n                codeContainer.innerHTML = '';\r\n                self.makeQRCode(codeContainer, options.qrCode.sideLength, options.qrCode.sideLength);\r\n            } else {\r\n                if (codeContainer) {\r\n                    codeContainer.innerHTML = '';\r\n                }\r\n            }\r\n\r\n            const printBtnSelector = '.' + self.CLASS + '-btn';\r\n            self.map.on(TC.Consts.event.STARTLOADING, function () {\r\n                const printBtn = self.div.querySelector(printBtnSelector);\r\n                printBtn.classList.add('disabled');\r\n                printBtn.disabled = true;\r\n            });\r\n\r\n            self.map.on(TC.Consts.event.STOPLOADING, function () {\r\n                const printBtn = self.div.querySelector(printBtnSelector);\r\n                printBtn.classList.remove('disabled');\r\n                printBtn.disabled = false;\r\n            });\r\n\r\n            if (hasLegend.call(self)) {\r\n                // GLS: controlamos si una capa deja de verse por la escala para resetear la leyenda                \r\n                self.map.on(TC.Consts.event.ZOOM, manageLegendOnZoom);\r\n            }\r\n\r\n            const updateCanvas = function (printFormat) {\r\n                if (printFormat) {\r\n                    self.map.div.classList.add(printFormat);\r\n                    /**\r\n                     * Validamos que el resultado en pixels sean valores enteros, si no lo son, redondeamos y establecemos evitando estiramiento del canvas /\r\n                     */\r\n                    var bounding = self.map.div.getBoundingClientRect();\r\n                    if (!Number.isInteger(bounding.width)) {\r\n                        self.map.div.style.width = Math.round(bounding.width) + 'px';\r\n                    }\r\n                    if (!Number.isInteger(bounding.height)) {\r\n                        self.map.div.style.height = Math.round(bounding.height) + 'px';\r\n                    }\r\n\r\n                    self.map.toast(self.getLocaleString('print.advice.title') + ': ' + self.getLocaleString('print.advice.desc'), { type: TC.Consts.msgType.INFO, duration: 7000 });\r\n                }\r\n\r\n                self.map.wrap.map.updateSize();\r\n            };\r\n\r\n            const resetPrinting = function () {\r\n\r\n                var layout = getLayout(self.orientation || ORIENTATION.PORTRAIT, self.format.toString().toUpperCase() || \"A4\");\r\n                layout.reset();\r\n\r\n                if (hasLegend.call(self)) {\r\n                    self.map.off(TC.Consts.event.ZOOM, manageLegendOnZoom);\r\n                }\r\n\r\n                self.map.toastHide(self.getLocaleString('print.advice.title') + ': ' + self.getLocaleString('print.advice.desc'));\r\n\r\n                self.map.div.classList.remove(self.currentFormat);\r\n                self.map.div.classList.remove(self.CLASS + '-printing');\r\n\r\n                self.map.div.style.removeProperty('width');\r\n                self.map.div.style.removeProperty('height');\r\n\r\n                updateCanvas();\r\n\r\n                self.map.setView(TC.Consts.view.DEFAULT);\r\n\r\n                self._viewDiv.classList.add(TC.Consts.classes.HIDDEN);\r\n            };\r\n\r\n            if (!self._viewDiv) {\r\n                self._viewDiv = TC.Util.getDiv();\r\n                document.body.appendChild(self._viewDiv);\r\n\r\n                self.getRenderedHtml(self.CLASS + '-view', null, function (html) {\r\n                    self._viewDiv.innerHTML = html;\r\n                });\r\n\r\n                self.getRenderedHtml(self.CLASS + '-tools', null, function (html) {\r\n                    self.map.div.lastElementChild.insertAdjacentHTML('afterend', html);\r\n\r\n                    self.map.div.querySelector('.' + self.CLASS + '-btn-close').addEventListener('click', resetPrinting);\r\n\r\n                    self.map.div.querySelector('.' + self.CLASS + '-btn-pdf').addEventListener('click', self.createPdf.bind(self));\r\n                });\r\n            }\r\n\r\n            self.orientation = self.div.querySelector(\"#print-design\").value;\r\n            self.format = self.div.querySelector(\"#print-size\").value;\r\n\r\n            self.currentFormat = self.CLASS + '-' + self.orientation + '-' + self.format;\r\n\r\n            self._viewDiv.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n            self.map.div.classList.add(self.CLASS + \"-printing\");\r\n            updateCanvas(self.currentFormat);\r\n        };\r\n\r\n        self.div.addEventListener('click', TC.EventTarget.listenerBySelector('.' + self.CLASS + '-btn', print));\r\n\r\n        self.div.addEventListener('click', TC.EventTarget.listenerBySelector('#' + self.CLASS + '-image-qr', function (evt) {\r\n            self.generateLink();\r\n        }));\r\n\r\n        self.div.addEventListener('click', TC.EventTarget.listenerBySelector('h2', function (evt) {\r\n            self.generateLink();\r\n            self.registerListeners();\r\n        }));\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.createPdf = function () {\r\n        var self = this;\r\n\r\n        var loadingCtrl = self.map.getControlsByClass(TC.control.LoadingIndicator)[0];\r\n        var hasWait = loadingCtrl.addWait();\r\n\r\n        TC.loadJS(!window.pdfMake, [TC.Consts.url.PDFMAKE], function () {\r\n            const olViewport = self.map.div.querySelectorAll('.ol-viewport');\r\n            for (var i = 0, len = olViewport.length; i < len; i++) {\r\n                const elm = olViewport[i];\r\n                if (!elm.parentElement.classList.contains('ol-overviewmap-map')) {\r\n                    self.canvas = elm.querySelector('canvas');\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var layout = getLayout(self.orientation || ORIENTATION.PORTRAIT, self.format.toString().toUpperCase() || \"A4\");\r\n            var printLayout = layout.layoutPDF;\r\n\r\n            const createPDF = function (printLayout) {\r\n                var filename = window.location.host + '_';\r\n                var title = self.div.querySelector('.' + self.CLASS + '-title').value.trim();\r\n\r\n                if (title) {\r\n                    filename += title;\r\n                } else {\r\n                    var currentDate = TC.Util.getFormattedDate(new Date().toString(), true);\r\n                    filename += currentDate;\r\n                }\r\n\r\n                try {\r\n                    pdfMake.createPdf(printLayout).download(filename.replace(/[\\\\\\/:*?\"<>\\|]/g, \"\") + '.pdf');\r\n                } catch (error) {\r\n                    self.map.toast(self.getLocaleString('print.error'), { type: TC.Consts.msgType.ERROR });\r\n                    TC.error(error.message + '  ' + error.stack, TC.Consts.msgErrorMode.EMAIL);\r\n                }\r\n\r\n                loadingCtrl.removeWait(hasWait);\r\n            };\r\n\r\n            const imageErrorHandling = function (imageUrl) {\r\n                TC.error(self.getLocaleString('print.error'));\r\n                TC.error('No se ha podido generar el base64 correspondiente a la imagen: ' + imageUrl, TC.Consts.msgErrorMode.EMAIL, 'Error en la impresión'); //Correo de error\r\n            };\r\n\r\n            const getLogo = function () {\r\n\r\n                const onLogoError = function () {\r\n                    var logoColumn = getLogoColumn(layout);\r\n                    delete logoColumn.image;\r\n                    logoColumn.text = \"\";\r\n                    return logoColumn;\r\n                };\r\n\r\n                if (self.options.logo) {\r\n                    return TC.Util.imgToDataUrl(self.options.logo, 'image/png').then(function (result) {\r\n                        const canvas = result.canvas;\r\n                        const dataUrl = result.dataUrl;\r\n                        var size = TC.Util.calculateAspectRatioFit(canvas.width, canvas.height, layout.logoWidth, layout.logoHeight);\r\n\r\n                        var logoColumn = getLogoColumn(layout);\r\n                        logoColumn.image = dataUrl;\r\n                        return logoColumn;\r\n\r\n                    }, function () {\r\n                        imageErrorHandling(self.options.logo);\r\n\r\n                        return onLogoError();\r\n                    });\r\n                } else {\r\n                    return onLogoError();\r\n                }\r\n            };\r\n            const getScaleBar = function () {\r\n                const onError = function () {\r\n                    var scaleBarColumn = getScaleBarColumn(layout);\r\n                    delete scaleBarColumn.image;\r\n                    scaleBarColumn.text = \"\";\r\n                    scaleBarColumn.width = \"auto\";\r\n                    return scaleBarColumn;\r\n                };\r\n\r\n                var scaleCtrl = self.map.getControlsByClass(TC.control.ScaleBar)[0];\r\n                if (scaleCtrl) {\r\n                    var elem = document.getElementsByClassName(\"ol-scale-line-inner\"); // no cogemos el DIV del control ya que contiene los bordes y suman al ancho total\r\n                    var bounding = elem[0].getBoundingClientRect();\r\n                    if (bounding) {\r\n                        var styling = getComputedStyle(elem[0], null);\r\n                        var leftBorder = parseInt(styling.getPropertyValue('border-left-width').replace('px', '')) || 0;\r\n                        var rightBorder = parseInt(styling.getPropertyValue('border-right-width').replace('px', '')) || 0;\r\n\r\n                        var scaleBarColumn = getScaleBarColumn(layout);\r\n\r\n                        scaleBarColumn.table = {\r\n                            widths: [((bounding.width > bounding.height ? bounding.width : bounding.height) - leftBorder - rightBorder) * 0.75], // lo pasamos a pt\r\n                            body: [\r\n                                [{ border: [true, false, true, true], text: scaleCtrl.getText(), fontSize: 10, alignment: 'center' }]\r\n                            ]\r\n                        };\r\n\r\n                        scaleBarColumn.layout = {\r\n                            paddingLeft: function (i, node) { return 0; },\r\n                            paddingRight: function (i, node) { return 0; },\r\n                            paddingTop: function (i, node) { return 0; },\r\n                            paddingBottom: function (i, node) { return 0; }\r\n                        };\r\n\r\n                        return scaleBarColumn;\r\n                    } else {\r\n                        onError();\r\n                    }\r\n                } else {\r\n                    onError();\r\n                }\r\n            };\r\n            const getLegend = function () {\r\n                var content = [];\r\n                var layers = self.map.workLayers.filter(function (layer) {\r\n                    return layer.type === TC.Consts.layerType.WMS && layer.getVisibility();\r\n                });\r\n                var legendByGroup = [];\r\n                var indentationIncrement = 7;\r\n\r\n                var _process = function (value, parentLayer, treeLevel) {\r\n                    if (parentLayer.isVisibleByScale(value.name)) { //Si la capa es visible, la mostramos en la leyenda\r\n                        var src,\r\n                            srcBase64;\r\n\r\n                        //Para las capas cargadas por POST (por ejemplo la búsquedas de Comercio Pamplona)\r\n                        if (parentLayer.options && parentLayer.options.params && parentLayer.options.params.base64LegendSrc) {\r\n                            srcBase64 = parentLayer.options.params.base64LegendSrc;\r\n                        }\r\n                        else if (value.legend) {\r\n                            src = value.legend.src;\r\n                        }\r\n\r\n                        result.push({ src: src, title: value.title, level: treeLevel, srcBase64: srcBase64 });\r\n                    }\r\n                };\r\n                var _traverse = function (o, func, parentLayer, treeLevel) {\r\n                    if (Array.isArray(o)) {\r\n                        for (var i = 0; i < o.length; i++) {\r\n                            _traverse(o[i], func, parentLayer, treeLevel);\r\n                        }\r\n                    } else {\r\n                        if (o && o.hasOwnProperty('children') && o.children.length > 0) {\r\n                            if (o.title && o.name) {\r\n                                result.push({ header: o.title, level: treeLevel });\r\n                            }\r\n                            _traverse(o.children, func, parentLayer, ++treeLevel);\r\n                        }\r\n                    }\r\n\r\n                    if (o && o.hasOwnProperty('children') && o.children.length == 0) {\r\n                        func.apply(this, [o, parentLayer, treeLevel]);\r\n                        treeLevel--;\r\n                    }\r\n                };\r\n                var _getLegendImages = function () {\r\n                    var imagePromises = [];\r\n\r\n                    for (var i = 0; i < legendByGroup.length; i++) {\r\n                        var layers = legendByGroup[i].layers;\r\n\r\n                        for (var j = 0; j < layers.length; j++) {\r\n                            (function (k, l) {\r\n                                var layer = legendByGroup[k].layers[l];\r\n                                var src = layer.src || layer.srcBase64;\r\n\r\n                                if (src) {\r\n\r\n                                    if (!TC.tool || !TC.tool.Proxification) {\r\n                                        TC.syncLoadJS(TC.apiLocation + 'TC/tool/Proxification');\r\n                                    }\r\n\r\n                                    imagePromises.push(new Promise(function (resolve, reject) {\r\n                                        var toolProxification = new TC.tool.Proxification(TC.proxify, { allowedMixedContent: true });\r\n                                        toolProxification.fetchImage(src, { exportable: true }).then(function (img) {\r\n                                            if (img.complete) {\r\n                                                var imageDetail = TC.Util.imgTagToDataUrl(img, 'image/png');\r\n                                                layer.image = { base64: imageDetail.base64, canvas: imageDetail.canvas };\r\n                                            } else {\r\n                                                imageErrorHandling(src);\r\n                                            }\r\n\r\n                                            resolve();\r\n\r\n                                        }, function (error) {\r\n                                            imageErrorHandling(src);\r\n                                            reject();\r\n                                        });\r\n                                    }));\r\n                                }\r\n                            })(i, j);\r\n                        }\r\n                    }\r\n\r\n                    return imagePromises;\r\n                };\r\n\r\n                layers.forEach(function (layer) {\r\n                    result = [];\r\n\r\n                    var hideTree = layer.options.hideTree;\r\n\r\n                    layer.tree = null;\r\n                    layer.options.hideTree = true;\r\n\r\n                    _traverse(layer.getTree(), _process, layer, 0);\r\n\r\n                    layer.options.hideTree = hideTree;\r\n\r\n                    if (result.length > 0) {\r\n                        legendByGroup.push({ title: layer.title, layers: result });\r\n                    }\r\n                });\r\n\r\n                return new Promise(function (resolve, reject) {\r\n                    Promise.all(_getLegendImages()).then(function () {\r\n\r\n                        const getGroupTable = function (group, index) {                            \r\n                            var rows = [[{ text: group.title, colSpan: 2, alignment: 'left', fontSize: 11, margin: [0, index > 0 ? 10 : 0, 0, 5] }, {}]];\r\n                            var indentation = 10;\r\n\r\n                            rows = rows.concat(group.layers.filter(function (item) {\r\n                                return item.hasOwnProperty('header') && item.header.trim().toLowerCase() !== group.title.trim().toLowerCase();\r\n                            }).map(function (item) {\r\n                                return [{ text: item.header.trim(), colSpan: 2, alignment: 'left', margin: [indentation * item.level, 0, 0, 3] }, {}];\r\n                            }));\r\n\r\n                            const headerRows = rows.length;\r\n                            var headerItem = null;\r\n                            var itemIndex = null;\r\n\r\n                            const getLayerTable = function (item, index) {\r\n                                if (item.header) {\r\n                                    headerItem = item;\r\n\r\n                                    if (itemIndex) {\r\n                                        itemIndex = null;\r\n                                    }\r\n                                } else {\r\n                                    if (!itemIndex) {\r\n                                        itemIndex = 1;\r\n                                    }\r\n\r\n                                    var position;\r\n                                    if (headerItem) {\r\n                                        var headerIndex = rows.map(function (item) { return item[0].text }).indexOf(headerItem.header);\r\n                                        position = headerIndex + itemIndex++;\r\n                                    }\r\n\r\n                                    if (item.image) {\r\n                                        var imageWidth = item.image.canvas.width / 2;\r\n                                        var imageHeight = (imageWidth * item.image.canvas.height / item.image.canvas.width);\r\n\r\n                                        var data = [{\r\n                                            text: item.title,\r\n                                            fontSize: 9,\r\n                                            width: 'auto',\r\n                                            margin: [indentation * item.level, 0, 0, 2]\r\n                                        }, {\r\n                                            image: item.image.base64,\r\n                                            width: imageWidth,\r\n                                            height: imageHeight,\r\n                                            margin: [indentation * item.level, 0, 0, 2]\r\n                                        }];\r\n\r\n                                        if (position) {\r\n                                            rows.splice(position, 0, data);\r\n                                        } else {\r\n                                            rows.push(data);\r\n                                        }\r\n\r\n                                    } else {\r\n                                        var data = [{\r\n                                            text: item.title,\r\n                                            fontSize: 9,\r\n                                            colSpan: 2,\r\n                                            margin: [indentation * item.level, 0, 0, 2]\r\n                                        }, {}];\r\n\r\n                                        if (position) {\r\n                                            rows.splice(position, 0, data);\r\n                                        } else {\r\n                                            rows.push(data);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            };\r\n\r\n                            group.layers.forEach(getLayerTable);\r\n\r\n                            content.push({\r\n                                layout: 'noBorders',\r\n                                table: {\r\n                                    dontBreakRows: true,\r\n                                    keepWithHeaderRows: 1,\r\n                                    headerRows: headerRows,\r\n                                    body: rows\r\n                                }\r\n                            });\r\n                        };\r\n\r\n                        legendByGroup.map(function (group, index) {\r\n                            return {\r\n                                groupIndex: index,\r\n                                height: group.layers.filter(function (item) {\r\n                                    return item.image && item.image.canvas;\r\n                                }).reduce(function (prev, current, index, vector) {\r\n                                    return prev + vector[index].image.canvas.height;\r\n                                }, 0)\r\n                            }\r\n                        }).sort(function (a, b) {\r\n                            if (a.height > b.height) {\r\n                                return 1;\r\n                            }\r\n                            if (a.height < b.height) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        }).forEach(function (groupWithHeight, index) {\r\n                            getGroupTable(legendByGroup[groupWithHeight.groupIndex], index)\r\n                        });\r\n\r\n                        resolve(content);\r\n\r\n                    }, function () {\r\n                        reject([]);\r\n                    });\r\n                });\r\n            };\r\n            const drawQR = function () {\r\n                // GLS: añadimos el QR\r\n                //QR\r\n                if (document.querySelector(\"#\" + self.CLASS + \"-image-qr\").checked) {\r\n                    const qrTarget = document.querySelector('.' + self.CLASS + '-qrcode');\r\n                    qrTarget.innerHTML = '';\r\n                    return self.makeQRCode(qrTarget, options.qrCode.sideLength, options.qrCode.sideLength).then(function (qrCodeBase64) {\r\n                        if (qrCodeBase64) {\r\n                            return TC.Util.addToCanvas(self.canvas, qrCodeBase64, { x: self.canvas.width - options.qrCode.sideLength, y: self.canvas.height - options.qrCode.sideLength }, {width: options.qrCode.sideLength, height: options.qrCode.sideLength }).then(function (mapCanvas) {\r\n                                return mapCanvas;\r\n                            });\r\n                        } else {\r\n                            TC.error(self.getLocaleString('print.qr.error'));\r\n                            return self.canvas;\r\n                        }\r\n                    });\r\n                } else {\r\n                    return self.canvas;\r\n                }\r\n            };\r\n\r\n            const basics = [getLogo, function () {\r\n                var titleColumn = getTitleColumn(layout);\r\n                titleColumn.text = self.div.querySelector('.' + self.CLASS + '-title').value.trim();\r\n                return titleColumn;\r\n            }, getScaleBar, drawQR];\r\n\r\n            Promise.all(basics.map(function (fn) {\r\n                return fn();\r\n            })).then(function (basicsDone) {\r\n\r\n                if (basicsDone[2].table) { // GLS: ajustamos el ancho del título para arrinconar la escala\r\n                    layout.layoutPDF.content[0].columns[1].width = layout.layoutPDF.pageSize.width - (layout.layoutPDF.pageMargins[0] + layout.layoutPDF.pageMargins[2]) - layout.layoutPDF.content[0].columns[0].width - (layout.layoutPDF.content[0].columns[2].table.widths[0] + 2);\r\n                }\r\n\r\n                var mapPlace = getMap(layout);\r\n                var canvas = basicsDone[3] || self.canvas;\r\n\r\n                mapPlace.image = canvas.toDataURL();\r\n\r\n                if (self.options.legend &&\r\n                    self.options.legend.visible &&\r\n                    hasLegendToPrint.call(self) && // GLS: validamos que haya capas visibles por escala \r\n                    printLayout.content.length == 2) { // GLS: es la primera descarga o hemos resetado la leyenda por algún zoom por lo que no tenemos la leyenda en el layout\r\n\r\n                    const title = self.div.querySelector('.' + self.CLASS + '-title').value.trim();\r\n                    printLayout.content.push({\r\n                        pageBreak: 'before',\r\n                        pageOrientation: self.options.legend.orientation || 'portrait',\r\n                        text: title.length > 0 ? title : '',\r\n                        fontSize: 14,\r\n                        margin: [0, 20, 0, 10]\r\n                    });\r\n\r\n                    getLegend().then(function (content) {\r\n                        printLayout.content = printLayout.content.concat(content);\r\n                        createPDF(printLayout);\r\n                    });\r\n                } else {\r\n                    createPDF(printLayout);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.manageMaxLengthExceed = function (maxLengthExceed) {\r\n        const self = this;\r\n\r\n        const alertElm = self.div.querySelector('.' + self.CLASS + '-alert');\r\n        if (document.querySelector(\"#\" + self.CLASS + \"-image-qr\").checked) {\r\n            if (maxLengthExceed.qr) {\r\n                alertElm.classList.remove(TC.Consts.classes.HIDDEN);\r\n            } else {\r\n                alertElm.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n        } else {\r\n            alertElm.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n    };\r\n\r\n})();"],"file":"../../control/PrintMap.min.js"}