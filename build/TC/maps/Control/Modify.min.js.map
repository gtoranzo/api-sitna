{"version":3,"sources":["control/Modify.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","BEFOREFEATUREMODIFY","FEATUREMODIFY","FEATURESSELECT","FEATURESUNSELECT","CHANGE","Modify","apply","this","arguments","browserFeatures","inputTypeColor","window","CP","loadCSS","styles","Util","extend","Cfg","selection","options","text","fontSize","line","fontColor","labelOutlineColor","labelOutlineWidth","_classSelector","CLASS","wrap","inherit","ctlProto","prototype","isDebug","template","dust","register","body_0","chk","ctx","w","h","$key","f","get","__dustBody","setFeatureSelectedState","ctl","features","_deleteBtn","disabled","length","_joinBtn","_splitBtn","filter","complexGeometryFilter","displayLabelText","elm","result","feature","MultiPolygon","MultiPolyline","geometry","map","self","call","layer","setLayer","on","FEATUREADD","FEATURESADD","e","Promise","all","getLayer","renderPromise","then","objects","_selectBtn","_textBtn","FEATUREREMOVE","FEATURESCLEAR","unselectFeatures","getSelectedFeatures","setTextMode","featureSelectUpdater","selectedFeatures","indexOf","forEach","toggleSelectedStyle","render","callback","renderCallback","div","querySelector","addEventListener","CLICK","target","isActive","deactivate","activate","deleteSelectedFeatures","textActive","_textInput","labelFeatures","value","_styleSection","_fontColorPicker","setFontColor","_fontSizeSelector","setFontSize","isFunction","renderObject","_set1stRenderPromise","renderData","input","style","backgroundColor","color","picker","document","body","onclick","preventDefault","onfocus","blur","onchange","loaded","classList","add","classes","ACTIVE","mode","remove","clear","clearFatures","isExclusive","end","setMode","putLayerOnTop","resolve","_layerPromise","reject","setSelectedFeatures","getActiveFeatures","push","feat","removeFeature","styleFunction","resolution","mapStyles","Polygon","polygon","Point","MultiPoint","point","getStyle","label","active","HIDDEN","setFontColorWatch","outlineColor","undefined","colorArrayToString","getLabelOutlineColor","textShadow","setStyle","setFontSizeWatch","size","sizeValue","parseInt","Number","NaN","matchForShort","match","matchForLong","textStyle","labelOffset"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.BEFOREFEATUREMODIFY = \"beforefeaturemodify.tc\";\r\nTC.Consts.event.FEATUREMODIFY = \"featuremodify.tc\";\r\nTC.Consts.event.FEATURESSELECT = \"featuresselect.tc\";\r\nTC.Consts.event.FEATURESUNSELECT = \"featuresunselect.tc\";\r\nTC.Consts.event.CHANGE = 'change';\r\n\r\n(function () {\r\n\r\n    TC.control.Modify = function () {\r\n        var self = this;\r\n\r\n        TC.Control.apply(self, arguments);\r\n\r\n        if (!TC.browserFeatures.inputTypeColor() && !window.CP) {\r\n            TC.loadCSS(TC.apiLocation + 'lib/color-picker/color-picker.min.css');\r\n            TC.syncLoadJS(TC.apiLocation + 'lib/color-picker/color-picker.min.js');\r\n        }\r\n\r\n        self.styles = TC.Util.extend(true, TC.Cfg.styles.selection, self.options.styles);\r\n        self.styles.text = self.styles.text || {\r\n            fontSize: self.styles.line.fontSize,\r\n            fontColor: self.styles.line.fontColor,\r\n            labelOutlineColor: self.styles.line.labelOutlineColor,\r\n            labelOutlineWidth: self.styles.line.labelOutlineWidth\r\n        };\r\n\r\n        self._classSelector = '.' + self.CLASS;\r\n\r\n        self.wrap = new TC.wrap.control.Modify(self);\r\n    };\r\n\r\n    TC.inherit(TC.control.Modify, TC.Control);\r\n\r\n    var ctlProto = TC.control.Modify.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-mod';\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template = TC.apiLocation + \"TC/templates/Modify.html\";\r\n    }\r\n    else {\r\n        ctlProto.template = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-btn tc-ctl-mod-btn-select\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"select\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"select\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-delete\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteSelection\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteSelection\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-join\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"joinGeometries.tooltip\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"joinGeometries\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-split\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"splitGeometry\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"splitGeometry\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-text\\\" contenteditable=\\\"true\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"addText\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"addText\" }).w(\"</button><div class=\\\"tc-ctl-mod-style tc-hidden\\\"><input type=\\\"text\\\" class=\\\"tc-ctl-mod-txt tc-textbox\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"writeTextForSketch\" }).w(\"\\\" style=\\\"font-size:\").f(ctx.get([\"fontSize\"], false), ctx, \"h\").w(\"pt;font-color:\").f(ctx.get([\"fontColor\"], false), ctx, \"h\").w(\";text-shadow: 0 0 \").f(ctx.get([\"labelOutlineWidth\"], false), ctx, \"h\").w(\"px \").f(ctx.get([\"labelOutlineColor\"], false), ctx, \"h\").w(\";\\\" />\").h(\"i18n\", ctx, {}, { \"$key\": \"textColor\" }).w(\"<input type=\\\"color\\\" class=\\\"tc-ctl-mod-fnt-c\\\" value=\\\"\").f(ctx.get([\"fontColor\"], false), ctx, \"h\").w(\"\\\" />\").h(\"i18n\", ctx, {}, { \"$key\": \"fontSize\" }).w(\"<input type=\\\"number\\\" class=\\\"tc-ctl-mod-fnt-s tc-textbox\\\" value=\\\"\").f(ctx.get([\"fontSize\"], false), ctx, \"h\").w(\"\\\" min=\\\"7\\\" max=\\\"20\\\" /></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const setFeatureSelectedState = function (ctl, features) {\r\n        ctl._deleteBtn.disabled = features.length === 0;\r\n        ctl._joinBtn.disabled = features.length < 2;\r\n        ctl._splitBtn.disabled = features.filter(complexGeometryFilter).length === 0;\r\n        ctl.displayLabelText();\r\n    };\r\n\r\n    const styleFunction = function (feature, mapStyles) {\r\n        var result;\r\n        switch (true) {\r\n            case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n            case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                result = TC.Util.extend({}, mapStyles.polygon);\r\n                break;\r\n            case TC.feature.Point && feature instanceof TC.feature.Point:\r\n            case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                result = TC.Util.extend({}, mapStyles.point);\r\n                break;\r\n            default:\r\n                result = TC.Util.extend({}, mapStyles.line);\r\n                break;\r\n        }\r\n        const style = feature.getStyle();\r\n        if (style.label) {\r\n            result.label = style.label;\r\n            result.fontSize = style.fontSize;\r\n            result.fontColor = style.fontColor;\r\n            result.labelOutlineColor = style.labelOutlineColor;\r\n            result.labelOutlineWidth = style.labelOutlineWidth;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    //const setFeatureSelectedStyle = function (ctl, features) {\r\n    //    const mapStyles = ctl.map.options.styles.selection;\r\n    //    features.forEach(function (feature) {\r\n    //        feature._originalStyle = TC.Util.extend({}, feature.getStyle());\r\n    //        feature.setStyle(ctl.styleFunction(feature));\r\n    //    });\r\n    //};\r\n\r\n    //const setFeatureUnselectedStyle = function (ctl, features) {\r\n    //    features.forEach(function (feature) {\r\n    //        if (feature._originalStyle) {\r\n    //            const style = feature.getStyle();\r\n    //            if (style.label) {\r\n    //                const originalStyle = feature._originalStyle;\r\n    //                originalStyle.label = style.label;\r\n    //                originalStyle.fontSize = style.fontSize;\r\n    //                originalStyle.fontColor = style.fontColor;\r\n    //                originalStyle.labelOutlineColor = style.labelOutlineColor;\r\n    //                originalStyle.labelOutlineWidth = style.labelOutlineWidth;\r\n    //            }\r\n    //            feature.setStyle(feature._originalStyle);\r\n    //            feature._originalStyle = undefined;\r\n    //        }\r\n    //    })\r\n    //};\r\n\r\n    const complexGeometryFilter = function (elm) {\r\n        var result = false;\r\n        if ((TC.feature.MultiPolygon && elm instanceof TC.feature.MultiPolygon) ||\r\n            (TC.feature.MultiPolyline && elm instanceof TC.feature.MultiPolyline)) {\r\n            if (elm.geometry.length > 1) {\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n        if (self.options.layer) {\r\n\r\n            self.setLayer(self.options.layer);\r\n\r\n            map\r\n                .on(TC.Consts.event.FEATUREADD + ' ' + TC.Consts.event.FEATURESADD, function (e) {\r\n                    Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                        const layer = objects[0];\r\n                        if (e.layer === layer) {\r\n                            self._selectBtn.disabled = false;\r\n                            self._textBtn.disabled = false;\r\n                        }\r\n                    });\r\n                })\r\n                .on(TC.Consts.event.FEATUREREMOVE + ' ' + TC.Consts.event.FEATURESCLEAR, function (e) {\r\n                    const layer = e.layer;\r\n                    const feature = e.feature;\r\n                    Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                        if (layer === objects[0]) {\r\n                            if (feature) {\r\n                                self.unselectFeatures([feature]);\r\n                            }\r\n                            else {\r\n                                self.unselectFeatures();\r\n                            }\r\n                            setFeatureSelectedState(self, self.getSelectedFeatures());\r\n                            if (self.layer.features.length === 0) {\r\n                                self._selectBtn.disabled = true;\r\n                                self.setTextMode(false);\r\n                                self._textBtn.disabled = true;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n\r\n            const featureSelectUpdater = function () {\r\n                const selectedFeatures = self.getSelectedFeatures();\r\n                setFeatureSelectedState(self, selectedFeatures);\r\n                const unselectedFeatures = self.layer.features.filter(function (feature) {\r\n                    return selectedFeatures.indexOf(feature) < 0;\r\n                });\r\n                unselectedFeatures.forEach(function (feature) {\r\n                    feature.toggleSelectedStyle(false);\r\n                });\r\n                selectedFeatures.forEach(function (feature) {\r\n                    feature.toggleSelectedStyle(true);\r\n                });\r\n            };\r\n            self\r\n                .on(TC.Consts.event.FEATURESSELECT, featureSelectUpdater)\r\n                .on(TC.Consts.event.FEATURESUNSELECT, featureSelectUpdater);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        const renderCallback = function () {\r\n            self._selectBtn = self.div.querySelector('.' + self.CLASS + '-btn-select');\r\n            self._selectBtn.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                if (!e.target.disabled) {\r\n                    if (self.isActive) {\r\n                        self.deactivate();\r\n                    }\r\n                    else {\r\n                        self.activate();\r\n                    }\r\n                }\r\n            });\r\n            self._deleteBtn = self.div.querySelector('.' + self.CLASS + '-btn-delete');\r\n            self._deleteBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.deleteSelectedFeatures();\r\n            });\r\n            self._textBtn = self.div.querySelector('.' + self.CLASS + '-btn-text');\r\n            self._textBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.setTextMode(!self.textActive);\r\n            });\r\n            self._joinBtn = self.div.querySelector('.' + self.CLASS + '-btn-join');\r\n            self._splitBtn = self.div.querySelector('.' + self.CLASS + '-btn-split');\r\n            self._textInput = self.div.querySelector('input.' + self.CLASS + '-txt');\r\n            self._textInput.addEventListener('input', function (e) {\r\n                self.labelFeatures(e.target.value);\r\n            });\r\n            self._styleSection = self.div.querySelector('.' + self.CLASS + '-style');\r\n\r\n            self._fontColorPicker = self.div.querySelector(self._classSelector + '-fnt-c');\r\n            self._fontColorPicker.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontColor(e.target.value);\r\n            });\r\n\r\n            self._fontSizeSelector = self.div.querySelector('.' + self.CLASS + '-fnt-s');\r\n            self._fontSizeSelector.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontSize(e.target.value);\r\n            });\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        const renderObject = {\r\n            fontSize: self.styles.text.fontSize,\r\n            fontColor: self.styles.text.fontColor,\r\n            labelOutlineColor: self.styles.text.labelOutlineColor,\r\n            labelOutlineWidth: self.styles.text.labelOutlineWidth\r\n        };\r\n\r\n        var promise;\r\n        if (TC.browserFeatures.inputTypeColor()) {\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, renderCallback));\r\n        }\r\n        else {\r\n            // El navegador no soporta input[type=color], usamos polyfill\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, function () {\r\n                const input = self.div.querySelector('input[type=color]');\r\n                input.style.backgroundColor = input.value;\r\n                input.style.color = 'transparent';\r\n                const picker = new CP(input, 'click', document.body);\r\n\r\n                input.onclick = function (e) {\r\n                    e.preventDefault();\r\n                };\r\n\r\n                // Evitamos que salga el teclado virtual en iOS\r\n                input.onfocus = function (e) {\r\n                    this.blur();\r\n                };\r\n\r\n                input.onchange = function (e) {\r\n                    this.style.backgroundColor = this.value;\r\n                };\r\n                self.map.loaded(function () {\r\n                    picker.on(\"change\", function (color) {\r\n                        self.setFontColor('#' + color);\r\n                    });\r\n                });\r\n\r\n                renderCallback();\r\n            }));\r\n        }\r\n        return promise;\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        const self = this;\r\n        self._selectBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n        TC.Control.prototype.activate.call(self);\r\n        self.wrap.activate(self.mode);\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        const self = this;\r\n        TC.Control.prototype.deactivate.call(self);\r\n        if (self._selectBtn) {\r\n            setFeatureSelectedState(self, []);\r\n        }\r\n        if (self.wrap) {\r\n            self.wrap.deactivate();\r\n        }\r\n        //self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        if (self._selectBtn) {\r\n            self._selectBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n            self.layer.features.forEach(function (feature) {\r\n                feature.toggleSelectedStyle(false);\r\n            });\r\n            //setFeatureUnselectedStyle(self, self.getSelectedFeatures());\r\n        }\r\n    };\r\n\r\n    ctlProto.clear = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            self.layer.clearFatures();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return true;\r\n    };\r\n\r\n    ctlProto.end = function () {\r\n        const self = this;\r\n        self.wrap.end();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setMode = function (mode, activate) {\r\n        const self = this;\r\n\r\n        if (mode)\r\n            self.mode = mode;\r\n\r\n        if (activate && mode) {\r\n            if (self.layer) {\r\n                self.layer.map.putLayerOnTop(self.layer);\r\n            }\r\n            self.activate();\r\n        }\r\n        else {\r\n            self.deactivate();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLayer = function () {\r\n        var self = this;\r\n        // Se ha instanciado un control sin capa asociada\r\n        if (self.options && typeof self.options.layer === 'boolean' && !self.options.layer) {\r\n            return Promise.resolve(null);\r\n        }\r\n        if (self.layer) {\r\n            return Promise.resolve(self.layer);\r\n        }\r\n        return self._layerPromise;\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        var self = this;\r\n        if (self.map) {\r\n            self._layerPromise = new Promise(function (resolve, reject) {\r\n                if (typeof (layer) === \"string\") {\r\n                    self.map.loaded(function () {\r\n                        self.layer = self.map.getLayer(layer);\r\n                        resolve(self.layer);\r\n                    });\r\n                }\r\n                else {\r\n                    self.layer = layer;\r\n                    resolve(self.layer);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.getSelectedFeatures = function () {\r\n        return this.wrap.getSelectedFeatures();\r\n    };\r\n\r\n    ctlProto.setSelectedFeatures = function (features) {\r\n        const self = this;\r\n        const result = self.wrap.setSelectedFeatures(features);\r\n        self.displayLabelText();\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getActiveFeatures = function () {\r\n        const self = this;\r\n        const result = self.getSelectedFeatures();\r\n        if (!result.length && self.layer.features.length) {\r\n            result.push(self.layer.features[self.layer.features.length - 1]);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.unselectFeatures = function (features) {\r\n        features = features || [];\r\n        this.wrap.unselectFeatures(features.map(function (feat) {\r\n            return feat.wrap.feature;\r\n        }));\r\n        return this;\r\n    };\r\n\r\n    ctlProto.deleteSelectedFeatures = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        self.wrap.unselectFeatures(features);\r\n        features.forEach(function (feature) {\r\n            self.layer.removeFeature(feature);\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.styleFunction = function (feature, resolution) {\r\n        const self = this;\r\n        var result;\r\n        const mapStyles = self.map.options.styles.selection;\r\n        switch (true) {\r\n            case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n            case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                result = TC.Util.extend({}, mapStyles.polygon);\r\n                break;\r\n            case TC.feature.Point && feature instanceof TC.feature.Point:\r\n            case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                result = TC.Util.extend({}, mapStyles.point);\r\n                break;\r\n            default:\r\n                result = TC.Util.extend({}, mapStyles.line);\r\n                break;\r\n        }\r\n        const style = feature.getStyle();\r\n        if (style.label) {\r\n            result.label = style.label;\r\n            result.fontSize = style.fontSize;\r\n            result.fontColor = style.fontColor;\r\n            result.labelOutlineColor = style.labelOutlineColor;\r\n            result.labelOutlineWidth = style.labelOutlineWidth;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setTextMode = function (active) {\r\n        const self = this;\r\n        self.textActive = active;\r\n        if (active) {\r\n            self._textBtn.classList.add(TC.Consts.classes.ACTIVE, active);\r\n            self._styleSection.classList.remove(TC.Consts.classes.HIDDEN);\r\n        }\r\n        else {\r\n            self._textBtn.classList.remove(TC.Consts.classes.ACTIVE, active);\r\n            self._styleSection.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n        self.displayLabelText();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColorWatch = function (color, outlineColor) {\r\n        const self = this;\r\n        if (color === undefined) {\r\n            color = self.styles.text.fontColor;\r\n        }\r\n        color = TC.Util.colorArrayToString(color);\r\n        outlineColor = outlineColor || self.getLabelOutlineColor(color);\r\n        self.renderPromise().then(function () {\r\n            self._fontColorPicker.value = color;\r\n            self._textInput.style.color = color;\r\n            self._textInput.style.textShadow = '0 0 ' + self.styles.text.labelOutlineWidth + 'px ' + outlineColor;\r\n            if (!TC.browserFeatures.inputTypeColor()) {\r\n                self._fontColorPicker.style.backgroundColor = color;\r\n                self._fontColorPicker.blur();\r\n            }\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColor = function (color) {\r\n        const self = this;\r\n        self.styles.text.fontColor = color;\r\n        self.styles.text.labelOutlineColor = self.getLabelOutlineColor(color);\r\n        self.setFontColorWatch(color, self.styles.text.labelOutlineColor);\r\n        const features = self.getActiveFeatures();\r\n        features.forEach(function (feature) {\r\n            const style = feature.getStyle();\r\n            style.fontColor = color;\r\n            style.labelOutlineColor = self.styles.text.labelOutlineColor;\r\n            feature.setStyle(style);\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSizeWatch = function (size) {\r\n        const self = this;\r\n        if (size === undefined) {\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.renderPromise().then(function () {\r\n                self._fontSizeSelector.value = sizeValue;\r\n                self._textInput.style.fontSize = sizeValue + 'pt';\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSize = function (size) {\r\n        const self = this;\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.styles.text.fontSize = sizeValue;\r\n            self.setFontSizeWatch(sizeValue);\r\n            const features = self.getActiveFeatures();\r\n            features.forEach(function (feature) {\r\n                const style = feature.getStyle();\r\n                style.fontSize = sizeValue;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLabelOutlineColor = function (fontColor) {\r\n        if (fontColor) {\r\n            fontColor = TC.Util.colorArrayToString(fontColor);\r\n            const matchForShort = fontColor.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n            if (matchForShort && matchForShort.length) {\r\n                fontColor = '#' + matchForShort[1] + matchForShort[1] + matchForShort[2] + matchForShort[2] + matchForShort[3] + matchForShort[3];\r\n            }\r\n            const matchForLong = fontColor.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);\r\n            if (matchForLong && matchForLong.length) {\r\n                const r = parseInt(matchForLong[1], 16);\r\n                const g = parseInt(matchForLong[2], 16);\r\n                const b = parseInt(matchForLong[3], 16);\r\n                return (r + g + b) / 3 < 128 ? '#ffffff' : '#000000';\r\n            }\r\n        }\r\n        return '#ffffff';\r\n    };\r\n\r\n    ctlProto.displayLabelText = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        var text;\r\n        var size;\r\n        var color;\r\n        if (self.isActive && features.length) {\r\n            const feature = features[features.length - 1];\r\n            const style = feature.getStyle();\r\n            text = style.label;\r\n            color = style.fontColor;\r\n            size = style.fontSize;\r\n        }\r\n        else {\r\n            text = '';\r\n            color = self.styles.text.fontColor;\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        self.renderPromise().then(function () {\r\n            self\r\n                .setFontSizeWatch(size)\r\n                .setFontColorWatch(color)\r\n                ._textInput.value = text || '';\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.labelFeatures = function (text) {\r\n        const self = this;\r\n        const features = self.getActiveFeatures();\r\n        if (features.length) {\r\n            const style = features[0].getStyle();\r\n            features.forEach(function (feature) {\r\n                const textStyle = TC.Util.extend({}, self.styles.text, style);\r\n                style.label = text;\r\n                style.labelOffset = textStyle.labelOffset;\r\n                style.fontColor = textStyle.fontColor;\r\n                style.fontSize = textStyle.fontSize;\r\n                style.labelOutlineColor = textStyle.labelOutlineColor;\r\n                style.labelOutlineWidth = textStyle.labelOutlineWidth;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n})();"]}