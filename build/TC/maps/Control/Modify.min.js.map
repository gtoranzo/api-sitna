{"version":3,"sources":["control/Modify.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","BEFOREFEATUREMODIFY","FEATUREMODIFY","FEATURESSELECT","FEATURESUNSELECT","CHANGE","Modify","apply","this","arguments","browserFeatures","inputTypeColor","window","CP","loadCSS","styles","Util","extend","Cfg","selection","options","text","fontSize","line","fontColor","labelOutlineColor","labelOutlineWidth","_classSelector","CLASS","wrap","snapping","inherit","ctlProto","prototype","template","dust","register","body_0","chk","ctx","w","h","$key","f","get","__dustBody","s","block","body_1","setFeatureSelectedState","ctl","features","_deleteBtn","disabled","length","_editAttrBtn","_joinBtn","_splitBtn","filter","complexGeometryFilter","displayLabelText","elm","result","feature","MultiPolygon","MultiPolyline","geometry","map","self","call","layer","setLayer","on","FEATUREADD","FEATURESADD","e","Promise","all","getLayer","renderPromise","then","objects","setSelectableState","FEATUREREMOVE","FEATURESCLEAR","unselectFeatures","getSelectedFeatures","setTextMode","LAYERUPDATE","selectedFeatures","indexOf","forEach","toggleSelectedStyle","getAttributeDisplayTarget","classList","contains","classes","HIDDEN","displayAttributes","closeAttributes","render","callback","renderCallback","_selectBtn","div","querySelector","addEventListener","CLICK","target","isActive","deactivate","activate","deleteSelectedFeatures","_textBtn","textActive","toggleAttributes","_textInput","labelFeatures","value","_styleSection","_fontColorPicker","setFontColor","_fontSizeSelector","setFontSize","_attributesSection","isFunction","renderObject","_set1stRenderPromise","renderData","input","style","backgroundColor","color","picker","document","body","onclick","preventDefault","onfocus","blur","onchange","loaded","add","ACTIVE","mode","remove","clear","clearFatures","isExclusive","end","setMode","putLayerOnTop","resolve","_layerPromise","setSelectedFeatures","reject","objs","active","getActiveFeatures","push","feat","removeFeature","trigger","styleFunction","resolution","mapStyles","Polygon","polygon","Point","MultiPoint","point","getStyle","label","setFontColorWatch","outlineColor","undefined","colorArrayToString","getLabelOutlineColor","textShadow","setStyle","setFontSizeWatch","size","sizeValue","parseInt","Number","NaN","matchForShort","match","matchForLong","textStyle","labelOffset","getRenderedHtml","data","getData","html","attributesSection","innerHTML","_onAttrOK","modifyControl","toggle","querySelectorAll","getAttribute","setData","joinFeatures","geometryType","geom","MULTIPOLYLINE","MULTIPOLYGON","MULTIPOINT","_joinedFeatureAttributes","newGeometry","reduce","a","b","concat","newFeature","constructor","i","len","addFeature","showPopup","attributeEditor"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGK,OAAOC,MAAMC,oBAAsB,yBACtCP,GAAGK,OAAOC,MAAME,cAAgB,mBAChCR,GAAGK,OAAOC,MAAMG,eAAiB,oBACjCT,GAAGK,OAAOC,MAAMI,iBAAmB,sBACnCV,GAAGK,OAAOC,MAAMK,OAAS,SAEzBX,GAAGC,QAAQW,OAAS,WAGhBZ,GAAGE,QAAQW,MAFEC,KAEUC,WAEvB,IAAKf,GAAGgB,gBAAgBC,mBAAqBC,OAAOC,GAAI,CACpDnB,GAAGoB,QAAQpB,GAAGI,YAAc,yCAC5BJ,GAAGG,WAAWH,GAAGI,YAAc,wCANtBU,KASRO,OAASrB,GAAGsB,KAAKC,QAAO,EAAMvB,GAAGwB,IAAIH,OAAOI,UATpCX,KASoDY,QAAQL,QAT5DP,KAURO,OAAOM,KAVCb,KAUWO,OAAOM,MAAQ,CACnCC,SAXSd,KAWMO,OAAOQ,KAAKD,SAC3BE,UAZShB,KAYOO,OAAOQ,KAAKC,UAC5BC,kBAbSjB,KAaeO,OAAOQ,KAAKE,kBACpCC,kBAdSlB,KAceO,OAAOQ,KAAKG,mBAd3BlB,KAiBRmB,eAAiB,IAjBTnB,KAiBoBoB,MAjBpBpB,KAmBRqB,KAAO,IAAInC,GAAGmC,KAAKlC,QAAQW,OAnBnBE,MAAAA,KAoBRsB,SAA6C,kBApBrCtB,KAoBgBY,QAAQU,UApBxBtB,KAoBuDY,QAAQU,UAGhFpC,GAAGqC,QAAQrC,GAAGC,QAAQW,OAAQZ,GAAGE,UAEjC,WAEI,IAAIoC,EAAWtC,GAAGC,QAAQW,OAAO2B,UAEjCD,EAASJ,MAAQ,aAEjBI,EAASE,SAAW,GACpBF,EAASE,SAASF,EAASJ,OAAS,WAAWO,KAAKC,SAASJ,EAASJ,MAAMS,GAAQ,SAASA,EAAOC,EAAIC,GAAK,OAAOD,EAAIE,EAAE,qEAAwEC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,WAAWF,EAAE,MAAOC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,WAAWF,EAAE,8EAAiFC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,2BAA2BF,EAAE,MAAOC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,2BAA2BF,EAAE,4EAA+EC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,2BAA2BF,EAAE,MAAOC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,mBAAmBF,EAAE,6EAAgFC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,kBAAkBF,EAAE,MAAOC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,kBAAkBF,EAAE,4EAA+EC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,mBAAmBF,EAAE,MAAOC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,mBAAmBF,EAAE,mGAAwGC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,YAAYF,EAAE,MAAOC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,YAAYF,EAAE,uHAA8HC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,uBAAuBF,EAAE,uBAAyBG,EAAEJ,EAAIK,IAAI,CAAC,aAAa,GAAOL,EAAI,KAAKC,EAAE,kBAAkBG,EAAEJ,EAAIK,IAAI,CAAC,cAAc,GAAOL,EAAI,KAAKC,EAAE,sBAAsBG,EAAEJ,EAAIK,IAAI,CAAC,sBAAsB,GAAOL,EAAI,KAAKC,EAAE,OAAOG,EAAEJ,EAAIK,IAAI,CAAC,sBAAsB,GAAOL,EAAI,KAAKC,EAAE,SAAUC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,cAAcF,EAAE,wDAA6DG,EAAEJ,EAAIK,IAAI,CAAC,cAAc,GAAOL,EAAI,KAAKC,EAAE,QAASC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,aAAaF,EAAE,oEAAyEG,EAAEJ,EAAIK,IAAI,CAAC,aAAa,GAAOL,EAAI,KAAKC,EAAE,4EAAoFH,EAAOQ,YAAW,EAAG,OAAOR,GACtgEL,EAASE,SAASF,EAASJ,MAAQ,SAAW,WAAWO,KAAKC,SAASJ,EAASJ,MAAQ,QAAQS,GAAQ,SAASA,EAAOC,EAAIC,GAAK,OAAOD,EAAIE,EAAE,qCAAuCC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,kBAAkBF,EAAE,yDAA2DM,EAAEP,EAAIK,IAAI,CAAC,SAAS,GAAOL,EAAI,CAACQ,MAAQC,GAAQ,IAAIR,EAAE,+GAAmHC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,OAAOF,EAAE,kEAAoEC,EAAE,OAAOF,EAAI,GAAG,CAACG,KAAO,WAAWF,EAAE,yBAA0BH,EAAOQ,YAAW,EAAG,SAASG,EAAOV,EAAIC,GAAK,OAAOD,EAAIE,EAAE,YAAYG,EAAEJ,EAAIK,IAAI,CAAC,SAAS,GAAOL,EAAI,KAAKC,EAAE,yDAA8DG,EAAEJ,EAAIK,IAAI,CAAC,SAAS,GAAOL,EAAI,KAAKC,EAAE,aAAeG,EAAEJ,EAAIK,IAAI,CAAC,UAAU,GAAOL,EAAI,KAAKC,EAAE,kBAAoBQ,EAAOH,YAAW,EAAG,OAAOR,GAEh6B,MAAMY,EAA0B,SAAUC,EAAKC,GAC3CD,EAAIE,WAAWC,SAA+B,IAApBF,EAASG,OACnCJ,EAAIK,aAAaF,SAA+B,IAApBF,EAASG,OACrCJ,EAAIM,SAASH,SAAWF,EAASG,OAAS,EAC1CJ,EAAIO,UAAUJ,SAA6D,IAAlDF,EAASO,OAAOC,GAAuBL,OAChEJ,EAAIU,oBAuDFD,EAAwB,SAAUE,GACpC,IAAIC,GAAS,GACRpE,GAAGqE,QAAQC,cAAgBH,aAAenE,GAAGqE,QAAQC,cACrDtE,GAAGqE,QAAQE,eAAiBJ,aAAenE,GAAGqE,QAAQE,gBACnDJ,EAAIK,SAASZ,OAAS,IACtBQ,GAAS,GAGjB,OAAOA,GAGX9B,EAASI,SAAW,SAAU+B,GAC1B,MAAMC,EAAO5D,KACPsD,EAASpE,GAAGE,QAAQqC,UAAUG,SAASiC,KAAKD,EAAMD,GACpDC,EAAKhD,QAAQkD,OACbF,EAAKG,SAASH,EAAKhD,QAAQkD,OAG/BH,EACKK,GAAG9E,GAAGK,OAAOC,MAAMyE,WAAa,IAAM/E,GAAGK,OAAOC,MAAM0E,YAAa,SAAUC,GAC1EC,QAAQC,IAAI,CAACT,EAAKU,WAAYV,EAAKW,kBAAkBC,KAAK,SAAUC,GAChE,MAAMX,EAAQW,EAAQ,GAClBN,EAAEL,QAAUA,GACZF,EAAKc,oBAAmB,OAInCV,GAAG9E,GAAGK,OAAOC,MAAMmF,cAAgB,IAAMzF,GAAGK,OAAOC,MAAMoF,cAAe,SAAUT,GAC/E,MAAML,EAAQK,EAAEL,MACVP,EAAUY,EAAEZ,QAClBa,QAAQC,IAAI,CAACT,EAAKU,WAAYV,EAAKW,kBAAkBC,KAAK,SAAUC,GAChE,GAAIX,IAAUW,EAAQ,GAAI,CAClBlB,EACAK,EAAKiB,iBAAiB,CAACtB,IAGvBK,EAAKiB,mBAETpC,EAAwBmB,EAAMA,EAAKkB,uBACnC,GAAmC,IAA/BlB,EAAKE,MAAMnB,SAASG,OAAc,CAClCc,EAAKc,oBAAmB,GACxBd,EAAKmB,aAAY,SAKhCf,GAAG9E,GAAGK,OAAOC,MAAMwF,YAAa,SAAUb,GACvC,MAAML,EAAQK,EAAEL,MAChBM,QAAQC,IAAI,CAACT,EAAKU,WAAYV,EAAKW,kBAAkBC,KAAK,SAAUC,GAC5DX,IAAUW,EAAQ,IAClBhC,EAAwBmB,EAAMA,EAAKkB,2BAKnDlB,EAAKI,GAAG9E,GAAGK,OAAOC,MAAMG,eAAiB,IAAMT,GAAGK,OAAOC,MAAMI,iBAAkB,WAC7E,MAAMqF,EAAmBrB,EAAKkB,sBAC9BrC,EAAwBmB,EAAMqB,GACHrB,EAAKE,MAAMnB,SAASO,OAAO,SAAUK,GAC5D,OAAO0B,EAAiBC,QAAQ3B,GAAW,IAE5B4B,QAAQ,SAAU5B,GACjCA,EAAQ6B,qBAAoB,KAEhCH,EAAiBE,QAAQ,SAAU5B,GAC/BA,EAAQ6B,qBAAoB,KAG3BxB,EAAKyB,4BAA4BC,UAAUC,SAASrG,GAAGK,OAAOiG,QAAQC,SACvE7B,EAAK8B,oBAEJT,EAAiBnC,QAClBc,EAAK+B,oBAIb,OAAOrC,GAGX9B,EAASoE,OAAS,SAAUC,GACxB,MAAMjC,EAAO5D,KAEP8F,EAAiB,WACnBlC,EAAKmC,WAAanC,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,eAC5DwC,EAAKmC,WAAWG,iBAAiBhH,GAAGK,OAAOC,MAAM2G,MAAO,SAAUhC,GACzDA,EAAEiC,OAAOvD,WACNe,EAAKyC,SACLzC,EAAK0C,aAGL1C,EAAK2C,cAIjB3C,EAAKhB,WAAagB,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,eAC5DwC,EAAKhB,WAAWsD,iBAAiBhH,GAAGK,OAAOC,MAAM2G,MAAO,WACpDvC,EAAK4C,2BAET5C,EAAK6C,SAAW7C,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,aAC1DwC,EAAK6C,SAASP,iBAAiBhH,GAAGK,OAAOC,MAAM2G,MAAO,WAClDvC,EAAKmB,aAAanB,EAAK8C,cAE3B9C,EAAKZ,SAAWY,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,aAC1DwC,EAAKX,UAAYW,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,cAC3DwC,EAAKb,aAAea,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,aAC9DwC,EAAKb,aAAamD,iBAAiBhH,GAAGK,OAAOC,MAAM2G,MAAO,WACtDvC,EAAK+C,qBAET/C,EAAKgD,WAAahD,EAAKoC,IAAIC,cAAc,SAAWrC,EAAKxC,MAAQ,QACjEwC,EAAKgD,WAAWV,iBAAiB,QAAS,SAAU/B,GAChDP,EAAKiD,cAAc1C,EAAEiC,OAAOU,SAEhClD,EAAKmD,cAAgBnD,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,UAE/DwC,EAAKoD,iBAAmBpD,EAAKoC,IAAIC,cAAcrC,EAAKzC,eAAiB,UACrEyC,EAAKoD,iBAAiBd,iBAAiBhH,GAAGK,OAAOC,MAAMK,OAAQ,SAAUsE,GACrEP,EAAKqD,aAAa9C,EAAEiC,OAAOU,SAG/BlD,EAAKsD,kBAAoBtD,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,UACnEwC,EAAKsD,kBAAkBhB,iBAAiBhH,GAAGK,OAAOC,MAAMK,OAAQ,SAAUsE,GACtEP,EAAKuD,YAAYhD,EAAEiC,OAAOU,SAG9BlD,EAAKwD,mBAAqBxD,EAAKoC,IAAIC,cAAc,IAAMrC,EAAKxC,MAAQ,SAEhElC,GAAGsB,KAAK6G,WAAWxB,IACnBA,KAIFyB,EAAe,CACjBxG,SAAU8C,EAAKrD,OAAOM,KAAKC,SAC3BE,UAAW4C,EAAKrD,OAAOM,KAAKG,UAC5BC,kBAAmB2C,EAAKrD,OAAOM,KAAKI,kBACpCC,kBAAmB0C,EAAKrD,OAAOM,KAAKK,mBAoCxC,OAhCIhC,GAAGgB,gBAAgBC,iBACTyD,EAAK2D,qBAAqB3D,EAAK4D,WAAWF,EAAcxB,IAIxDlC,EAAK2D,qBAAqB3D,EAAK4D,WAAWF,EAAc,WAC9D,MAAMG,EAAQ7D,EAAKoC,IAAIC,cAAc,qBACrCwB,EAAMC,MAAMC,gBAAkBF,EAAMX,MACpCW,EAAMC,MAAME,MAAQ,cACpB,MAAMC,EAAS,IAAIxH,GAAGoH,EAAO,QAASK,SAASC,MAE/CN,EAAMO,QAAU,SAAU7D,GACtBA,EAAE8D,kBAINR,EAAMS,QAAU,SAAU/D,GACtBnE,KAAKmI,QAGTV,EAAMW,SAAW,SAAUjE,GACvBnE,KAAK0H,MAAMC,gBAAkB3H,KAAK8G,OAEtClD,EAAKD,IAAI0E,OAAO,WACZR,EAAO7D,GAAG,SAAU,SAAU4D,GAC1BhE,EAAKqD,aAAa,IAAMW,OAIhC9B,QAMZtE,EAAS+E,SAAW,WACHvG,KACR+F,WAAWT,UAAUgD,IAAIpJ,GAAGK,OAAOiG,QAAQ+C,QAChDrJ,GAAGE,QAAQqC,UAAU8E,SAAS1C,KAFjB7D,MAAAA,KAGRqB,KAAKkF,SAHGvG,KAGWwI,OAG5BhH,EAAS8E,WAAa,WAClB,MAAM1C,EAAO5D,KACbd,GAAGE,QAAQqC,UAAU6E,WAAWzC,KAAKD,GACjCA,EAAKmC,YACLtD,EAAwBmB,EAAM,IAE9BA,EAAKvC,MACLuC,EAAKvC,KAAKiF,aAGd,GAAI1C,EAAKmC,WAAY,CACjBnC,EAAKmC,WAAWT,UAAUmD,OAAOvJ,GAAGK,OAAOiG,QAAQ+C,QAC/C3E,EAAKE,OACLF,EAAKE,MAAMnB,SAASwC,QAAQ,SAAU5B,GAClCA,EAAQ6B,qBAAoB,OAO5C5D,EAASkH,MAAQ,WACb,MAAM9E,EAAO5D,KACT4D,EAAKE,OACLF,EAAKE,MAAM6E,eAEf,OAAO/E,GAGXpC,EAASoH,YAAc,WACnB,OAAO,GAGXpH,EAASqH,IAAM,WACE7I,KACRqB,KAAKwH,MACV,OAFa7I,MAKjBwB,EAASsH,QAAU,SAAUN,EAAMjC,GAC/B,MAAM3C,EAAO5D,KAETwI,IACA5E,EAAK4E,KAAOA,GAEhB,GAAIjC,GAAYiC,EAAM,CACd5E,EAAKE,OACLF,EAAKE,MAAMH,IAAIoF,cAAcnF,EAAKE,OAEtCF,EAAK2C,gBAGL3C,EAAK0C,aAET,OAAO1C,GAGXpC,EAAS8C,SAAW,WAGhB,OAFWtE,KAEFY,SAAyC,kBAFvCZ,KAEqBY,QAAQkD,QAF7B9D,KAE0DY,QAAQkD,MAClEM,QAAQ4E,QAAQ,MAHhBhJ,KAKF8D,MACEM,QAAQ4E,QANRhJ,KAMqB8D,OANrB9D,KAQCiJ,eAGhBzH,EAASuC,SAAW,SAAUD,GAC1B,MAAMF,EAAO5D,KACb,GAAI4D,EAAKD,IAAK,CACVC,EAAKsF,oBAAoB,IACzBtF,EAAKqF,cAAgB,IAAI7E,QAAQ,SAAU4E,EAASG,GAChD,GAAuB,iBAAZ,EACPvF,EAAKD,IAAI0E,OAAO,WACZzE,EAAKE,MAAQF,EAAKD,IAAIW,SAASR,GAC/BkF,EAAQpF,EAAKE,aAGhB,CACDF,EAAKE,MAAQA,EACbkF,EAAQpF,EAAKE,UAGrBM,QAAQC,IAAI,CAACT,EAAKqF,cAAerF,EAAKW,kBAAkBC,KAAK,SAAU4E,GACnE,MAAMtF,EAAQsF,EAAK,GACnBxF,EAAKc,mBAAmBZ,GAASA,EAAMnB,SAASG,OAAS,OAKrEtB,EAASkD,mBAAqB,SAAU2E,GACvBrJ,KACR+F,WAAWlD,UAAYwG,EADfrJ,KAERyG,SAAS5D,UAAYwG,GAG9B7H,EAASsD,oBAAsB,WAC3B,OAAO9E,KAAKqB,KAAKyD,uBAGrBtD,EAAS0H,oBAAsB,SAAUvG,GACrC,MACMW,EADOtD,KACOqB,KAAK6H,oBAAoBvG,GADhC3C,KAERoD,mBACL,OAAOE,GAGX9B,EAAS8H,kBAAoB,WACzB,MAAM1F,EAAO5D,KACPsD,EAASM,EAAKkB,uBACfxB,EAAOR,QAAUc,EAAKE,MAAMnB,SAASG,QACtCQ,EAAOiG,KAAK3F,EAAKE,MAAMnB,SAASiB,EAAKE,MAAMnB,SAASG,OAAS,IAEjE,OAAOQ,GAGX9B,EAASqD,iBAAmB,SAAUlC,GAClCA,EAAWA,GAAY,GACvB3C,KAAKqB,KAAKwD,iBAAiBlC,EAASgB,IAAI,SAAU6F,GAC9C,OAAOA,EAAKnI,KAAKkC,WAErB,OAAOvD,MAGXwB,EAASgF,uBAAyB,WAC9B,MAAM5C,EAAO5D,KACP2C,EAAWiB,EAAKkB,sBACtBlB,EAAKvC,KAAKwD,iBAAiBlC,GAC3BA,EAASwC,QAAQ,SAAU5B,GACvBK,EAAKE,MAAM2F,cAAclG,GACzBK,EAAK8F,QAAQxK,GAAGK,OAAOC,MAAMmF,cAAe,CAAEpB,QAASA,MAE3D,OAAOK,GAGXpC,EAASmI,cAAgB,SAAUpG,EAASqG,GAExC,IAAItG,EACJ,MAAMuG,EAFO7J,KAEU2D,IAAI/C,QAAQL,OAAOI,UAC1C,QAAQ,GACJ,KAAKzB,GAAGqE,QAAQuG,SAAWvG,aAAmBrE,GAAGqE,QAAQuG,QACzD,KAAK5K,GAAGqE,QAAQC,cAAgBD,aAAmBrE,GAAGqE,QAAQC,aAC1DF,EAASpE,GAAGsB,KAAKC,OAAO,GAAIoJ,EAAUE,SACtC,MACJ,KAAK7K,GAAGqE,QAAQyG,OAASzG,aAAmBrE,GAAGqE,QAAQyG,MACvD,KAAK9K,GAAGqE,QAAQ0G,YAAc1G,aAAmBrE,GAAGqE,QAAQ0G,WACxD3G,EAASpE,GAAGsB,KAAKC,OAAO,GAAIoJ,EAAUK,OACtC,MACJ,QACI5G,EAASpE,GAAGsB,KAAKC,OAAO,GAAIoJ,EAAU9I,MAG9C,MAAM2G,EAAQnE,EAAQ4G,WACtB,GAAIzC,EAAM0C,MAAO,CACb9G,EAAO8G,MAAQ1C,EAAM0C,MACrB9G,EAAOxC,SAAW4G,EAAM5G,SACxBwC,EAAOtC,UAAY0G,EAAM1G,UACzBsC,EAAOrC,kBAAoByG,EAAMzG,kBACjCqC,EAAOpC,kBAAoBwG,EAAMxG,kBAErC,OAAOoC,GAGX9B,EAASuD,YAAc,SAAUsE,GAC7B,MAAMzF,EAAO5D,KACb4D,EAAK8C,WAAa2C,EAClB,GAAIA,EAAQ,CACRzF,EAAK6C,SAASnB,UAAUgD,IAAIpJ,GAAGK,OAAOiG,QAAQ+C,OAAQc,GACtDzF,EAAKmD,cAAczB,UAAUmD,OAAOvJ,GAAGK,OAAOiG,QAAQC,YAErD,CACD7B,EAAK6C,SAASnB,UAAUmD,OAAOvJ,GAAGK,OAAOiG,QAAQ+C,OAAQc,GACzDzF,EAAKmD,cAAczB,UAAUgD,IAAIpJ,GAAGK,OAAOiG,QAAQC,QAEvD7B,EAAKR,mBACL,OAAOQ,GAGXpC,EAAS6I,kBAAoB,SAAUzC,EAAO0C,GAC1C,MAAM1G,EAAO5D,UACCuK,IAAV3C,IACAA,EAAQhE,EAAKrD,OAAOM,KAAKG,WAE7B4G,EAAQ1I,GAAGsB,KAAKgK,mBAAmB5C,GACnC0C,EAAeA,GAAgB1G,EAAK6G,qBAAqB7C,GACzDhE,EAAKW,gBAAgBC,KAAK,WACtBZ,EAAKoD,iBAAiBF,MAAQc,EAC9BhE,EAAKgD,WAAWc,MAAME,MAAQA,EAC9BhE,EAAKgD,WAAWc,MAAMgD,WAAa,OAAS9G,EAAKrD,OAAOM,KAAKK,kBAAoB,MAAQoJ,EACzF,IAAKpL,GAAGgB,gBAAgBC,iBAAkB,CACtCyD,EAAKoD,iBAAiBU,MAAMC,gBAAkBC,EAC9ChE,EAAKoD,iBAAiBmB,UAG9B,OAAOvE,GAGXpC,EAASyF,aAAe,SAAUW,GAC9B,MAAMhE,EAAO5D,KACb4D,EAAKrD,OAAOM,KAAKG,UAAY4G,EAC7BhE,EAAKrD,OAAOM,KAAKI,kBAAoB2C,EAAK6G,qBAAqB7C,GAC/DhE,EAAKyG,kBAAkBzC,EAAOhE,EAAKrD,OAAOM,KAAKI,mBAC9B2C,EAAK0F,oBACbnE,QAAQ,SAAU5B,GACvB,MAAMmE,EAAQnE,EAAQ4G,WACtBzC,EAAM1G,UAAY4G,EAClBF,EAAMzG,kBAAoB2C,EAAKrD,OAAOM,KAAKI,kBAC3CsC,EAAQoH,SAASjD,KAErB,OAAO9D,GAGXpC,EAASoJ,iBAAmB,SAAUC,GAClC,MAAMjH,EAAO5D,UACAuK,IAATM,IACAA,EAAOjH,EAAKrD,OAAOM,KAAKC,UAE5B,MAAMgK,EAAYC,SAASF,GACvBC,IAAcE,OAAOC,KACrBrH,EAAKW,gBAAgBC,KAAK,WACtBZ,EAAKsD,kBAAkBJ,MAAQgE,EAC/BlH,EAAKgD,WAAWc,MAAM5G,SAAWgK,EAAY,OAGrD,OAAOlH,GAGXpC,EAAS2F,YAAc,SAAU0D,GAC7B,MAAMjH,EAAO5D,KACP8K,EAAYC,SAASF,GAC3B,GAAIC,IAAcE,OAAOC,IAAK,CAC1BrH,EAAKrD,OAAOM,KAAKC,SAAWgK,EAC5BlH,EAAKgH,iBAAiBE,GACLlH,EAAK0F,oBACbnE,QAAQ,SAAU5B,GACvB,MAAMmE,EAAQnE,EAAQ4G,WACtBzC,EAAM5G,SAAWgK,EACjBvH,EAAQoH,SAASjD,KAGzB,OAAO9D,GAGXpC,EAASiJ,qBAAuB,SAAUzJ,GACtC,GAAIA,EAAW,CAEX,MAAMkK,GADNlK,EAAY9B,GAAGsB,KAAKgK,mBAAmBxJ,IACPmK,MAAM,sCAClCD,GAAiBA,EAAcpI,SAC/B9B,EAAY,IAAMkK,EAAc,GAAKA,EAAc,GAAKA,EAAc,GAAKA,EAAc,GAAKA,EAAc,GAAKA,EAAc,IAEnI,MAAME,EAAepK,EAAUmK,MAAM,+CACrC,GAAIC,GAAgBA,EAAatI,OAAQ,CAIrC,OAHUiI,SAASK,EAAa,GAAI,IAC1BL,SAASK,EAAa,GAAI,IAC1BL,SAASK,EAAa,GAAI,KACf,EAAI,IAAM,UAAY,WAGnD,MAAO,WAGX5J,EAAS4B,iBAAmB,WACxB,MAAMQ,EAAO5D,KACP2C,EAAWiB,EAAKkB,sBACtB,IAAIjE,EACAgK,EACAjD,EACJ,GAAIhE,EAAKyC,UAAY1D,EAASG,OAAQ,CAClC,MACM4E,EADU/E,EAASA,EAASG,OAAS,GACrBqH,WACtBtJ,EAAO6G,EAAM0C,MACbxC,EAAQF,EAAM1G,UACd6J,EAAOnD,EAAM5G,aAEZ,CACDD,EAAO,GACP+G,EAAQhE,EAAKrD,OAAOM,KAAKG,UACzB6J,EAAOjH,EAAKrD,OAAOM,KAAKC,SAE5B8C,EAAKW,gBAAgBC,KAAK,WACtBZ,EACKgH,iBAAiBC,GACjBR,kBAAkBzC,GAClBhB,WAAWE,MAAQjG,GAAQ,KAEpC,OAAO+C,GAGXpC,EAASqF,cAAgB,SAAUhG,GAC/B,MAAM+C,EAAO5D,KACP2C,EAAWiB,EAAK0F,oBACtB,GAAI3G,EAASG,OAAQ,CACjB,MAAM4E,EAAQ/E,EAAS,GAAGwH,WAC1BxH,EAASwC,QAAQ,SAAU5B,GACvB,MAAM8H,EAAYnM,GAAGsB,KAAKC,OAAO,GAAImD,EAAKrD,OAAOM,KAAM6G,GACvDA,EAAM0C,MAAQvJ,EACd6G,EAAM4D,YAAcD,EAAUC,YAC9B5D,EAAM1G,UAAYqK,EAAUrK,UAC5B0G,EAAM5G,SAAWuK,EAAUvK,SAC3B4G,EAAMzG,kBAAoBoK,EAAUpK,kBACpCyG,EAAMxG,kBAAoBmK,EAAUnK,kBACpCqC,EAAQoH,SAASjD,KAGzB,OAAO9D,GAGXpC,EAAS6D,0BAA4B,WACjC,OAAOrF,KAAKoH,oBAGhB5F,EAASkE,kBAAoB,WACzB,MAAM9B,EAAO5D,KACPiF,EAAmBrB,EAAKkB,sBACxBvB,EAAU0B,EAAiBA,EAAiBnC,OAAS,GACvDS,GACAK,EAAK2H,gBAAgB3H,EAAKxC,MAAQ,QAAS,CAAEoK,KAAMjI,EAAQkI,WAAa,SAAUC,GAC9E,MAAMC,EAAoB/H,EAAKyB,4BAC/BsG,EAAkBC,UAAYF,EAC9BC,EAAkBrG,UAAUmD,OAAOvJ,GAAGK,OAAOiG,QAAQC,QACrD7B,EAAKb,aAAauC,UAAUgD,IAAIpJ,GAAGK,OAAOiG,QAAQ+C,QAElDoD,EAAkB1F,iBAAiBrC,EAAKxC,qBAAqB8E,iBAAiBhH,GAAGK,OAAOC,MAAM2G,MAAO,SAAUhC,GAC3GP,EAAKiI,cAGTF,EAAkB1F,kBAAkBrC,EAAKkI,cAAc1K,yBAAyB8E,iBAAiBhH,GAAGK,OAAOC,MAAM2G,MAAO,WACpHvC,EAAK+B,uBAMrBnE,EAASmE,gBAAkB,WACV3F,KACRoH,mBAAmB9B,UAAUgD,IAAIpJ,GAAGK,OAAOiG,QAAQC,QAD3CzF,KAER+C,aAAauC,UAAUmD,OAAOvJ,GAAGK,OAAOiG,QAAQ+C,SAGzD/G,EAASmF,iBAAmB,WACxB,MAAM/C,EAAO5D,KACT4D,EAAKb,aAAauC,UAAUyG,OAAO7M,GAAGK,OAAOiG,QAAQ+C,QACrD3E,EAAK8B,oBAGL9B,EAAK+B,mBAIbnE,EAASqK,UAAY,WACjB,MAAMjI,EAAO5D,KACPuD,EAAUK,EAAKkB,sBAAsB,GAC3C,GAAIvB,EAAS,CACT,MAAMiI,EAAO,GACb5H,EAAKyB,4BAA4B2G,iBAAiB,SAAS7G,QAAQ,SAAUsC,GACzE+D,EAAK/D,EAAMwE,aAAa,SAAWxE,EAAMX,QAE7CvD,EAAQ2I,QAAQV,GAChB5H,EAAK8F,QAAQxK,GAAGK,OAAOC,MAAME,cAAe,CAAE6D,QAASA,EAASO,MAAOF,EAAKE,QAC5EF,EAAK+B,oBAIbnE,EAAS2K,aAAe,SAAUxJ,GAC9B,MAAMiB,EAAO5D,KACb,GAAI4D,EAAKwI,eAAiBlN,GAAGK,OAAO8M,KAAKC,eACrC1I,EAAKwI,eAAiBlN,GAAGK,OAAO8M,KAAKE,cACrC3I,EAAKwI,eAAiBlN,GAAGK,OAAO8M,KAAKG,WAAY,CACjD5I,EAAK6I,yBAA2B,GAChC,GAAI9J,EAASG,OAAS,EAAG,CASrB,IARA,IAII4J,EAJa/J,EAASgB,IAAI,SAAUN,GACpCO,EAAK6I,yBAAyB7I,EAAK6I,yBAAyB3J,QAAUO,EAAIoI,UAC1E,OAAOpI,EAAIK,WAEciJ,OAAO,SAAUC,EAAGC,GAC7C,OAAOD,EAAEE,OAAOD,KAEhBE,EAAa,IAAIpK,EAAS,GAAGqK,YAAYN,GACpCO,EAAI,EAAGC,EAAMvK,EAASG,OAAQmK,EAAIC,EAAKD,IAAK,CACjD,IAAI1J,EAAUZ,EAASsK,GACvBrJ,EAAKE,MAAM2F,cAAclG,GACzBK,EAAK8F,QAAQxK,GAAGK,OAAOC,MAAMmF,cAAe,CAAEpB,QAASA,IAE3DK,EAAKE,MAAMqJ,WAAWJ,GAAYvI,KAAK,SAAUgF,GAC7C5F,EAAKsF,oBAAoB,CAAC6D,IAC1BnJ,EAAK8F,QAAQxK,GAAGK,OAAOC,MAAMyE,WAAY,CAAEV,QAASiG,IACpDA,EAAK4D,UAAUxJ,EAAKyJ,mBAG5B5K,EAAwBmB,EAAM,CAACmJ,MAloB3C","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.BEFOREFEATUREMODIFY = \"beforefeaturemodify.tc\";\r\nTC.Consts.event.FEATUREMODIFY = \"featuremodify.tc\";\r\nTC.Consts.event.FEATURESSELECT = \"featuresselect.tc\";\r\nTC.Consts.event.FEATURESUNSELECT = \"featuresunselect.tc\";\r\nTC.Consts.event.CHANGE = 'change';\r\n\r\nTC.control.Modify = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    if (!TC.browserFeatures.inputTypeColor() && !window.CP) {\r\n        TC.loadCSS(TC.apiLocation + 'lib/color-picker/color-picker.min.css');\r\n        TC.syncLoadJS(TC.apiLocation + 'lib/color-picker/color-picker.min.js');\r\n    }\r\n\r\n    self.styles = TC.Util.extend(true, TC.Cfg.styles.selection, self.options.styles);\r\n    self.styles.text = self.styles.text || {\r\n        fontSize: self.styles.line.fontSize,\r\n        fontColor: self.styles.line.fontColor,\r\n        labelOutlineColor: self.styles.line.labelOutlineColor,\r\n        labelOutlineWidth: self.styles.line.labelOutlineWidth\r\n    };\r\n\r\n    self._classSelector = '.' + self.CLASS;\r\n\r\n    self.wrap = new TC.wrap.control.Modify(self);\r\n    self.snapping = (typeof self.options.snapping === 'boolean') ? self.options.snapping : true;\r\n};\r\n\r\nTC.inherit(TC.control.Modify, TC.Control);\r\n\r\n(function () {\r\n\r\n    var ctlProto = TC.control.Modify.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-mod';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/Modify.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-attr'] = TC.apiLocation + \"TC/templates/ModifyAttributes.html\";\r\n\r\n    const setFeatureSelectedState = function (ctl, features) {\r\n        ctl._deleteBtn.disabled = features.length === 0;\r\n        ctl._editAttrBtn.disabled = features.length !== 1;\r\n        ctl._joinBtn.disabled = features.length < 2;\r\n        ctl._splitBtn.disabled = features.filter(complexGeometryFilter).length === 0;\r\n        ctl.displayLabelText();\r\n    };\r\n\r\n    //const styleFunction = function (feature, mapStyles) {\r\n    //    var result;\r\n    //    switch (true) {\r\n    //        case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n    //        case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n    //            result = TC.Util.extend({}, mapStyles.polygon);\r\n    //            break;\r\n    //        case TC.feature.Point && feature instanceof TC.feature.Point:\r\n    //        case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n    //            result = TC.Util.extend({}, mapStyles.point);\r\n    //            break;\r\n    //        default:\r\n    //            result = TC.Util.extend({}, mapStyles.line);\r\n    //            break;\r\n    //    }\r\n    //    const style = feature.getStyle();\r\n    //    if (style.label) {\r\n    //        result.label = style.label;\r\n    //        result.fontSize = style.fontSize;\r\n    //        result.fontColor = style.fontColor;\r\n    //        result.labelOutlineColor = style.labelOutlineColor;\r\n    //        result.labelOutlineWidth = style.labelOutlineWidth;\r\n    //    }\r\n    //    return result;\r\n    //};\r\n\r\n    //const setFeatureSelectedStyle = function (ctl, features) {\r\n    //    const mapStyles = ctl.map.options.styles.selection;\r\n    //    features.forEach(function (feature) {\r\n    //        feature._originalStyle = TC.Util.extend({}, feature.getStyle());\r\n    //        feature.setStyle(ctl.styleFunction(feature));\r\n    //    });\r\n    //};\r\n\r\n    //const setFeatureUnselectedStyle = function (ctl, features) {\r\n    //    features.forEach(function (feature) {\r\n    //        if (feature._originalStyle) {\r\n    //            const style = feature.getStyle();\r\n    //            if (style.label) {\r\n    //                const originalStyle = feature._originalStyle;\r\n    //                originalStyle.label = style.label;\r\n    //                originalStyle.fontSize = style.fontSize;\r\n    //                originalStyle.fontColor = style.fontColor;\r\n    //                originalStyle.labelOutlineColor = style.labelOutlineColor;\r\n    //                originalStyle.labelOutlineWidth = style.labelOutlineWidth;\r\n    //            }\r\n    //            feature.setStyle(feature._originalStyle);\r\n    //            feature._originalStyle = undefined;\r\n    //        }\r\n    //    })\r\n    //};\r\n\r\n    const complexGeometryFilter = function (elm) {\r\n        var result = false;\r\n        if ((TC.feature.MultiPolygon && elm instanceof TC.feature.MultiPolygon) ||\r\n            (TC.feature.MultiPolyline && elm instanceof TC.feature.MultiPolyline)) {\r\n            if (elm.geometry.length > 1) {\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n        if (self.options.layer) {\r\n            self.setLayer(self.options.layer);\r\n        }\r\n\r\n        map\r\n            .on(TC.Consts.event.FEATUREADD + ' ' + TC.Consts.event.FEATURESADD, function (e) {\r\n                Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                    const layer = objects[0];\r\n                    if (e.layer === layer) {\r\n                        self.setSelectableState(true);\r\n                    }\r\n                });\r\n            })\r\n            .on(TC.Consts.event.FEATUREREMOVE + ' ' + TC.Consts.event.FEATURESCLEAR, function (e) {\r\n                const layer = e.layer;\r\n                const feature = e.feature;\r\n                Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                    if (layer === objects[0]) {\r\n                        if (feature) {\r\n                            self.unselectFeatures([feature]);\r\n                        }\r\n                        else {\r\n                            self.unselectFeatures();\r\n                        }\r\n                        setFeatureSelectedState(self, self.getSelectedFeatures());\r\n                        if (self.layer.features.length === 0) {\r\n                            self.setSelectableState(false);\r\n                            self.setTextMode(false);\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERUPDATE, function (e) {\r\n                const layer = e.layer;\r\n                Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                    if (layer === objects[0]) {\r\n                        setFeatureSelectedState(self, self.getSelectedFeatures());\r\n                    }\r\n                });\r\n            });\r\n\r\n        self.on(TC.Consts.event.FEATURESSELECT + ' ' + TC.Consts.event.FEATURESUNSELECT, function () {\r\n            const selectedFeatures = self.getSelectedFeatures();\r\n            setFeatureSelectedState(self, selectedFeatures);\r\n            const unselectedFeatures = self.layer.features.filter(function (feature) {\r\n                return selectedFeatures.indexOf(feature) < 0;\r\n            });\r\n            unselectedFeatures.forEach(function (feature) {\r\n                feature.toggleSelectedStyle(false);\r\n            });\r\n            selectedFeatures.forEach(function (feature) {\r\n                feature.toggleSelectedStyle(true);\r\n            });\r\n\r\n            if (!self.getAttributeDisplayTarget().classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                self.displayAttributes();\r\n            }\r\n            if (!selectedFeatures.length) {\r\n                self.closeAttributes();\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        const renderCallback = function () {\r\n            self._selectBtn = self.div.querySelector('.' + self.CLASS + '-btn-select');\r\n            self._selectBtn.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                if (!e.target.disabled) {\r\n                    if (self.isActive) {\r\n                        self.deactivate();\r\n                    }\r\n                    else {\r\n                        self.activate();\r\n                    }\r\n                }\r\n            });\r\n            self._deleteBtn = self.div.querySelector('.' + self.CLASS + '-btn-delete');\r\n            self._deleteBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.deleteSelectedFeatures();\r\n            });\r\n            self._textBtn = self.div.querySelector('.' + self.CLASS + '-btn-text');\r\n            self._textBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.setTextMode(!self.textActive);\r\n            });\r\n            self._joinBtn = self.div.querySelector('.' + self.CLASS + '-btn-join');\r\n            self._splitBtn = self.div.querySelector('.' + self.CLASS + '-btn-split');\r\n            self._editAttrBtn = self.div.querySelector('.' + self.CLASS + '-btn-attr');\r\n            self._editAttrBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.toggleAttributes();\r\n            });\r\n            self._textInput = self.div.querySelector('input.' + self.CLASS + '-txt');\r\n            self._textInput.addEventListener('input', function (e) {\r\n                self.labelFeatures(e.target.value);\r\n            });\r\n            self._styleSection = self.div.querySelector('.' + self.CLASS + '-style');\r\n\r\n            self._fontColorPicker = self.div.querySelector(self._classSelector + '-fnt-c');\r\n            self._fontColorPicker.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontColor(e.target.value);\r\n            });\r\n\r\n            self._fontSizeSelector = self.div.querySelector('.' + self.CLASS + '-fnt-s');\r\n            self._fontSizeSelector.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontSize(e.target.value);\r\n            });\r\n\r\n            self._attributesSection = self.div.querySelector('.' + self.CLASS + '-attr');\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        const renderObject = {\r\n            fontSize: self.styles.text.fontSize,\r\n            fontColor: self.styles.text.fontColor,\r\n            labelOutlineColor: self.styles.text.labelOutlineColor,\r\n            labelOutlineWidth: self.styles.text.labelOutlineWidth\r\n        };\r\n\r\n        var promise;\r\n        if (TC.browserFeatures.inputTypeColor()) {\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, renderCallback));\r\n        }\r\n        else {\r\n            // El navegador no soporta input[type=color], usamos polyfill\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, function () {\r\n                const input = self.div.querySelector('input[type=color]');\r\n                input.style.backgroundColor = input.value;\r\n                input.style.color = 'transparent';\r\n                const picker = new CP(input, 'click', document.body);\r\n\r\n                input.onclick = function (e) {\r\n                    e.preventDefault();\r\n                };\r\n\r\n                // Evitamos que salga el teclado virtual en iOS\r\n                input.onfocus = function (e) {\r\n                    this.blur();\r\n                };\r\n\r\n                input.onchange = function (e) {\r\n                    this.style.backgroundColor = this.value;\r\n                };\r\n                self.map.loaded(function () {\r\n                    picker.on(\"change\", function (color) {\r\n                        self.setFontColor('#' + color);\r\n                    });\r\n                });\r\n\r\n                renderCallback();\r\n            }));\r\n        }\r\n        return promise;\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        const self = this;\r\n        self._selectBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n        TC.Control.prototype.activate.call(self);\r\n        self.wrap.activate(self.mode);\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        const self = this;\r\n        TC.Control.prototype.deactivate.call(self);\r\n        if (self._selectBtn) {\r\n            setFeatureSelectedState(self, []);\r\n        }\r\n        if (self.wrap) {\r\n            self.wrap.deactivate();\r\n        }\r\n        //self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        if (self._selectBtn) {\r\n            self._selectBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n            if (self.layer) {\r\n                self.layer.features.forEach(function (feature) {\r\n                    feature.toggleSelectedStyle(false);\r\n                });\r\n            }\r\n            //setFeatureUnselectedStyle(self, self.getSelectedFeatures());\r\n        }\r\n    };\r\n\r\n    ctlProto.clear = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            self.layer.clearFatures();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return true;\r\n    };\r\n\r\n    ctlProto.end = function () {\r\n        const self = this;\r\n        self.wrap.end();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setMode = function (mode, activate) {\r\n        const self = this;\r\n\r\n        if (mode)\r\n            self.mode = mode;\r\n\r\n        if (activate && mode) {\r\n            if (self.layer) {\r\n                self.layer.map.putLayerOnTop(self.layer);\r\n            }\r\n            self.activate();\r\n        }\r\n        else {\r\n            self.deactivate();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLayer = function () {\r\n        var self = this;\r\n        // Se ha instanciado un control sin capa asociada\r\n        if (self.options && typeof self.options.layer === 'boolean' && !self.options.layer) {\r\n            return Promise.resolve(null);\r\n        }\r\n        if (self.layer) {\r\n            return Promise.resolve(self.layer);\r\n        }\r\n        return self._layerPromise;\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        const self = this;\r\n        if (self.map) {\r\n            self.setSelectedFeatures([]);\r\n            self._layerPromise = new Promise(function (resolve, reject) {\r\n                if (typeof (layer) === \"string\") {\r\n                    self.map.loaded(function () {\r\n                        self.layer = self.map.getLayer(layer);\r\n                        resolve(self.layer);\r\n                    });\r\n                }\r\n                else {\r\n                    self.layer = layer;\r\n                    resolve(self.layer);\r\n                }\r\n            });\r\n            Promise.all([self._layerPromise, self.renderPromise()]).then(function (objs) {\r\n                const layer = objs[0];\r\n                self.setSelectableState(layer && layer.features.length > 0);\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.setSelectableState = function (active) {\r\n        const self = this;\r\n        self._selectBtn.disabled = !active;\r\n        self._textBtn.disabled = !active;\r\n    };\r\n\r\n    ctlProto.getSelectedFeatures = function () {\r\n        return this.wrap.getSelectedFeatures();\r\n    };\r\n\r\n    ctlProto.setSelectedFeatures = function (features) {\r\n        const self = this;\r\n        const result = self.wrap.setSelectedFeatures(features);\r\n        self.displayLabelText();\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getActiveFeatures = function () {\r\n        const self = this;\r\n        const result = self.getSelectedFeatures();\r\n        if (!result.length && self.layer.features.length) {\r\n            result.push(self.layer.features[self.layer.features.length - 1]);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.unselectFeatures = function (features) {\r\n        features = features || [];\r\n        this.wrap.unselectFeatures(features.map(function (feat) {\r\n            return feat.wrap.feature;\r\n        }));\r\n        return this;\r\n    };\r\n\r\n    ctlProto.deleteSelectedFeatures = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        self.wrap.unselectFeatures(features);\r\n        features.forEach(function (feature) {\r\n            self.layer.removeFeature(feature);\r\n            self.trigger(TC.Consts.event.FEATUREREMOVE, { feature: feature });\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.styleFunction = function (feature, resolution) {\r\n        const self = this;\r\n        var result;\r\n        const mapStyles = self.map.options.styles.selection;\r\n        switch (true) {\r\n            case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n            case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                result = TC.Util.extend({}, mapStyles.polygon);\r\n                break;\r\n            case TC.feature.Point && feature instanceof TC.feature.Point:\r\n            case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                result = TC.Util.extend({}, mapStyles.point);\r\n                break;\r\n            default:\r\n                result = TC.Util.extend({}, mapStyles.line);\r\n                break;\r\n        }\r\n        const style = feature.getStyle();\r\n        if (style.label) {\r\n            result.label = style.label;\r\n            result.fontSize = style.fontSize;\r\n            result.fontColor = style.fontColor;\r\n            result.labelOutlineColor = style.labelOutlineColor;\r\n            result.labelOutlineWidth = style.labelOutlineWidth;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setTextMode = function (active) {\r\n        const self = this;\r\n        self.textActive = active;\r\n        if (active) {\r\n            self._textBtn.classList.add(TC.Consts.classes.ACTIVE, active);\r\n            self._styleSection.classList.remove(TC.Consts.classes.HIDDEN);\r\n        }\r\n        else {\r\n            self._textBtn.classList.remove(TC.Consts.classes.ACTIVE, active);\r\n            self._styleSection.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n        self.displayLabelText();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColorWatch = function (color, outlineColor) {\r\n        const self = this;\r\n        if (color === undefined) {\r\n            color = self.styles.text.fontColor;\r\n        }\r\n        color = TC.Util.colorArrayToString(color);\r\n        outlineColor = outlineColor || self.getLabelOutlineColor(color);\r\n        self.renderPromise().then(function () {\r\n            self._fontColorPicker.value = color;\r\n            self._textInput.style.color = color;\r\n            self._textInput.style.textShadow = '0 0 ' + self.styles.text.labelOutlineWidth + 'px ' + outlineColor;\r\n            if (!TC.browserFeatures.inputTypeColor()) {\r\n                self._fontColorPicker.style.backgroundColor = color;\r\n                self._fontColorPicker.blur();\r\n            }\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColor = function (color) {\r\n        const self = this;\r\n        self.styles.text.fontColor = color;\r\n        self.styles.text.labelOutlineColor = self.getLabelOutlineColor(color);\r\n        self.setFontColorWatch(color, self.styles.text.labelOutlineColor);\r\n        const features = self.getActiveFeatures();\r\n        features.forEach(function (feature) {\r\n            const style = feature.getStyle();\r\n            style.fontColor = color;\r\n            style.labelOutlineColor = self.styles.text.labelOutlineColor;\r\n            feature.setStyle(style);\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSizeWatch = function (size) {\r\n        const self = this;\r\n        if (size === undefined) {\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.renderPromise().then(function () {\r\n                self._fontSizeSelector.value = sizeValue;\r\n                self._textInput.style.fontSize = sizeValue + 'pt';\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSize = function (size) {\r\n        const self = this;\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.styles.text.fontSize = sizeValue;\r\n            self.setFontSizeWatch(sizeValue);\r\n            const features = self.getActiveFeatures();\r\n            features.forEach(function (feature) {\r\n                const style = feature.getStyle();\r\n                style.fontSize = sizeValue;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLabelOutlineColor = function (fontColor) {\r\n        if (fontColor) {\r\n            fontColor = TC.Util.colorArrayToString(fontColor);\r\n            const matchForShort = fontColor.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n            if (matchForShort && matchForShort.length) {\r\n                fontColor = '#' + matchForShort[1] + matchForShort[1] + matchForShort[2] + matchForShort[2] + matchForShort[3] + matchForShort[3];\r\n            }\r\n            const matchForLong = fontColor.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);\r\n            if (matchForLong && matchForLong.length) {\r\n                const r = parseInt(matchForLong[1], 16);\r\n                const g = parseInt(matchForLong[2], 16);\r\n                const b = parseInt(matchForLong[3], 16);\r\n                return (r + g + b) / 3 < 128 ? '#ffffff' : '#000000';\r\n            }\r\n        }\r\n        return '#ffffff';\r\n    };\r\n\r\n    ctlProto.displayLabelText = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        var text;\r\n        var size;\r\n        var color;\r\n        if (self.isActive && features.length) {\r\n            const feature = features[features.length - 1];\r\n            const style = feature.getStyle();\r\n            text = style.label;\r\n            color = style.fontColor;\r\n            size = style.fontSize;\r\n        }\r\n        else {\r\n            text = '';\r\n            color = self.styles.text.fontColor;\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        self.renderPromise().then(function () {\r\n            self\r\n                .setFontSizeWatch(size)\r\n                .setFontColorWatch(color)\r\n                ._textInput.value = text || '';\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.labelFeatures = function (text) {\r\n        const self = this;\r\n        const features = self.getActiveFeatures();\r\n        if (features.length) {\r\n            const style = features[0].getStyle();\r\n            features.forEach(function (feature) {\r\n                const textStyle = TC.Util.extend({}, self.styles.text, style);\r\n                style.label = text;\r\n                style.labelOffset = textStyle.labelOffset;\r\n                style.fontColor = textStyle.fontColor;\r\n                style.fontSize = textStyle.fontSize;\r\n                style.labelOutlineColor = textStyle.labelOutlineColor;\r\n                style.labelOutlineWidth = textStyle.labelOutlineWidth;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getAttributeDisplayTarget = function () {\r\n        return this._attributesSection;\r\n    };\r\n\r\n    ctlProto.displayAttributes = function () {\r\n        const self = this;\r\n        const selectedFeatures = self.getSelectedFeatures();\r\n        const feature = selectedFeatures[selectedFeatures.length - 1];\r\n        if (feature) {\r\n            self.getRenderedHtml(self.CLASS + '-attr', { data: feature.getData() }, function (html) {\r\n                const attributesSection = self.getAttributeDisplayTarget();\r\n                attributesSection.innerHTML = html;\r\n                attributesSection.classList.remove(TC.Consts.classes.HIDDEN);\r\n                self._editAttrBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n\r\n                attributesSection.querySelector(`${self.CLASS}-btn-attr-ok`).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    self._onAttrOK();\r\n                });\r\n\r\n                attributesSection.querySelector(`.${self.modifyControl.CLASS}-btn-attr-cancel`).addEventListener(TC.Consts.event.CLICK, function () {\r\n                    self.closeAttributes();\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.closeAttributes = function () {\r\n        const self = this;\r\n        self._attributesSection.classList.add(TC.Consts.classes.HIDDEN);\r\n        self._editAttrBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n    };\r\n\r\n    ctlProto.toggleAttributes = function () {\r\n        const self = this;\r\n        if (self._editAttrBtn.classList.toggle(TC.Consts.classes.ACTIVE)) {\r\n            self.displayAttributes();\r\n        }\r\n        else {\r\n            self.closeAttributes();\r\n        }\r\n    };\r\n\r\n    ctlProto._onAttrOK = function () {\r\n        const self = this;\r\n        const feature = self.getSelectedFeatures()[0];\r\n        if (feature) {\r\n            const data = {};\r\n            self.getAttributeDisplayTarget().querySelectorAll('input').forEach(function (input) {\r\n                data[input.getAttribute('name')] = input.value;\r\n            });\r\n            feature.setData(data);\r\n            self.trigger(TC.Consts.event.FEATUREMODIFY, { feature: feature, layer: self.layer });\r\n            self.closeAttributes();\r\n        }\r\n    };\r\n\r\n    ctlProto.joinFeatures = function (features) {\r\n        const self = this;\r\n        if (self.geometryType === TC.Consts.geom.MULTIPOLYLINE ||\r\n            self.geometryType === TC.Consts.geom.MULTIPOLYGON ||\r\n            self.geometryType === TC.Consts.geom.MULTIPOINT) {\r\n            self._joinedFeatureAttributes = [];\r\n            if (features.length > 1) {\r\n                var geometries = features.map(function (elm) {\r\n                    self._joinedFeatureAttributes[self._joinedFeatureAttributes.length] = elm.getData();\r\n                    return elm.geometry;\r\n                });\r\n                var newGeometry = geometries.reduce(function (a, b) {\r\n                    return a.concat(b);\r\n                });\r\n                var newFeature = new features[0].constructor(newGeometry);\r\n                for (var i = 0, len = features.length; i < len; i++) {\r\n                    var feature = features[i];\r\n                    self.layer.removeFeature(feature);\r\n                    self.trigger(TC.Consts.event.FEATUREREMOVE, { feature: feature });\r\n                }\r\n                self.layer.addFeature(newFeature).then(function (feat) {\r\n                    self.setSelectedFeatures([newFeature]);\r\n                    self.trigger(TC.Consts.event.FEATUREADD, { feature: feat });\r\n                    feat.showPopup(self.attributeEditor);\r\n                });\r\n            }\r\n            setFeatureSelectedState(self, [newFeature]);\r\n        }\r\n    };\r\n\r\n})();\r\n"]}