{"version":3,"sources":["Control/Modify.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","BEFOREFEATUREMODIFY","FEATUREMODIFY","FEATURESSELECT","FEATURESUNSELECT","CHANGE","Modify","apply","this","arguments","Modernizr","inputtypes","color","window","CP","loadCSS","styles","$","extend","Cfg","selection","options","text","fontSize","line","fontColor","labelOutlineColor","labelOutlineWidth","_classSelector","CLASS","wrap","inherit","ctlProto","prototype","isDebug","template","dust","register","body_0","chk","ctx","w","h","$key","f","get","__dustBody","setFeatureSelectedState","ctl","features","_deleteBtn","disabled","length","_joinBtn","_splitBtn","filter","complexGeometryFilter","displayLabelText","elm","result","feature","MultiPolygon","MultiPolyline","geometry","map","self","call","layer","setLayer","on","FEATUREADD","FEATURESADD","e","Promise","all","getLayer","renderPromise","then","objects","_selectBtn","_textBtn","FEATUREREMOVE","FEATURESCLEAR","unselectFeatures","getSelectedFeatures","setTextMode","featureSelectUpdater","selectedFeatures","indexOf","forEach","toggleSelectedStyle","render","callback","renderCallback","div","querySelector","addEventListener","CLICK","target","isActive","deactivate","activate","deleteSelectedFeatures","textActive","_textInput","labelFeatures","value","_styleSection","_fontColorPicker","setFontColor","_fontSizeSelector","setFontSize","isFunction","renderObject","_set1stRenderPromise","renderData","input","style","backgroundColor","picker","document","body","onclick","preventDefault","onfocus","blur","onchange","loaded","classList","add","classes","ACTIVE","mode","remove","clear","clearFatures","isExclusive","end","setMode","putLayerOnTop","resolve","_layerPromise","reject","setSelectedFeatures","getActiveFeatures","push","feat","removeFeature","styleFunction","resolution","mapStyles","Polygon","polygon","Point","MultiPoint","point","getStyle","label","active","HIDDEN","setFontColorWatch","outlineColor","undefined","Util","colorArrayToString","getLabelOutlineColor","textShadow","setStyle","setFontSizeWatch","size","sizeValue","parseInt","Number","NaN","matchForShort","match","matchForLong","textStyle","labelOffset"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.BEFOREFEATUREMODIFY = \"beforefeaturemodify.tc\";\r\nTC.Consts.event.FEATUREMODIFY = \"featuremodify.tc\";\r\nTC.Consts.event.FEATURESSELECT = \"featuresselect.tc\";\r\nTC.Consts.event.FEATURESUNSELECT = \"featuresunselect.tc\";\r\nTC.Consts.event.CHANGE = 'change';\r\n\r\n(function () {\r\n\r\n    TC.control.Modify = function () {\r\n        var self = this;\r\n\r\n        TC.Control.apply(self, arguments);\r\n\r\n        if (!Modernizr.inputtypes.color && !window.CP) {\r\n            TC.loadCSS(TC.apiLocation + 'lib/color-picker/color-picker.min.css');\r\n            TC.syncLoadJS(TC.apiLocation + 'lib/color-picker/color-picker.min.js');\r\n        }\r\n\r\n        self.styles = $.extend(true, TC.Cfg.styles.selection, self.options.styles);\r\n        self.styles.text = self.styles.text || {\r\n            fontSize: self.styles.line.fontSize,\r\n            fontColor: self.styles.line.fontColor,\r\n            labelOutlineColor: self.styles.line.labelOutlineColor,\r\n            labelOutlineWidth: self.styles.line.labelOutlineWidth\r\n        };\r\n\r\n        self._classSelector = '.' + self.CLASS;\r\n\r\n        self.wrap = new TC.wrap.control.Modify(self);\r\n    };\r\n\r\n    TC.inherit(TC.control.Modify, TC.Control);\r\n\r\n    var ctlProto = TC.control.Modify.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-mod';\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template = TC.apiLocation + \"TC/templates/Modify.html\";\r\n    }\r\n    else {\r\n        ctlProto.template = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-btn tc-ctl-mod-btn-select\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"select\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"select\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-delete\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteSelection\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteSelection\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-join\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"joinGeometries.tooltip\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"joinGeometries\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-split\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"splitGeometry\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"splitGeometry\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-mod-btn-text\\\" contenteditable=\\\"true\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"addText\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"addText\" }).w(\"</button><div class=\\\"tc-ctl-mod-style tc-hidden\\\"><input type=\\\"text\\\" class=\\\"tc-ctl-mod-txt tc-textbox\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"writeTextForSketch\" }).w(\"\\\" style=\\\"font-size:\").f(ctx.get([\"fontSize\"], false), ctx, \"h\").w(\"pt;font-color:\").f(ctx.get([\"fontColor\"], false), ctx, \"h\").w(\";text-shadow: 0 0 \").f(ctx.get([\"labelOutlineWidth\"], false), ctx, \"h\").w(\"px \").f(ctx.get([\"labelOutlineColor\"], false), ctx, \"h\").w(\";\\\" />\").h(\"i18n\", ctx, {}, { \"$key\": \"textColor\" }).w(\"<input type=\\\"color\\\" class=\\\"tc-ctl-mod-fnt-c\\\" value=\\\"\").f(ctx.get([\"fontColor\"], false), ctx, \"h\").w(\"\\\" />\").h(\"i18n\", ctx, {}, { \"$key\": \"fontSize\" }).w(\"<input type=\\\"number\\\" class=\\\"tc-ctl-mod-fnt-s tc-textbox\\\" value=\\\"\").f(ctx.get([\"fontSize\"], false), ctx, \"h\").w(\"\\\" min=\\\"7\\\" max=\\\"20\\\" /></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const setFeatureSelectedState = function (ctl, features) {\r\n        ctl._deleteBtn.disabled = features.length === 0;\r\n        ctl._joinBtn.disabled = features.length < 2;\r\n        ctl._splitBtn.disabled = features.filter(complexGeometryFilter).length === 0;\r\n        ctl.displayLabelText();\r\n    };\r\n\r\n    const styleFunction = function (feature, mapStyles) {\r\n        var result;\r\n        switch (true) {\r\n            case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n            case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                result = $.extend({}, mapStyles.polygon);\r\n                break;\r\n            case TC.feature.Point && feature instanceof TC.feature.Point:\r\n            case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                result = $.extend({}, mapStyles.point);\r\n                break;\r\n            default:\r\n                result = $.extend({}, mapStyles.line);\r\n                break;\r\n        }\r\n        const style = feature.getStyle();\r\n        if (style.label) {\r\n            result.label = style.label;\r\n            result.fontSize = style.fontSize;\r\n            result.fontColor = style.fontColor;\r\n            result.labelOutlineColor = style.labelOutlineColor;\r\n            result.labelOutlineWidth = style.labelOutlineWidth;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    //const setFeatureSelectedStyle = function (ctl, features) {\r\n    //    const mapStyles = ctl.map.options.styles.selection;\r\n    //    features.forEach(function (feature) {\r\n    //        feature._originalStyle = $.extend({}, feature.getStyle());\r\n    //        feature.setStyle(ctl.styleFunction(feature));\r\n    //    });\r\n    //};\r\n\r\n    //const setFeatureUnselectedStyle = function (ctl, features) {\r\n    //    features.forEach(function (feature) {\r\n    //        if (feature._originalStyle) {\r\n    //            const style = feature.getStyle();\r\n    //            if (style.label) {\r\n    //                const originalStyle = feature._originalStyle;\r\n    //                originalStyle.label = style.label;\r\n    //                originalStyle.fontSize = style.fontSize;\r\n    //                originalStyle.fontColor = style.fontColor;\r\n    //                originalStyle.labelOutlineColor = style.labelOutlineColor;\r\n    //                originalStyle.labelOutlineWidth = style.labelOutlineWidth;\r\n    //            }\r\n    //            feature.setStyle(feature._originalStyle);\r\n    //            feature._originalStyle = undefined;\r\n    //        }\r\n    //    })\r\n    //};\r\n\r\n    const complexGeometryFilter = function (elm) {\r\n        var result = false;\r\n        if ((TC.feature.MultiPolygon && elm instanceof TC.feature.MultiPolygon) ||\r\n            (TC.feature.MultiPolyline && elm instanceof TC.feature.MultiPolyline)) {\r\n            if (elm.geometry.length > 1) {\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n        if (self.options.layer) {\r\n\r\n            self.setLayer(self.options.layer);\r\n\r\n            map\r\n                .on(TC.Consts.event.FEATUREADD + ' ' + TC.Consts.event.FEATURESADD, function (e) {\r\n                    Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                        const layer = objects[0];\r\n                        if (e.layer === layer) {\r\n                            self._selectBtn.disabled = false;\r\n                            self._textBtn.disabled = false;\r\n                        }\r\n                    });\r\n                })\r\n                .on(TC.Consts.event.FEATUREREMOVE + ' ' + TC.Consts.event.FEATURESCLEAR, function (e) {\r\n                    const layer = e.layer;\r\n                    const feature = e.feature;\r\n                    Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                        if (layer === objects[0]) {\r\n                            if (feature) {\r\n                                self.unselectFeatures([feature]);\r\n                            }\r\n                            else {\r\n                                self.unselectFeatures();\r\n                            }\r\n                            setFeatureSelectedState(self, self.getSelectedFeatures());\r\n                            if (self.layer.features.length === 0) {\r\n                                self._selectBtn.disabled = true;\r\n                                self.setTextMode(false);\r\n                                self._textBtn.disabled = true;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n\r\n            const featureSelectUpdater = function () {\r\n                const selectedFeatures = self.getSelectedFeatures();\r\n                setFeatureSelectedState(self, selectedFeatures);\r\n                const unselectedFeatures = self.layer.features.filter(function (feature) {\r\n                    return selectedFeatures.indexOf(feature) < 0;\r\n                });\r\n                unselectedFeatures.forEach(function (feature) {\r\n                    feature.toggleSelectedStyle(false);\r\n                });\r\n                selectedFeatures.forEach(function (feature) {\r\n                    feature.toggleSelectedStyle(true);\r\n                });\r\n            };\r\n            self\r\n                .on(TC.Consts.event.FEATURESSELECT, featureSelectUpdater)\r\n                .on(TC.Consts.event.FEATURESUNSELECT, featureSelectUpdater);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        const renderCallback = function () {\r\n            self._selectBtn = self.div.querySelector('.' + self.CLASS + '-btn-select');\r\n            self._selectBtn.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                if (!e.target.disabled) {\r\n                    if (self.isActive) {\r\n                        self.deactivate();\r\n                    }\r\n                    else {\r\n                        self.activate();\r\n                    }\r\n                }\r\n            });\r\n            self._deleteBtn = self.div.querySelector('.' + self.CLASS + '-btn-delete');\r\n            self._deleteBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.deleteSelectedFeatures();\r\n            });\r\n            self._textBtn = self.div.querySelector('.' + self.CLASS + '-btn-text');\r\n            self._textBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.setTextMode(!self.textActive);\r\n            });\r\n            self._joinBtn = self.div.querySelector('.' + self.CLASS + '-btn-join');\r\n            self._splitBtn = self.div.querySelector('.' + self.CLASS + '-btn-split');\r\n            self._textInput = self.div.querySelector('input.' + self.CLASS + '-txt');\r\n            self._textInput.addEventListener('input', function (e) {\r\n                self.labelFeatures(e.target.value);\r\n            });\r\n            self._styleSection = self.div.querySelector('.' + self.CLASS + '-style');\r\n\r\n            self._fontColorPicker = self.div.querySelector(self._classSelector + '-fnt-c');\r\n            self._fontColorPicker.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontColor(e.target.value);\r\n            });\r\n\r\n            self._fontSizeSelector = self.div.querySelector('.' + self.CLASS + '-fnt-s');\r\n            self._fontSizeSelector.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontSize(e.target.value);\r\n            });\r\n\r\n            if ($.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        const renderObject = {\r\n            fontSize: self.styles.text.fontSize,\r\n            fontColor: self.styles.text.fontColor,\r\n            labelOutlineColor: self.styles.text.labelOutlineColor,\r\n            labelOutlineWidth: self.styles.text.labelOutlineWidth\r\n        };\r\n\r\n        var promise;\r\n        if (Modernizr.inputtypes.color) {\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, renderCallback));\r\n        }\r\n        else {\r\n            // El navegador no soporta input[type=color], usamos polyfill\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, function () {\r\n                const input = self.div.querySelector('input[type=color]');\r\n                input.style.backgroundColor = input.value;\r\n                input.style.color = 'transparent';\r\n                const picker = new CP(input, 'click', document.body);\r\n\r\n                input.onclick = function (e) {\r\n                    e.preventDefault();\r\n                };\r\n\r\n                // Evitamos que salga el teclado virtual en iOS\r\n                input.onfocus = function (e) {\r\n                    this.blur();\r\n                };\r\n\r\n                input.onchange = function (e) {\r\n                    this.style.backgroundColor = this.value;\r\n                };\r\n                self.map.loaded(function () {\r\n                    picker.on(\"change\", function (color) {\r\n                        self.setFontColor('#' + color);\r\n                    });\r\n                });\r\n\r\n                renderCallback();\r\n            }));\r\n        }\r\n        return promise;\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        const self = this;\r\n        self._selectBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n        TC.Control.prototype.activate.call(self);\r\n        self.wrap.activate(self.mode);\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        const self = this;\r\n        TC.Control.prototype.deactivate.call(self);\r\n        if (self._selectBtn) {\r\n            setFeatureSelectedState(self, []);\r\n        }\r\n        if (self.wrap) {\r\n            self.wrap.deactivate();\r\n        }\r\n        //self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        if (self._selectBtn) {\r\n            self._selectBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n            self.layer.features.forEach(function (feature) {\r\n                feature.toggleSelectedStyle(false);\r\n            });\r\n            //setFeatureUnselectedStyle(self, self.getSelectedFeatures());\r\n        }\r\n    };\r\n\r\n    ctlProto.clear = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            self.layer.clearFatures();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return true;\r\n    };\r\n\r\n    ctlProto.end = function () {\r\n        const self = this;\r\n        self.wrap.end();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setMode = function (mode, activate) {\r\n        const self = this;\r\n\r\n        if (mode)\r\n            self.mode = mode;\r\n\r\n        if (activate && mode) {\r\n            if (self.layer) {\r\n                self.layer.map.putLayerOnTop(self.layer);\r\n            }\r\n            self.activate();\r\n        }\r\n        else {\r\n            self.deactivate();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLayer = function () {\r\n        var self = this;\r\n        // Se ha instanciado un control sin capa asociada\r\n        if (self.options && typeof self.options.layer === 'boolean' && !self.options.layer) {\r\n            return Promise.resolve(null);\r\n        }\r\n        if (self.layer) {\r\n            return Promise.resolve(self.layer);\r\n        }\r\n        return self._layerPromise;\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        var self = this;\r\n        if (self.map) {\r\n            self._layerPromise = new Promise(function (resolve, reject) {\r\n                if (typeof (layer) === \"string\") {\r\n                    self.map.loaded(function () {\r\n                        self.layer = self.map.getLayer(layer);\r\n                        resolve(self.layer);\r\n                    });\r\n                }\r\n                else {\r\n                    self.layer = layer;\r\n                    resolve(self.layer);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.getSelectedFeatures = function () {\r\n        return this.wrap.getSelectedFeatures();\r\n    };\r\n\r\n    ctlProto.setSelectedFeatures = function (features) {\r\n        const self = this;\r\n        const result = self.wrap.setSelectedFeatures(features);\r\n        self.displayLabelText();\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getActiveFeatures = function () {\r\n        const self = this;\r\n        const result = self.getSelectedFeatures();\r\n        if (!result.length && self.layer.features.length) {\r\n            result.push(self.layer.features[self.layer.features.length - 1]);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.unselectFeatures = function (features) {\r\n        features = features || [];\r\n        this.wrap.unselectFeatures(features.map(function (feat) {\r\n            return feat.wrap.feature;\r\n        }));\r\n        return this;\r\n    };\r\n\r\n    ctlProto.deleteSelectedFeatures = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        self.wrap.unselectFeatures(features);\r\n        features.forEach(function (feature) {\r\n            self.layer.removeFeature(feature);\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.styleFunction = function (feature, resolution) {\r\n        const self = this;\r\n        var result;\r\n        const mapStyles = self.map.options.styles.selection;\r\n        switch (true) {\r\n            case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n            case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                result = $.extend({}, mapStyles.polygon);\r\n                break;\r\n            case TC.feature.Point && feature instanceof TC.feature.Point:\r\n            case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                result = $.extend({}, mapStyles.point);\r\n                break;\r\n            default:\r\n                result = $.extend({}, mapStyles.line);\r\n                break;\r\n        }\r\n        const style = feature.getStyle();\r\n        if (style.label) {\r\n            result.label = style.label;\r\n            result.fontSize = style.fontSize;\r\n            result.fontColor = style.fontColor;\r\n            result.labelOutlineColor = style.labelOutlineColor;\r\n            result.labelOutlineWidth = style.labelOutlineWidth;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setTextMode = function (active) {\r\n        const self = this;\r\n        self.textActive = active;\r\n        if (active) {\r\n            self._textBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n            self._textBtn.classList.add(active);\r\n        }\r\n        else {\r\n            self._textBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n            self._textBtn.classList.remove(active);\r\n        }\r\n        if (active) {\r\n            self._styleSection.classList.remove(TC.Consts.classes.HIDDEN);\r\n        }\r\n        else {\r\n            self._styleSection.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n        self.displayLabelText();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColorWatch = function (color, outlineColor) {\r\n        const self = this;\r\n        if (color === undefined) {\r\n            color = self.styles.text.fontColor;\r\n        }\r\n        color = TC.Util.colorArrayToString(color);\r\n        outlineColor = outlineColor || self.getLabelOutlineColor(color);\r\n        self.renderPromise().then(function () {\r\n            self._fontColorPicker.value = color;\r\n            self._textInput.style.color = color;\r\n            self._textInput.style.textShadow = '0 0 ' + self.styles.text.labelOutlineWidth + 'px ' + outlineColor;\r\n            if (!Modernizr.inputtypes.color) {\r\n                self._fontColorPicker.style.backgroundColor = color;\r\n                self._fontColorPicker.blur();\r\n            }\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColor = function (color) {\r\n        const self = this;\r\n        self.styles.text.fontColor = color;\r\n        self.styles.text.labelOutlineColor = self.getLabelOutlineColor(color);\r\n        self.setFontColorWatch(color, self.styles.text.labelOutlineColor);\r\n        const features = self.getActiveFeatures();\r\n        features.forEach(function (feature) {\r\n            const style = feature.getStyle();\r\n            style.fontColor = color;\r\n            style.labelOutlineColor = self.styles.text.labelOutlineColor;\r\n            feature.setStyle(style);\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSizeWatch = function (size) {\r\n        const self = this;\r\n        if (size === undefined) {\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.renderPromise().then(function () {\r\n                self._fontSizeSelector.value = sizeValue;\r\n                self._textInput.style.fontSize = sizeValue + 'pt';\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSize = function (size) {\r\n        const self = this;\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.styles.text.fontSize = sizeValue;\r\n            self.setFontSizeWatch(sizeValue);\r\n            const features = self.getActiveFeatures();\r\n            features.forEach(function (feature) {\r\n                const style = feature.getStyle();\r\n                style.fontSize = sizeValue;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLabelOutlineColor = function (fontColor) {\r\n        if (fontColor) {\r\n            fontColor = TC.Util.colorArrayToString(fontColor);\r\n            const matchForShort = fontColor.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n            if (matchForShort && matchForShort.length) {\r\n                fontColor = '#' + matchForShort[1] + matchForShort[1] + matchForShort[2] + matchForShort[2] + matchForShort[3] + matchForShort[3];\r\n            }\r\n            const matchForLong = fontColor.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);\r\n            if (matchForLong && matchForLong.length) {\r\n                const r = parseInt(matchForLong[1], 16);\r\n                const g = parseInt(matchForLong[2], 16);\r\n                const b = parseInt(matchForLong[3], 16);\r\n                return (r + g + b) / 3 < 128 ? '#ffffff' : '#000000';\r\n            }\r\n        }\r\n        return '#ffffff';\r\n    };\r\n\r\n    ctlProto.displayLabelText = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        var text;\r\n        var size;\r\n        var color;\r\n        if (self.isActive && features.length) {\r\n            const feature = features[features.length - 1];\r\n            const style = feature.getStyle();\r\n            text = style.label;\r\n            color = style.fontColor;\r\n            size = style.fontSize;\r\n        }\r\n        else {\r\n            text = '';\r\n            color = self.styles.text.fontColor;\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        self.renderPromise().then(function () {\r\n            self\r\n                .setFontSizeWatch(size)\r\n                .setFontColorWatch(color)\r\n                ._textInput.value = text;\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.labelFeatures = function (text) {\r\n        const self = this;\r\n        const features = self.getActiveFeatures();\r\n        if (features.length) {\r\n            const style = features[0].getStyle();\r\n            features.forEach(function (feature) {\r\n                const textStyle = $.extend({}, self.styles.text, style);\r\n                style.label = text;\r\n                style.labelOffset = textStyle.labelOffset;\r\n                style.fontColor = textStyle.fontColor;\r\n                style.fontSize = textStyle.fontSize;\r\n                style.labelOutlineColor = textStyle.labelOutlineColor;\r\n                style.labelOutlineWidth = textStyle.labelOutlineWidth;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n})();"],"file":"../../Control/Modify.min.js"}