{"version":3,"sources":["Control/ExternalWMS.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","ExternalWMS","options","isLegacy","console","warn","this","count","_addedUrls","apply","arguments","allowReprojection","inherit","ctlProto","prototype","CLASS","markServicesAsSelected","length","selectedOption","disabled","classList","add","register","map","self","result","call","div","addEventListener","EventTarget","listenerBySelector","evt","target","value","url","indexOf","location","protocol","querySelector","trim","test","some","addedUrl","replace","alert","getLocaleString","loadingCtrl","getControlsByClass","show","params","Util","getQueryStringParams","unwantedParams","urlWithoutParams","i","removeURLParameter","match","substr","_removeParamsFromUrl","Object","keys","item","toLowerCase","addButton","obj","id","type","hideTree","queryParams","suggestions","_current","$","grep","items","layerNames","layer","Raster","getCapabilitiesPromise","then","cap","root","Capability","Layer","CRS","crs","hide","trigger","Consts","event","EXTERNALSERVICEADDED","selectedOptions","querySelectorAll","forEach","option","push","error","on","LAYERADD","e","isBase","pending_markServicesAsSelected","template","isDebug","dust","body_0","chk","ctx","x","get","block","body_1","w","s","body_2","h","$key","__dustBody","body_3","body_4","body_5","f","render","callback","_set1stRenderPromise","renderData","elemUrl","addProtocol"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.ExternalWMS = function (options) {\r\n    if (TC.isLegacy) {\r\n        console.warn(\"El control ExternalWMS no soporta modo legacy\");\r\n        return;\r\n    }\r\n    var self = this;\r\n    this.count = 0;\r\n    this._addedUrls = [];\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.allowReprojection = typeof self.options.allowReprojection === 'boolean' ? self.options.allowReprojection : true;\r\n};\r\n\r\nTC.inherit(TC.control.ExternalWMS, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.ExternalWMS.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-xwms';\r\n\r\n    /**\r\n     * Marca como seleccionadas aquellas opciones del desplegable correspondientes a servicios WMS ya añadidos al TOC.\r\n     */\r\n    ctlProto.markServicesAsSelected = function (options) {\r\n        if (options.length > 0) {\r\n            const selectedOption = options[0];\r\n            selectedOption.disabled = true;\r\n            selectedOption.classList.add('tc-ctl-xwms-option-selected');\r\n        }\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        if (TC.isLegacy) {\r\n            console.warn(\"El control ExternalWMS no soporta modo legacy\");\r\n            return;\r\n        }\r\n\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.div.addEventListener('change', TC.EventTarget.listenerBySelector('select', function (evt) {\r\n            if (evt.target.value !== '') {\r\n                var url = evt.target.value;\r\n                if (url.indexOf('//') === 0) {\r\n                    url = location.protocol + url;\r\n                }\r\n                self.div.querySelector('input').value = url;\r\n                evt.target.value = '';\r\n            }\r\n        }));\r\n\r\n        /**\r\n         * Borra parámetros no necesarios de la URL del servicio WMS.\r\n         */\r\n        var _removeParamsFromUrl = function (url, unwantedParams) {\r\n            for (var i = 0; i < unwantedParams.length; i++) {\r\n                url = TC.Util.removeURLParameter(url, unwantedParams[i]);\r\n            }\r\n            if (url.match(/\\?$/)) {\r\n                url = url.substr(0, url.length - 1);\r\n            }\r\n            return url;\r\n        }\r\n\r\n        self.div.addEventListener('click', TC.EventTarget.listenerBySelector('button[name=\"agregar\"]', function (evt) {\r\n            var url = self.div.querySelector('input').value.trim();\r\n\r\n            if (!url) {\r\n                TC.alert(self.getLocaleString('typeAnAddress'));\r\n            }\r\n            else if (!/^((https?|ftp):)?(\\/\\/)?(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(url)) {\r\n                TC.alert(self.getLocaleString('typeAValidAddress'));\r\n            }\r\n            else {\r\n                if (self._addedUrls.some(function (addedUrl) {\r\n                    return addedUrl.replace(/https?:\\/\\/|\\/\\//, '') === url.replace(/https?:\\/\\/|\\/\\//, '')\r\n                })) {\r\n                    TC.alert(self.getLocaleString('serviceAlreadyAdded'));\r\n                }\r\n                else {\r\n                    var loadingCtrl = self.map.getControlsByClass(\"TC.control.LoadingIndicator\")[0];\r\n                    loadingCtrl.show();\r\n                    var params = TC.Util.getQueryStringParams(url);\r\n\r\n                    if (!/https?:\\/\\/|\\/\\//i.test(url)) {\r\n                        url = \"//\" + url;\r\n                    }\r\n\r\n                    //Extraemos sólo los parámetros adicionales\r\n                    var unwantedParams = [\"version\", \"service\", \"request\"];\r\n                    var urlWithoutParams = _removeParamsFromUrl(url, Object.keys(params));\r\n\r\n                    for (var item in params) {\r\n                        if (unwantedParams.indexOf(item.toLowerCase()) >= 0) {\r\n                            delete params[item];\r\n                        }\r\n                    }\r\n\r\n                    const addButton = self.div.querySelector('button');\r\n                    addButton.disabled = true;\r\n\r\n                    var obj = {\r\n                        id: 'xwms' + (++self.count),\r\n                        //\"title\": \"Servicio externo\",\r\n                        type: 'WMS',\r\n                        url: urlWithoutParams,\r\n                        hideTree: false,\r\n                        queryParams: params\r\n                    };\r\n                    //URI: recorremos las opciones buscando el servicio que se va a agregar a ver si tiene parametro layerNames\r\n                    for (var i = 0; i < self.options.suggestions.length; i++) {\r\n                        var _current = $.grep(self.options.suggestions[i].items, function (item, i) {\r\n                            return item.url === url;\r\n                        });\r\n                        if (_current.length > 0 && _current[0].layerNames) {\r\n                            obj[\"layerNames\"] = _current[0].layerNames;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    var layer = new TC.layer.Raster(obj);\r\n                    layer.getCapabilitiesPromise().then(function (cap) {\r\n                        if (typeof (cap.Capability) === 'undefined') {\r\n                            TC.alert(self.getLocaleString('noLayersFoundInService'));\r\n                            loadingCtrl.hide();\r\n                            addButton.disabled = false;\r\n                            return;\r\n                        } else {\r\n                            var root = cap.Capability.Layer;\r\n                            if (root.CRS && root.CRS.indexOf(self.map.crs) == -1 && !self.allowReprojection) {\r\n                                //no soportado. avisar y fallar\r\n                                TC.alert(self.getLocaleString('serviceSrsNotCompatible'));\r\n                                loadingCtrl.hide();\r\n                                addButton.disabled = false;\r\n                                return;\r\n                            }\r\n\r\n                            self.map.trigger(TC.Consts.event.EXTERNALSERVICEADDED, { layer: layer });\r\n                            self.div.querySelector('input').value = '';\r\n\r\n                            const selectedOptions = [];\r\n                            self.div.querySelectorAll('select option').forEach(function (option) {\r\n                                if (option.value.replace(/https?:\\/\\/|\\/\\//, '') === url.replace(/https?:\\/\\/|\\/\\//, '')) {\r\n                                    selectedOptions.push(option);\r\n                                }\r\n                            });                            \r\n                            self.markServicesAsSelected(selectedOptions);\r\n                            self._addedUrls.push(url);\r\n                            loadingCtrl.hide();\r\n                            addButton.disabled = false;\r\n                        }\r\n                    },\r\n                        function (error) {\r\n                            TC.alert(self.getLocaleString('serviceCouldNotBeLoaded') + \":\\n\" + error);\r\n                            loadingCtrl.hide();\r\n                            addButton.disabled = false;\r\n                        });\r\n                }\r\n            }\r\n\r\n        }));\r\n\r\n        map.on(TC.Consts.event.LAYERADD, function (e) {\r\n            const layer = e.layer;\r\n            if (layer && !layer.isBase) {\r\n                var url = layer.url;\r\n\r\n                if (url) {\r\n                    self.pending_markServicesAsSelected = self.pending_markServicesAsSelected || [];\r\n                    if (self.div.querySelectorAll('select option').length === 0 && url && self.pending_markServicesAsSelected.indexOf(url) === -1) {\r\n                        self.pending_markServicesAsSelected.push(url);\r\n                    }\r\n\r\n                    const selectedOptions = [];\r\n                    self.div.querySelectorAll('select option').forEach(function (option) {\r\n                        if (option.value.replace(/https?:\\/\\/|\\/\\//, '') === url.replace(/https?:\\/\\/|\\/\\//, '')) {\r\n                            selectedOptions.push(option);\r\n                        }\r\n                    });\r\n                    self.markServicesAsSelected(selectedOptions);\r\n                    self._addedUrls.push(url);\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/ExternalWMS.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () {\r\n            dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.x(ctx.get([\"title\"], false), ctx, { \"block\": body_1 }, {}).w(\"<div><div class=\\\"tc-group tc-ctl-xwms-cnt\\\"> <select id=\\\"add-wms-select\\\" class=\\\"tc-combo\\\" title=\\\"WMS (Web Map Service)\\\"><option value=\\\"\\\">WMS</option>\").s(ctx.get([\"suggestions\"], false), ctx, { \"block\": body_2 }, {}).w(\"</select><input type=\\\"url\\\" class=\\\"tc-textbox\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"writeAddressOrSelect\" }).w(\"\\\" /></div><div class=\\\"tc-group tc-group tc-ctl-xwms-cnt\\\" style=\\\"text-align:right;\\\"><button type=\\\"button\\\" class=\\\"tc-button tc-icon-button\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"addService.title\" }).w(\"\\\" name=\\\"agregar\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"addService\" }).w(\"</button></div></div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"addMaps\" }).w(\"</h2>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.x(ctx.get([\"group\"], false), ctx, { \"block\": body_3 }, {}).s(ctx.get([\"items\"], false), ctx, { \"block\": body_4 }, {}).x(ctx.get([\"group\"], false), ctx, { \"block\": body_5 }, {}); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<optgroup label=\\\"\").f(ctx.get([\"group\"], false), ctx, \"h\").w(\"\\\">\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.w(\"<option value=\\\"\").f(ctx.get([\"url\"], false), ctx, \"h\").w(\"\\\">\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"</option>\"); } body_4.__dustBody = !0; function body_5(chk, ctx) { return chk.w(\"\\t</optgroup>\"); } body_5.__dustBody = !0; return body_0\r\n        };\r\n    }\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.renderData(self.options, function () {\r\n            self.pending_markServicesAsSelected = self.pending_markServicesAsSelected || [];\r\n\r\n            self.pending_markServicesAsSelected.forEach(function (elemUrl) {\r\n                const selectedOptions = [];\r\n                self.div.querySelectorAll('select option').forEach(function (option) {\r\n                    if (TC.Util.addProtocol(option.value) === TC.Util.addProtocol(elemUrl)) {\r\n                        selectedOptions.push(option);\r\n                    }\r\n                });\r\n\r\n                self.markServicesAsSelected(selectedOptions);\r\n                self._addedUrls.push(elemUrl);\r\n            });\r\n\r\n            self.pending_markServicesAsSelected = [];\r\n        }));\r\n    };\r\n\r\n\r\n})();"],"file":"../../Control/ExternalWMS.min.js"}