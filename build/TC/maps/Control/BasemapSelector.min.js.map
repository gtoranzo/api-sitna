{"version":3,"sources":["Control/BasemapSelector.js"],"names":["TC","control","MapContents","syncLoadJS","apiLocation","BasemapSelector","self","this","apply","arguments","_cssClasses","LOAD_CRS_BUTTON","CLASS","CRS_DIALOG","CRS_LIST","CURRENT_CRS_NAME","CURRENT_CRS_CODE","_dialogDiv","Util","getDiv","options","dialogDiv","_$dialogDiv","$","document","body","appendChild","addEventListener","Consts","event","CLICK","EventTarget","listenerBySelector","e","target","classList","contains","loadFallbackProjections","closeModal","btn","crs","dataset","crsCode","dialog","querySelector","add","classes","HIDDEN","layer","getLayer","layerId","loadProjDef","callback","map","setProjection","baseLayer","fallbackLayer","data","_dataKeys","FALLBACK_LAYER","setBaseLayer","inherit","ctlProto","prototype","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","s","get","block","body_1","body_2","__dustBody","p","rebase","getPath","f","x","body_3","getClosestParent","elm","selector","matches","parentElement","changeInputRadioBaseMap","flagToCallback","radio","dialogMore","radios","div","querySelectorAll","i","len","length","bmsLayer","id","getBaseLayer","mustReproject","on3DView","getFallbackLayer","_currentSelection","checked","stopPropagation","_capabilitiesPromise","then","isCompatible","getCRS","dialogOptions","showProjectionChangeDialog","type","layerType","WMS","WMTS","getProjection","result","call","on","VIEWCHANGE","_getMoreBaseLayers","BASELAYERCHANGE","PROJECTIONCHANGE","update","value","showMoreLayersDialog","render","getRenderedHtml","html","innerHTML","close","forEach","li","curBaseLayer","getCapabilitiesPromise","DISABLED","setAttribute","getLocaleString","remove","removeAttribute","updateScale","updateLayerTree","isBase","stealth","loadJSInOrder","window","url","templating","layerTrees","err","out","newLi","DOMParser","parseFromString","firstChild","uid","tcLayerUid","ul","currentLi","idx","baseLayers","filter","indexOf","lis","insertBefore","error","updateLayerOrder","oldIdx","newIdx","removeLayer","removeChild","onErrorLayer","toast","mapName","title","msgType","ERROR","modalBody","LOADING","blCRSList","getCompatibleCRS","loadProjections","crsList","layers","workLayers","concat","includeFallbacks","orderBy","projList","hasFallbackCRS","fragment","createDocumentFragment","projObj","createElement","button","CRSCodesEqual","code","name","WARNING","showModal","THREED","closeCallback","bind","_moreBaseLayers","getTo3DVIew","Promise","resolve","reject","all","_moreBaseLayersPromise","matrixSet","wrap","getCompatibleMatrixSets","noDyn","Cfg","availableBaseLayers","l","Raster","VECTOR","Vector","Array","numToAdd","resolvePromise","addLayer","splice","fail"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.MapContents) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/MapContents');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.control.BasemapSelector = function () {\r\n        var self = this;\r\n        //options = options || {};\r\n\r\n        TC.control.MapContents.apply(self, arguments);\r\n\r\n        self._cssClasses = {\r\n            LOAD_CRS_BUTTON: self.CLASS + '-crs-btn-load',\r\n            CRS_DIALOG: self.CLASS + '-crs-dialog',\r\n            CRS_LIST: self.CLASS + '-crs-list',\r\n            CURRENT_CRS_NAME: self.CLASS + '-cur-crs-name',\r\n            CURRENT_CRS_CODE: self.CLASS + '-cur-crs-code'\r\n        };\r\n\r\n        self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n        self._$dialogDiv = $(self._dialogDiv);\r\n        if (!self.options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        self._dialogDiv.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button:not(.tc-modal-close)', function (e) {\r\n\r\n            if (e.target.classList.contains(self._cssClasses.LOAD_CRS_BUTTON)) {\r\n                self.loadFallbackProjections();\r\n                return;\r\n            }\r\n\r\n            TC.Util.closeModal();\r\n            const btn = e.target;\r\n            const crs = btn.dataset.crsCode;\r\n\r\n            // dependerá del que esté activo\r\n            const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-crs-dialog');\r\n            dialog.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n            const layer = self.getLayer(dialog.dataset.layerId);\r\n            if (layer) {\r\n                if (crs) {\r\n                    TC.loadProjDef({\r\n                        crs: crs,\r\n                        callback: function () {\r\n                            self.map.setProjection({\r\n                                crs: crs,\r\n                                baseLayer: layer\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    const fallbackLayer = $(btn).data(_dataKeys.FALLBACK_LAYER);\r\n                    if (fallbackLayer) {\r\n                        self.map.setBaseLayer(fallbackLayer);\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    };\r\n\r\n    TC.inherit(TC.control.BasemapSelector, TC.control.MapContents);\r\n\r\n    var ctlProto = TC.control.BasemapSelector.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-bms';\r\n\r\n    var _dataKeys = {\r\n        FALLBACK_LAYER: 'tcFallbackLayer'\r\n    };\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/BasemapSelector.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = TC.apiLocation + \"TC/templates/BasemapSelectorNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/BasemapSelectorDialog.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () {\r\n            dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"backgroundMaps\" }).w(\"</h2><div class=\\\"tc-ctl-bms-tree\\\"><form><ul class=\\\"tc-ctl-bms-branch\\\">\").s(ctx.get([\"baseLayers\"], false), ctx, { \"block\": body_1 }, {}).s(ctx.get([\"dialogMore\"], false), ctx, { \"block\": body_2 }, {}).w(\"</ul></form></div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.p(\"tc-ctl-bms-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-bms-node\\\"><label class=\\\"tc-ctl-bms-more-node\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"moreBackgroundMaps\" }).w(\"\\\"><input type=\\\"radio\\\" name=\\\"bms\\\" value=\\\"moreLayers\\\"><span></span></label></li>\"); } body_2.__dustBody = !0; return body_0\r\n        };\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = function () { dust.register(ctlProto.CLASS + '-node', body_0); function body_0(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-bms-node\\\" data-tc-layer-name=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" data-tc-layer-uid=\\\"\").f(ctx.get([\"uid\"], false), ctx, \"h\").w(\"\\\" ><label\").x(ctx.get([\"legend\"], false), ctx, { \"block\": body_1 }, {}).x(ctx.get([\"thumbnail\"], false), ctx, { \"block\": body_2 }, {}).w(\"><input type=\\\"radio\\\" name=\\\"bms\\\" value=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\"\").x(ctx.get([\"mustReproject\"], false), ctx, { \"block\": body_3 }, {}).w(\"><span>\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span></label></li>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\" style=\\\"background-image: url(\").f(ctx.getPath(false, [\"legend\", \"src\"]), ctx, \"h\").w(\")\\\"\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\" style=\\\"background-image: url(\").f(ctx.get([\"thumbnail\"], false), ctx, \"h\").w(\")\\\"\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\" class=\\\"tc-disabled\\\"\"); } body_3.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-bms-more-dialog tc-modal tc-hidden\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"backgroundMaps\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"></div><div class=\\\"tc-modal-footer\\\"><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"</button></div></div></div><div class=\\\"tc-ctl-bms-crs-dialog tc-modal tc-hidden\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"baseLayerNotCompatible\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><p>\").h(\"i18n\", ctx, {}, { \"$key\": \"baseLayerNotCompatible.instructions|h\" }).w(\"</p><ul class=\\\"tc-ctl-bms-crs-list tc-crs-list\\\"></ul></div><div class=\\\"tc-modal-footer\\\"><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"</button></div></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const getClosestParent = function (elm, selector) {\r\n        while (elm && !elm.matches(selector)) {\r\n            elm = elm.parentElement;\r\n        }\r\n        return elm;\r\n    };\r\n\r\n    const changeInputRadioBaseMap = function (e, callback) {\r\n        const self = this;\r\n        var flagToCallback = true;\r\n\r\n        var radio = e.target;\r\n\r\n        var layer = self.getLayer(getClosestParent(radio, 'li').dataset.layerId);\r\n\r\n        if (self.options.dialogMore && getClosestParent(radio, '.' + self.CLASS + '-more-dialog')) {\r\n            const radios = self.div.querySelectorAll('input[type=radio]');\r\n            for (var i = 0, len = radios.length; i < len; i++) {\r\n                const bmsLayer = self.getLayer(getClosestParent(radios[i], 'li').dataset.layerId);\r\n                if (bmsLayer) {\r\n                    switch (true) {\r\n                        case bmsLayer.id === layer.id:\r\n                            layer = bmsLayer;\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        if (layer != self.map.getBaseLayer()) {\r\n            if (layer.mustReproject) {\r\n\r\n                if (self.map.on3DView) {\r\n                    if (!layer.getFallbackLayer()) {\r\n                        self._currentSelection.checked = true;\r\n                        e.stopPropagation();\r\n                        return;\r\n                    } else if (layer.getFallbackLayer()) {\r\n                        const fallbackLayer = layer.getFallbackLayer();\r\n                        if (fallbackLayer) {\r\n                            fallbackLayer._capabilitiesPromise.then(function () {\r\n                                if (fallbackLayer.isCompatible(self.map.getCRS())) {\r\n                                    self.map.setBaseLayer(layer);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        flagToCallback = true;\r\n                    }\r\n                } else {\r\n                    // provisonal\r\n                    if (self._currentSelection) {\r\n                        self._currentSelection.checked = true;\r\n                    }\r\n\r\n                    // Buscamos alternativa\r\n                    const dialogOptions = {\r\n                        layer: layer\r\n                    };\r\n                    const fallbackLayer = layer.getFallbackLayer();\r\n                    if (fallbackLayer) {\r\n                        fallbackLayer._capabilitiesPromise.then(function () {\r\n                            if (fallbackLayer.isCompatible(self.map.getCRS())) {\r\n                                dialogOptions.fallbackLayer = fallbackLayer;\r\n                            }\r\n                            self.showProjectionChangeDialog(dialogOptions);\r\n                        });\r\n                    }\r\n                    else {\r\n                        self.showProjectionChangeDialog(dialogOptions);\r\n                    }\r\n                    //layer.getCompatibleCRS({ normalized: true });\r\n                    flagToCallback = false;\r\n                }\r\n\r\n            }\r\n            else {\r\n\r\n                if (layer.type === TC.Consts.layerType.WMS || layer.type === TC.Consts.layerType.WMTS && layer.getProjection() !== self.map.crs) {\r\n                    layer.setProjection({ crs: self.map.crs });\r\n                }\r\n\r\n                self.map.setBaseLayer(layer);\r\n            }\r\n        }\r\n\r\n        if (this._currentSelection) {\r\n            this._currentSelection.checked = true;\r\n        }\r\n\r\n\r\n        if (callback) {\r\n            callback(flagToCallback);\r\n        }\r\n    };\r\n\r\n    const moveElement = function (array, from, to) {\r\n        array.splice(to, 0, array.splice(from, 1)[0]);\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.control.MapContents.prototype.register.call(self, map);\r\n\r\n        if (self.options.dialogMore) {\r\n            map.on(TC.Consts.event.VIEWCHANGE, function () {\r\n                self._getMoreBaseLayers();\r\n            });\r\n        }\r\n\r\n        map.on(TC.Consts.event.BASELAYERCHANGE + ' ' + TC.Consts.event.PROJECTIONCHANGE + ' ' + TC.Consts.event.VIEWCHANGE, function (e) {\r\n            self.update(self.div, e.layer);\r\n        });\r\n\r\n\r\n        self.div.addEventListener('change', TC.EventTarget.listenerBySelector('input[type=radio]', function (e) {\r\n\r\n            if (e.target.value === \"moreLayers\") {\r\n                self.showMoreLayersDialog();\r\n            } else {\r\n                changeInputRadioBaseMap.call(self, e);\r\n            }\r\n\r\n            e.stopPropagation();\r\n        }));\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        const result = TC.control.MapContents.prototype.render.call(self, callback, self.options);\r\n\r\n        self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n\r\n            if (self.options.dialogMore) {\r\n                const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-more-dialog');\r\n\r\n                dialog.addEventListener('change', TC.EventTarget.listenerBySelector('input[type=radio]', function (e) {\r\n                    changeInputRadioBaseMap.call(self, e, function (close) {\r\n                        if (close) {\r\n                            TC.Util.closeModal();\r\n                        }\r\n                    });\r\n\r\n                    e.stopPropagation();\r\n                }));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.update = function (div, baseLayer) {\r\n        const self = this;\r\n\r\n        div = div || self.div;\r\n\r\n        div.querySelector('ul.' + self.CLASS + '-branch').querySelectorAll('li').forEach(function (li) {\r\n            const layer = self.getLayer(li.dataset.layerId);\r\n            if (layer) {\r\n                const curBaseLayer = baseLayer || self.map.baseLayer;\r\n                const radio = li.querySelector('input[type=radio]');\r\n                const checked = curBaseLayer && (curBaseLayer === layer || curBaseLayer.id === layer.id || (layer.getFallbackLayer && (curBaseLayer === layer.getFallbackLayer() || (layer.getFallbackLayer() && curBaseLayer.id === layer.getFallbackLayer().id))));\r\n\r\n                if (self.map.on3DView && layer.mustReproject && layer.fallbackLayer && layer.getFallbackLayer) {\r\n                    layer.getFallbackLayer().getCapabilitiesPromise().then(function () {\r\n                        var mustReproject = !layer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n\r\n                        radio.checked = checked;\r\n                        if (mustReproject) {\r\n                            radio.classList.add(TC.Consts.classes.DISABLED);\r\n                            li.setAttribute('title', self.map.on3DView ? self.getLocaleString('notAvailableTo3D') : self.getLocaleString('reprojectionNeeded'));\r\n                        }\r\n                        else {\r\n                            radio.classList.remove(TC.Consts.classes.DISABLED);\r\n                            li.removeAttribute('title');\r\n                        }\r\n                    });\r\n                } else {\r\n                    radio.checked = checked;\r\n                    if (layer.mustReproject) {\r\n                        radio.classList.add(TC.Consts.classes.DISABLED);\r\n                        li.setAttribute('title', self.map.on3DView ? self.getLocaleString('notAvailableTo3D') : self.getLocaleString('reprojectionNeeded'));\r\n                    }\r\n                    else {\r\n                        radio.classList.remove(TC.Consts.classes.DISABLED);\r\n                        li.removeAttribute('title');\r\n                    }\r\n                }\r\n\r\n                if (checked) {\r\n                    self._currentSelection = radio;\r\n                }\r\n            }\r\n        });\r\n\r\n        self.updateScale();\r\n    };\r\n\r\n    ctlProto.updateLayerTree = function (layer) {\r\n        const self = this;        \r\n        if (layer.isBase && !layer.options.stealth) {\r\n            TC.control.MapContents.prototype.updateLayerTree.call(self, layer);\r\n\r\n            var template = self.CLASS + '-node';\r\n            TC.loadJSInOrder(\r\n                !window.dust,\r\n                TC.url.templating,\r\n                function () {\r\n                    dust.render(template, self.layerTrees[layer.id], function (err, out) {\r\n                        const parser = new DOMParser();\r\n                        const newLi = parser.parseFromString(out, 'text/html').body.firstChild;\r\n                        var uid = newLi.dataset.tcLayerUid;\r\n                        const ul = self.div.querySelector('.' + self.CLASS + '-branch');\r\n                        const currentLi = ul.querySelector('li[data-tc-layer-uid=\"' + uid + '\"]');\r\n                        if (currentLi) {\r\n                            currentLi.innerHTML = newLi.innerHTML;\r\n                        }\r\n                        else {\r\n                            newLi.dataset.layerId = layer.id;\r\n\r\n                            // Insertamos elemento en el lugar correcto, según indica la colección baseLayers\r\n                            var idx = self.map.baseLayers.filter(function (baseLayer) {\r\n                                // Buscamos capas que deban mostrarse o capas que están siendo fallbacks de capas que deben mostrarse\r\n                                return !baseLayer.stealth;\r\n                            }).map(function (baseLayer) {\r\n                                return baseLayer.id;\r\n                            }).indexOf(layer.id);\r\n\r\n                            const lis = ul.querySelectorAll('li');\r\n                            if (idx < 0 || idx >= lis.length) {\r\n                                ul.appendChild(newLi);\r\n                            }\r\n                            else {\r\n                                ul.insertBefore(newLi, lis[idx]);\r\n                            }\r\n                        }\r\n                        if (err) {\r\n                            TC.error(err);\r\n                        }\r\n                    });\r\n                    self.update();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    ctlProto.updateLayerOrder = function (layer, oldIdx, newIdx) {\r\n        // no hace nada\r\n    };\r\n\r\n    ctlProto.removeLayer = function (layer) {\r\n        const self = this;\r\n        if (layer.isBase) {\r\n            const lis = self.div.querySelector('.' + self.CLASS + '-branch').querySelectorAll('li');\r\n            for (var i = 0, len = lis.length; i < len; i++) {\r\n                const li = lis[i];\r\n                if (li.dataset.layerId === layer.id) {\r\n                    li.parentElement.removeChild(li);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.onErrorLayer = function (layer) {\r\n        const self = this;\r\n\r\n        if (layer.isBase && !layer.options.stealth) {\r\n            self.map.toast(self.getLocaleString('baseLayerNotAvailable', { mapName: layer.title }), { type: TC.Consts.msgType.ERROR });\r\n        }\r\n    };\r\n\r\n    ctlProto.loadFallbackProjections = function () {\r\n        const self = this;\r\n        const lis = self._dialogDiv\r\n            .querySelector('.' + self._cssClasses.CRS_DIALOG)\r\n            .querySelectorAll('ul.' + self._cssClasses.CRS_LIST + ' li');\r\n        lis.forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.HIDDEN);\r\n            if (li.querySelector('button.' + self._cssClasses.LOAD_CRS_BUTTON)) {\r\n                li.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.showProjectionChangeDialog = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const layer = options.layer;\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-crs-dialog');\r\n        const modalBody = dialog.querySelector('.tc-modal-body');\r\n        modalBody.classList.add(TC.Consts.classes.LOADING);\r\n        const blCRSList = layer.getCompatibleCRS();\r\n\r\n        dialog.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        dialog.dataset.layerId = layer.id;\r\n        const ul = dialog.querySelector('ul.' + self.CLASS + '-crs-list');\r\n        ul.innerHTML = '';\r\n        self.map.loadProjections({\r\n            crsList: self.map.getCompatibleCRS({\r\n                layers: self.map.workLayers.concat(layer),\r\n                includeFallbacks: true\r\n            }),\r\n            orderBy: 'name'\r\n        }).then(function (projList) {\r\n            var hasFallbackCRS = false;\r\n            const fragment = document.createDocumentFragment();\r\n            projList\r\n                .forEach(function (projObj) {\r\n                    const li = document.createElement('li');\r\n                    const button = document.createElement('button');\r\n\r\n                    if (blCRSList.filter(function (crs) {\r\n                        return TC.Util.CRSCodesEqual(crs, projObj.code)\r\n                    }).length === 0) {\r\n                        // Es un CRS del fallback\r\n                        hasFallbackCRS = true;\r\n\r\n                        button.innerHTML = projObj.name + ' (' + projObj.code + ')';\r\n                        $(button)\r\n                            .data(_dataKeys.FALLBACK_LAYER, options.layer.fallbackLayer);\r\n                        button.dataset.crsCode = projObj.code;\r\n                        button.classList.add(TC.Consts.classes.WARNING);\r\n                        li.classList.add(TC.Consts.classes.HIDDEN);\r\n                    } else {\r\n                        button.innerHTML = self.getLocaleString('changeMapToCrs', { crs: projObj.name + ' (' + projObj.code + ')' });\r\n                        button.dataset.crsCode = projObj.code;\r\n                    }\r\n\r\n                    li.appendChild(button);\r\n                    fragment.appendChild(li);\r\n                });\r\n\r\n            if (options.fallbackLayer) {\r\n                const li = document.createElement('li');\r\n                const button = document.createElement('button');\r\n                button.innerHTML = self.getLocaleString('reprojectOnTheFly');\r\n                $(button).data(_dataKeys.FALLBACK_LAYER, options.fallbackLayer);\r\n                li.appendChild(button);\r\n                fragment.appendChild(li);\r\n            }\r\n\r\n            if (hasFallbackCRS) {\r\n                const li = document.createElement('li');\r\n                const button = document.createElement('button');\r\n                button.classList.add(self._cssClasses.LOAD_CRS_BUTTON);\r\n                button.innerHTML = self.getLocaleString('showOnTheFlyProjections');\r\n                li.appendChild(button);\r\n                fragment.appendChild(li);\r\n            }\r\n            ul.appendChild(fragment);\r\n\r\n            modalBody.classList.remove(TC.Consts.classes.LOADING);\r\n        });\r\n        dialog.querySelector('.' + self.CLASS + '-name').innerHTML = layer.title || layer.name;\r\n        TC.Util.showModal(dialog);\r\n    };\r\n\r\n    ctlProto.showMoreLayersDialog = function () {\r\n        const self = this;\r\n\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-more-dialog');\r\n\r\n        if (self.map.on3DView) {\r\n            dialog.classList.add(TC.Consts.classes.THREED);\r\n        } else {\r\n            dialog.classList.remove(TC.Consts.classes.THREED);\r\n        }\r\n\r\n        const modalBody = dialog.querySelector('.tc-modal-body');\r\n        modalBody.innerHTML = '';\r\n        modalBody.classList.add(TC.Consts.classes.LOADING);\r\n        dialog.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        TC.Util.showModal(dialog, {\r\n            closeCallback: function () {\r\n                // no hay selección, vuelvo a seleccionar el mapa de fondo actual del mapa.\r\n                this._currentSelection.checked = true;\r\n                this.update();\r\n            }.bind(self)\r\n        });\r\n\r\n        dialog.querySelector('.tc-modal-window').classList.add(self.CLASS + '-more-dialog');\r\n\r\n        self._getMoreBaseLayers().then(function () {\r\n\r\n            self.getRenderedHtml(self.CLASS, { baseLayers: self._moreBaseLayers }, function (html) {\r\n                modalBody.innerHTML = html;\r\n                modalBody.classList.remove(TC.Consts.classes.LOADING);\r\n                modalBody.querySelectorAll('li').forEach(function (li, idx) {\r\n                    li.dataset.layerId = self._moreBaseLayers[idx].id;\r\n                });\r\n\r\n                self.update(modalBody);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.getLayer = function (id) {\r\n        const self = this;\r\n        return self.map && (self.map.getLayer(id) || (self._moreBaseLayers && self._moreBaseLayers.filter(function (layer) {\r\n            return layer.id === id;\r\n        })[0]));\r\n    };\r\n\r\n    const getTo3DVIew = function (baseLayer) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all([\r\n                baseLayer.getCapabilitiesPromise(),\r\n                baseLayer.getFallbackLayer() ? baseLayer.getFallbackLayer().getCapabilitiesPromise() : Promise.resolve()\r\n            ]).then(function () {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto._getMoreBaseLayers = function () {\r\n        const self = this;\r\n\r\n        if (!self._moreBaseLayers && !self._moreBaseLayersPromise) {\r\n\r\n            self._moreBaseLayersPromise = new Promise(function (resolve, reject) {\r\n\r\n                // GLS: Carlos no quiere que se muestren los respectivos dinámicos así que los filtro.\r\n                var noDyn = TC.Cfg.availableBaseLayers.filter(function (l) {\r\n                    return TC.Cfg.availableBaseLayers.filter(function (l) {\r\n                        return l.fallbackLayer\r\n                    }).map(function (l) {\r\n                        return l.fallbackLayer\r\n                    }).indexOf(l.id) == -1\r\n                }).map(function (baseLayer) {\r\n                    if (baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                        return new TC.layer.Raster(baseLayer);\r\n                    } else if (baseLayer.type == TC.Consts.layerType.VECTOR) {\r\n                        return new TC.layer.Vector(baseLayer);\r\n                    }\r\n                });\r\n\r\n                Promise.all(noDyn).then(function (baseLayers) {\r\n                    self._moreBaseLayers = new Array(baseLayers.length);\r\n\r\n                    var numToAdd = baseLayers.length;\r\n\r\n                    const resolvePromise = function () {\r\n                        self._moreBaseLayers = self._moreBaseLayers.filter(function (baseLayer) {\r\n                            return baseLayer !== null;\r\n                        });\r\n\r\n                        resolve(self._moreBaseLayers);\r\n                    };\r\n                    const addLayer = function (i) {\r\n                        const baseLayer = this;\r\n\r\n                        baseLayer.map = self.map;\r\n                        baseLayer.isBase = baseLayer.options.isBase = true;\r\n\r\n                        if (baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var matrixSet = baseLayer.wrap.getCompatibleMatrixSets(self.map.getCRS())[0];\r\n                            baseLayer.mustReproject = !matrixSet;\r\n                        } else if (baseLayer.type === TC.Consts.layerType.WMS) {\r\n                            baseLayer.mustReproject = !baseLayer.isCompatible(self.map.getCRS());\r\n                        }\r\n\r\n                        if (self.map.on3DView && baseLayer.mustReproject && baseLayer.getFallbackLayer && baseLayer.getFallbackLayer()) {\r\n                            baseLayer.mustReproject = !baseLayer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n                        }\r\n\r\n                        self._moreBaseLayers.splice(i, 1, baseLayer);\r\n                        numToAdd--;\r\n\r\n                        if (numToAdd === 0) {\r\n                            resolvePromise();\r\n                        }\r\n                    };\r\n\r\n                    baseLayers.forEach(function (baseLayer, i) {\r\n                        if (baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var promise = self.map.on3DView ? getTo3DVIew(baseLayer) : baseLayer.getCapabilitiesPromise();\r\n                            promise.then(\r\n                                addLayer.bind(baseLayer, i),\r\n                                function (fail) {\r\n                                    self._moreBaseLayers.splice(i, 1, null);\r\n                                    numToAdd--;\r\n\r\n                                    if (numToAdd === 0) {\r\n                                        resolvePromise();\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            addLayer.call(baseLayer, i);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n        } else if (self._moreBaseLayers) {\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                Promise.all(self._moreBaseLayers.filter(function (baseLayer) {\r\n                    return baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS;\r\n                }).map(function (baseLayer) {\r\n                    return self.map.on3DView ? getTo3DVIew(baseLayer) : baseLayer.getCapabilitiesPromise();\r\n                })).then(function () {\r\n\r\n                    self._moreBaseLayers = self._moreBaseLayers.map(function (baseLayer) {\r\n\r\n                        if (baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var matrixSet = baseLayer.wrap.getCompatibleMatrixSets(self.map.getCRS())[0];\r\n                            baseLayer.mustReproject = !matrixSet;\r\n                        } else if (baseLayer.type === TC.Consts.layerType.WMS) {\r\n                            baseLayer.mustReproject = !baseLayer.isCompatible(self.map.getCRS());\r\n                        }\r\n                        if (self.map.on3DView && baseLayer.mustReproject && baseLayer.getFallbackLayer && baseLayer.getFallbackLayer()) {\r\n                            baseLayer.mustReproject = !baseLayer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n\r\n                            return baseLayer;\r\n                        }\r\n\r\n                        return baseLayer;\r\n                    });\r\n\r\n                    resolve(self._moreBaseLayers);\r\n                });\r\n            });\r\n        }\r\n\r\n        return self._moreBaseLayersPromise;\r\n    };\r\n})();\r\n"],"file":"../../Control/BasemapSelector.min.js"}