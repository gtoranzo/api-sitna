{"version":3,"sources":["control/BasemapSelector.js"],"names":["TC","control","MapContents","syncLoadJS","apiLocation","BasemapSelector","self","this","apply","arguments","_cssClasses","LOAD_CRS_BUTTON","CLASS","CRS_DIALOG","CRS_LIST","CURRENT_CRS_NAME","CURRENT_CRS_CODE","_dialogDiv","Util","getDiv","options","dialogDiv","window","$","_$dialogDiv","document","body","appendChild","addEventListener","Consts","event","CLICK","EventTarget","listenerBySelector","e","target","classList","contains","loadFallbackProjections","closeModal","btn","crs","dataset","crsCode","dialog","querySelector","add","classes","HIDDEN","layer","getLayer","layerId","loadProjDef","callback","map","setProjection","baseLayer","fallbackLayer","getFallbackLayer","fallbackLayerId","setBaseLayer","inherit","ctlProto","prototype","template","dust","register","body_0","chk","ctx","w","h","$key","s","get","block","body_1","body_2","__dustBody","p","rebase","getPath","f","x","body_3","getClosestParent","elm","selector","matches","parentElement","changeInputRadioBaseMap","flagToCallback","radio","dialogMore","radios","div","querySelectorAll","i","len","length","bmsLayer","id","getBaseLayer","mustReproject","on3DView","_currentSelection","checked","stopPropagation","_capabilitiesPromise","then","isCompatible","getCRS","dialogOptions","showProjectionChangeDialog","type","layerType","WMS","WMTS","getProjection","result","call","on","VIEWCHANGE","_getMoreBaseLayers","BASELAYERCHANGE","PROJECTIONCHANGE","update","value","showMoreLayersDialog","render","getRenderedHtml","html","innerHTML","close","forEach","li","curBaseLayer","getCapabilitiesPromise","DISABLED","setAttribute","getLocaleString","remove","removeAttribute","updateScale","updateLayerTree","isBase","stealth","layerTrees","out","newLi","DOMParser","parseFromString","firstChild","uid","layerUid","ul","currentLi","setLayerIds","baseLayers","filter","idx","indexOf","inserted","curLi","insertAdjacentElement","ii","moreLabel","catch","err","error","updateLayerOrder","oldIdx","newIdx","removeLayer","lis","removeChild","onErrorLayer","toast","mapName","title","msgType","ERROR","filterFn","_moreBaseLayers","modalBody","LOADING","blCRSList","getCompatibleCRS","loadProjections","crsList","layers","workLayers","concat","includeFallbacks","orderBy","projList","hasFallbackCRS","fragment","createDocumentFragment","projObj","createElement","button","CRSCodesEqual","code","name","WARNING","showModal","toggle","THREED","closeCallback","bind","getTo3DVIew","Promise","resolve","reject","all","_moreBaseLayersPromise","matrixSet","wrap","getCompatibleMatrixSets","noDyn","Cfg","availableBaseLayers","l","Raster","VECTOR","Vector","Array","addLayer","splice","res","rej","fail","finally"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.MapContents) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/MapContents');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.control.BasemapSelector = function () {\r\n        var self = this;\r\n        //options = options || {};\r\n\r\n        TC.control.MapContents.apply(self, arguments);\r\n\r\n        self._cssClasses = {\r\n            LOAD_CRS_BUTTON: self.CLASS + '-crs-btn-load',\r\n            CRS_DIALOG: self.CLASS + '-crs-dialog',\r\n            CRS_LIST: self.CLASS + '-crs-list',\r\n            CURRENT_CRS_NAME: self.CLASS + '-cur-crs-name',\r\n            CURRENT_CRS_CODE: self.CLASS + '-cur-crs-code'\r\n        };\r\n\r\n        self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n        if (window.$) {\r\n            self._$dialogDiv = $(self._dialogDiv);\r\n        }\r\n        if (!self.options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        self._dialogDiv.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button:not(.tc-modal-close)', function (e) {\r\n\r\n            if (e.target.classList.contains(self._cssClasses.LOAD_CRS_BUTTON)) {\r\n                self.loadFallbackProjections();\r\n                return;\r\n            }\r\n\r\n            TC.Util.closeModal();\r\n            const btn = e.target;\r\n            const crs = btn.dataset.crsCode;\r\n\r\n            // dependerá del que esté activo\r\n            const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-crs-dialog');\r\n            dialog.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n            const layer = self.getLayer(dialog.dataset.layerId);\r\n            if (layer) {\r\n                if (crs) {\r\n                    TC.loadProjDef({\r\n                        crs: crs,\r\n                        callback: function () {\r\n                            self.map.setProjection({\r\n                                crs: crs,\r\n                                baseLayer: layer\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    const fallbackLayer = self.getFallbackLayer(btn.dataset.fallbackLayerId);\r\n                    if (fallbackLayer) {\r\n                        self.map.setBaseLayer(fallbackLayer);\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    };\r\n\r\n    TC.inherit(TC.control.BasemapSelector, TC.control.MapContents);\r\n\r\n    var ctlProto = TC.control.BasemapSelector.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-bms';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/BasemapSelector.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-node'] = TC.apiLocation + \"TC/templates/BasemapSelectorNode.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/BasemapSelectorDialog.html\";\r\n\r\n    const getClosestParent = function (elm, selector) {\r\n        while (elm && !elm.matches(selector)) {\r\n            elm = elm.parentElement;\r\n        }\r\n        return elm;\r\n    };\r\n\r\n    const changeInputRadioBaseMap = function (e, callback) {\r\n        const self = this;\r\n        var flagToCallback = true;\r\n\r\n        var radio = e.target;\r\n\r\n        var layer = self.getLayer(getClosestParent(radio, 'li').dataset.layerId);\r\n\r\n        if (self.options.dialogMore && getClosestParent(radio, '.' + self.CLASS + '-more-dialog')) {\r\n            const radios = self.div.querySelectorAll('input[type=radio]');\r\n            for (var i = 0, len = radios.length; i < len; i++) {\r\n                const bmsLayer = self.getLayer(getClosestParent(radios[i], 'li').dataset.layerId);\r\n                if (bmsLayer) {\r\n                    switch (true) {\r\n                        case bmsLayer.id === layer.id:\r\n                            layer = bmsLayer;\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        if (layer != self.map.getBaseLayer()) {\r\n            if (layer.mustReproject) {\r\n\r\n                if (self.map.on3DView) {\r\n                    if (!layer.getFallbackLayer()) {\r\n                        self._currentSelection.checked = true;\r\n                        e.stopPropagation();\r\n                        return;\r\n                    } else if (layer.getFallbackLayer()) {\r\n                        const fallbackLayer = layer.getFallbackLayer();\r\n                        if (fallbackLayer) {\r\n                            fallbackLayer._capabilitiesPromise.then(function () {\r\n                                if (fallbackLayer.isCompatible(self.map.getCRS())) {\r\n                                    self.map.setBaseLayer(layer);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        flagToCallback = true;\r\n                    }\r\n                } else {\r\n                    // provisonal\r\n                    if (self._currentSelection) {\r\n                        self._currentSelection.checked = true;\r\n                    }\r\n\r\n                    // Buscamos alternativa\r\n                    const dialogOptions = {\r\n                        layer: layer\r\n                    };\r\n                    const fallbackLayer = layer.getFallbackLayer();\r\n                    if (fallbackLayer) {\r\n                        fallbackLayer._capabilitiesPromise.then(function () {\r\n                            if (fallbackLayer.isCompatible(self.map.getCRS())) {\r\n                                dialogOptions.fallbackLayer = fallbackLayer;\r\n                            }\r\n                            self.showProjectionChangeDialog(dialogOptions);\r\n                        });\r\n                    }\r\n                    else {\r\n                        self.showProjectionChangeDialog(dialogOptions);\r\n                    }\r\n                    //layer.getCompatibleCRS({ normalized: true });\r\n                    flagToCallback = false;\r\n                }\r\n\r\n            }\r\n            else {\r\n\r\n                if (layer.type === TC.Consts.layerType.WMS || layer.type === TC.Consts.layerType.WMTS && layer.getProjection() !== self.map.crs) {\r\n                    layer.setProjection({ crs: self.map.crs });\r\n                }\r\n\r\n                self.map.setBaseLayer(layer);\r\n            }\r\n        }\r\n\r\n        if (this._currentSelection) {\r\n            this._currentSelection.checked = true;\r\n        }\r\n\r\n\r\n        if (callback) {\r\n            callback(flagToCallback);\r\n        }\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.control.MapContents.prototype.register.call(self, map);\r\n\r\n        if (self.options.dialogMore) {\r\n            map.on(TC.Consts.event.VIEWCHANGE, function () {\r\n                self._getMoreBaseLayers();\r\n            });\r\n        }\r\n\r\n        map.on(TC.Consts.event.BASELAYERCHANGE + ' ' + TC.Consts.event.PROJECTIONCHANGE + ' ' + TC.Consts.event.VIEWCHANGE, function (e) {\r\n            self.update(self.div, e.layer);\r\n        });\r\n\r\n\r\n        self.div.addEventListener('change', TC.EventTarget.listenerBySelector('input[type=radio]', function (e) {\r\n\r\n            if (e.target.value === \"moreLayers\") {\r\n                self.showMoreLayersDialog();\r\n            } else {\r\n                changeInputRadioBaseMap.call(self, e);\r\n            }\r\n\r\n            e.stopPropagation();\r\n        }));\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        const result = TC.control.MapContents.prototype.render.call(self, callback, self.options);\r\n\r\n        self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n\r\n            if (self.options.dialogMore) {\r\n                const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-more-dialog');\r\n\r\n                dialog.addEventListener('change', TC.EventTarget.listenerBySelector('input[type=radio]', function (e) {\r\n                    changeInputRadioBaseMap.call(self, e, function (close) {\r\n                        if (close) {\r\n                            TC.Util.closeModal();\r\n                        }\r\n                    });\r\n\r\n                    e.stopPropagation();\r\n                }));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.update = function (div, baseLayer) {\r\n        const self = this;\r\n\r\n        div = div || self.div;\r\n\r\n        div.querySelectorAll(`ul.${self.CLASS}-branch li`).forEach(function (li) {\r\n            const layer = self.getLayer(li.dataset.layerId);\r\n            if (layer) {\r\n                const curBaseLayer = baseLayer || self.map.baseLayer;\r\n                const radio = li.querySelector('input[type=radio]');\r\n                const checked = curBaseLayer && (curBaseLayer === layer || curBaseLayer.id === layer.id ||\r\n                    (layer.getFallbackLayer && (curBaseLayer === layer.getFallbackLayer() || (layer.getFallbackLayer() && curBaseLayer.id === layer.getFallbackLayer().id))));\r\n\r\n                if (self.map.on3DView && layer.mustReproject && layer.fallbackLayer && layer.getFallbackLayer) {\r\n                    layer.getFallbackLayer().getCapabilitiesPromise().then(function () {\r\n                        var mustReproject = !layer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n\r\n                        radio.checked = checked;\r\n                        if (mustReproject) {\r\n                            radio.classList.add(TC.Consts.classes.DISABLED);\r\n                            li.setAttribute('title', self.map.on3DView ? self.getLocaleString('notAvailableTo3D') : self.getLocaleString('reprojectionNeeded'));\r\n                        }\r\n                        else {\r\n                            radio.classList.remove(TC.Consts.classes.DISABLED);\r\n                            li.removeAttribute('title');\r\n                        }\r\n                    });\r\n                } else {\r\n                    radio.checked = checked;\r\n                    if (layer.mustReproject) {\r\n                        radio.classList.add(TC.Consts.classes.DISABLED);\r\n                        li.setAttribute('title', self.map.on3DView ? self.getLocaleString('notAvailableTo3D') : self.getLocaleString('reprojectionNeeded'));\r\n                    }\r\n                    else {\r\n                        radio.classList.remove(TC.Consts.classes.DISABLED);\r\n                        li.removeAttribute('title');\r\n                    }\r\n                }\r\n\r\n                if (checked) {\r\n                    self._currentSelection = radio;\r\n                }\r\n            }\r\n        });\r\n\r\n        self.updateScale();\r\n    };\r\n\r\n    ctlProto.updateLayerTree = function (layer) {\r\n        const self = this;        \r\n        if (layer.isBase && !layer.options.stealth) {\r\n            TC.control.MapContents.prototype.updateLayerTree.call(self, layer);\r\n\r\n            self.getRenderedHtml(self.CLASS + '-node', self.layerTrees[layer.id]).then(function (out) {\r\n                const parser = new DOMParser();\r\n                const newLi = parser.parseFromString(out, 'text/html').body.firstChild;\r\n                var uid = newLi.dataset.layerUid;\r\n                const ul = self.div.querySelector('.' + self.CLASS + '-branch');\r\n                const currentLi = ul.querySelector('li[data-layer-uid=\"' + uid + '\"]');\r\n                if (currentLi) {\r\n                    currentLi.innerHTML = newLi.innerHTML;\r\n                }\r\n                else {\r\n                    newLi.dataset.layerId = layer.id;\r\n\r\n                    // Insertamos elemento en el lugar correcto, según indica la colección baseLayers\r\n                    const setLayerIds = self.map.baseLayers\r\n                        .filter(baseLayer => baseLayer && !baseLayer.stealth) // Buscamos capas que deban mostrarse\r\n                        .map(baseLayer => baseLayer.id);\r\n                    const idx = setLayerIds.indexOf(layer.id);\r\n                    let inserted = false;\r\n                    for (let i = idx - 1; i >= 0; i--) {\r\n                        const curLi = ul.querySelector(`li[data-layer-id=\"${setLayerIds[i]}\"]`);\r\n                        if (curLi) {\r\n                            curLi.insertAdjacentElement('afterend', newLi);\r\n                            inserted = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!inserted) {\r\n                        for (let i = idx + 1, ii = setLayerIds.length; i < ii; i++) {\r\n                            const curLi = ul.querySelector(`li[data-layer-id=\"${setLayerIds[i]}\"]`);\r\n                            if (curLi) {\r\n                                curLi.insertAdjacentElement('beforebegin', newLi);\r\n                                inserted = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!inserted) {\r\n                            const moreLabel = ul.querySelector(`.${self.CLASS}-more-node`);\r\n                            if (moreLabel) {\r\n                                moreLabel.parentElement.insertAdjacentElement('beforebegin', newLi);\r\n                            }\r\n                            else {\r\n                                ul.appendChild(newLi);\r\n                            }\r\n                        }\r\n                    }\r\n                    self.update();\r\n                }\r\n            }).catch(function (err) {\r\n                TC.error(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.updateLayerOrder = function (layer, oldIdx, newIdx) {\r\n        // no hace nada\r\n    };\r\n\r\n    ctlProto.removeLayer = function (layer) {\r\n        const self = this;\r\n        if (layer.isBase) {\r\n            const lis = self.div.querySelector('.' + self.CLASS + '-branch').querySelectorAll('li');\r\n            for (var i = 0, len = lis.length; i < len; i++) {\r\n                const li = lis[i];\r\n                if (li.dataset.layerId === layer.id) {\r\n                    li.parentElement.removeChild(li);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.onErrorLayer = function (layer) {\r\n        const self = this;\r\n\r\n        if (layer.isBase && !layer.options.stealth) {\r\n            self.map.toast(self.getLocaleString('baseLayerNotAvailable', { mapName: layer.title }), { type: TC.Consts.msgType.ERROR });\r\n        }\r\n    };\r\n\r\n    ctlProto.getFallbackLayer = function (id) {\r\n        const self = this;\r\n        const filterFn = function (layer) {\r\n            return layer.fallbackLayer && layer.fallbackLayer.id === id;\r\n        };\r\n        var result = self.map.baseLayers.filter(filterFn)[0].fallbackLayer;\r\n        if (!result && self._moreBaseLayers) {\r\n            result = self._moreBaseLayers.filter(filterFn)[0].fallbackLayer;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.loadFallbackProjections = function () {\r\n        const self = this;\r\n        const lis = self._dialogDiv\r\n            .querySelector('.' + self._cssClasses.CRS_DIALOG)\r\n            .querySelectorAll('ul.' + self._cssClasses.CRS_LIST + ' li');\r\n        lis.forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.HIDDEN);\r\n            if (li.querySelector('button.' + self._cssClasses.LOAD_CRS_BUTTON)) {\r\n                li.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.showProjectionChangeDialog = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const layer = options.layer;\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-crs-dialog');\r\n        const modalBody = dialog.querySelector('.tc-modal-body');\r\n        modalBody.classList.add(TC.Consts.classes.LOADING);\r\n        const blCRSList = layer.getCompatibleCRS();\r\n\r\n        dialog.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        dialog.dataset.layerId = layer.id;\r\n        const ul = dialog.querySelector('ul.' + self.CLASS + '-crs-list');\r\n        ul.innerHTML = '';\r\n        self.map.loadProjections({\r\n            crsList: self.map.getCompatibleCRS({\r\n                layers: self.map.workLayers.concat(layer),\r\n                includeFallbacks: true\r\n            }),\r\n            orderBy: 'name'\r\n        }).then(function (projList) {\r\n            var hasFallbackCRS = false;\r\n            const fragment = document.createDocumentFragment();\r\n            projList\r\n                .forEach(function (projObj) {\r\n                    const li = document.createElement('li');\r\n                    const button = document.createElement('button');\r\n\r\n                    if (blCRSList.filter(function (crs) {\r\n                        return TC.Util.CRSCodesEqual(crs, projObj.code)\r\n                    }).length === 0) {\r\n                        // Es un CRS del fallback\r\n                        hasFallbackCRS = true;\r\n\r\n                        button.innerHTML = projObj.name + ' (' + projObj.code + ')';\r\n                        if (options.layer.fallbackLayer) {\r\n                            button.dataset.fallbackLayerId = options.layer.fallbackLayer.id;\r\n                        }\r\n                        button.dataset.crsCode = projObj.code;\r\n                        button.classList.add(TC.Consts.classes.WARNING);\r\n                        li.classList.add(TC.Consts.classes.HIDDEN);\r\n                    } else {\r\n                        button.innerHTML = self.getLocaleString('changeMapToCrs', { crs: projObj.name + ' (' + projObj.code + ')' });\r\n                        button.dataset.crsCode = projObj.code;\r\n                    }\r\n\r\n                    li.appendChild(button);\r\n                    fragment.appendChild(li);\r\n                });\r\n\r\n            if (options.fallbackLayer) {\r\n                const li = document.createElement('li');\r\n                const button = document.createElement('button');\r\n                button.innerHTML = self.getLocaleString('reprojectOnTheFly');\r\n                button.dataset.fallbackLayerId = options.fallbackLayer.id;\r\n                li.appendChild(button);\r\n                fragment.appendChild(li);\r\n            }\r\n\r\n            if (hasFallbackCRS) {\r\n                const li = document.createElement('li');\r\n                const button = document.createElement('button');\r\n                button.classList.add(self._cssClasses.LOAD_CRS_BUTTON);\r\n                button.innerHTML = self.getLocaleString('showOnTheFlyProjections');\r\n                li.appendChild(button);\r\n                fragment.appendChild(li);\r\n            }\r\n            ul.appendChild(fragment);\r\n\r\n            modalBody.classList.remove(TC.Consts.classes.LOADING);\r\n        });\r\n        dialog.querySelector('.' + self.CLASS + '-name').innerHTML = layer.title || layer.name;\r\n        TC.Util.showModal(dialog);\r\n    };\r\n\r\n    ctlProto.showMoreLayersDialog = function () {\r\n        const self = this;\r\n\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-more-dialog');\r\n\r\n        dialog.classList.toggle(TC.Consts.classes.THREED, !!self.map.on3DView);\r\n\r\n        const modalBody = dialog.querySelector('.tc-modal-body');\r\n        modalBody.innerHTML = '';\r\n        modalBody.classList.add(TC.Consts.classes.LOADING);\r\n        dialog.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        TC.Util.showModal(dialog, {\r\n            closeCallback: function () {\r\n                // no hay selección, vuelvo a seleccionar el mapa de fondo actual del mapa.\r\n                this._currentSelection.checked = true;\r\n                this.update();\r\n            }.bind(self)\r\n        });\r\n\r\n        dialog.querySelector('.tc-modal-window').classList.add(self.CLASS + '-more-dialog');\r\n\r\n        self._getMoreBaseLayers().then(function () {\r\n\r\n            self.getRenderedHtml(self.CLASS, { baseLayers: self._moreBaseLayers }, function (html) {\r\n                modalBody.innerHTML = html;\r\n                modalBody.classList.remove(TC.Consts.classes.LOADING);\r\n                modalBody.querySelectorAll('li').forEach(function (li, idx) {\r\n                    li.dataset.layerId = self._moreBaseLayers[idx].id;\r\n                });\r\n\r\n                self.update(modalBody);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.getLayer = function (id) {\r\n        const self = this;\r\n        return self.map && (self.map.getLayer(id) || (self._moreBaseLayers && self._moreBaseLayers.filter(function (layer) {\r\n            return layer.id === id;\r\n        })[0]));\r\n    };\r\n\r\n    const getTo3DVIew = function (baseLayer) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all([\r\n                baseLayer.getCapabilitiesPromise(),\r\n                baseLayer.getFallbackLayer() ? baseLayer.getFallbackLayer().getCapabilitiesPromise() : Promise.resolve()\r\n            ]).then(function () {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto._getMoreBaseLayers = function () {\r\n        const self = this;\r\n\r\n        if (!self._moreBaseLayers && !self._moreBaseLayersPromise) {\r\n\r\n            self._moreBaseLayersPromise = new Promise(function (resolve, reject) {\r\n\r\n                // GLS: Carlos no quiere que se muestren los respectivos dinámicos así que los filtro.\r\n                var noDyn = TC.Cfg.availableBaseLayers.filter(function (l) {\r\n                    return TC.Cfg.availableBaseLayers.filter(function (l) {\r\n                        return l.fallbackLayer\r\n                    }).map(function (l) {\r\n                        return l.fallbackLayer\r\n                    }).indexOf(l.id) == -1\r\n                }).map(function (baseLayer) {\r\n                    if (baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                        return new TC.layer.Raster(baseLayer);\r\n                    } else if (baseLayer.type == TC.Consts.layerType.VECTOR) {\r\n                        return new TC.layer.Vector(baseLayer);\r\n                    }\r\n                });\r\n\r\n                self._moreBaseLayers = new Array(noDyn.length);\r\n\r\n                const resolvePromise = function () {\r\n                    self._moreBaseLayers = self._moreBaseLayers.filter(function (baseLayer) {\r\n                        return baseLayer !== null;\r\n                    });\r\n\r\n                    resolve(self._moreBaseLayers);\r\n                };\r\n                const addLayer = function (i) {\r\n                    const baseLayer = this;\r\n\r\n                    baseLayer.map = self.map;\r\n                    baseLayer.isBase = baseLayer.options.isBase = true;\r\n\r\n                    if (baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                        var matrixSet = baseLayer.wrap.getCompatibleMatrixSets(self.map.getCRS())[0];\r\n                        baseLayer.mustReproject = !matrixSet;\r\n                    } else if (baseLayer.type === TC.Consts.layerType.WMS) {\r\n                        baseLayer.mustReproject = !baseLayer.isCompatible(self.map.getCRS());\r\n                    }\r\n\r\n                    if (self.map.on3DView && baseLayer.mustReproject && baseLayer.getFallbackLayer && baseLayer.getFallbackLayer()) {\r\n                        baseLayer.mustReproject = !baseLayer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n                    }\r\n\r\n                    self._moreBaseLayers.splice(i, 1, baseLayer);\r\n                };\r\n\r\n                Promise.all(noDyn.map(function (baseLayer, i) {\r\n                    return new Promise(function (res, rej) {\r\n                        if (baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var promise = self.map.on3DView ? getTo3DVIew(baseLayer) : baseLayer.getCapabilitiesPromise();\r\n                            promise.then(\r\n                                function () {\r\n                                    addLayer.call(baseLayer, i);\r\n                                    res();\r\n                                },\r\n                                function (fail) {\r\n                                    self._moreBaseLayers.splice(i, 1, null);\r\n                                    res();\r\n                                });\r\n                        } else {\r\n                            addLayer.call(baseLayer, i);\r\n                            res();\r\n                        }\r\n                    });\r\n                })).finally(resolvePromise);\r\n            });\r\n\r\n        } else if (self._moreBaseLayers) {\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                Promise.all(self._moreBaseLayers.filter(function (baseLayer) {\r\n                    return baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS;\r\n                }).map(function (baseLayer) {\r\n                    return self.map.on3DView ? getTo3DVIew(baseLayer) : baseLayer.getCapabilitiesPromise();\r\n                })).then(function () {\r\n\r\n                    self._moreBaseLayers = self._moreBaseLayers.map(function (baseLayer) {\r\n\r\n                        if (baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var matrixSet = baseLayer.wrap.getCompatibleMatrixSets(self.map.getCRS())[0];\r\n                            baseLayer.mustReproject = !matrixSet;\r\n                        } else if (baseLayer.type === TC.Consts.layerType.WMS) {\r\n                            baseLayer.mustReproject = !baseLayer.isCompatible(self.map.getCRS());\r\n                        }\r\n                        if (self.map.on3DView && baseLayer.mustReproject && baseLayer.getFallbackLayer && baseLayer.getFallbackLayer()) {\r\n                            baseLayer.mustReproject = !baseLayer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n\r\n                            return baseLayer;\r\n                        }\r\n\r\n                        return baseLayer;\r\n                    });\r\n\r\n                    resolve(self._moreBaseLayers);\r\n                });\r\n            });\r\n        }\r\n\r\n        return self._moreBaseLayersPromise;\r\n    };\r\n})();\r\n"]}