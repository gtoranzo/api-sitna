{"version":3,"sources":["control/BasemapSelector.js"],"names":["TC","control","MapContents","syncLoadJS","apiLocation","BasemapSelector","self","this","apply","arguments","_cssClasses","LOAD_CRS_BUTTON","CLASS","CRS_DIALOG","CRS_LIST","CURRENT_CRS_NAME","CURRENT_CRS_CODE","_dialogDiv","Util","getDiv","options","dialogDiv","window","$","_$dialogDiv","document","body","appendChild","addEventListener","Consts","event","CLICK","EventTarget","listenerBySelector","e","target","classList","contains","loadFallbackProjections","closeModal","btn","crs","dataset","crsCode","dialog","querySelector","add","classes","HIDDEN","layer","getLayer","layerId","loadProjDef","callback","map","setProjection","baseLayer","fallbackLayer","getFallbackLayer","fallbackLayerId","setBaseLayer","inherit","ctlProto","prototype","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","s","get","block","body_1","body_2","__dustBody","p","rebase","getPath","f","x","body_3","getClosestParent","elm","selector","matches","parentElement","changeInputRadioBaseMap","flagToCallback","radio","dialogMore","radios","div","querySelectorAll","i","len","length","bmsLayer","id","getBaseLayer","mustReproject","on3DView","_currentSelection","checked","stopPropagation","_capabilitiesPromise","then","isCompatible","getCRS","dialogOptions","showProjectionChangeDialog","type","layerType","WMS","WMTS","getProjection","result","call","on","VIEWCHANGE","_getMoreBaseLayers","BASELAYERCHANGE","PROJECTIONCHANGE","update","value","showMoreLayersDialog","render","getRenderedHtml","html","innerHTML","close","forEach","li","curBaseLayer","getCapabilitiesPromise","DISABLED","setAttribute","getLocaleString","remove","removeAttribute","updateScale","updateLayerTree","isBase","stealth","loadJSInOrder","url","templating","layerTrees","err","out","newLi","DOMParser","parseFromString","firstChild","uid","layerUid","ul","currentLi","idx","baseLayers","filter","indexOf","lis","insertBefore","error","updateLayerOrder","oldIdx","newIdx","removeLayer","removeChild","onErrorLayer","toast","mapName","title","msgType","ERROR","filterFn","_moreBaseLayers","modalBody","LOADING","blCRSList","getCompatibleCRS","loadProjections","crsList","layers","workLayers","concat","includeFallbacks","orderBy","projList","hasFallbackCRS","fragment","createDocumentFragment","projObj","createElement","button","CRSCodesEqual","code","name","WARNING","showModal","toggle","THREED","closeCallback","bind","getTo3DVIew","Promise","resolve","reject","all","_moreBaseLayersPromise","matrixSet","wrap","getCompatibleMatrixSets","noDyn","Cfg","availableBaseLayers","l","Raster","VECTOR","Vector","Array","numToAdd","resolvePromise","addLayer","splice","fail"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.MapContents) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/MapContents');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.control.BasemapSelector = function () {\r\n        var self = this;\r\n        //options = options || {};\r\n\r\n        TC.control.MapContents.apply(self, arguments);\r\n\r\n        self._cssClasses = {\r\n            LOAD_CRS_BUTTON: self.CLASS + '-crs-btn-load',\r\n            CRS_DIALOG: self.CLASS + '-crs-dialog',\r\n            CRS_LIST: self.CLASS + '-crs-list',\r\n            CURRENT_CRS_NAME: self.CLASS + '-cur-crs-name',\r\n            CURRENT_CRS_CODE: self.CLASS + '-cur-crs-code'\r\n        };\r\n\r\n        self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n        if (window.$) {\r\n            self._$dialogDiv = $(self._dialogDiv);\r\n        }\r\n        if (!self.options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        self._dialogDiv.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button:not(.tc-modal-close)', function (e) {\r\n\r\n            if (e.target.classList.contains(self._cssClasses.LOAD_CRS_BUTTON)) {\r\n                self.loadFallbackProjections();\r\n                return;\r\n            }\r\n\r\n            TC.Util.closeModal();\r\n            const btn = e.target;\r\n            const crs = btn.dataset.crsCode;\r\n\r\n            // dependerá del que esté activo\r\n            const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-crs-dialog');\r\n            dialog.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n            const layer = self.getLayer(dialog.dataset.layerId);\r\n            if (layer) {\r\n                if (crs) {\r\n                    TC.loadProjDef({\r\n                        crs: crs,\r\n                        callback: function () {\r\n                            self.map.setProjection({\r\n                                crs: crs,\r\n                                baseLayer: layer\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    const fallbackLayer = self.getFallbackLayer(btn.dataset.fallbackLayerId);\r\n                    if (fallbackLayer) {\r\n                        self.map.setBaseLayer(fallbackLayer);\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    };\r\n\r\n    TC.inherit(TC.control.BasemapSelector, TC.control.MapContents);\r\n\r\n    var ctlProto = TC.control.BasemapSelector.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-bms';\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/BasemapSelector.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = TC.apiLocation + \"TC/templates/BasemapSelectorNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/BasemapSelectorDialog.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () {\r\n            dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"backgroundMaps\" }).w(\"</h2><div class=\\\"tc-ctl-bms-tree\\\"><form><ul class=\\\"tc-ctl-bms-branch\\\">\").s(ctx.get([\"baseLayers\"], false), ctx, { \"block\": body_1 }, {}).s(ctx.get([\"dialogMore\"], false), ctx, { \"block\": body_2 }, {}).w(\"</ul></form></div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.p(\"tc-ctl-bms-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-bms-node\\\"><label class=\\\"tc-ctl-bms-more-node\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"moreBackgroundMaps\" }).w(\"\\\"><input type=\\\"radio\\\" name=\\\"bms\\\" value=\\\"moreLayers\\\"><span></span></label></li>\"); } body_2.__dustBody = !0; return body_0\r\n        };\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = function () { dust.register(ctlProto.CLASS + '-node', body_0); function body_0(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-bms-node\\\" data-layer-name=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" data-layer-uid=\\\"\").f(ctx.get([\"uid\"], false), ctx, \"h\").w(\"\\\" ><label\").x(ctx.get([\"legend\"], false), ctx, { \"block\": body_1 }, {}).x(ctx.get([\"thumbnail\"], false), ctx, { \"block\": body_2 }, {}).w(\"><input type=\\\"radio\\\" name=\\\"bms\\\" value=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\"\").x(ctx.get([\"mustReproject\"], false), ctx, { \"block\": body_3 }, {}).w(\"><span>\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span></label></li>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\" style=\\\"background-image: url(\").f(ctx.getPath(false, [\"legend\", \"src\"]), ctx, \"h\").w(\")\\\"\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\" style=\\\"background-image: url(\").f(ctx.get([\"thumbnail\"], false), ctx, \"h\").w(\")\\\"\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\" class=\\\"tc-disabled\\\"\"); } body_3.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-bms-more-dialog tc-modal tc-hidden\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"backgroundMaps\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"></div><div class=\\\"tc-modal-footer\\\"><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"</button></div></div></div><div class=\\\"tc-ctl-bms-crs-dialog tc-modal tc-hidden\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"baseLayerNotCompatible\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><p>\").h(\"i18n\", ctx, {}, { \"$key\": \"baseLayerNotCompatible.instructions|h\" }).w(\"</p><ul class=\\\"tc-ctl-bms-crs-list tc-crs-list\\\"></ul></div><div class=\\\"tc-modal-footer\\\"><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"</button></div></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const getClosestParent = function (elm, selector) {\r\n        while (elm && !elm.matches(selector)) {\r\n            elm = elm.parentElement;\r\n        }\r\n        return elm;\r\n    };\r\n\r\n    const changeInputRadioBaseMap = function (e, callback) {\r\n        const self = this;\r\n        var flagToCallback = true;\r\n\r\n        var radio = e.target;\r\n\r\n        var layer = self.getLayer(getClosestParent(radio, 'li').dataset.layerId);\r\n\r\n        if (self.options.dialogMore && getClosestParent(radio, '.' + self.CLASS + '-more-dialog')) {\r\n            const radios = self.div.querySelectorAll('input[type=radio]');\r\n            for (var i = 0, len = radios.length; i < len; i++) {\r\n                const bmsLayer = self.getLayer(getClosestParent(radios[i], 'li').dataset.layerId);\r\n                if (bmsLayer) {\r\n                    switch (true) {\r\n                        case bmsLayer.id === layer.id:\r\n                            layer = bmsLayer;\r\n                            break;\r\n                    }\r\n                }\r\n            };\r\n        }\r\n\r\n        if (layer != self.map.getBaseLayer()) {\r\n            if (layer.mustReproject) {\r\n\r\n                if (self.map.on3DView) {\r\n                    if (!layer.getFallbackLayer()) {\r\n                        self._currentSelection.checked = true;\r\n                        e.stopPropagation();\r\n                        return;\r\n                    } else if (layer.getFallbackLayer()) {\r\n                        const fallbackLayer = layer.getFallbackLayer();\r\n                        if (fallbackLayer) {\r\n                            fallbackLayer._capabilitiesPromise.then(function () {\r\n                                if (fallbackLayer.isCompatible(self.map.getCRS())) {\r\n                                    self.map.setBaseLayer(layer);\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        flagToCallback = true;\r\n                    }\r\n                } else {\r\n                    // provisonal\r\n                    if (self._currentSelection) {\r\n                        self._currentSelection.checked = true;\r\n                    }\r\n\r\n                    // Buscamos alternativa\r\n                    const dialogOptions = {\r\n                        layer: layer\r\n                    };\r\n                    const fallbackLayer = layer.getFallbackLayer();\r\n                    if (fallbackLayer) {\r\n                        fallbackLayer._capabilitiesPromise.then(function () {\r\n                            if (fallbackLayer.isCompatible(self.map.getCRS())) {\r\n                                dialogOptions.fallbackLayer = fallbackLayer;\r\n                            }\r\n                            self.showProjectionChangeDialog(dialogOptions);\r\n                        });\r\n                    }\r\n                    else {\r\n                        self.showProjectionChangeDialog(dialogOptions);\r\n                    }\r\n                    //layer.getCompatibleCRS({ normalized: true });\r\n                    flagToCallback = false;\r\n                }\r\n\r\n            }\r\n            else {\r\n\r\n                if (layer.type === TC.Consts.layerType.WMS || layer.type === TC.Consts.layerType.WMTS && layer.getProjection() !== self.map.crs) {\r\n                    layer.setProjection({ crs: self.map.crs });\r\n                }\r\n\r\n                self.map.setBaseLayer(layer);\r\n            }\r\n        }\r\n\r\n        if (this._currentSelection) {\r\n            this._currentSelection.checked = true;\r\n        }\r\n\r\n\r\n        if (callback) {\r\n            callback(flagToCallback);\r\n        }\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.control.MapContents.prototype.register.call(self, map);\r\n\r\n        if (self.options.dialogMore) {\r\n            map.on(TC.Consts.event.VIEWCHANGE, function () {\r\n                self._getMoreBaseLayers();\r\n            });\r\n        }\r\n\r\n        map.on(TC.Consts.event.BASELAYERCHANGE + ' ' + TC.Consts.event.PROJECTIONCHANGE + ' ' + TC.Consts.event.VIEWCHANGE, function (e) {\r\n            self.update(self.div, e.layer);\r\n        });\r\n\r\n\r\n        self.div.addEventListener('change', TC.EventTarget.listenerBySelector('input[type=radio]', function (e) {\r\n\r\n            if (e.target.value === \"moreLayers\") {\r\n                self.showMoreLayersDialog();\r\n            } else {\r\n                changeInputRadioBaseMap.call(self, e);\r\n            }\r\n\r\n            e.stopPropagation();\r\n        }));\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        const result = TC.control.MapContents.prototype.render.call(self, callback, self.options);\r\n\r\n        self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n\r\n            if (self.options.dialogMore) {\r\n                const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-more-dialog');\r\n\r\n                dialog.addEventListener('change', TC.EventTarget.listenerBySelector('input[type=radio]', function (e) {\r\n                    changeInputRadioBaseMap.call(self, e, function (close) {\r\n                        if (close) {\r\n                            TC.Util.closeModal();\r\n                        }\r\n                    });\r\n\r\n                    e.stopPropagation();\r\n                }));\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.update = function (div, baseLayer) {\r\n        const self = this;\r\n\r\n        div = div || self.div;\r\n\r\n        div.querySelector('ul.' + self.CLASS + '-branch').querySelectorAll('li').forEach(function (li) {\r\n            const layer = self.getLayer(li.dataset.layerId);\r\n            if (layer) {\r\n                const curBaseLayer = baseLayer || self.map.baseLayer;\r\n                const radio = li.querySelector('input[type=radio]');\r\n                const checked = curBaseLayer && (curBaseLayer === layer || curBaseLayer.id === layer.id ||\r\n                    (layer.getFallbackLayer && (curBaseLayer === layer.getFallbackLayer() || (layer.getFallbackLayer() && curBaseLayer.id === layer.getFallbackLayer().id))));\r\n\r\n                if (self.map.on3DView && layer.mustReproject && layer.fallbackLayer && layer.getFallbackLayer) {\r\n                    layer.getFallbackLayer().getCapabilitiesPromise().then(function () {\r\n                        var mustReproject = !layer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n\r\n                        radio.checked = checked;\r\n                        if (mustReproject) {\r\n                            radio.classList.add(TC.Consts.classes.DISABLED);\r\n                            li.setAttribute('title', self.map.on3DView ? self.getLocaleString('notAvailableTo3D') : self.getLocaleString('reprojectionNeeded'));\r\n                        }\r\n                        else {\r\n                            radio.classList.remove(TC.Consts.classes.DISABLED);\r\n                            li.removeAttribute('title');\r\n                        }\r\n                    });\r\n                } else {\r\n                    radio.checked = checked;\r\n                    if (layer.mustReproject) {\r\n                        radio.classList.add(TC.Consts.classes.DISABLED);\r\n                        li.setAttribute('title', self.map.on3DView ? self.getLocaleString('notAvailableTo3D') : self.getLocaleString('reprojectionNeeded'));\r\n                    }\r\n                    else {\r\n                        radio.classList.remove(TC.Consts.classes.DISABLED);\r\n                        li.removeAttribute('title');\r\n                    }\r\n                }\r\n\r\n                if (checked) {\r\n                    self._currentSelection = radio;\r\n                }\r\n            }\r\n        });\r\n\r\n        self.updateScale();\r\n    };\r\n\r\n    ctlProto.updateLayerTree = function (layer) {\r\n        const self = this;        \r\n        if (layer.isBase && !layer.options.stealth) {\r\n            TC.control.MapContents.prototype.updateLayerTree.call(self, layer);\r\n\r\n            var template = self.CLASS + '-node';\r\n            TC.loadJSInOrder(\r\n                !window.dust,\r\n                TC.url.templating,\r\n                function () {\r\n                    dust.render(template, self.layerTrees[layer.id], function (err, out) {\r\n                        const parser = new DOMParser();\r\n                        const newLi = parser.parseFromString(out, 'text/html').body.firstChild;\r\n                        var uid = newLi.dataset.layerUid;\r\n                        const ul = self.div.querySelector('.' + self.CLASS + '-branch');\r\n                        const currentLi = ul.querySelector('li[data-layer-uid=\"' + uid + '\"]');\r\n                        if (currentLi) {\r\n                            currentLi.innerHTML = newLi.innerHTML;\r\n                        }\r\n                        else {\r\n                            newLi.dataset.layerId = layer.id;\r\n\r\n                            // Insertamos elemento en el lugar correcto, según indica la colección baseLayers\r\n                            var idx = self.map.baseLayers.filter(function (baseLayer) {\r\n                                // Buscamos capas que deban mostrarse o capas que están siendo fallbacks de capas que deben mostrarse\r\n                                return !baseLayer.stealth;\r\n                            }).map(function (baseLayer) {\r\n                                return baseLayer.id;\r\n                            }).indexOf(layer.id);\r\n\r\n                            const lis = ul.querySelectorAll('li');\r\n                            if (idx < 0 || idx >= lis.length) {\r\n                                ul.appendChild(newLi);\r\n                            }\r\n                            else {\r\n                                ul.insertBefore(newLi, lis[idx]);\r\n                            }\r\n                        }\r\n                        if (err) {\r\n                            TC.error(err);\r\n                        }\r\n                    });\r\n                    self.update();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    ctlProto.updateLayerOrder = function (layer, oldIdx, newIdx) {\r\n        // no hace nada\r\n    };\r\n\r\n    ctlProto.removeLayer = function (layer) {\r\n        const self = this;\r\n        if (layer.isBase) {\r\n            const lis = self.div.querySelector('.' + self.CLASS + '-branch').querySelectorAll('li');\r\n            for (var i = 0, len = lis.length; i < len; i++) {\r\n                const li = lis[i];\r\n                if (li.dataset.layerId === layer.id) {\r\n                    li.parentElement.removeChild(li);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.onErrorLayer = function (layer) {\r\n        const self = this;\r\n\r\n        if (layer.isBase && !layer.options.stealth) {\r\n            self.map.toast(self.getLocaleString('baseLayerNotAvailable', { mapName: layer.title }), { type: TC.Consts.msgType.ERROR });\r\n        }\r\n    };\r\n\r\n    ctlProto.getFallbackLayer = function (id) {\r\n        const self = this;\r\n        const filterFn = function (layer) {\r\n            return layer.fallbackLayer && layer.fallbackLayer.id === id;\r\n        };\r\n        var result = self.map.baseLayers.filter(filterFn)[0].fallbackLayer;\r\n        if (!result && self._moreBaseLayers) {\r\n            result = self._moreBaseLayers.filter(filterFn)[0].fallbackLayer;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.loadFallbackProjections = function () {\r\n        const self = this;\r\n        const lis = self._dialogDiv\r\n            .querySelector('.' + self._cssClasses.CRS_DIALOG)\r\n            .querySelectorAll('ul.' + self._cssClasses.CRS_LIST + ' li');\r\n        lis.forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.HIDDEN);\r\n            if (li.querySelector('button.' + self._cssClasses.LOAD_CRS_BUTTON)) {\r\n                li.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.showProjectionChangeDialog = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const layer = options.layer;\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-crs-dialog');\r\n        const modalBody = dialog.querySelector('.tc-modal-body');\r\n        modalBody.classList.add(TC.Consts.classes.LOADING);\r\n        const blCRSList = layer.getCompatibleCRS();\r\n\r\n        dialog.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        dialog.dataset.layerId = layer.id;\r\n        const ul = dialog.querySelector('ul.' + self.CLASS + '-crs-list');\r\n        ul.innerHTML = '';\r\n        self.map.loadProjections({\r\n            crsList: self.map.getCompatibleCRS({\r\n                layers: self.map.workLayers.concat(layer),\r\n                includeFallbacks: true\r\n            }),\r\n            orderBy: 'name'\r\n        }).then(function (projList) {\r\n            var hasFallbackCRS = false;\r\n            const fragment = document.createDocumentFragment();\r\n            projList\r\n                .forEach(function (projObj) {\r\n                    const li = document.createElement('li');\r\n                    const button = document.createElement('button');\r\n\r\n                    if (blCRSList.filter(function (crs) {\r\n                        return TC.Util.CRSCodesEqual(crs, projObj.code)\r\n                    }).length === 0) {\r\n                        // Es un CRS del fallback\r\n                        hasFallbackCRS = true;\r\n\r\n                        button.innerHTML = projObj.name + ' (' + projObj.code + ')';\r\n                        if (options.layer.fallbackLayer) {\r\n                            button.dataset.fallbackLayerId = options.layer.fallbackLayer.id;\r\n                        }\r\n                        button.dataset.crsCode = projObj.code;\r\n                        button.classList.add(TC.Consts.classes.WARNING);\r\n                        li.classList.add(TC.Consts.classes.HIDDEN);\r\n                    } else {\r\n                        button.innerHTML = self.getLocaleString('changeMapToCrs', { crs: projObj.name + ' (' + projObj.code + ')' });\r\n                        button.dataset.crsCode = projObj.code;\r\n                    }\r\n\r\n                    li.appendChild(button);\r\n                    fragment.appendChild(li);\r\n                });\r\n\r\n            if (options.fallbackLayer) {\r\n                const li = document.createElement('li');\r\n                const button = document.createElement('button');\r\n                button.innerHTML = self.getLocaleString('reprojectOnTheFly');\r\n                button.dataset.fallbackLayerId = options.fallbackLayer.id;\r\n                li.appendChild(button);\r\n                fragment.appendChild(li);\r\n            }\r\n\r\n            if (hasFallbackCRS) {\r\n                const li = document.createElement('li');\r\n                const button = document.createElement('button');\r\n                button.classList.add(self._cssClasses.LOAD_CRS_BUTTON);\r\n                button.innerHTML = self.getLocaleString('showOnTheFlyProjections');\r\n                li.appendChild(button);\r\n                fragment.appendChild(li);\r\n            }\r\n            ul.appendChild(fragment);\r\n\r\n            modalBody.classList.remove(TC.Consts.classes.LOADING);\r\n        });\r\n        dialog.querySelector('.' + self.CLASS + '-name').innerHTML = layer.title || layer.name;\r\n        TC.Util.showModal(dialog);\r\n    };\r\n\r\n    ctlProto.showMoreLayersDialog = function () {\r\n        const self = this;\r\n\r\n        const dialog = self._dialogDiv.querySelector('.' + self.CLASS + '-more-dialog');\r\n\r\n        dialog.classList.toggle(TC.Consts.classes.THREED, !!self.map.on3DView);\r\n\r\n        const modalBody = dialog.querySelector('.tc-modal-body');\r\n        modalBody.innerHTML = '';\r\n        modalBody.classList.add(TC.Consts.classes.LOADING);\r\n        dialog.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        TC.Util.showModal(dialog, {\r\n            closeCallback: function () {\r\n                // no hay selección, vuelvo a seleccionar el mapa de fondo actual del mapa.\r\n                this._currentSelection.checked = true;\r\n                this.update();\r\n            }.bind(self)\r\n        });\r\n\r\n        dialog.querySelector('.tc-modal-window').classList.add(self.CLASS + '-more-dialog');\r\n\r\n        self._getMoreBaseLayers().then(function () {\r\n\r\n            self.getRenderedHtml(self.CLASS, { baseLayers: self._moreBaseLayers }, function (html) {\r\n                modalBody.innerHTML = html;\r\n                modalBody.classList.remove(TC.Consts.classes.LOADING);\r\n                modalBody.querySelectorAll('li').forEach(function (li, idx) {\r\n                    li.dataset.layerId = self._moreBaseLayers[idx].id;\r\n                });\r\n\r\n                self.update(modalBody);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.getLayer = function (id) {\r\n        const self = this;\r\n        return self.map && (self.map.getLayer(id) || (self._moreBaseLayers && self._moreBaseLayers.filter(function (layer) {\r\n            return layer.id === id;\r\n        })[0]));\r\n    };\r\n\r\n    const getTo3DVIew = function (baseLayer) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all([\r\n                baseLayer.getCapabilitiesPromise(),\r\n                baseLayer.getFallbackLayer() ? baseLayer.getFallbackLayer().getCapabilitiesPromise() : Promise.resolve()\r\n            ]).then(function () {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto._getMoreBaseLayers = function () {\r\n        const self = this;\r\n\r\n        if (!self._moreBaseLayers && !self._moreBaseLayersPromise) {\r\n\r\n            self._moreBaseLayersPromise = new Promise(function (resolve, reject) {\r\n\r\n                // GLS: Carlos no quiere que se muestren los respectivos dinámicos así que los filtro.\r\n                var noDyn = TC.Cfg.availableBaseLayers.filter(function (l) {\r\n                    return TC.Cfg.availableBaseLayers.filter(function (l) {\r\n                        return l.fallbackLayer\r\n                    }).map(function (l) {\r\n                        return l.fallbackLayer\r\n                    }).indexOf(l.id) == -1\r\n                }).map(function (baseLayer) {\r\n                    if (baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                        return new TC.layer.Raster(baseLayer);\r\n                    } else if (baseLayer.type == TC.Consts.layerType.VECTOR) {\r\n                        return new TC.layer.Vector(baseLayer);\r\n                    }\r\n                });\r\n\r\n                Promise.all(noDyn).then(function (baseLayers) {\r\n                    self._moreBaseLayers = new Array(baseLayers.length);\r\n\r\n                    var numToAdd = baseLayers.length;\r\n\r\n                    const resolvePromise = function () {\r\n                        self._moreBaseLayers = self._moreBaseLayers.filter(function (baseLayer) {\r\n                            return baseLayer !== null;\r\n                        });\r\n\r\n                        resolve(self._moreBaseLayers);\r\n                    };\r\n                    const addLayer = function (i) {\r\n                        const baseLayer = this;\r\n\r\n                        baseLayer.map = self.map;\r\n                        baseLayer.isBase = baseLayer.options.isBase = true;\r\n\r\n                        if (baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var matrixSet = baseLayer.wrap.getCompatibleMatrixSets(self.map.getCRS())[0];\r\n                            baseLayer.mustReproject = !matrixSet;\r\n                        } else if (baseLayer.type === TC.Consts.layerType.WMS) {\r\n                            baseLayer.mustReproject = !baseLayer.isCompatible(self.map.getCRS());\r\n                        }\r\n\r\n                        if (self.map.on3DView && baseLayer.mustReproject && baseLayer.getFallbackLayer && baseLayer.getFallbackLayer()) {\r\n                            baseLayer.mustReproject = !baseLayer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n                        }\r\n\r\n                        self._moreBaseLayers.splice(i, 1, baseLayer);\r\n                        numToAdd--;\r\n\r\n                        if (numToAdd === 0) {\r\n                            resolvePromise();\r\n                        }\r\n                    };\r\n\r\n                    baseLayers.forEach(function (baseLayer, i) {\r\n                        if (baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var promise = self.map.on3DView ? getTo3DVIew(baseLayer) : baseLayer.getCapabilitiesPromise();\r\n                            promise.then(\r\n                                addLayer.bind(baseLayer, i),\r\n                                function (fail) {\r\n                                    self._moreBaseLayers.splice(i, 1, null);\r\n                                    numToAdd--;\r\n\r\n                                    if (numToAdd === 0) {\r\n                                        resolvePromise();\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            addLayer.call(baseLayer, i);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n\r\n        } else if (self._moreBaseLayers) {\r\n\r\n            return new Promise(function (resolve, reject) {\r\n                Promise.all(self._moreBaseLayers.filter(function (baseLayer) {\r\n                    return baseLayer.type === TC.Consts.layerType.WMS || baseLayer.type === TC.Consts.layerType.WMTS;\r\n                }).map(function (baseLayer) {\r\n                    return self.map.on3DView ? getTo3DVIew(baseLayer) : baseLayer.getCapabilitiesPromise();\r\n                })).then(function () {\r\n\r\n                    self._moreBaseLayers = self._moreBaseLayers.map(function (baseLayer) {\r\n\r\n                        if (baseLayer.type === TC.Consts.layerType.WMTS) {\r\n                            var matrixSet = baseLayer.wrap.getCompatibleMatrixSets(self.map.getCRS())[0];\r\n                            baseLayer.mustReproject = !matrixSet;\r\n                        } else if (baseLayer.type === TC.Consts.layerType.WMS) {\r\n                            baseLayer.mustReproject = !baseLayer.isCompatible(self.map.getCRS());\r\n                        }\r\n                        if (self.map.on3DView && baseLayer.mustReproject && baseLayer.getFallbackLayer && baseLayer.getFallbackLayer()) {\r\n                            baseLayer.mustReproject = !baseLayer.getFallbackLayer().isCompatible(self.map.getCRS());\r\n\r\n                            return baseLayer;\r\n                        }\r\n\r\n                        return baseLayer;\r\n                    });\r\n\r\n                    resolve(self._moreBaseLayers);\r\n                });\r\n            });\r\n        }\r\n\r\n        return self._moreBaseLayersPromise;\r\n    };\r\n})();\r\n"]}