{"version":3,"sources":["Control/LayerCatalog.js"],"names":["TC","control","ProjectionSelector","syncLoadJS","apiLocation","LayerCatalog","this","layers","searchInit","apply","arguments","_selectors","LAYER_ROOT","CLASS","Consts","classes","SELECTABLE","INCOMPATIBLE","ACTIVE","inherit","ctlProto","prototype","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","x","get","block","body_1","else","body_3","body_4","p","rebase","getPath","__dustBody","body_2","s","body_5","f","body_6","body_7","key","value","body_8","_dataKeys","showProjectionChangeDialog","ctl","layer","closeCallback","getLayerNodes","forEach","node","classList","remove","LOADING","querySelector","setAttribute","TOOLTIP_DATA_ATTR","getLocaleString","map","self","result","call","load","resolve","reject","$","isArray","options","i","length","type","layerType","WMS","id","getUID","isPlainObject","Raster","push","render","_readyPromise","Promise","waitLoad","e","baseLayer","off","event","LAYERUPDATE","loaded","state","Layer","IDLE","on","_refreshResultList","document","evt","createEvent","initEvent","textInput","dispatchEvent","fireEvent","layerAddedText","clickToAddText","BEFORELAYERADD","BEFOREUPDATEPARAMS","add","removeAttribute","LAYERADD","UPDATEPARAMS","isBase","then","updateControl","CHECKED","getLayerRootNode","layerAlreadyAdded","len","lyr","url","addLayer","layerNames","title","wrap","getServiceTitle","hideTitle","hideTree","LAYERERROR","reason","alert","LAYERREMOVE","list","querySelectorAll","li","data","names","dataset","tcLayerName","findResultNodes","layerRemoved","wlCtrl","getControlsByClass","WorkLayerManager","_markWorkLayersAsAdded","EXTERNALSERVICEADDED","div","COLLAPSED","PROJECTIONCHANGE","update","onCollapseButtonClick","target","blur","stopPropagation","parentElement","tagName","contains","ul","callback","_set1stRenderPromise","promises","getLayer","all","layerTrees","getTree","makeNodeVisible","childrenVisible","children","hasOwnProperty","isVisible","renderData","enableSearch","addedLayerText","btn","addEventListener","span","parentNode","preventDefault","layerName","undefined","toString","_roots","root","redrawTime","test","navigator","userAgent","Util","detectFirefox","element","setTimeout","offsetHeight","offsetWidth","addLayerToMap","onSpanClick","idx","formatDescriptions","a","name","info","getInfo","metadata","j","md","formatDescription","format","getSimpleMimeType","CLICK","elm","hideLayerInfo","showLayerInfo","removeChild","compatibleLayers","indexOf","workLayers","wl","getRenderedHtml","html","_dialogDiv","innerHTML","layerCheckedList","_search","retryTimeout","loadJS","UI","autocomplete","link","minLength","source","text","item","trim","clearTimeout","results","index","_founds","searchSubLayers","service","founds","servicesFound","servicesLooked","interval","innerText","lastPattern","goToResult","unescape","hash","substring","buildHTML","getLayerTree","k","alreadyAdded","Name","splice","isCollapsed","ret","err","out","EventTarget","listenerBySelector","wasCollapsed","searchPane","treePane","infoPane","HIDDEN","focus","parent","searchListElementSelector","matches","liParent","layerIdx","isCompatible","crs","$events","TILELOADERROR","error","code","toast","msgType","ERROR","removeLayer","isFunction","catch","rootNode","liLayer","toggleInfo","infoObj","ii","as","jj","n","infoBtn","getCapabilitiesPromise","getCompatibleLayers","fromLayerCatalog","grep","l","getMap","reqGetMapOnCapabilities","replace","regex","PROTOCOL","layerOptions","extend","newLayer","getAvailableCRS","getCompatibleCRS","concat","includeFallbacks","setProjection","loadProjDef","_layerToAdd","closeModal"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.ProjectionSelector) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/ProjectionSelector');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.control.LayerCatalog = function () {\r\n        var self = this;\r\n\r\n        self.layers = [];\r\n        self.searchInit = false;\r\n\r\n        TC.control.ProjectionSelector.apply(self, arguments);\r\n\r\n        self._selectors = {\r\n            LAYER_ROOT: 'div.' + self.CLASS + '-tree > ul.' + self.CLASS + '-branch > li.' + self.CLASS + '-node'\r\n        };\r\n\r\n        if (!TC.Consts.classes.SELECTABLE) {\r\n            TC.Consts.classes.SELECTABLE = 'tc-selectable';\r\n        }\r\n        if (!TC.Consts.classes.INCOMPATIBLE) {\r\n            TC.Consts.classes.INCOMPATIBLE = 'tc-incompatible';\r\n        }\r\n        if (!TC.Consts.classes.ACTIVE) {\r\n            TC.Consts.classes.ACTIVE = 'tc-active';\r\n        }\r\n    };\r\n\r\n    TC.inherit(TC.control.LayerCatalog, TC.control.ProjectionSelector);\r\n\r\n    var ctlProto = TC.control.LayerCatalog.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-lcat';\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/LayerCatalog.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-branch'] = TC.apiLocation + \"TC/templates/LayerCatalogBranch.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = TC.apiLocation + \"TC/templates/LayerCatalogNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-info'] = TC.apiLocation + \"TC/templates/LayerCatalogInfo.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-results'] = TC.apiLocation + \"TC/templates/LayerCatalogResults.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/LayerCatalogDialog.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"availableLayers\" }).x(ctx.get([\"enableSearch\"], false), ctx, { \"block\": body_1 }, {}).w(\"</h2><div class=\\\"tc-ctl-lcat-search tc-hidden tc-collapsed\\\"><div class=\\\"tc-group\\\"><input type=\\\"search\\\" class=\\\"tc-ctl-lcat-input tc-textbox\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"textToSearchInLayers\" }).w(\"\\\"></input></div><ul></ul></div><div class=\\\"tc-ctl-lcat-tree\\\">\").x(ctx.get([\"layerTrees\"], false), ctx, { \"else\": body_3, \"block\": body_4 }, {}).w(\"</div><div class=\\\"tc-ctl-lcat-info tc-hidden\\\">\").p(\"tc-ctl-lcat-info\", ctx, ctx.rebase(ctx.getPath(true, [])), {}).w(\"</div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.x(ctx.get([\"layerTrees\"], false), ctx, { \"block\": body_2 }, {}); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-lcat-btn-search\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"searchLayersbytext\" }).w(\"\\\"></button>\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl tc-ctl-lcat-loading\\\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"loadingLayerTree\" }).w(\"...</span></div>\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.w(\"<ul class=\\\"tc-ctl-lcat-branch\\\">\").s(ctx.get([\"layerTrees\"], false), ctx, { \"block\": body_5 }, {}).w(\"</ul>\"); } body_4.__dustBody = !0; function body_5(chk, ctx) { return chk.p(\"tc-ctl-lcat-branch\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_5.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-branch'] = function () { dust.register(ctlProto.CLASS + '-branch', body_0); function body_0(chk, ctx) { return chk.w(\"<li \").x(ctx.get([\"children\"], false), ctx, { \"else\": body_1, \"block\": body_2 }, {}).w(\" data-tc-layer-name=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" data-tc-layer-uid=\\\"\").f(ctx.get([\"uid\"], false), ctx, \"h\").w(\"\\\"><button class=\\\"tc-ctl-lcat-collapse-btn\\\"></button><span>\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span><ul class=\\\"tc-ctl-lcat-branch tc-collapsed\\\">\").s(ctx.get([\"children\"], false), ctx, { \"block\": body_3 }, {}).w(\"</ul></li>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-ctl-lcat-leaf\\\"\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-collapsed\\\"\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.p(\"tc-ctl-lcat-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_3.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = function () { dust.register(ctlProto.CLASS + '-node', body_0); function body_0(chk, ctx) { return chk.x(ctx.get([\"isVisible\"], false), ctx, { \"block\": body_1 }, {}); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<li \").x(ctx.get([\"children\"], false), ctx, { \"else\": body_2, \"block\": body_3 }, {}).w(\" data-tc-layer-name=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" data-tc-layer-uid=\\\"\").f(ctx.get([\"uid\"], false), ctx, \"h\").w(\"\\\">\").x(ctx.get([\"children\"], false), ctx, { \"block\": body_4 }, {}).w(\"<span data-tooltip=\\\"\").x(ctx.get([\"name\"], false), ctx, { \"block\": body_5 }, {}).w(\"\\\">\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span>\").x(ctx.get([\"name\"], false), ctx, { \"block\": body_6 }, {}).w(\"<ul class=\\\"tc-ctl-lcat-branch tc-collapsed\\\">\").s(ctx.get([\"children\"], false), ctx, { \"block\": body_7 }, {}).w(\"</ul></li>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-ctl-lcat-leaf\\\"\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-collapsed\\\"\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-lcat-collapse-btn\\\"></button>\"); } body_4.__dustBody = !0; function body_5(chk, ctx) { return chk.h(\"i18n\", ctx, {}, { \"$key\": \"clickToAddToMap\" }); } body_5.__dustBody = !0; function body_6(chk, ctx) { return chk.w(\"<button title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"infoFromThisLayer\" }).w(\"\\\" class=\\\"tc-ctl-lcat-btn-info\\\"></button>\"); } body_6.__dustBody = !0; function body_7(chk, ctx) { return chk.p(\"tc-ctl-lcat-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_7.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-info'] = function () { dust.register(ctlProto.CLASS + '-info', body_0); function body_0(chk, ctx) { return chk.w(\"<a class=\\\"tc-ctl-lcat-info-close\\\"></a><h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"layerInfo\" }).w(\"</h2><h3 class=\\\"tc-ctl-lcat-title\\\">\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</h3>\").x(ctx.get([\"abstract\"], false), ctx, { \"block\": body_1 }, {}).x(ctx.get([\"metadata\"], false), ctx, { \"block\": body_2 }, {}); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-lcat-abstract\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"abstract\" }).w(\"</h4><div><pre>\").f(ctx.get([\"abstract\"], false), ctx, \"h\", [\"s\"]).w(\"</pre></div></div>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-lcat-metadata\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"metadata\" }).w(\"</h4><ul>\").s(ctx.get([\"metadata\"], false), ctx, { \"block\": body_3 }, {}).w(\"</ul></div>\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<li><a href=\\\"\").f(ctx.get([\"url\"], false), ctx, \"h\", [\"s\"]).w(\"\\\" type=\\\"\").f(ctx.get([\"format\"], false), ctx, \"h\").w(\"\\\" title=\\\"\").f(ctx.get([\"formatDescription\"], false), ctx, \"h\").w(\"\\\" target=\\\"_blank\\\">\").f(ctx.get([\"formatDescription\"], false), ctx, \"h\", [\"s\"]).w(\"</a></li>\"); } body_3.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-results'] = function () { dust.register(ctlProto.CLASS + '-results', body_0); function body_0(chk, ctx) { return chk.s(ctx.get([\"servicesFound\"], false), ctx, { \"else\": body_1, \"block\": body_2 }, {}); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-lcat-no-results\\\"><h5>\").h(\"i18n\", ctx, {}, { \"$key\": \"noMatches\" }).w(\"</h5></li>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.h(\"gt\", ctx, { \"block\": body_3 }, { \"key\": ctx.get([\"servicesLooked\"], false), \"value\": 1 }).s(ctx.get([\"founds\"], false), ctx, { \"block\": body_5 }, {}).h(\"gt\", ctx, { \"block\": body_8 }, { \"key\": ctx.get([\"servicesLooked\"], false), \"value\": 1 }); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-lcat-search-group \").x(ctx.getPath(false, [\"service\", \"isCollapsed\"]), ctx, { \"block\": body_4 }, {}).w(\"\\\" data-tc-service-index=\\\"\").f(ctx.getPath(false, [\"service\", \"index\"]), ctx, \"h\").w(\"\\\"><h5>\").f(ctx.getPath(false, [\"service\", \"title\"]), ctx, \"h\").w(\"</h5><ul>\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.w(\"tc-collapsed\"); } body_4.__dustBody = !0; function body_5(chk, ctx) { return chk.w(\"<li data-tc-layer-name=\\\"\").f(ctx.get([\"Name\"], false), ctx, \"h\").w(\"\\\" \").x(ctx.get([\"alreadyAdded\"], false), ctx, { \"else\": body_6, \"block\": body_7 }, {}).w(\"><h5 class=\\\"tc-selectable\\\">\").f(ctx.get([\"Title\"], false), ctx, \"h\").w(\"</h5><button class=\\\"tc-ctl-lcat-search-btn-info\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"infoFromThisLayer\" }).w(\"\\\"></button></li>\"); } body_5.__dustBody = !0; function body_6(chk, ctx) { return chk.w(\" data-tooltip=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"clickToAddToMap\" }).w(\"\\\" \"); } body_6.__dustBody = !0; function body_7(chk, ctx) { return chk.w(\" data-tooltip=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"layerAlreadyAdded\" }).w(\"\\\" class=\\\"tc-checked\\\" \"); } body_7.__dustBody = !0; function body_8(chk, ctx) { return chk.w(\"</ul></li>\"); } body_8.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-lcat-crs-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"changeCRS\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><p>\").h(\"i18n\", ctx, {}, { \"$key\": \"wmsLayerNotCompatible.instructions|h\" }).w(\"</p><ul class=\\\"tc-ctl-lcat-crs-list tc-crs-list\\\"></ul></div><div class=\\\"tc-modal-footer\\\"><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"</button></div></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n\r\n\r\n    var _dataKeys = {\r\n        LAYER: 'tcLayer',\r\n        LAYERNAME: 'tcLayerName',\r\n        LAYERINFO: 'tcLayerInfo',\r\n        SERVICEINDEX: 'tcServiceIndex',\r\n        PROJCODE: 'tcProjCode'\r\n    };\r\n\r\n    const showProjectionChangeDialog = function (ctl, layer) {\r\n        ctl.showProjectionChangeDialog({\r\n            layer: layer,\r\n            closeCallback: function () {\r\n                ctl.getLayerNodes(layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.LOADING);\r\n                    node.querySelector('span').setAttribute(TOOLTIP_DATA_ATTR, ctl.getLocaleString('clickToAddToMap'));\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    var SEARCH_MIN_LENGTH = 3;\r\n\r\n    var TOOLTIP_DATA_ATTR = 'data-tooltip';\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.control.ProjectionSelector.prototype.register.call(self, map);\r\n\r\n        const load = function (resolve, reject) {\r\n            if ($.isArray(self.options.layers)) {\r\n                for (var i = 0; i < self.options.layers.length; i++) {\r\n                    var layer = self.options.layers[i];\r\n                    if (!layer.type || layer.type === TC.Consts.layerType.WMS) {\r\n                        if (!layer.id) {\r\n                            layer.id = TC.getUID();\r\n                        }\r\n                        if ($.isPlainObject(layer)) {\r\n                            layer = new TC.layer.Raster(layer);\r\n                        }                        \r\n                        self.layers.push(layer);\r\n                    }\r\n                }\r\n                self.render(function () {\r\n                    resolve();\r\n                });\r\n            }\r\n            else {\r\n                resolve();\r\n            }\r\n        };\r\n\r\n        self._readyPromise = new Promise(function (resolve, reject) {\r\n            const waitLoad = function (e) {\r\n                if (e.layer === map.baseLayer) {\r\n                    load(resolve, reject);\r\n                    map.off(TC.Consts.event.LAYERUPDATE, waitLoad);\r\n                }\r\n            };\r\n\r\n            map.loaded(function () {\r\n                if (!map.baseLayer.state || map.baseLayer.state === TC.Layer.state.IDLE) {\r\n                    load(resolve, reject);\r\n                }\r\n                else {\r\n                    map.on(TC.Consts.event.LAYERUPDATE, waitLoad);\r\n                }\r\n            });\r\n        });\r\n\r\n        const findResultNodes = function (layer) {\r\n            const result = [];\r\n            if (!layer.isBase) {\r\n                var url = layer.options.url;\r\n                if (self.list) {\r\n                    self.list.querySelectorAll('li').forEach(function (li) {\r\n                        const $li = $(li);\r\n                        var lyr = $li.data(_dataKeys.LAYER);\r\n                        if (lyr && lyr.type === layer.type && lyr.options.url === url) {\r\n                            for (var i = 0; i < layer.names.length; i++) {\r\n                                if (li.dataset.tcLayerName === layer.names[i]) {\r\n                                    result.push(li);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n\r\n        var _refreshResultList = function () {\r\n            if (\"createEvent\" in document) {\r\n                var evt = document.createEvent('HTMLEvents');\r\n                evt.initEvent(\"keyup\", false, true);\r\n                if (self.textInput) {\r\n                    self.textInput.dispatchEvent(evt);\r\n                }\r\n            }\r\n            else {\r\n                if (self.textInput) {\r\n                    self.textInput.fireEvent(\"keyup\");\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Marca todas las capas del TOC como añadidas excepto la que se está borrando que se recibe como parámetro.\r\n         */\r\n        const _markWorkLayersAsAdded = function (layerRemoved) {\r\n            var wlCtrl = self.map.getControlsByClass(TC.control.WorkLayerManager)[0];\r\n            if (wlCtrl) {\r\n                var layers = wlCtrl.layers;\r\n\r\n                for (var i = 0; i < layers.length; i++) {\r\n                    var layer = layers[i];\r\n\r\n                    if (layer !== layerRemoved) {\r\n                        self.getLayerNodes(layer).forEach(function (node) {\r\n                            node.classList.add(TC.Consts.classes.CHECKED);\r\n                            node.querySelector('span').setAttribute(TOOLTIP_DATA_ATTR, layerAddedText);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var layerAddedText = self.getLocaleString('layerAlreadyAdded');\r\n        var clickToAddText = self.getLocaleString('clickToAddToMap');\r\n\r\n        map\r\n            .on(TC.Consts.event.BEFORELAYERADD + ' ' + TC.Consts.event.BEFOREUPDATEPARAMS, function (e) {\r\n                self.getLayerNodes(e.layer).forEach(function (node) {\r\n                    node.classList.add(TC.Consts.classes.LOADING);\r\n                    node.querySelector('span').removeAttribute(TOOLTIP_DATA_ATTR);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERADD + ' ' + TC.Consts.event.UPDATEPARAMS, function (e) {\r\n                const layer = e.layer;\r\n                if (!layer.isBase && layer.type === TC.Consts.layerType.WMS) {\r\n                    self.loaded().then(function () { // Esperamos a que cargue primero las capas de la configuración\r\n                        const updateControl = function () {\r\n                            self.getLayerNodes(layer).forEach(function (node) {\r\n                                node.classList.remove(TC.Consts.classes.LOADING);\r\n                                node.classList.add(TC.Consts.classes.CHECKED);\r\n                                node.querySelector('span').setAttribute(TOOLTIP_DATA_ATTR, layerAddedText);\r\n                            });\r\n                            _refreshResultList();\r\n                        };\r\n                        if (self.getLayerRootNode(layer)) {\r\n                            updateControl();\r\n                        }\r\n                        else {\r\n                            // la capa no está renderizada, pero podría estar en proceso, comprobamos que no está en la lista de capas del control\r\n                            var layerAlreadyAdded = false;\r\n                            for (var i = 0, len = self.layers.length; i < len; i++) {\r\n                                var lyr = self.layers[i];\r\n                                if (lyr.type === layer.type && lyr.options.url === layer.options.url) {\r\n                                    layerAlreadyAdded = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (!layerAlreadyAdded) {\r\n                                self.addLayer(new TC.layer.Raster({\r\n                                    url: layer.options.url,\r\n                                    type: layer.type,\r\n                                    layerNames: [],\r\n                                    title: layer.title || layer.wrap.getServiceTitle(),\r\n                                    hideTitle: true,\r\n                                    hideTree: false\r\n                                })).then(function () {\r\n                                    updateControl();\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .on(TC.Consts.event.LAYERERROR, function (e) {\r\n                const reason = e.reason;\r\n                if (reason) {\r\n                    TC.alert(self.getLocaleString(reason, { url: e.layer.url }));\r\n                }\r\n                self.getLayerNodes(e.layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.LOADING);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                const layer = e.layer;\r\n                self.getLayerNodes(layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.CHECKED);\r\n                    node.querySelector('span').setAttribute(TOOLTIP_DATA_ATTR, clickToAddText);\r\n                });\r\n                findResultNodes(layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.CHECKED);\r\n                    node.setAttribute(TOOLTIP_DATA_ATTR, clickToAddText);\r\n                });\r\n\r\n                //Marcamos como añadidas aquellas capas que estén en el control de capas cargadas. Esto previene que si borramos una capa padre, todas\r\n                //sus hijas aparezcan como no añadidas, a pesar que que alguna de ellas haya sido añadida previamente de manera individual\r\n                _markWorkLayersAsAdded(layer);\r\n\r\n                //refresh del searchList            \r\n                _refreshResultList();\r\n            })\r\n            .on(TC.Consts.event.EXTERNALSERVICEADDED, function (e) {\r\n                if (e && e.layer) {\r\n                    self.addLayer(e.layer);\r\n                    self.div.classList.remove(TC.Consts.classes.COLLAPSED);\r\n                }\r\n            })\r\n            .on(TC.Consts.event.PROJECTIONCHANGE, function (e) {\r\n                self.update();\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    const onCollapseButtonClick = function (e) {\r\n        e.target.blur();\r\n        e.stopPropagation();\r\n        const li = e.target.parentElement;\r\n        if (li.tagName === 'LI' && !li.classList.contains(self.CLASS + '-leaf')) {\r\n            if (li.classList.contains(TC.Consts.classes.COLLAPSED)) {\r\n                li.classList.remove(TC.Consts.classes.COLLAPSED);\r\n            }\r\n            else {\r\n                li.classList.add(TC.Consts.classes.COLLAPSED);\r\n            }\r\n            const ul = li.querySelector('ul');\r\n            if (ul.classList.contains(TC.Consts.classes.COLLAPSED)) {\r\n                ul.classList.remove(TC.Consts.classes.COLLAPSED);\r\n            }\r\n            else {\r\n                ul.classList.add(TC.Consts.classes.COLLAPSED);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onSpanClick = function (e, ctl) {\r\n        const li = e.target.parentNode;\r\n        if (!li.classList.contains(TC.Consts.classes.LOADING) && !li.classList.contains(TC.Consts.classes.CHECKED)) {\r\n            e.preventDefault;\r\n\r\n            var layerName = $(li).data(_dataKeys.LAYERNAME);\r\n            layerName = (layerName !== undefined) ? layerName.toString() : '';\r\n            var layer;\r\n            for (var i = 0, len = ctl._roots.length; i < len; i++) {\r\n                const root = ctl._roots[i];\r\n                if (root.contains(li)) {\r\n                    layer = $(root).data(_dataKeys.LAYER);\r\n                    break;\r\n                }\r\n            }\r\n            if (!layer) {\r\n                layer = $(li).data(_dataKeys.LAYER);\r\n            }\r\n            if (layer && layerName) {\r\n                var redrawTime = 1;\r\n\r\n                if (/iPad/i.test(navigator.userAgent))\r\n                    redrawTime = 10;\r\n                else if (TC.Util.detectFirefox())\r\n                    redrawTime = 250;\r\n\r\n                if (!layer.title) {\r\n                    layer.title = layer.getTree().title;\r\n                }\r\n\r\n                li.classList.add(TC.Consts.classes.LOADING);\r\n                li.querySelector('span').setAttribute(TOOLTIP_DATA_ATTR, '');\r\n\r\n                const reDraw = function (element) {\r\n                    return new Promise(function (resolve, reject) {\r\n                        setTimeout(function () {\r\n                            element.offsetHeight = element.offsetHeight;\r\n                            element.offsetWidth = element.offsetWidth;\r\n\r\n                            resolve();\r\n                        }, redrawTime);\r\n                    });\r\n                };\r\n\r\n                reDraw(li).then(function () {\r\n                    ctl.addLayerToMap(layer, layerName);\r\n                });\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            const promises = $.map(self.layers, function (layer) {\r\n                return layer.wrap.getLayer();\r\n            });\r\n\r\n            Promise.all(promises).then(function () {\r\n\r\n                var layerTrees = $.map(self.layers, function (layer) {\r\n                    var result = layer.getTree();\r\n                    var makeNodeVisible = function makeNodeVisible(node) {\r\n                        var result = false;\r\n                        var childrenVisible = false;\r\n                        for (var i = 0; i < node.children.length; i++) {\r\n                            if (makeNodeVisible(node.children[i])) {\r\n                                childrenVisible = true;\r\n                            }\r\n                        }\r\n                        if (node.hasOwnProperty('isVisible')) {\r\n                            node.isVisible = (!layer.names || !layer.names.length) || childrenVisible || node.isVisible;\r\n                        }\r\n                        return node.isVisible;\r\n                    };\r\n                    makeNodeVisible(result);\r\n                    return result;\r\n                });\r\n\r\n                self.renderData({ layerTrees: layerTrees, enableSearch: self.options.enableSearch }, function () {\r\n\r\n                    const addedLayerText = self.getLocaleString('layerAlreadyAdded');\r\n\r\n                    self.div.querySelectorAll('li > button.' + self.CLASS + '-collapse-btn').forEach(function (btn) {\r\n                        btn.addEventListener('click', onCollapseButtonClick);\r\n                    });\r\n\r\n                    self.div.querySelectorAll('span').forEach(function (span) {\r\n                        span.addEventListener('click', function (e) {\r\n                            onSpanClick(e, self);\r\n                        });\r\n                    })\r\n\r\n\r\n                    self._roots = self.div.querySelectorAll(self._selectors.LAYER_ROOT);\r\n                    self._roots.forEach(function (root, idx) {\r\n                        var layer = self.layers[idx];\r\n                        $(root).data(_dataKeys.LAYER, layer);\r\n\r\n                        var formatDescriptions = {};\r\n                        root.querySelectorAll('.' + self.CLASS + '-btn-info').forEach(function (a) {\r\n                            const span = a.parentElement.querySelector('span');\r\n                            const name = $(a.parentElement).data(_dataKeys.LAYERNAME).toString();\r\n                            if (name) {\r\n                                span.classList.add(TC.Consts.classes.SELECTABLE);\r\n                                var info = layer.wrap.getInfo(name);\r\n                                if (!info.hasOwnProperty('abstract') && !info.hasOwnProperty('legend') && !info.hasOwnProperty('metadata')) {\r\n                                    a.parentElement.removeChild(a);\r\n                                }\r\n                                else {\r\n                                    if (info.metadata) {\r\n                                        for (var j = 0, len = info.metadata.length; j < len; j++) {\r\n                                            var md = info.metadata[j];\r\n                                            md.formatDescription = formatDescriptions[md.format] =\r\n                                                formatDescriptions[md.format] ||\r\n                                                self.getLocaleString(TC.Util.getSimpleMimeType(md.format)) ||\r\n                                                self.getLocaleString('viewMetadata');\r\n                                        }\r\n                                    }\r\n                                    $(a).data(_dataKeys.LAYERINFO, info);\r\n                                    a.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                                        e.stopPropagation();\r\n                                        const elm = this;\r\n                                        if (!elm.classList.contains(TC.Consts.classes.CHECKED)) {\r\n                                            self.showLayerInfo(layer, name);\r\n                                            elm.classList.add(TC.Consts.classes.CHECKED);\r\n\r\n                                        } else {\r\n                                            elm.classList.remove(TC.Consts.classes.CHECKED);\r\n                                            self.hideLayerInfo();\r\n                                        }\r\n                                    });\r\n                                }\r\n                                if (layer.compatibleLayers && layer.compatibleLayers.indexOf(name) < 0) {\r\n                                    span.classList.add(TC.Consts.classes.INCOMPATIBLE);\r\n                                    span.setAttribute('title', self.getLocaleString('reprojectionNeeded'));\r\n                                    //console.log(\"capa \" + name + \" incompatible\");\r\n                                }\r\n                                if (self.map) {\r\n                                    for (var j = 0, len = self.map.workLayers.length; j < len; j++) {\r\n                                        var wl = self.map.workLayers[j];\r\n                                        if (wl.type === TC.Consts.layerType.WMS && wl.url === layer.url && wl.names.length === 1 && wl.names[0] === name) {\r\n                                            span.parentElement.classList.add(TC.Consts.classes.CHECKED);\r\n                                            span.setAttribute(TOOLTIP_DATA_ATTR, addedLayerText);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                span.setAttribute(TOOLTIP_DATA_ATTR, '');\r\n                                a.parentElement.removeChild(a);\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n                        self._dialogDiv.innerHTML = html;\r\n                    });\r\n\r\n                    self.textInput = self.div.querySelector(\".\" + self.CLASS + \"-input\");\r\n                    self.list = self.div.querySelector(\".\" + self.CLASS + \"-search ul\");\r\n                    // Clear results list when x button is pressed in the search input\r\n                    self.textInput.addEventListener('mouseup', function (e) {\r\n                        var oldValue = self.textInput.value;\r\n\r\n                        if (oldValue === '') {\r\n                            return;\r\n                        }\r\n\r\n                        // When this event is fired after clicking on the clear button\r\n                        // the value is not cleared yet. We have to wait for it.\r\n                        setTimeout(function () {\r\n                            var newValue = self.textInput.value;\r\n\r\n                            if (newValue === '') {\r\n                                self.list.innerHTML = '';\r\n                            }\r\n                        }, 1);\r\n                    });\r\n\r\n                    var layerCheckedList = [];\r\n                    //Definir el autocomplete del buscador de capas por texto\r\n                    TC._search = TC._search || {};\r\n                    TC._search.retryTimeout = null;\r\n\r\n                    TC.loadJS(\r\n                        !TC.UI || !TC.UI.autocomplete,\r\n                        [TC.apiLocation + 'TC/ui/autocomplete.js'],\r\n                        function () {\r\n                            TC.UI.autocomplete.call(self.textInput, {\r\n                                link: '#',\r\n                                target: self.list,\r\n                                minLength: 0,\r\n                                source: function (text, callback) {\r\n                                    //lista de capas marcadas\r\n                                    layerCheckedList = [];\r\n                                    self._roots.forEach(function (root) {\r\n                                        root.querySelectorAll(\"li.\" + TC.Consts.classes.CHECKED).forEach(function (item) {\r\n                                            layerCheckedList.push($(item).data(_dataKeys.LAYERNAME).toString());\r\n                                        });\r\n                                    });\r\n\r\n                                    //con texto vacío, limpiar  y ocultar la lista de resultados\r\n                                    text = text.trim();\r\n                                    if (text.length < SEARCH_MIN_LENGTH) {\r\n                                        self.list.innerHTML = '';\r\n                                    }\r\n                                    else if (text.length >= SEARCH_MIN_LENGTH) {\r\n                                        if (TC._search.retryTimeout)\r\n                                            clearTimeout(TC._search.retryTimeout);\r\n                                        TC._search.retryTimeout = setTimeout(function () {\r\n                                            var results = [];\r\n                                            for (var index = 0; index < self.layers.length; index++) {\r\n                                                var _founds = self.layers[index].searchSubLayers(text);\r\n                                                if (_founds.length) {\r\n                                                    results.push({\r\n                                                        service: {\r\n                                                            index: index,\r\n                                                            title: self.layers[index].title || self.layers[index].id\r\n                                                        },\r\n                                                        founds: _founds\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                            callback({ servicesFound: results, servicesLooked: self.layers.length });\r\n                                        }, TC._search.interval);\r\n                                    }\r\n                                },\r\n                                callback: function (e) {\r\n                                    self.textInput.value = e.target.text || e.target.innerText;\r\n                                    TC._search.lastPattern = self.textInput.value;\r\n                                    self.goToResult(unescape(e.target.hash).substring(1));\r\n                                    TC.UI.autocomplete.call(self.textInput, 'clear');\r\n                                },\r\n                                buildHTML: function (data) {\r\n                                    //si hay resultados, mostramos la lista\r\n                                    if (data.results && data.results.servicesFound.length > 0) {\r\n                                        var workLayers = self.map.getLayerTree().workLayers;\r\n                                        for (var k = 0; k < data.results.servicesFound.length; k++) {\r\n                                            var founds = data.results.servicesFound[k].founds;\r\n                                            for (var j = 0; j < founds.length; j++) {\r\n                                                delete founds[j].alreadyAdded;\r\n                                                for (var i = 0; i < workLayers.length; i++) {\r\n                                                    //if (workLayers[i].title == data.results[j].Title ) {\r\n                                                    if (layerCheckedList.indexOf(founds[j].Name) >= 0) {\r\n                                                        founds[j].alreadyAdded = true;\r\n                                                        break;\r\n                                                    }\r\n                                                }\r\n                                                //Si la capa no tiene Name, no se puede añadir al TOC\r\n                                                if (!founds[j].Name) {\r\n                                                    founds.splice(j, 1);\r\n                                                    j--;\r\n                                                }\r\n                                            }\r\n                                            if (!data.results.servicesFound[k].founds.length) {\r\n                                                data.results.servicesFound.splice(k, 1);\r\n                                                continue;\r\n                                            }\r\n                                            //si estaba collapsado mantenemos el estado\r\n                                            if (self.div.querySelectorAll(\".tc-ctl-lcat-search-group\")[k]) {\r\n                                                data.results.servicesFound[k].service.isCollapsed = self.div.querySelectorAll(\".tc-ctl-lcat-search-group\")[k].classList.contains(TC.Consts.classes.COLLAPSED);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    var ret = '';\r\n                                    dust.render(self.CLASS + '-results', data.results, function (err, out) {\r\n                                        ret = out;\r\n                                    });\r\n                                    return ret;\r\n                                }\r\n                            });\r\n                        });\r\n\r\n\r\n                    if (!self.searchInit) {\r\n                        //botón de la lupa para alternar entre búsqueda y árbol\r\n                        self.div.addEventListener('click', TC.EventTarget.listenerBySelector('h2 button', function (e) {\r\n                            const wasCollapsed = self.div.classList.contains(TC.Consts.classes.COLLAPSED);\r\n                            self.div.classList.remove(TC.Consts.classes.COLLAPSED);\r\n\r\n                            const searchPane = self.div.querySelector('.' + self.CLASS + '-search');\r\n                            const treePane = self.div.querySelector('.' + self.CLASS + '-tree');\r\n                            const infoPane = self.div.querySelector('.' + self.CLASS + '-info');\r\n\r\n                            if (searchPane.classList.contains(TC.Consts.classes.HIDDEN) || wasCollapsed) {\r\n                                searchPane.classList.remove(TC.Consts.classes.HIDDEN);\r\n                                treePane.classList.add(TC.Consts.classes.HIDDEN);\r\n                                self.textInput.focus();\r\n                                e.target.classList.add(self.CLASS + '-btn-tree');\r\n                                e.target.setAttribute('title', self.getLocaleString('viewAvailableLayersTree'));\r\n                                e.target.classList.remove(self.CLASS + '-btn-search');\r\n\r\n                                //Si no hay resultados resaltados en el buscador, ocultamos el panel de info\r\n                                const selectedCount = self.div.querySelectorAll('.tc-ctl-lcat-search li button.tc-checked').length;\r\n                                if (selectedCount === 0) {\r\n                                    infoPane.classList.add(TC.Consts.classes.HIDDEN);\r\n                                }\r\n                            }\r\n                            else {\r\n                                searchPane.classList.add(TC.Consts.classes.HIDDEN);\r\n                                treePane.classList.remove(TC.Consts.classes.HIDDEN);\r\n                                e.target.classList.add(self.CLASS + '-btn-search');\r\n                                e.target.setAttribute('title', self.getLocaleString('searchLayersByText'));\r\n                                e.target.classList.remove(self.CLASS + '-btn-tree');\r\n\r\n                                //Si hay resaltados en el árbol, mostramos el panel de info\r\n                                const selectedCount = self.div.querySelectorAll('.tc-ctl-lcat-tree li button.tc-checked').length;\r\n                                if (selectedCount > 0) {\r\n                                    infoPane.classList.remove(TC.Consts.classes.HIDDEN);\r\n                                }\r\n                            }\r\n                        }));\r\n\r\n\r\n                        //evento de expandir nodo de info\r\n                        //self._$div.off(\"click\", \".tc-ctl-lcat-search button\");                        \r\n                        self.div.addEventListener(\"click\", TC.EventTarget.listenerBySelector(\".\" + self.CLASS + \"-search button.\" + self.CLASS + \"-search-btn-info\", function (evt) {\r\n                            evt.stopPropagation();\r\n                            const target = evt.target;\r\n                            if (!target.classList.contains(TC.Consts.classes.CHECKED)) {\r\n                                const li = target.parentElement;\r\n                                var parent = li;\r\n                                do {\r\n                                    parent = parent.parentElement;\r\n                                }\r\n                                while (parent && parent.tagName !== 'LI');\r\n                                self.showLayerInfo(self.layers.length > 1 ? self.layers[$(parent).data(_dataKeys.SERVICEINDEX)] : self.layers[0], $(li).data(_dataKeys.LAYERNAME));\r\n                                target.classList.add(TC.Consts.classes.CHECKED);\r\n\r\n                            } else {\r\n                                target.classList.remove(TC.Consts.classes.CHECKED);\r\n                                self.hideLayerInfo();\r\n                            }\r\n                        }));\r\n\r\n                        //click en un resultado - añadir capa\r\n                        const searchListElementSelector = '.' + self.CLASS + ' li';\r\n                        self.div.addEventListener('click', TC.EventTarget.listenerBySelector(searchListElementSelector, function (evt) {\r\n                            evt.stopPropagation();\r\n                            var li = evt.target;\r\n                            while (li && !li.matches(searchListElementSelector)) {\r\n                                li = li.parentElement;\r\n                            }\r\n                            if (li.classList.contains(self.CLASS + '-no-results')) {\r\n                                return; //si clicko en el li de \"no hay resultados\" rompo el ciclo de ejecución\r\n                            }\r\n                            if (li.classList.contains(self.CLASS + '-search-group')) {\r\n                                if (li.classList.contains(TC.Consts.classes.COLLAPSED)) {\r\n                                    li.classList.remove(TC.Consts.classes.COLLAPSED);\r\n                                }\r\n                                else {\r\n                                    li.classList.add(TC.Consts.classes.COLLAPSED);\r\n                                }\r\n                                return;\r\n                            }\r\n                            var layerName = $(li).data(_dataKeys.LAYERNAME);\r\n                            if (!layerName) {\r\n                                return;\r\n                            }\r\n                            layerName = layerName.toString();\r\n\r\n                            //si la capa ya ha sido anteriormente, no la añadimos y mostramos un mensaje\r\n                            if (li.classList.contains(TC.Consts.classes.CHECKED)) {\r\n                                return;\r\n                            } else {\r\n                                var liParent = li;\r\n                                do {\r\n                                    liParent = liParent.parentElement;\r\n                                }\r\n                                while (liParent && !liParent.matches('li.' + self.CLASS + '-search-group'));\r\n\r\n                                const layerIdx = (!liParent ? 0 : $(liParent).data(_dataKeys.SERVICEINDEX));\r\n                                const url = self.layers[layerIdx].options.url;\r\n                                const title = self.layers[layerIdx].title;\r\n\r\n                                const layer = new TC.layer.Raster({\r\n                                    id: self.getUID(),\r\n                                    url: url,\r\n                                    title: title,\r\n                                    hideTitle: self.layers[layerIdx].hideTitle || self.layers[layerIdx].options.hideTitle,\r\n                                    hideTree: false,\r\n                                    layerNames: [layerName]\r\n                                });\r\n                                if (layer.isCompatible(self.map.crs)) {\r\n                                    self.map.addLayer(layer, function (layer) {\r\n                                        $(li).data(_dataKeys.LAYER, layer);\r\n                                        layer.wrap.$events.on(TC.Consts.event.TILELOADERROR, function (event) {\r\n                                            var layer = this.parent;\r\n                                            if (event.error.code === 401 || event.error.code === 403)\r\n                                                layer.map.toast(event.error.text, { type: TC.Consts.msgType.ERROR });\r\n                                            layer.map.removeLayer(layer);\r\n                                        });\r\n                                    });\r\n                                    //marcamos el resultado como añadido\r\n                                    li.classList.add(TC.Consts.classes.CHECKED);\r\n                                    li.setAttribute(TOOLTIP_DATA_ATTR, addedLayerText);\r\n                                }\r\n                                else {\r\n                                    showProjectionChangeDialog(self, layer);\r\n                                }\r\n                            }\r\n                        }));\r\n\r\n                        self.searchInit = true;\r\n                    }\r\n\r\n                    if ($.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n                }).then(function () {\r\n                    resolve();\r\n                }).catch(function (err) {\r\n                    reject(err);\r\n                })\r\n            });\r\n        }));\r\n    };\r\n\r\n    ctlProto.getLayerRootNode = function (layer) {\r\n        const self = this;\r\n        var result = null;\r\n        if (!layer.isBase) {\r\n            var url = layer.options.url;\r\n            if (self._roots) {\r\n                self._roots.forEach(function (li) {\r\n                    var lyr = $(li).data(_dataKeys.LAYER);\r\n                    if (lyr && lyr.type === layer.type && lyr.options.url === url) {\r\n                        result = li;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getLayerNodes = function (layer) {\r\n        const self = this;\r\n        const result = [];\r\n        const rootNode = self.getLayerRootNode(layer);\r\n        if (rootNode) {\r\n            for (var i = 0; i < layer.names.length; i++) {\r\n                const liLayer = rootNode.querySelector('li[data-tc-layer-name=\"' + layer.names[i] + '\"]');\r\n                if (!liLayer) {\r\n                    continue;\r\n                }\r\n                result[result.length] = liLayer;\r\n                liLayer.querySelectorAll('li').forEach(function (li) {\r\n                    result[result.length] = li;\r\n                });\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.showLayerInfo = function (layer, name) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var info = self.div.querySelector('.' + self.CLASS + '-info');\r\n\r\n        const toggleInfo = function (layerName, infoObj) {\r\n            var result = false;\r\n            var lName = $(info).data(_dataKeys.LAYERNAME);\r\n            //if (lName !== undefined && lName.toString() === layerName) {\r\n            //    $info.data(_dataKeys.LAYERNAME, '');\r\n            //    $info.removeClass(TC.Consts.classes.HIDDEN);\r\n            //}\r\n            //else {\r\n            if (infoObj) {\r\n                result = true;\r\n                $(info).data(_dataKeys.LAYERNAME, layerName);\r\n                info.classList.remove(TC.Consts.classes.HIDDEN);\r\n                dust.render(self.CLASS + '-info', infoObj, function (err, out) {\r\n                    info.innerHTML = out;\r\n                    if (err) {\r\n                        TC.error(err);\r\n                    }\r\n                    info.querySelector('.' + self.CLASS + '-info-close').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.hideLayerInfo();\r\n                    });\r\n                });\r\n            }\r\n            //}\r\n            return result;\r\n        };\r\n\r\n        self.div.querySelectorAll('.' + self.CLASS + '-btn-info, .' + self.CLASS + '-search-btn-info').forEach(function (btn) {\r\n            btn.classList.remove(TC.Consts.classes.CHECKED);\r\n        });\r\n\r\n        for (var i = 0, ii = self._roots.length; i < ii; i++) {\r\n            const root = self._roots[i];\r\n            if ($(root).data(_dataKeys.LAYER) === layer) {\r\n                const as = root.querySelectorAll('.' + self.CLASS + '-btn-info');\r\n                for (var j = 0, jj = as.length; j < jj; j++) {\r\n                    const a = as[j];\r\n                    var n = $(a.parentElement).data(_dataKeys.LAYERNAME).toString();\r\n                    if (n === name) {\r\n                        const info = $(a).data(_dataKeys.LAYERINFO);\r\n                        const checked = toggleInfo(n, info);\r\n                        const infoBtn = self.div.querySelector('li [data-tc-layer-name=\"' + n + '\"] > button.' + self.CLASS + '-btn-info');\r\n                        if (toggleInfo(n, info)) {\r\n                            infoBtn.classList.add(TC.Consts.classes.CHECKED);\r\n                        }\r\n                        else {\r\n                            infoBtn.classList.remove(TC.Consts.classes.CHECKED);\r\n                        }\r\n                        result = info;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.update = function () {\r\n        const self = this;\r\n        self.layers.forEach(function (layer) {\r\n            layer.getCapabilitiesPromise().then(function () {\r\n                layer.compatibleLayers = layer.wrap.getCompatibleLayers(self.map.crs);\r\n\r\n                const rootNode = self.getLayerRootNode(layer);\r\n                if (rootNode) {\r\n                    rootNode\r\n                        .querySelectorAll('li[data-tc-layer-name]')\r\n                        .forEach(function (li) {\r\n                            const name = $(li).data(_dataKeys.LAYERNAME);\r\n                            const span = li.querySelector('span.' + TC.Consts.classes.SELECTABLE);\r\n                            if (layer.compatibleLayers.indexOf(name) < 0) {\r\n                                span.classList.add(TC.Consts.classes.INCOMPATIBLE);\r\n                                span.setAttribute('title', self.getLocaleString('reprojectionNeeded'));\r\n                            }\r\n                            else {\r\n                                span.classList.remove(TC.Consts.classes.INCOMPATIBLE)\r\n                                span.removeAttribute('title');\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.hideLayerInfo = function () {\r\n        var self = this;\r\n        self.div.querySelectorAll('.' + self.CLASS + '-btn-info, .' + self.CLASS + '-search-btn-info').forEach(function (btn) {\r\n            btn.classList.remove(TC.Consts.classes.CHECKED);\r\n        });\r\n        self.div.querySelector('.' + self.CLASS + '-info').classList.add(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    ctlProto.addLayer = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var fromLayerCatalog = [];\r\n\r\n            if (self.options.layers && self.options.layers.length) {\r\n                fromLayerCatalog = $.grep(self.options.layers, function (l) {\r\n                    var getMap = TC.Util.reqGetMapOnCapabilities(l.url);\r\n                    return getMap && getMap.replace(TC.Util.regex.PROTOCOL) == layer.url.replace(TC.Util.regex.PROTOCOL);\r\n                });\r\n            }\r\n\r\n            if (fromLayerCatalog.length == 0)\r\n                fromLayerCatalog = $.grep(self.layers, function (l) {\r\n                    return l.url.replace(TC.Util.regex.PROTOCOL) == layer.url.replace(TC.Util.regex.PROTOCOL);\r\n                });\r\n\r\n            if (fromLayerCatalog.length == 0) {\r\n                self.layers.push(layer);\r\n                layer.getCapabilitiesPromise().then(function () {\r\n                    layer.compatibleLayers = layer.wrap.getCompatibleLayers(self.map.crs);\r\n                    layer.title = layer.title || layer.wrap.getServiceTitle();\r\n                    self.render(function () {\r\n                        resolve(); //ver linea 55 y por ahí\r\n                    });\r\n                });\r\n            } else { resolve(); }\r\n        });\r\n    };\r\n\r\n    ctlProto.addLayerToMap = function (layer, layerName) {\r\n        const self = this;\r\n        const layerOptions = $.extend({}, layer.options);\r\n        layerOptions.id = self.getUID();\r\n        layerOptions.layerNames = [layerName];\r\n        layerOptions.title = layer.title;\r\n        const newLayer = new TC.layer.Raster(layerOptions);\r\n        if (newLayer.isCompatible(self.map.crs)) {\r\n            self.map.addLayer(layerOptions).then(function (layer) {\r\n                layer.wrap.$events.on(TC.Consts.event.TILELOADERROR, function (event) {\r\n                    var layer = this.parent;\r\n                    if (event.error.code === 401 || event.error.code === 403)\r\n                        layer.map.toast(event.error.text, { type: TC.Consts.msgType.ERROR });\r\n                    layer.map.removeLayer(layer);\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            showProjectionChangeDialog(self, newLayer);\r\n        }\r\n    };\r\n\r\n    ctlProto.loaded = function () {\r\n        return this._readyPromise;\r\n    };\r\n\r\n    ctlProto.getAvailableCRS = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        return self.map.getCompatibleCRS({\r\n            layers: self.map.workLayers.concat(self.map.baseLayer, options.layer),\r\n            includeFallbacks: true\r\n        });\r\n    };\r\n\r\n    ctlProto.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        TC.loadProjDef({\r\n            crs: options.crs,\r\n            callback: function () {\r\n                self.map.setProjection(options).then(function () {\r\n                    if (self._layerToAdd) {\r\n                        self.map.addLayer(self._layerToAdd);\r\n                    }\r\n                    TC.Util.closeModal();\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.showProjectionChangeDialog = function (options) {\r\n        const self = this;\r\n        self._layerToAdd = options.layer;\r\n        TC.control.ProjectionSelector.prototype.showProjectionChangeDialog.call(self, options);\r\n    };\r\n\r\n})();"],"file":"../../Control/LayerCatalog.min.js"}