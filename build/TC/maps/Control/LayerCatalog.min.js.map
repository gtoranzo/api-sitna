{"version":3,"sources":["control/LayerCatalog.js"],"names":["TC","control","ProjectionSelector","syncLoadJS","apiLocation","LayerCatalog","this","layers","searchInit","apply","arguments","_selectors","LAYER_ROOT","CLASS","Consts","classes","SELECTABLE","INCOMPATIBLE","ACTIVE","inherit","ctlProto","prototype","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","x","get","block","body_1","else","body_4","body_8","p","rebase","getPath","__dustBody","body_2","body_3","body_5","body_6","s","body_7","f","body_9","key","value","showProjectionChangeDialog","ctl","layer","closeCallback","getLayerNodes","forEach","node","classList","remove","LOADING","querySelector","dataset","tooltip","getLocaleString","map","self","result","call","load","resolve","reject","Array","isArray","options","i","length","type","layerType","WMS","id","getUID","Util","isPlainObject","Raster","push","render","_readyPromise","Promise","waitLoad","e","baseLayer","off","event","LAYERUPDATE","loaded","state","Layer","IDLE","on","clickToAddText","BEFORELAYERADD","BEFOREUPDATEPARAMS","add","LAYERADD","UPDATEPARAMS","isBase","then","getLayerRootNode","updateControl","layerAlreadyAdded","len","lyr","url","layersToSetChecked","addLayer","layerNames","title","wrap","getServiceTitle","hideTitle","hideTree","LAYERERROR","reason","alert","LAYERREMOVE","CHECKED","list","querySelectorAll","li","getLayer","layerId","names","layerName","findResultNodes","layerRemoved","wlCtrl","getControlsByClass","WorkLayerManager","_markWorkLayersAsAdded","_refreshResultList","EXTERNALSERVICEADDED","div","COLLAPSED","PROJECTIONCHANGE","update","onCollapseButtonClick","target","blur","stopPropagation","parentElement","tagName","contains","toggle","document","evt","createEvent","initEvent","textInput","dispatchEvent","fireEvent","addLogicToNode","btn","addEventListener","span","parentNode","preventDefault","undefined","toString","_roots","root","redrawTime","test","navigator","userAgent","detectFirefox","getTree","element","setTimeout","offsetHeight","offsetWidth","addLayerToMap","onSpanClick","a","name","info","getInfo","hasOwnProperty","CLICK","showLayerInfo","hideLayerInfo","removeChild","compatibleLayers","indexOf","setAttribute","j","workLayers","wl","index","array","splice","getRenderedHtml","html","_dialogDiv","innerHTML","renderBranch","callback","promiseRenderResolve","getCapabilitiesPromise","sourceLayers","makeNodeVisible","childrenVisible","children","isVisible","getLayerTree","createElement","newChild","content","firstChild","oldChild","replaceChild","appendChild","childElementCount","isFunction","l","bind","catch","error","errorMessage","serviceName","liError","toast","msgType","ERROR","_set1stRenderPromise","renderData","layerTrees","enableSearch","layerCheckedList","_search","retryTimeout","loadJS","UI","autocomplete","link","minLength","source","text","item","trim","clearTimeout","results","_founds","searchSubLayers","service","founds","servicesFound","servicesLooked","interval","innerText","lastPattern","goToResult","unescape","hash","substring","buildHTML","data","k","alreadyAdded","Name","isCollapsed","ret","err","out","EventTarget","listenerBySelector","wasCollapsed","searchPane","treePane","infoPane","searchPaneMustShow","HIDDEN","focus","parent","serviceIndex","searchListElementSelector","matches","liParent","layerIdx","isCompatible","crs","$events","TILELOADERROR","code","removeLayer","rootNode","liLayer","toggleInfo","infoObj","formatDescriptions","ii","as","jj","n","metadata","md","formatDescription","format","getSimpleMimeType","getCompatibleLayers","removeAttribute","fromLayerCatalog","filter","getMap","reqGetMapOnCapabilities","replace","regex","PROTOCOL","configLayer","layerOptions","extend","newLayer","getAvailableCRS","getCompatibleCRS","concat","includeFallbacks","setProjection","loadProjDef","_layerToAdd","closeModal"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGC,QAAQC,oBACZF,GAAGG,WAAWH,GAAGI,YAAc,kCAGnC,WAEIJ,GAAGC,QAAQI,aAAe,WACXC,KAENC,OAAS,GAFHD,KAGNE,YAAa,EAElBR,GAAGC,QAAQC,mBAAmBO,MALnBH,KAK+BI,WAL/BJ,KAONK,WAAa,CACdC,WAAY,OARLN,KAQmBO,MAAQ,cAR3BP,KAQgDO,MAAQ,gBARxDP,KAQ+EO,MAAQ,SAG7Fb,GAAGc,OAAOC,QAAQC,aACnBhB,GAAGc,OAAOC,QAAQC,WAAa,iBAE9BhB,GAAGc,OAAOC,QAAQE,eACnBjB,GAAGc,OAAOC,QAAQE,aAAe,mBAEhCjB,GAAGc,OAAOC,QAAQG,SACnBlB,GAAGc,OAAOC,QAAQG,OAAS,cAInClB,GAAGmB,QAAQnB,GAAGC,QAAQI,aAAcL,GAAGC,QAAQC,oBAE/C,IAAIkB,EAAWpB,GAAGC,QAAQI,aAAagB,UAEvCD,EAASP,MAAQ,cAEjBO,EAASE,SAAW,GACpB,GAAItB,GAAGuB,QAAS,CACZH,EAASE,SAASF,EAASP,OAASb,GAAGI,YAAc,iCACrDgB,EAASE,SAASF,EAASP,MAAQ,WAAab,GAAGI,YAAc,uCACjEgB,EAASE,SAASF,EAASP,MAAQ,SAAWb,GAAGI,YAAc,qCAC/DgB,EAASE,SAASF,EAASP,MAAQ,SAAWb,GAAGI,YAAc,qCAC/DgB,EAASE,SAASF,EAASP,MAAQ,YAAcb,GAAGI,YAAc,wCAClEgB,EAASE,SAASF,EAASP,MAAQ,WAAab,GAAGI,YAAc,2CAEhE,CACDgB,EAASE,SAASF,EAASP,OAAS,WAAcW,KAAKC,SAASL,EAASP,MAAOa,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,QAAQC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,oBAAqBC,EAAEJ,EAAIK,IAAI,CAAC,iBAAiB,GAAQL,EAAK,CAAEM,MAASC,GAAU,IAAIN,EAAE,6JAAsKC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,yBAA0BF,EAAE,yDAA4DG,EAAEJ,EAAIK,IAAI,CAAC,eAAe,GAAQL,EAAK,CAAEQ,KAAQC,EAAQH,MAASI,GAAU,IAAIT,EAAE,kDAAoDU,EAAE,mBAAoBX,EAAKA,EAAIY,OAAOZ,EAAIa,SAAQ,EAAM,KAAM,IAAIZ,EAAE,UAAaH,EAAOgB,YAAa,EAAI,SAASP,EAAOR,EAAKC,GAAO,OAAOD,EAAIK,EAAEJ,EAAIK,IAAI,CAAC,eAAe,GAAQL,EAAK,CAAEM,MAASS,GAAU,IAAIX,EAAEJ,EAAIK,IAAI,CAAC,WAAW,GAAQL,EAAK,CAAEM,MAASU,GAAU,IAAOT,EAAOO,YAAa,EAAI,SAASC,EAAOhB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,kDAAqDC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,uBAAwBF,EAAE,eAAmBc,EAAOD,YAAa,EAAI,SAASE,EAAOjB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,kDAAqDC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,uBAAwBF,EAAE,eAAmBe,EAAOF,YAAa,EAAI,SAASL,EAAOV,EAAKC,GAAO,OAAOD,EAAIK,EAAEJ,EAAIK,IAAI,CAAC,WAAW,GAAQL,EAAK,CAAEQ,KAAQS,EAAQX,MAASY,GAAU,IAAOT,EAAOK,YAAa,EAAI,SAASG,EAAOlB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,kDAAoDC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,qBAAsBF,EAAE,oBAAuBgB,EAAOH,YAAa,EAAI,SAASI,EAAOnB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,mCAAqCkB,EAAEnB,EAAIK,IAAI,CAAC,WAAW,GAAQL,EAAK,CAAEM,MAASc,GAAU,IAAInB,EAAE,SAAYiB,EAAOJ,YAAa,EAAI,SAASM,EAAOrB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,uBAAwBoB,EAAErB,EAAIK,IAAI,CAAC,OAAO,GAAQL,EAAK,KAAKC,EAAE,aAAeC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,kBAAmBF,EAAE,wCAA2CoB,EAAErB,EAAIK,IAAI,CAAC,UAAU,GAAQL,EAAK,KAAKC,EAAE,SAAYmB,EAAON,YAAa,EAAI,SAASJ,EAAOX,EAAKC,GAAO,OAAOD,EAAIE,EAAE,mCAAqCkB,EAAEnB,EAAIK,IAAI,CAAC,eAAe,GAAQL,EAAK,CAAEM,MAASgB,GAAU,IAAIrB,EAAE,SAAYS,EAAOI,YAAa,EAAI,SAASQ,EAAOvB,EAAKC,GAAO,OAAOD,EAAIY,EAAE,qBAAsBX,EAAKA,EAAIY,OAAOZ,EAAIa,SAAQ,EAAM,KAAM,IAAOS,EAAOR,YAAa,EAAI,OAAOhB,GACx6EN,EAASE,SAASF,EAASP,MAAQ,WAAa,WAAcW,KAAKC,SAASL,EAASP,MAAQ,UAAWa,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,QAAQG,EAAEJ,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEQ,KAAQD,EAAQD,MAASS,GAAU,IAAId,EAAE,sBAAuBoB,EAAErB,EAAIK,IAAI,CAAC,SAAS,GAAQL,EAAK,KAAKC,EAAE,sBAAwBoB,EAAErB,EAAIK,IAAI,CAAC,QAAQ,GAAQL,EAAK,KAAKC,EAAE,8DAAiEoB,EAAErB,EAAIK,IAAI,CAAC,UAAU,GAAQL,EAAK,KAAKC,EAAE,uDAAyDkB,EAAEnB,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEM,MAASU,GAAU,IAAIf,EAAE,cAAiBH,EAAOgB,YAAa,EAAI,SAASP,EAAOR,EAAKC,GAAO,OAAOD,EAAIE,EAAE,6CAAkDM,EAAOO,YAAa,EAAI,SAASC,EAAOhB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,yCAA8Cc,EAAOD,YAAa,EAAI,SAASE,EAAOjB,EAAKC,GAAO,OAAOD,EAAIY,EAAE,mBAAoBX,EAAKA,EAAIY,OAAOZ,EAAIa,SAAQ,EAAM,KAAM,IAAOG,EAAOF,YAAa,EAAI,OAAOhB,GACz+BN,EAASE,SAASF,EAASP,MAAQ,SAAW,WAAcW,KAAKC,SAASL,EAASP,MAAQ,QAASa,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIK,EAAEJ,EAAIK,IAAI,CAAC,cAAc,GAAQL,EAAK,CAAEM,MAASC,GAAU,IAAOT,EAAOgB,YAAa,EAAI,SAASP,EAAOR,EAAKC,GAAO,OAAOD,EAAIE,EAAE,QAAQG,EAAEJ,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEQ,KAAQO,EAAQT,MAASU,GAAU,IAAIf,EAAE,sBAAuBoB,EAAErB,EAAIK,IAAI,CAAC,SAAS,GAAQL,EAAK,KAAKC,EAAE,sBAAwBoB,EAAErB,EAAIK,IAAI,CAAC,QAAQ,GAAQL,EAAK,KAAKC,EAAE,MAAOG,EAAEJ,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEM,MAASG,GAAU,IAAIR,EAAE,wBAAyBG,EAAEJ,EAAIK,IAAI,CAAC,SAAS,GAAQL,EAAK,CAAEM,MAASW,GAAU,IAAIhB,EAAE,MAAOoB,EAAErB,EAAIK,IAAI,CAAC,UAAU,GAAQL,EAAK,KAAKC,EAAE,WAAWG,EAAEJ,EAAIK,IAAI,CAAC,SAAS,GAAQL,EAAK,CAAEM,MAASY,GAAU,IAAIjB,EAAE,gDAAkDkB,EAAEnB,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEM,MAASc,GAAU,IAAInB,EAAE,cAAiBM,EAAOO,YAAa,EAAI,SAASC,EAAOhB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,6CAAkDc,EAAOD,YAAa,EAAI,SAASE,EAAOjB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,yCAA8Ce,EAAOF,YAAa,EAAI,SAASL,EAAOV,EAAKC,GAAO,OAAOD,EAAIE,EAAE,sDAA2DQ,EAAOK,YAAa,EAAI,SAASG,EAAOlB,EAAKC,GAAO,OAAOD,EAAIG,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,oBAAwBc,EAAOH,YAAa,EAAI,SAASI,EAAOnB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,mBAAoBC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,sBAAuBF,EAAE,4CAAkDiB,EAAOJ,YAAa,EAAI,SAASM,EAAOrB,EAAKC,GAAO,OAAOD,EAAIY,EAAE,mBAAoBX,EAAKA,EAAIY,OAAOZ,EAAIa,SAAQ,EAAM,KAAM,IAAOO,EAAON,YAAa,EAAI,OAAOhB,GACrrDN,EAASE,SAASF,EAASP,MAAQ,SAAW,WAAcW,KAAKC,SAASL,EAASP,MAAQ,QAASa,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,8CAAgDC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,cAAeF,EAAE,uCAAyCoB,EAAErB,EAAIK,IAAI,CAAC,UAAU,GAAQL,EAAK,KAAKC,EAAE,SAASG,EAAEJ,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEM,MAASC,GAAU,IAAIH,EAAEJ,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEM,MAASS,GAAU,IAAOjB,EAAOgB,YAAa,EAAI,SAASP,EAAOR,EAAKC,GAAO,OAAOD,EAAIE,EAAE,0CAA4CC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,aAAcF,EAAE,mBAAmBoB,EAAErB,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,IAAK,CAAC,MAAMC,EAAE,sBAAyBM,EAAOO,YAAa,EAAI,SAASC,EAAOhB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,0CAA4CC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,aAAcF,EAAE,aAAakB,EAAEnB,EAAIK,IAAI,CAAC,aAAa,GAAQL,EAAK,CAAEM,MAASU,GAAU,IAAIf,EAAE,eAAkBc,EAAOD,YAAa,EAAI,SAASE,EAAOjB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,iBAAkBoB,EAAErB,EAAIK,IAAI,CAAC,QAAQ,GAAQL,EAAK,IAAK,CAAC,MAAMC,EAAE,YAAcoB,EAAErB,EAAIK,IAAI,CAAC,WAAW,GAAQL,EAAK,KAAKC,EAAE,aAAeoB,EAAErB,EAAIK,IAAI,CAAC,sBAAsB,GAAQL,EAAK,KAAKC,EAAE,sBAAyBoB,EAAErB,EAAIK,IAAI,CAAC,sBAAsB,GAAQL,EAAK,IAAK,CAAC,MAAMC,EAAE,aAAgBe,EAAOF,YAAa,EAAI,OAAOhB,GACj0CN,EAASE,SAASF,EAASP,MAAQ,YAAc,WAAcW,KAAKC,SAASL,EAASP,MAAQ,WAAYa,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIoB,EAAEnB,EAAIK,IAAI,CAAC,kBAAkB,GAAQL,EAAK,CAAEQ,KAAQD,EAAQD,MAASS,GAAU,IAAOjB,EAAOgB,YAAa,EAAI,SAASP,EAAOR,EAAKC,GAAO,OAAOD,EAAIE,EAAE,2CAA6CC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,cAAeF,EAAE,cAAiBM,EAAOO,YAAa,EAAI,SAASC,EAAOhB,EAAKC,GAAO,OAAOD,EAAIG,EAAE,KAAMF,EAAK,CAAEM,MAASU,GAAU,CAAEO,IAAOvB,EAAIK,IAAI,CAAC,mBAAmB,GAAQmB,MAAS,IAAKL,EAAEnB,EAAIK,IAAI,CAAC,WAAW,GAAQL,EAAK,CAAEM,MAASW,GAAU,IAAIf,EAAE,KAAMF,EAAK,CAAEM,MAASgB,GAAU,CAAEC,IAAOvB,EAAIK,IAAI,CAAC,mBAAmB,GAAQmB,MAAS,IAAQT,EAAOD,YAAa,EAAI,SAASE,EAAOjB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,wCAAyCG,EAAEJ,EAAIa,SAAQ,EAAO,CAAC,UAAW,gBAAiBb,EAAK,CAAEM,MAASG,GAAU,IAAIR,EAAE,0BAA4BoB,EAAErB,EAAIa,SAAQ,EAAO,CAAC,UAAW,UAAWb,EAAK,KAAKC,EAAE,UAAWoB,EAAErB,EAAIa,SAAQ,EAAO,CAAC,UAAW,UAAWb,EAAK,KAAKC,EAAE,aAAgBe,EAAOF,YAAa,EAAI,SAASL,EAAOV,EAAKC,GAAO,OAAOD,EAAIE,EAAE,gBAAmBQ,EAAOK,YAAa,EAAI,SAASG,EAAOlB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,yBAA0BoB,EAAErB,EAAIK,IAAI,CAAC,SAAS,GAAQL,EAAK,KAAKC,EAAE,MAAOG,EAAEJ,EAAIK,IAAI,CAAC,iBAAiB,GAAQL,EAAK,CAAEM,MAASY,GAAU,IAAIjB,EAAE,8BAAgCG,EAAEJ,EAAIK,IAAI,CAAC,iBAAiB,GAAQL,EAAK,CAAEQ,KAAQY,EAAQd,MAASI,GAAU,IAAIT,EAAE,KAAKoB,EAAErB,EAAIK,IAAI,CAAC,UAAU,GAAQL,EAAK,KAAKC,EAAE,4DAA+DC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,sBAAuBF,EAAE,oBAAwBgB,EAAOH,YAAa,EAAI,SAASI,EAAOnB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,uBAA4BiB,EAAOJ,YAAa,EAAI,SAASM,EAAOrB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,mBAAoBC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,oBAAqBF,EAAE,KAASmB,EAAON,YAAa,EAAI,SAASJ,EAAOX,EAAKC,GAAO,OAAOD,EAAIE,EAAE,mBAAoBC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,sBAAuBF,EAAE,KAASS,EAAOI,YAAa,EAAI,SAASQ,EAAOvB,EAAKC,GAAO,OAAOD,EAAIE,EAAE,cAAiBqB,EAAOR,YAAa,EAAI,OAAOhB,GAC7nEN,EAASE,SAASF,EAASP,MAAQ,WAAa,WAAcW,KAAKC,SAASL,EAASP,MAAQ,UAAWa,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,qKAA6KC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,cAAeF,EAAE,+EAAmFC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,yCAA0CF,EAAE,oJAA4JC,EAAE,OAAQF,EAAK,GAAI,CAAEG,KAAQ,UAAWF,EAAE,+BAAkCH,EAAOgB,YAAa,EAAI,OAAOhB,GAG5xB,MAAM2B,EAA6B,SAAUC,EAAKC,GAC9CD,EAAID,2BAA2B,CAC3BE,MAAOA,EACPC,cAAe,WACXF,EAAIG,cAAcF,GAAOG,QAAQ,SAAUC,GACvCA,EAAKC,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQ+C,SACxCH,EAAKI,cAAc,QAAQC,QAAQC,QAAUX,EAAIY,gBAAgB,yBAQjF9C,EAASK,SAAW,SAAU0C,GAC1B,MAAMC,EAAO9D,KAEP+D,EAASrE,GAAGC,QAAQC,mBAAmBmB,UAAUI,SAAS6C,KAAKF,EAAMD,GAErEI,EAAO,SAAUC,EAASC,GAC5B,GAAIC,MAAMC,QAAQP,EAAKQ,QAAQrE,QAAS,CACpC,IAAK,IAAIsE,EAAI,EAAGA,EAAIT,EAAKQ,QAAQrE,OAAOuE,OAAQD,IAAK,CACjD,IAAItB,EAAQa,EAAKQ,QAAQrE,OAAOsE,GAChC,IAAKtB,EAAMwB,MAAQxB,EAAMwB,OAAS/E,GAAGc,OAAOkE,UAAUC,IAAK,CAClD1B,EAAM2B,KACP3B,EAAM2B,GAAKlF,GAAGmF,UAEdnF,GAAGoF,KAAKC,cAAc9B,KACtBA,EAAQ,IAAIvD,GAAGuD,MAAM+B,OAAO/B,IAEhCa,EAAK7D,OAAOgF,KAAKhC,IAGzBa,EAAKoB,OAAO,WACRhB,WAIJA,KAIRJ,EAAKqB,cAAgB,IAAIC,QAAQ,SAAUlB,EAASC,GAChD,MAAMkB,EAAW,SAAUC,GACvB,GAAIA,EAAErC,QAAUY,EAAI0B,UAAW,CAC3BtB,EAAKC,GACLL,EAAI2B,IAAI9F,GAAGc,OAAOiF,MAAMC,YAAaL,KAI7CxB,EAAI8B,OAAO,WACF9B,EAAI0B,UAAUK,OAAS/B,EAAI0B,UAAUK,QAAUlG,GAAGmG,MAAMD,MAAME,KAI/DjC,EAAIkC,GAAGrG,GAAGc,OAAOiF,MAAMC,YAAaL,GAHpCpB,EAAKC,OAkDjB,IAAI8B,EAAiBlC,EAAKF,gBAAgB,mBAE1CC,EACKkC,GAAGrG,GAAGc,OAAOiF,MAAMQ,eAAiB,IAAMvG,GAAGc,OAAOiF,MAAMS,mBAAoB,SAAUZ,GACrFxB,EAAKX,cAAcmC,EAAErC,OAAOG,QAAQ,SAAUC,GAC1CA,EAAKC,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQ+C,gBAC9BH,EAAKI,cAAc,QAAQC,QAAQC,YAGjDoC,GAAGrG,GAAGc,OAAOiF,MAAMW,SAAW,IAAM1G,GAAGc,OAAOiF,MAAMY,aAAc,SAAUf,GACzE,MAAMrC,EAAQqC,EAAErC,MACXA,EAAMqD,QAAUrD,EAAMwB,OAAS/E,GAAGc,OAAOkE,UAAUC,KACpDb,EAAK6B,SAASY,KAAK,WAEf,GAAIzC,EAAK0C,iBAAiBvD,GACtBwD,EAAczC,KAAKF,EAAMb,OAExB,CAGD,IADA,IAAIyD,GAAoB,EACfnC,EAAI,EAAGoC,EAAM7C,EAAK7D,OAAOuE,OAAQD,EAAIoC,EAAKpC,IAAK,CACpD,IAAIqC,EAAM9C,EAAK7D,OAAOsE,GACtB,GAAIqC,EAAInC,OAASxB,EAAMwB,MAAQmC,EAAItC,QAAQuC,MAAQ5D,EAAMqB,QAAQuC,IAAK,CAClEH,GAAoB,EACpB,OAKR,GAAIA,EAAmB,CACd5C,EAAKgD,qBACNhD,EAAKgD,mBAAqB,IAG9BhD,EAAKgD,mBAAmB7B,KAAKhC,QAE7Ba,EAAKiD,SAAS,IAAIrH,GAAGuD,MAAM+B,OAAO,CAC9B6B,IAAK5D,EAAMqB,QAAQuC,IACnBpC,KAAMxB,EAAMwB,KACZuC,WAAY,GACZC,MAAOhE,EAAMgE,OAAShE,EAAMiE,KAAKC,kBACjCC,WAAW,EACXC,UAAU,KACVd,KAAK,WACLE,EAAczC,KAAKF,EAAMb,UAOhD8C,GAAGrG,GAAGc,OAAOiF,MAAM6B,WAAY,SAAUhC,GACtC,MAAMiC,EAASjC,EAAEiC,OACbA,GACA7H,GAAG8H,MAAM1D,EAAKF,gBAAgB2D,EAAQ,CAAEV,IAAKvB,EAAErC,MAAM4D,OAEzD/C,EAAKX,cAAcmC,EAAErC,OAAOG,QAAQ,SAAUC,GAC1CA,EAAKC,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQ+C,aAG/CuC,GAAGrG,GAAGc,OAAOiF,MAAMgC,YAAa,SAAUnC,GACvC,MAAMrC,EAAQqC,EAAErC,MAChBa,EAAKX,cAAcF,GAAOG,QAAQ,SAAUC,GACxCA,EAAKC,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQiH,SACxCrE,EAAKI,cAAc,QAAQC,QAAQC,QAAUqC,KA1GjC,SAAU/C,GAC9B,MAAMc,EAAS,GACf,IAAKd,EAAMqD,OAAQ,CACf,IAAIO,EAAM5D,EAAMqB,QAAQuC,IACpB/C,EAAK6D,MACL7D,EAAK6D,KAAKC,iBAAiB,MAAMxE,QAAQ,SAAUyE,GAC/C,MAAMjB,EAAM9C,EAAKgE,SAASD,EAAGnE,QAAQqE,SACrC,GAAInB,GAAOA,EAAInC,OAASxB,EAAMwB,MAAQmC,EAAItC,QAAQuC,MAAQA,EACtD,IAAK,IAAItC,EAAI,EAAGA,EAAItB,EAAM+E,MAAMxD,OAAQD,IACpC,GAAIsD,EAAGnE,QAAQuE,YAAchF,EAAM+E,MAAMzD,GAAI,CACzCR,EAAOkB,KAAK4C,GACZ,SAOxB,OAAO9D,GA0FHmE,CAAgBjF,GAAOG,QAAQ,SAAUC,GACrCA,EAAKC,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQiH,SACxCrE,EAAKI,cAAc,MAAMC,QAAQC,QAAUqC,KAtFxB,SAAUmC,GACrC,IAAIC,EAAStE,EAAKD,IAAIwE,mBAAmB3I,GAAGC,QAAQ2I,kBAAkB,GACtE,GAAIF,EAGA,IAFA,IAAInI,EAASmI,EAAOnI,OAEXsE,EAAI,EAAGA,EAAItE,EAAOuE,OAAQD,IAAK,CACpC,IAAItB,EAAQhD,EAAOsE,GAEftB,IAAUkF,GACVrE,EAAKX,cAAcF,GAAOG,QAAQ,SAAUC,GACxCA,EAAKC,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQiH,SACrCrE,EAAKI,cAAc,QAAQC,QAAQC,QAAUG,EAAKF,gBAAgB,wBAgF9E2E,CAAuBtF,GAGvBuF,EAAmBxE,KAAKF,KAE3BiC,GAAGrG,GAAGc,OAAOiF,MAAMgD,qBAAsB,SAAUnD,GAChD,GAAIA,GAAKA,EAAErC,MAAO,CACda,EAAKiD,SAASzB,EAAErC,OAChBa,EAAK4E,IAAIpF,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQkI,cAGnD5C,GAAGrG,GAAGc,OAAOiF,MAAMmD,iBAAkB,SAAUtD,GAC5CxB,EAAK+E,WAGb,OAAO9E,GAGX,MAAM+E,EAAwB,SAAUxD,GACpCA,EAAEyD,OAAOC,OACT1D,EAAE2D,kBACF,MAAMpB,EAAKvC,EAAEyD,OAAOG,cACpB,GAAmB,OAAfrB,EAAGsB,UAAqBtB,EAAGvE,UAAU8F,SAAStF,KAAKvD,MAAQ,SAAU,CACrEsH,EAAGvE,UAAU+F,OAAO3J,GAAGc,OAAOC,QAAQkI,WAC3Bd,EAAGpE,cAAc,MACzBH,UAAU+F,OAAO3J,GAAGc,OAAOC,QAAQkI,aAmUxCH,EAAqB,WACvB,MAAM1E,EAAO9D,KAEb,GAAI,gBAAiBsJ,SAAU,CAC3B,IAAIC,EAAMD,SAASE,YAAY,cAC/BD,EAAIE,UAAU,SAAS,GAAO,GAC1B3F,EAAK4F,WACL5F,EAAK4F,UAAUC,cAAcJ,QAI7BzF,EAAK4F,WACL5F,EAAK4F,UAAUE,UAAU,UAK/BnD,EAAgB,SAAUxD,GAC5B,MAAMa,EAAO9D,KAEb8D,EAAKX,cAAcF,GAAOG,QAAQ,SAAUC,GACxCA,EAAKC,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQ+C,SACxCH,EAAKC,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQiH,SACrCrE,EAAKI,cAAc,QAAQC,QAAQC,QAAUG,EAAKF,gBAAgB,uBAEtE4E,EAAmBxE,KAAKF,IAiBtB+F,EAAiB,SAAUxG,EAAMJ,GACnC,MAAMa,EAAO9D,KAEbqD,EAAKuE,iBAAiB,eAAiB9D,EAAKvD,MAAQ,iBAAiB6C,QAAQ,SAAU0G,GACnFA,EAAIC,iBAAiB,QAASjB,KAGlCzF,EAAKuE,iBAAiB,QAAQxE,QAAQ,SAAU4G,GAC5CA,EAAKD,iBAAiB,QAAS,SAAUzE,IAjX7B,SAAUA,EAAGtC,GAC7B,MAAM6E,EAAKvC,EAAEyD,OAAOkB,WACpB,IAAKpC,EAAGvE,UAAU8F,SAAS1J,GAAGc,OAAOC,QAAQ+C,WAAaqE,EAAGvE,UAAU8F,SAAS1J,GAAGc,OAAOC,QAAQiH,SAAU,CACxGpC,EAAE4E,eAEF,IAEIjH,EAFAgF,EAAYJ,EAAGnE,QAAQuE,UAC3BA,OAA2BkC,IAAdlC,EAA2BA,EAAUmC,WAAa,GAE/D,IAAK,IAAI7F,EAAI,EAAGoC,EAAM3D,EAAIqH,OAAO7F,OAAQD,EAAIoC,EAAKpC,IAAK,CACnD,MAAM+F,EAAOtH,EAAIqH,OAAO9F,GACxB,GAAI+F,EAAKlB,SAASvB,GAAK,CACnB5E,EAAQD,EAAI8E,SAASwC,EAAK5G,QAAQqE,SAClC,OAGH9E,IACDA,EAAQD,EAAI8E,SAASD,EAAGnE,QAAQqE,UAEpC,GAAI9E,GAASgF,EAAW,CACpB,IAAIsC,EAAa,EAEb,QAAQC,KAAKC,UAAUC,WACvBH,EAAa,GACR7K,GAAGoF,KAAK6F,kBACbJ,EAAa,KAEZtH,EAAMgE,QACPhE,EAAMgE,MAAQhE,EAAM2H,UAAU3D,OAGlCY,EAAGvE,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQ+C,SACnCqE,EAAGpE,cAAc,QAAQC,QAAQC,QAAU,IAElBkH,EAWlBhD,EAVI,IAAIzC,QAAQ,SAAUlB,EAASC,GAClC2G,WAAW,WACPD,EAAQE,aAAeF,EAAQE,aAC/BF,EAAQG,YAAcH,EAAQG,YAE9B9G,KACDqG,MAIAhE,KAAK,WACZvD,EAAIiI,cAAchI,EAAOgF,KAE7B3C,EAAE2D,mBAda,IAAU4B,EAiVzBK,CAAY5F,EAAGxB,OAIvBA,EAAKuG,OAASvG,EAAK4E,IAAId,iBAAiB9D,EAAKzD,WAAWC,YAExD+C,EAAKK,QAAQqE,QAAU9E,EAAM2B,GAG7BvB,EAAKuE,iBAAiB,IAAM9D,EAAKvD,MAAQ,aAAa6C,QAAQ,SAAU+H,GACpE,MAAMnB,EAAOmB,EAAEjC,cAAczF,cAAc,QACrC2H,EAAOD,EAAEjC,cAAcxF,QAAQuE,UACrC,GAAImD,EAAM,CACNpB,EAAK1G,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQC,YACrC,IAAI2K,EAAOpI,EAAMiE,KAAKoE,QAAQF,GACzBC,EAAKE,eAAe,aAAgBF,EAAKE,eAAe,WAAcF,EAAKE,eAAe,YAI3FJ,EAAEpB,iBAAiBrK,GAAGc,OAAOiF,MAAM+F,MAAO,SAAUlG,GAChDA,EAAE2D,kBACUjJ,KACJsD,UAAU+F,OAAO3J,GAAGc,OAAOC,QAAQiH,SACvC5D,EAAK2H,cAAcxI,EAAOmI,GAE1BtH,EAAK4H,kBATbP,EAAEjC,cAAcyC,YAAYR,GAahC,GAAIlI,EAAM2I,kBAAoB3I,EAAM2I,iBAAiBC,QAAQT,GAAQ,EAAG,CACpEpB,EAAK1G,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQE,cACrCqJ,EAAK8B,aAAa,QAAShI,EAAKF,gBAAgB,uBAGpD,GAAIE,EAAKD,IACL,IAAK,IAAIkI,EAAI,EAAGpF,EAAM7C,EAAKD,IAAImI,WAAWxH,OAAQuH,EAAIpF,EAAKoF,IAAK,CAC5D,IAAIE,EAAKnI,EAAKD,IAAImI,WAAWD,GAC7B,GAAIE,EAAGxH,OAAS/E,GAAGc,OAAOkE,UAAUC,KAAOsH,EAAGpF,MAAQ5D,EAAM4D,KAA2B,IAApBoF,EAAGjE,MAAMxD,QAAgByH,EAAGjE,MAAM,KAAOoD,EAAM,CAC9GpB,EAAKd,cAAc5F,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQiH,SACnDsC,EAAKtG,QAAQC,QAAUG,EAAKF,gBAAgB,2BAKvD,CACDoG,EAAKtG,QAAQC,QAAU,GACvBwH,EAAEjC,cAAcyC,YAAYR,OArET,WAC3B,MAAMrH,EAAO9D,KAET8D,EAAKgD,oBAAsBhD,EAAKgD,mBAAmBtC,OAAS,GAC5DV,EAAKgD,mBAAmB1D,QAAQ,SAAUH,EAAOiJ,EAAOC,GACpD,GAAIrI,EAAK0C,iBAAiBvD,GAAQ,CAC9BwD,EAAczC,KAAKF,EAAMb,GAEzBkJ,EAAMC,OAAOF,EAAO,QAiETlI,KAAKF,GAE5BA,EAAKuI,gBAAgBvI,EAAKvD,MAAQ,UAAW,KAAM,SAAU+L,GACzDxI,EAAKyI,WAAWC,UAAYF,KAIpCxL,EAAS2L,aAAe,SAAUxJ,EAAOyJ,EAAUC,GAC/C,MAAM7I,EAAO9D,KAEbiD,EAAM2J,yBACDrG,KAAK,SAAUxC,GAEZD,EAAK+I,aAAa5H,KAAKhC,GAEvBa,EAAKuI,gBAAgBvI,EAAKvD,MAAQ,UAvIzB,SAAU0C,GAC3B,IAAIc,EAASd,EAAM2H,WACG,SAASkC,EAAgBzJ,GAG3C,IAFA,IACI0J,GAAkB,EACbxI,EAAI,EAAGA,EAAIlB,EAAK2J,SAASxI,OAAQD,IAClCuI,EAAgBzJ,EAAK2J,SAASzI,MAC9BwI,GAAkB,GAGtB1J,EAAKkI,eAAe,eACpBlI,EAAK4J,WAAchK,EAAM+E,QAAU/E,EAAM+E,MAAMxD,QAAWuI,GAAmB1J,EAAK4J,WAEtF,OAAO5J,EAAK4J,UAEhBH,CAAgB/I,GAChB,OAAOA,EAuH8CmJ,CAAalN,MAAO,SAAUsM,GACvE,IAAItL,EAAWsI,SAAS6D,cAAc,YACtCnM,EAASwL,UAAYF,EAErB,IAAIc,EAAWpM,EAASqM,QAAUrM,EAASqM,QAAQC,WAAatM,EAASsM,WACrEC,EAAWzJ,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,WAAWkD,cAAc,MAAQK,EAAKvD,MAAQ,gCAAkCP,KAAK4E,GAAK,MAE/I2I,EACAzJ,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,WAAWiN,aAAaJ,EAAUG,GAE5EzJ,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,WAAWkN,YAAYL,GAGrEvD,EAAe7F,KAAKF,EAAMsJ,EAAUpN,MAE2C,IAA3E8D,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,WAAWmN,mBACrDf,IAGAjN,GAAGoF,KAAK6I,WAAWjB,IAEnBA,EAAS5I,EAAK+I,aAAa/I,EAAK+I,aAAahJ,IAAI,SAAU+J,GAAK,OAAOA,EAAEhJ,KAAMiH,QAAQ7L,KAAK4E,OAGlGiJ,KAAK7N,QAET6N,KAAK5K,IACN6K,MAAM,SAAUC,GACb,IAAI7B,EAAQpI,EAAK7D,OAAO4D,IAAI,SAAU+J,GAAK,OAAOA,EAAEhJ,KAAMiH,QAAQ7L,KAAK4E,IACvEd,EAAK7D,OAAOmM,OAAOF,EAAO,GAE1B,IAAI8B,EAAelK,EAAKF,gBAAgB,2BAA4B,CAAEqK,YAAajO,KAAKiH,QACpFiH,EAAUpK,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,WAAWkD,cAAc,MAAQK,EAAKvD,MAAQ,gCAAkCP,KAAK4E,GAAK,MAClJsJ,EAAQ5K,UAAU6C,IAAI,SACtB+H,EAAQpC,aAAa,QAASkC,GAE9BlK,EAAKD,IAAIsK,MAAMH,EAAc,CAAEvJ,KAAM/E,GAAGc,OAAO4N,QAAQC,SAEzDR,KAAK5K,KAGfnC,EAASoE,OAAS,SAAUwH,GACxB,MAAM5I,EAAO9D,KAEb8D,EAAK+I,aAAe,GAEpB,OAAO/I,EAAKwK,qBAAqB,IAAIlJ,QAAQ,SAAUlB,EAASC,GACjC,IAAvBL,EAAK7D,OAAOuE,OACZV,EAAKyK,WAAW,CAAEC,WAAY,GAAIC,cAAc,GAAS,WAEjD/O,GAAGoF,KAAK6I,WAAWjB,IACnBA,IAGJxI,MAGJJ,EAAKyK,WAAW,CAAEtO,OAAQ6D,EAAK7D,OAAQwO,cAAc,GAAQ,YAxbxC,WAC7B,MAAM3K,EAAO9D,KAEb8D,EAAK4F,UAAY5F,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,UAC3DuD,EAAK6D,KAAO7D,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,cAEtDuD,EAAK4F,UAAUK,iBAAiB,UAAW,SAAUzE,GAGhC,KAFFxB,EAAK4F,UAAU5G,OAQ9BgI,WAAW,WAGU,KAFFhH,EAAK4F,UAAU5G,QAG1BgB,EAAK6D,KAAK6E,UAAY,KAE3B,KAGP,IAAIkC,EAAmB,GAEvBhP,GAAGiP,QAAUjP,GAAGiP,SAAW,GAC3BjP,GAAGiP,QAAQC,aAAe,KAEdlP,GAAGmP,QACEnP,GAAGoP,KAAOpP,GAAGoP,GAAGC,aACjB,CAACrP,GAAGI,YAAc,yBAClB,WACIJ,GAAGoP,GAAGC,aAAa/K,KAAKF,EAAK4F,UAAW,CACpCsF,KAAM,IACNjG,OAAQjF,EAAK6D,KACbsH,UAAW,EACXC,OAAQ,SAAUC,EAAMzC,GAEpBgC,EAAmB,GACnB5K,EAAKuG,OAAOjH,QAAQ,SAAUkH,GAC1BA,EAAK1C,iBAAiB,MAAQlI,GAAGc,OAAOC,QAAQiH,SAAStE,QAAQ,SAAUgM,GACvEV,EAAiBzJ,KAAKmK,EAAK1L,QAAQuE,eAMvD,IADAkH,EAAOA,EAAKE,QACH7K,OApSL,EAqSAV,EAAK6D,KAAK6E,UAAY,QAErB,GAAI2C,EAAK3K,QAvSV,EAuSuC,CACnC9E,GAAGiP,QAAQC,cACXU,aAAa5P,GAAGiP,QAAQC,cAC5BlP,GAAGiP,QAAQC,aAAe9D,WAAW,WAEjC,IADA,IAAIyE,EAAU,GACLrD,EAAQ,EAAGA,EAAQpI,EAAK+I,aAAarI,OAAQ0H,IAAS,CAC3D,IAAIsD,EAAU1L,EAAK+I,aAAaX,GAAOuD,gBAAgBN,GACnDK,EAAQhL,QACR+K,EAAQtK,KAAK,CACTyK,QAAS,CACLxD,MAAOA,EACPjF,MAAOnD,EAAK+I,aAAaX,GAAOjF,OAASnD,EAAK+I,aAAaX,GAAOtH,IAEtE+K,OAAQH,IAIpB9C,EAAS,CAAEkD,cAAeL,EAASM,eAAgB/L,EAAK+I,aAAarI,UACtE9E,GAAGiP,QAAQmB,YAGtBpD,SAAU,SAAUpH,GAChBxB,EAAK4F,UAAU5G,MAAQwC,EAAEyD,OAAOoG,MAAQ7J,EAAEyD,OAAOgH,UACjDrQ,GAAGiP,QAAQqB,YAAclM,EAAK4F,UAAU5G,MACxCgB,EAAKmM,WAAWC,SAAS5K,EAAEyD,OAAOoH,MAAMC,UAAU,IAClD1Q,GAAGoP,GAAGC,aAAa/K,KAAKF,EAAK4F,UAAW,UAE5C2G,UAAW,SAAUC,GAEjB,GAAIA,EAAKf,SAAWe,EAAKf,QAAQK,cAAcpL,OAAS,EAEpD,IADA,IAAIwH,EAAalI,EAAKD,IAAIqJ,eAAelB,WAChCuE,EAAI,EAAGA,EAAID,EAAKf,QAAQK,cAAcpL,OAAQ+L,IAAK,CAExD,IADA,IAAIZ,EAASW,EAAKf,QAAQK,cAAcW,GAAGZ,OAClC5D,EAAI,EAAGA,EAAI4D,EAAOnL,OAAQuH,IAAK,QAC7B4D,EAAO5D,GAAGyE,aACjB,IAAK,IAAIjM,EAAI,EAAGA,EAAIyH,EAAWxH,OAAQD,IAEnC,GAAImK,EAAiB7C,QAAQ8D,EAAO5D,GAAG0E,OAAS,EAAG,CAC/Cd,EAAO5D,GAAGyE,cAAe,EACzB,MAIR,IAAKb,EAAO5D,GAAG0E,KAAM,CACjBd,EAAOvD,OAAOL,EAAG,GACjBA,KAGHuE,EAAKf,QAAQK,cAAcW,GAAGZ,OAAOnL,OAKtCV,EAAK4E,IAAId,iBAAiB,6BAA6B2I,KACvDD,EAAKf,QAAQK,cAAcW,GAAGb,QAAQgB,YAAc5M,EAAK4E,IAAId,iBAAiB,6BAA6B2I,GAAGjN,UAAU8F,SAAS1J,GAAGc,OAAOC,QAAQkI,YALnJ2H,EAAKf,QAAQK,cAAcxD,OAAOmE,EAAG,GASjD,IAAII,EAAM,GACVzP,KAAKgE,OAAOpB,EAAKvD,MAAQ,WAAY+P,EAAKf,QAAS,SAAUqB,EAAKC,GAC9DF,EAAME,IAEV,OAAOF,OAMvB,IAAK7M,EAAK5D,WAAY,CAElB4D,EAAK4E,IAAIqB,iBAAiB,QAASrK,GAAGoR,YAAYC,mBAAmB,YAAa,SAAUzL,GACxF,MAAM0L,EAAelN,EAAK4E,IAAIpF,UAAU8F,SAAS1J,GAAGc,OAAOC,QAAQkI,WACnE7E,EAAK4E,IAAIpF,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQkI,WAE5C,MAAMsI,EAAanN,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,WACvD2Q,EAAWpN,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,SACrD4Q,EAAWrN,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,SAErD6Q,KAAwBH,EAAW3N,UAAU8F,SAAS1J,GAAGc,OAAOC,QAAQ4Q,UAAWL,GACzFC,EAAW3N,UAAU+F,OAAO3J,GAAGc,OAAOC,QAAQ4Q,QAASD,GACvDF,EAAS5N,UAAU+F,OAAO3J,GAAGc,OAAOC,QAAQ4Q,OAAQD,GACpD9L,EAAEyD,OAAOzF,UAAU+F,OAAOvF,EAAKvD,MAAQ,YAAa6Q,GACpD9L,EAAEyD,OAAOzF,UAAU+F,OAAOvF,EAAKvD,MAAQ,eAAgB6Q,GACvD,GAAIA,EAAoB,CACpBtN,EAAK4F,UAAU4H,QACfhM,EAAEyD,OAAO+C,aAAa,QAAShI,EAAKF,gBAAgB,4BAI9B,IADAE,EAAK4E,IAAId,iBAAiB,4CAA4CpD,QAExF2M,EAAS7N,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQ4Q,YAG5C,CACD/L,EAAEyD,OAAO+C,aAAa,QAAShI,EAAKF,gBAAgB,uBAG9BE,EAAK4E,IAAId,iBAAiB,0CAA0CpD,OACtE,GAChB2M,EAAS7N,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQ4Q,YAQxDvN,EAAK4E,IAAIqB,iBAAiB,QAASrK,GAAGoR,YAAYC,mBAAmB,IAAMjN,EAAKvD,MAAQ,kBAAoBuD,EAAKvD,MAAQ,mBAAoB,SAAUgJ,GACnJA,EAAIN,kBACJ,MAAMF,EAASQ,EAAIR,OACnB,GAAKA,EAAOzF,UAAU8F,SAAS1J,GAAGc,OAAOC,QAAQiH,SAU1C,CACHqB,EAAOzF,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQiH,SAC1C5D,EAAK4H,oBAZkD,CACvD,MAAM7D,EAAKkB,EAAOG,cAClB,IAAIqI,EAAS1J,EACb,GACI0J,EAASA,EAAOrI,oBAEbqI,GAA6B,OAAnBA,EAAOpI,SACxBrF,EAAK2H,cAAc3H,EAAK7D,OAAOuE,OAAS,EAAIV,EAAK7D,OAAOsR,EAAO7N,QAAQ8N,cAAgB1N,EAAK7D,OAAO,GAAI4H,EAAGnE,QAAQuE,WAClHc,EAAOzF,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQiH,aAS/C,MAAM+J,EAA4B,IAAM3N,EAAKvD,MAAQ,aACrDuD,EAAK4E,IAAIqB,iBAAiB,QAASrK,GAAGoR,YAAYC,mBAAmBU,EAA2B,SAAUlI,GACtGA,EAAIN,kBAEJ,IADA,IAAIpB,EAAK0B,EAAIR,OACNlB,IAAOA,EAAG6J,QAAQD,IACrB5J,EAAKA,EAAGqB,cAEZ,IAAIrB,EAAGvE,UAAU8F,SAAStF,EAAKvD,MAAQ,eAGvC,GAAIsH,EAAGvE,UAAU8F,SAAStF,EAAKvD,MAAQ,iBACnCsH,EAAGvE,UAAU+F,OAAO3J,GAAGc,OAAOC,QAAQkI,eAD1C,CAIA,IAAIV,EAAYJ,EAAGnE,QAAQuE,UAC3B,GAAKA,GAK2B,KAFhCA,EAAYA,EAAUmC,YAERiF,OAAO7K,SAKjBqD,EAAGvE,UAAU8F,SAAS1J,GAAGc,OAAOC,QAAQiH,SAErC,CACH,IAAIiK,EAAW9J,EACf,GACI8J,EAAWA,EAASzI,oBAEjByI,IAAaA,EAASD,QAAQ,MAAQ5N,EAAKvD,MAAQ,kBAE1D,MAAMqR,EAAYD,EAAeA,EAASjO,QAAQ8N,aAArB,EACvB3K,EAAM/C,EAAK7D,OAAO2R,GAAUtN,QAAQuC,IACpCI,EAAQnD,EAAK7D,OAAO2R,GAAU3K,MAE9BhE,EAAQ,IAAIvD,GAAGuD,MAAM+B,OAAO,CAC9BJ,GAAId,EAAKe,SACTgC,IAAKA,EACLI,MAAOA,EACPG,UAAWtD,EAAK7D,OAAO2R,GAAUxK,WAAatD,EAAK7D,OAAO2R,GAAUtN,QAAQ8C,UAC5EC,UAAU,EACVL,WAAY,CAACiB,KAEjB,GAAIhF,EAAM4O,aAAa/N,EAAKD,IAAIiO,KAAM,CAClChO,EAAKD,IAAIkD,SAAS9D,EAAO,SAAUA,GAC/B4E,EAAGnE,QAAQqE,QAAU9E,EAAM2B,GAC3B3B,EAAMiE,KAAK6K,QAAQhM,GAAGrG,GAAGc,OAAOiF,MAAMuM,cAAe,SAAUvM,GAC3D,IAAIxC,EAAQjD,KAAKuR,OACQ,MAArB9L,EAAMsI,MAAMkE,MAAqC,MAArBxM,EAAMsI,MAAMkE,MACxChP,EAAMY,IAAIsK,MAAM1I,EAAMsI,MAAMoB,KAAM,CAAE1K,KAAM/E,GAAGc,OAAO4N,QAAQC,QAChEpL,EAAMY,IAAIqO,YAAYjP,OAI9B4E,EAAGvE,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQiH,SACnCG,EAAGpE,cAAc,MAAMC,QAAQC,QAAUG,EAAKF,gBAAgB,0BAG9Db,EAA2Be,EAAMb,QAK7Ca,EAAK5D,YAAa,KAsMe8D,KAAKF,GAE9BA,EAAK7D,OAAOmD,QAAQ,SAAUH,GAC1Ba,EAAK2I,aAAaxJ,EAAOyJ,EAAUxI,WAOvDpD,EAAS0F,iBAAmB,SAAUvD,GAClC,MAAMa,EAAO9D,KACb,IAAI+D,EAAS,KACb,IAAKd,EAAMqD,OAAQ,CACf,IAAIO,EAAM5D,EAAMqB,QAAQuC,IACpB/C,EAAKuG,QACLvG,EAAKuG,OAAOjH,QAAQ,SAAUyE,GAC1B,MAAMjB,EAAM9C,EAAKgE,SAASD,EAAGnE,QAAQqE,SACjCnB,GAAOA,EAAInC,OAASxB,EAAMwB,MAAQmC,EAAItC,QAAQuC,MAAQA,IACtD9C,EAAS8D,KAKzB,OAAO9D,GAGXjD,EAASqC,cAAgB,SAAUF,GAC/B,MACMc,EAAS,GACToO,EAFOnS,KAESwG,iBAAiBvD,GACvC,GAAIkP,EACA,IAAK,IAAI5N,EAAI,EAAGA,EAAItB,EAAM+E,MAAMxD,OAAQD,IAAK,CACzC,MAAM6N,EAAUD,EAAS1O,cAAc,uBAAyBR,EAAM+E,MAAMzD,GAAK,MACjF,GAAK6N,EAAL,CAGArO,EAAOA,EAAOS,QAAU4N,EACxBA,EAAQxK,iBAAiB,MAAMxE,QAAQ,SAAUyE,GAC7C9D,EAAOA,EAAOS,QAAUqD,KAIpC,OAAO9D,GAGXjD,EAAS2K,cAAgB,SAAUxI,EAAOmI,GACtC,MAAMtH,EAAO9D,KACb,IAAI+D,EAAS,KAETsH,EAAOvH,EAAK4E,IAAIjF,cAAc,IAAMK,EAAKvD,MAAQ,SAErD,MAAM8R,EAAa,SAAUpK,EAAWqK,GACpC,IAAIvO,GAAS,EAMb,GAAIuO,EAAS,CACTvO,GAAS,EACTsH,EAAK3H,QAAQuE,UAAYA,EACzBoD,EAAK/H,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQ4Q,QACxCnQ,KAAKgE,OAAOpB,EAAKvD,MAAQ,QAAS+R,EAAS,SAAU1B,EAAKC,GACtDxF,EAAKmB,UAAYqE,EACbD,GACAlR,GAAGqO,MAAM6C,GAEbvF,EAAK5H,cAAc,IAAMK,EAAKvD,MAAQ,eAAewJ,iBAAiBrK,GAAGc,OAAOiF,MAAM+F,MAAO,WACzF1H,EAAK4H,oBAKjB,OAAO3H,GAGXD,EAAK4E,IAAId,iBAAiB,IAAM9D,EAAKvD,MAAQ,eAAiBuD,EAAKvD,MAAQ,oBAAoB6C,QAAQ,SAAU0G,GAC7GA,EAAIxG,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQiH,WAG3C,MAAM6K,EAAqB,GAC3B,IAAK,IAAIhO,EAAI,EAAGiO,EAAK1O,EAAKuG,OAAO7F,OAAQD,EAAIiO,EAAIjO,IAAK,CAClD,MAAM+F,EAAOxG,EAAKuG,OAAO9F,GACzB,GAAI+F,EAAK5G,QAAQqE,UAAY9E,EAAM2B,GAAI,CACnC,MAAM6N,EAAKnI,EAAK1C,iBAAiB,IAAM9D,EAAKvD,MAAQ,aACpD,IAAK,IAAIwL,EAAI,EAAG2G,EAAKD,EAAGjO,OAAQuH,EAAI2G,EAAI3G,IAAK,CAEzC,IAAI4G,EADMF,EAAG1G,GACH7C,cAAcxF,QAAQuE,UAChC,GAAI0K,IAAMvH,EAAM,CACZ,MAAMC,EAAOpI,EAAMiE,KAAKoE,QAAQF,GAC5BC,EAAKuH,UACLvH,EAAKuH,SAASxP,QAAQ,SAAUyP,GAC5BA,EAAGC,kBAAoBP,EAAmBM,EAAGE,QACzCR,EAAmBM,EAAGE,SACtBjP,EAAKF,gBAAgBlE,GAAGoF,KAAKkO,kBAAkBH,EAAGE,UAClDjP,EAAKF,gBAAgB,kBAGjBE,EAAK4E,IAAIjF,cAAc,wBAA0BkP,EAAI,eAAiB7O,EAAKvD,MAAQ,aAC3F+C,UAAU+F,OAAO3J,GAAGc,OAAOC,QAAQiH,QAAS2K,EAAWM,EAAGtH,IAClEtH,EAASsH,EACT,OAGR,OAIR,OAAOtH,GAGXjD,EAAS+H,OAAS,WACd,MAAM/E,EAAO9D,KACb8D,EAAK+I,aAAazJ,QAAQ,SAAUH,GAChCA,EAAM2J,yBAAyBrG,KAAK,WAChCtD,EAAM2I,iBAAmB3I,EAAMiE,KAAK+L,oBAAoBnP,EAAKD,IAAIiO,KAEjE,MAAMK,EAAWrO,EAAK0C,iBAAiBvD,GACnCkP,GACAA,EACKvK,iBAAiB,uBACjBxE,QAAQ,SAAUyE,GACf,MAAMuD,EAAOvD,EAAGnE,QAAQuE,UAClB+B,EAAOnC,EAAGpE,cAAc,QAAU/D,GAAGc,OAAOC,QAAQC,YAC1D,GAAIuC,EAAM2I,iBAAiBC,QAAQT,GAAQ,EAAG,CAC1CpB,EAAK1G,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQE,cACrCqJ,EAAK8B,aAAa,QAAShI,EAAKF,gBAAgB,2BAE/C,CACDoG,EAAK1G,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQE,cACxCqJ,EAAKkJ,gBAAgB,iBAQjDpS,EAAS4K,cAAgB,WACV1L,KACN0I,IAAId,iBAAiB,IADf5H,KAC0BO,MAAQ,eADlCP,KACwDO,MAAQ,oBAAoB6C,QAAQ,SAAU0G,GAC7GA,EAAIxG,UAAUC,OAAO7D,GAAGc,OAAOC,QAAQiH,WAFhC1H,KAIN0I,IAAIjF,cAAc,IAJZzD,KAIuBO,MAAQ,SAAS+C,UAAU6C,IAAIzG,GAAGc,OAAOC,QAAQ4Q,SAGvFvQ,EAASiG,SAAW,SAAU9D,GAC1B,MAAMa,EAAO9D,KACb,OAAO,IAAIoF,QAAQ,SAAUlB,EAASC,GAClC,IAAIgP,EAAmB,GAEnBrP,EAAKQ,QAAQrE,QAAU6D,EAAKQ,QAAQrE,OAAOuE,SAC3C2O,EAAmBrP,EAAKQ,QAAQrE,OAAOmT,OAAO,SAAUxF,GACpD,IAAIyF,EAAS3T,GAAGoF,KAAKwO,wBAAwB1F,EAAE/G,KAC/C,OAAOwM,GAAUA,EAAOE,QAAQ7T,GAAGoF,KAAK0O,MAAMC,WAAaxQ,EAAM4D,IAAI0M,QAAQ7T,GAAGoF,KAAK0O,MAAMC,aAIpE,GAA3BN,EAAiB3O,SACjB2O,EAAmBrP,EAAK7D,OAAOmT,OAAO,SAAUxF,GAC5C,OAAOA,EAAE/G,IAAI0M,QAAQ7T,GAAGoF,KAAK0O,MAAMC,WAAaxQ,EAAM4D,IAAI0M,QAAQ7T,GAAGoF,KAAK0O,MAAMC,aAGxF,GAA+B,GAA3BN,EAAiB3O,OAAa,CAC9BV,EAAK7D,OAAOgF,KAAKhC,GACjBA,EAAM2J,yBAAyBrG,KAAK,WAChCtD,EAAM2I,iBAAmB3I,EAAMiE,KAAK+L,oBAAoBnP,EAAKD,IAAIiO,KACjE7O,EAAMgE,MAAQhE,EAAMgE,OAAShE,EAAMiE,KAAKC,kBACxCrD,EAAK2I,aAAaxJ,EAAO,WACrBiB,aAGHA,OAIjBpD,EAASgH,SAAW,SAAUlD,GAC1B,MAAMd,EAAO9D,KACb,IAAK,IAAIuE,EAAI,EAAGoC,EAAM7C,EAAK7D,OAAOuE,OAAQD,EAAIoC,EAAKpC,IAAK,CACpD,MAAMtB,EAAQa,EAAK7D,OAAOsE,GAC1B,GAAItB,EAAM2B,KAAOA,EAAI,CAGjB,IAAI8O,EAAc5P,EAAKQ,QAAQrE,OAAOmT,OAAOxF,GAAKA,EAAEhJ,KAAOA,GAEvD8O,EAAYlP,OAAS,EACrBvB,EAAMmE,UAAYnE,EAAMqB,QAAQ8C,UAAYsM,EAAY,GAAGtM,UAE3DnE,EAAMmE,UAAYnE,EAAMqB,QAAQ8C,WAAY,EAGhD,OAAOnE,GAGf,OAAO,MAGXnC,EAASmK,cAAgB,SAAUhI,EAAOgF,GACtC,MAAMnE,EAAO9D,KACP2T,EAAejU,GAAGoF,KAAK8O,OAAO,GAAI3Q,EAAMqB,SAC9CqP,EAAa/O,GAAKd,EAAKe,SACvB8O,EAAa3M,WAAa,CAACiB,GAC3B0L,EAAa1M,MAAQhE,EAAMgE,MAC3B,MAAM4M,EAAW,IAAInU,GAAGuD,MAAM+B,OAAO2O,GACjCE,EAAShC,aAAa/N,EAAKD,IAAIiO,KAC/BhO,EAAKD,IAAIkD,SAAS4M,GAAcpN,KAAK,SAAUtD,GAC3CA,EAAMiE,KAAK6K,QAAQhM,GAAGrG,GAAGc,OAAOiF,MAAMuM,cAAe,SAAUvM,GAC3D,IAAIxC,EAAQjD,KAAKuR,OACQ,MAArB9L,EAAMsI,MAAMkE,MAAqC,MAArBxM,EAAMsI,MAAMkE,MACxChP,EAAMY,IAAIsK,MAAM1I,EAAMsI,MAAMoB,KAAM,CAAE1K,KAAM/E,GAAGc,OAAO4N,QAAQC,QAChEpL,EAAMY,IAAIqO,YAAYjP,OAK9BF,EAA2Be,EAAM+P,IAIzC/S,EAAS6E,OAAS,WACd,OAAO3F,KAAKmF,eAGhBrE,EAASgT,gBAAkB,SAAUxP,GAEjCA,EAAUA,GAAW,GACrB,OAFatE,KAED6D,IAAIkQ,iBAAiB,CAC7B9T,OAHSD,KAGI6D,IAAImI,WAAWgI,OAHnBhU,KAG+B6D,IAAI0B,UAAWjB,EAAQrB,OAC/DgR,kBAAkB,KAI1BnT,EAASoT,cAAgB,SAAU5P,GAC/B,MAAMR,EAAO9D,KACbsE,EAAUA,GAAW,GAErB5E,GAAGyU,YAAY,CACXrC,IAAKxN,EAAQwN,IACbpF,SAAU,WACN5I,EAAKD,IAAIqQ,cAAc5P,GAASiC,KAAK,WAC7BzC,EAAKsQ,aACLtQ,EAAKD,IAAIkD,SAASjD,EAAKsQ,aAE3B1U,GAAGoF,KAAKuP,mBAMxBvT,EAASiC,2BAA6B,SAAUuB,GAC/BtE,KACRoU,YAAc9P,EAAQrB,MAC3BvD,GAAGC,QAAQC,mBAAmBmB,UAAUgC,2BAA2BiB,KAFtDhE,KAEiEsE,IAx+BtF","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.ProjectionSelector) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/ProjectionSelector');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.control.LayerCatalog = function () {\r\n        var self = this;\r\n\r\n        self.layers = [];\r\n        self.searchInit = false;\r\n\r\n        TC.control.ProjectionSelector.apply(self, arguments);\r\n\r\n        self._selectors = {\r\n            LAYER_ROOT: 'div.' + self.CLASS + '-tree > ul.' + self.CLASS + '-branch > li.' + self.CLASS + '-node'\r\n        };\r\n\r\n        if (!TC.Consts.classes.SELECTABLE) {\r\n            TC.Consts.classes.SELECTABLE = 'tc-selectable';\r\n        }\r\n        if (!TC.Consts.classes.INCOMPATIBLE) {\r\n            TC.Consts.classes.INCOMPATIBLE = 'tc-incompatible';\r\n        }\r\n        if (!TC.Consts.classes.ACTIVE) {\r\n            TC.Consts.classes.ACTIVE = 'tc-active';\r\n        }\r\n    };\r\n\r\n    TC.inherit(TC.control.LayerCatalog, TC.control.ProjectionSelector);\r\n\r\n    var ctlProto = TC.control.LayerCatalog.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-lcat';\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/LayerCatalog.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-branch'] = TC.apiLocation + \"TC/templates/LayerCatalogBranch.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = TC.apiLocation + \"TC/templates/LayerCatalogNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-info'] = TC.apiLocation + \"TC/templates/LayerCatalogInfo.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-results'] = TC.apiLocation + \"TC/templates/LayerCatalogResults.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/LayerCatalogDialog.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"availableLayers\" }).x(ctx.get([\"enableSearch\"], false), ctx, { \"block\": body_1 }, {}).w(\"</h2><div class=\\\"tc-ctl-lcat-search tc-hidden tc-collapsed\\\"><div class=\\\"tc-group\\\"><input type=\\\"search\\\" class=\\\"tc-ctl-lcat-input tc-textbox\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"textToSearchInLayers\" }).w(\"\\\"></div><ul></ul></div><div class=\\\"tc-ctl-lcat-tree\\\">\").x(ctx.get([\"layerTrees\"], false), ctx, { \"else\": body_4, \"block\": body_8 }, {}).w(\"</div><div class=\\\"tc-ctl-lcat-info tc-hidden\\\">\").p(\"tc-ctl-lcat-info\", ctx, ctx.rebase(ctx.getPath(true, [])), {}).w(\"</div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.x(ctx.get([\"layerTrees\"], false), ctx, { \"block\": body_2 }, {}).x(ctx.get([\"layers\"], false), ctx, { \"block\": body_3 }, {}); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-lcat-btn-search\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"searchLayersByText\" }).w(\"\\\"></button>\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-lcat-btn-search\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"searchLayersByText\" }).w(\"\\\"></button>\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.x(ctx.get([\"layers\"], false), ctx, { \"else\": body_5, \"block\": body_6 }, {}); } body_4.__dustBody = !0; function body_5(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl tc-ctl-lcat-loading\\\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"loadingLayerTree\" }).w(\"...</span></div>\"); } body_5.__dustBody = !0; function body_6(chk, ctx) { return chk.w(\"<ul class=\\\"tc-ctl-lcat-branch\\\">\").s(ctx.get([\"layers\"], false), ctx, { \"block\": body_7 }, {}).w(\"</ul>\"); } body_6.__dustBody = !0; function body_7(chk, ctx) { return chk.w(\"<li data-layer-id=\\\"\").f(ctx.get([\"id\"], false), ctx, \"h\").w(\"\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"loadingLayers\" }).w(\"\\\" class=\\\"tc-ctl-lcat-loading-node\\\"> \").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</li>\"); } body_7.__dustBody = !0; function body_8(chk, ctx) { return chk.w(\"<ul class=\\\"tc-ctl-lcat-branch\\\">\").s(ctx.get([\"layerTrees\"], false), ctx, { \"block\": body_9 }, {}).w(\"</ul>\"); } body_8.__dustBody = !0; function body_9(chk, ctx) { return chk.p(\"tc-ctl-lcat-branch\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_9.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-branch'] = function () { dust.register(ctlProto.CLASS + '-branch', body_0); function body_0(chk, ctx) { return chk.w(\"<li \").x(ctx.get([\"children\"], false), ctx, { \"else\": body_1, \"block\": body_2 }, {}).w(\" data-layer-name=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" data-layer-uid=\\\"\").f(ctx.get([\"uid\"], false), ctx, \"h\").w(\"\\\"><button class=\\\"tc-ctl-lcat-collapse-btn\\\"></button><span>\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span><ul class=\\\"tc-ctl-lcat-branch tc-collapsed\\\">\").s(ctx.get([\"children\"], false), ctx, { \"block\": body_3 }, {}).w(\"</ul></li>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-ctl-lcat-leaf\\\"\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-collapsed\\\"\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.p(\"tc-ctl-lcat-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_3.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-node'] = function () { dust.register(ctlProto.CLASS + '-node', body_0); function body_0(chk, ctx) { return chk.x(ctx.get([\"isVisible\"], false), ctx, { \"block\": body_1 }, {}); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<li \").x(ctx.get([\"children\"], false), ctx, { \"else\": body_2, \"block\": body_3 }, {}).w(\" data-layer-name=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" data-layer-uid=\\\"\").f(ctx.get([\"uid\"], false), ctx, \"h\").w(\"\\\">\").x(ctx.get([\"children\"], false), ctx, { \"block\": body_4 }, {}).w(\"<span data-tooltip=\\\"\").x(ctx.get([\"name\"], false), ctx, { \"block\": body_5 }, {}).w(\"\\\">\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span>\").x(ctx.get([\"name\"], false), ctx, { \"block\": body_6 }, {}).w(\"<ul class=\\\"tc-ctl-lcat-branch tc-collapsed\\\">\").s(ctx.get([\"children\"], false), ctx, { \"block\": body_7 }, {}).w(\"</ul></li>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-ctl-lcat-leaf\\\"\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"class=\\\"tc-ctl-lcat-node tc-collapsed\\\"\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-lcat-collapse-btn\\\"></button>\"); } body_4.__dustBody = !0; function body_5(chk, ctx) { return chk.h(\"i18n\", ctx, {}, { \"$key\": \"clickToAddToMap\" }); } body_5.__dustBody = !0; function body_6(chk, ctx) { return chk.w(\"<button title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"infoFromThisLayer\" }).w(\"\\\" class=\\\"tc-ctl-lcat-btn-info\\\"></button>\"); } body_6.__dustBody = !0; function body_7(chk, ctx) { return chk.p(\"tc-ctl-lcat-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_7.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-info'] = function () { dust.register(ctlProto.CLASS + '-info', body_0); function body_0(chk, ctx) { return chk.w(\"<a class=\\\"tc-ctl-lcat-info-close\\\"></a><h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"layerInfo\" }).w(\"</h2><h3 class=\\\"tc-ctl-lcat-title\\\">\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</h3>\").x(ctx.get([\"abstract\"], false), ctx, { \"block\": body_1 }, {}).x(ctx.get([\"metadata\"], false), ctx, { \"block\": body_2 }, {}); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-lcat-abstract\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"abstract\" }).w(\"</h4><div><pre>\").f(ctx.get([\"abstract\"], false), ctx, \"h\", [\"s\"]).w(\"</pre></div></div>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-lcat-metadata\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"metadata\" }).w(\"</h4><ul>\").s(ctx.get([\"metadata\"], false), ctx, { \"block\": body_3 }, {}).w(\"</ul></div>\"); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<li><a href=\\\"\").f(ctx.get([\"url\"], false), ctx, \"h\", [\"s\"]).w(\"\\\" type=\\\"\").f(ctx.get([\"format\"], false), ctx, \"h\").w(\"\\\" title=\\\"\").f(ctx.get([\"formatDescription\"], false), ctx, \"h\").w(\"\\\" target=\\\"_blank\\\">\").f(ctx.get([\"formatDescription\"], false), ctx, \"h\", [\"s\"]).w(\"</a></li>\"); } body_3.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-results'] = function () { dust.register(ctlProto.CLASS + '-results', body_0); function body_0(chk, ctx) { return chk.s(ctx.get([\"servicesFound\"], false), ctx, { \"else\": body_1, \"block\": body_2 }, {}); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-lcat-no-results\\\"><h5>\").h(\"i18n\", ctx, {}, { \"$key\": \"noMatches\" }).w(\"</h5></li>\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk.h(\"gt\", ctx, { \"block\": body_3 }, { \"key\": ctx.get([\"servicesLooked\"], false), \"value\": 1 }).s(ctx.get([\"founds\"], false), ctx, { \"block\": body_5 }, {}).h(\"gt\", ctx, { \"block\": body_9 }, { \"key\": ctx.get([\"servicesLooked\"], false), \"value\": 1 }); } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-lcat-search-group \").x(ctx.getPath(false, [\"service\", \"isCollapsed\"]), ctx, { \"block\": body_4 }, {}).w(\"\\\" data-service-index=\\\"\").f(ctx.getPath(false, [\"service\", \"index\"]), ctx, \"h\").w(\"\\\"><h5>\").f(ctx.getPath(false, [\"service\", \"title\"]), ctx, \"h\").w(\"</h5><ul>\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.w(\"tc-collapsed\"); } body_4.__dustBody = !0; function body_5(chk, ctx) { return chk.w(\"<li data-layer-name=\\\"\").f(ctx.get([\"Name\"], false), ctx, \"h\").w(\"\\\" \").x(ctx.get([\"alreadyAdded\"], false), ctx, { \"block\": body_6 }, {}).w(\"><h5 class=\\\"tc-selectable\\\"\").x(ctx.get([\"alreadyAdded\"], false), ctx, { \"else\": body_7, \"block\": body_8 }, {}).w(\">\").f(ctx.get([\"Title\"], false), ctx, \"h\").w(\"</h5><button class=\\\"tc-ctl-lcat-search-btn-info\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"infoFromThisLayer\" }).w(\"\\\"></button></li>\"); } body_5.__dustBody = !0; function body_6(chk, ctx) { return chk.w(\" class=\\\"tc-checked\\\"\"); } body_6.__dustBody = !0; function body_7(chk, ctx) { return chk.w(\" data-tooltip=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"clickToAddToMap\" }).w(\"\\\"\"); } body_7.__dustBody = !0; function body_8(chk, ctx) { return chk.w(\" data-tooltip=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"layerAlreadyAdded\" }).w(\"\\\"\"); } body_8.__dustBody = !0; function body_9(chk, ctx) { return chk.w(\"</ul></li>\"); } body_9.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-lcat-crs-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"changeCRS\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><p>\").h(\"i18n\", ctx, {}, { \"$key\": \"wmsLayerNotCompatible.instructions|h\" }).w(\"</p><ul class=\\\"tc-ctl-lcat-crs-list tc-crs-list\\\"></ul></div><div class=\\\"tc-modal-footer\\\"><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"close\" }).w(\"</button></div></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const showProjectionChangeDialog = function (ctl, layer) {\r\n        ctl.showProjectionChangeDialog({\r\n            layer: layer,\r\n            closeCallback: function () {\r\n                ctl.getLayerNodes(layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.LOADING);\r\n                    node.querySelector('span').dataset.tooltip = ctl.getLocaleString('clickToAddToMap');\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    var SEARCH_MIN_LENGTH = 3;\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.control.ProjectionSelector.prototype.register.call(self, map);\r\n\r\n        const load = function (resolve, reject) {\r\n            if (Array.isArray(self.options.layers)) {\r\n                for (var i = 0; i < self.options.layers.length; i++) {\r\n                    var layer = self.options.layers[i];\r\n                    if (!layer.type || layer.type === TC.Consts.layerType.WMS) {\r\n                        if (!layer.id) {\r\n                            layer.id = TC.getUID();\r\n                        }                        \r\n                        if (TC.Util.isPlainObject(layer)) {\r\n                            layer = new TC.layer.Raster(layer);\r\n                        }                        \r\n                        self.layers.push(layer);\r\n                    }\r\n                }\r\n                self.render(function () {\r\n                    resolve();\r\n                });\r\n            }\r\n            else {\r\n                resolve();\r\n            }\r\n        };\r\n\r\n        self._readyPromise = new Promise(function (resolve, reject) {\r\n            const waitLoad = function (e) {\r\n                if (e.layer === map.baseLayer) {\r\n                    load(resolve, reject);\r\n                    map.off(TC.Consts.event.LAYERUPDATE, waitLoad);\r\n                }\r\n            };\r\n\r\n            map.loaded(function () {\r\n                if (!map.baseLayer.state || map.baseLayer.state === TC.Layer.state.IDLE) {\r\n                    load(resolve, reject);\r\n                }\r\n                else {\r\n                    map.on(TC.Consts.event.LAYERUPDATE, waitLoad);\r\n                }\r\n            });\r\n        });\r\n\r\n        const findResultNodes = function (layer) {\r\n            const result = [];\r\n            if (!layer.isBase) {\r\n                var url = layer.options.url;\r\n                if (self.list) {\r\n                    self.list.querySelectorAll('li').forEach(function (li) {\r\n                        const lyr = self.getLayer(li.dataset.layerId);\r\n                        if (lyr && lyr.type === layer.type && lyr.options.url === url) {\r\n                            for (var i = 0; i < layer.names.length; i++) {\r\n                                if (li.dataset.layerName === layer.names[i]) {\r\n                                    result.push(li);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n\r\n        /**\r\n         * Marca todas las capas del TOC como añadidas excepto la que se está borrando que se recibe como parámetro.\r\n         */\r\n        const _markWorkLayersAsAdded = function (layerRemoved) {\r\n            var wlCtrl = self.map.getControlsByClass(TC.control.WorkLayerManager)[0];\r\n            if (wlCtrl) {\r\n                var layers = wlCtrl.layers;\r\n\r\n                for (var i = 0; i < layers.length; i++) {\r\n                    var layer = layers[i];\r\n\r\n                    if (layer !== layerRemoved) {\r\n                        self.getLayerNodes(layer).forEach(function (node) {\r\n                            node.classList.add(TC.Consts.classes.CHECKED);\r\n                            node.querySelector('span').dataset.tooltip = self.getLocaleString('layerAlreadyAdded');\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var clickToAddText = self.getLocaleString('clickToAddToMap');\r\n\r\n        map\r\n            .on(TC.Consts.event.BEFORELAYERADD + ' ' + TC.Consts.event.BEFOREUPDATEPARAMS, function (e) {\r\n                self.getLayerNodes(e.layer).forEach(function (node) {\r\n                    node.classList.add(TC.Consts.classes.LOADING);\r\n                    delete node.querySelector('span').dataset.tooltip;\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERADD + ' ' + TC.Consts.event.UPDATEPARAMS, function (e) {\r\n                const layer = e.layer;\r\n                if (!layer.isBase && layer.type === TC.Consts.layerType.WMS) {\r\n                    self.loaded().then(function () { // Esperamos a que cargue primero las capas de la configuración\r\n\r\n                        if (self.getLayerRootNode(layer)) {\r\n                            updateControl.call(self, layer);\r\n                        }\r\n                        else {\r\n                            // la capa no está renderizada, pero podría estar en proceso, comprobamos que no está en la lista de capas del control\r\n                            var layerAlreadyAdded = false;\r\n                            for (var i = 0, len = self.layers.length; i < len; i++) {\r\n                                var lyr = self.layers[i];\r\n                                if (lyr.type === layer.type && lyr.options.url === layer.options.url) {\r\n                                    layerAlreadyAdded = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            // 12/03/2019 GLS la capa forma parte de los servicios configurados pero el nodo aún no se ha cargado, la guardamos\r\n                            if (layerAlreadyAdded) {\r\n                                if (!self.layersToSetChecked) {\r\n                                    self.layersToSetChecked = [];\r\n                                }\r\n\r\n                                self.layersToSetChecked.push(layer);\r\n                            } else {\r\n                                self.addLayer(new TC.layer.Raster({\r\n                                    url: layer.options.url,\r\n                                    type: layer.type,\r\n                                    layerNames: [],\r\n                                    title: layer.title || layer.wrap.getServiceTitle(),\r\n                                    hideTitle: true,\r\n                                    hideTree: false\r\n                                })).then(function () {\r\n                                    updateControl.call(self, layer);\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n            .on(TC.Consts.event.LAYERERROR, function (e) {\r\n                const reason = e.reason;\r\n                if (reason) {\r\n                    TC.alert(self.getLocaleString(reason, { url: e.layer.url }));\r\n                }\r\n                self.getLayerNodes(e.layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.LOADING);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                const layer = e.layer;\r\n                self.getLayerNodes(layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.CHECKED);\r\n                    node.querySelector('span').dataset.tooltip = clickToAddText;\r\n                });\r\n                findResultNodes(layer).forEach(function (node) {\r\n                    node.classList.remove(TC.Consts.classes.CHECKED);\r\n                    node.querySelector('h5').dataset.tooltip = clickToAddText;\r\n                });\r\n\r\n                //Marcamos como añadidas aquellas capas que estén en el control de capas cargadas. Esto previene que si borramos una capa padre, todas\r\n                //sus hijas aparezcan como no añadidas, a pesar que que alguna de ellas haya sido añadida previamente de manera individual\r\n                _markWorkLayersAsAdded(layer);\r\n\r\n                //refresh del searchList            \r\n                _refreshResultList.call(self);\r\n            })\r\n            .on(TC.Consts.event.EXTERNALSERVICEADDED, function (e) {\r\n                if (e && e.layer) {\r\n                    self.addLayer(e.layer);\r\n                    self.div.classList.remove(TC.Consts.classes.COLLAPSED);\r\n                }\r\n            })\r\n            .on(TC.Consts.event.PROJECTIONCHANGE, function (e) {\r\n                self.update();\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    const onCollapseButtonClick = function (e) {\r\n        e.target.blur();\r\n        e.stopPropagation();\r\n        const li = e.target.parentElement;\r\n        if (li.tagName === 'LI' && !li.classList.contains(self.CLASS + '-leaf')) {\r\n            li.classList.toggle(TC.Consts.classes.COLLAPSED);\r\n            const ul = li.querySelector('ul');\r\n            ul.classList.toggle(TC.Consts.classes.COLLAPSED);\r\n        }\r\n    };\r\n\r\n    const onSpanClick = function (e, ctl) {\r\n        const li = e.target.parentNode;\r\n        if (!li.classList.contains(TC.Consts.classes.LOADING) && !li.classList.contains(TC.Consts.classes.CHECKED)) {\r\n            e.preventDefault;\r\n\r\n            var layerName = li.dataset.layerName;\r\n            layerName = (layerName !== undefined) ? layerName.toString() : '';\r\n            var layer;\r\n            for (var i = 0, len = ctl._roots.length; i < len; i++) {\r\n                const root = ctl._roots[i];\r\n                if (root.contains(li)) {\r\n                    layer = ctl.getLayer(root.dataset.layerId);\r\n                    break;\r\n                }\r\n            }\r\n            if (!layer) {\r\n                layer = ctl.getLayer(li.dataset.layerId);\r\n            }\r\n            if (layer && layerName) {\r\n                var redrawTime = 1;\r\n\r\n                if (/iPad/i.test(navigator.userAgent))\r\n                    redrawTime = 10;\r\n                else if (TC.Util.detectFirefox())\r\n                    redrawTime = 250;\r\n\r\n                if (!layer.title) {\r\n                    layer.title = layer.getTree().title;\r\n                }\r\n\r\n                li.classList.add(TC.Consts.classes.LOADING);\r\n                li.querySelector('span').dataset.tooltip = '';\r\n\r\n                const reDraw = function (element) {\r\n                    return new Promise(function (resolve, reject) {\r\n                        setTimeout(function () {\r\n                            element.offsetHeight = element.offsetHeight;\r\n                            element.offsetWidth = element.offsetWidth;\r\n\r\n                            resolve();\r\n                        }, redrawTime);\r\n                    });\r\n                };\r\n\r\n                reDraw(li).then(function () {\r\n                    ctl.addLayerToMap(layer, layerName);\r\n                });\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n\r\n    const createSearchAutocomplete = function () {\r\n        const self = this;\r\n\r\n        self.textInput = self.div.querySelector(\".\" + self.CLASS + \"-input\");\r\n        self.list = self.div.querySelector(\".\" + self.CLASS + \"-search ul\");\r\n        // Clear results list when x button is pressed in the search input\r\n        self.textInput.addEventListener('mouseup', function (e) {\r\n            var oldValue = self.textInput.value;\r\n\r\n            if (oldValue === '') {\r\n                return;\r\n            }\r\n\r\n            // When this event is fired after clicking on the clear button\r\n            // the value is not cleared yet. We have to wait for it.\r\n            setTimeout(function () {\r\n                var newValue = self.textInput.value;\r\n\r\n                if (newValue === '') {\r\n                    self.list.innerHTML = '';\r\n                }\r\n            }, 1);\r\n        });\r\n\r\n        var layerCheckedList = [];\r\n        //Definir el autocomplete del buscador de capas por texto\r\n        TC._search = TC._search || {};\r\n        TC._search.retryTimeout = null;\r\n\r\n                    TC.loadJS(\r\n                        !TC.UI || !TC.UI.autocomplete,\r\n                        [TC.apiLocation + 'TC/ui/autocomplete.js'],\r\n                        function () {\r\n                            TC.UI.autocomplete.call(self.textInput, {\r\n                                link: '#',\r\n                                target: self.list,\r\n                                minLength: 0,\r\n                                source: function (text, callback) {\r\n                                    //lista de capas marcadas\r\n                                    layerCheckedList = [];\r\n                                    self._roots.forEach(function (root) {\r\n                                        root.querySelectorAll(\"li.\" + TC.Consts.classes.CHECKED).forEach(function (item) {\r\n                                            layerCheckedList.push(item.dataset.layerName);\r\n                                        });\r\n                                    });\r\n\r\n                        //con texto vacío, limpiar  y ocultar la lista de resultados\r\n                        text = text.trim();\r\n                        if (text.length < SEARCH_MIN_LENGTH) {\r\n                            self.list.innerHTML = '';\r\n                        }\r\n                        else if (text.length >= SEARCH_MIN_LENGTH) {\r\n                            if (TC._search.retryTimeout)\r\n                                clearTimeout(TC._search.retryTimeout);\r\n                            TC._search.retryTimeout = setTimeout(function () {\r\n                                var results = [];\r\n                                for (var index = 0; index < self.sourceLayers.length; index++) {\r\n                                    var _founds = self.sourceLayers[index].searchSubLayers(text);\r\n                                    if (_founds.length) {\r\n                                        results.push({\r\n                                            service: {\r\n                                                index: index,\r\n                                                title: self.sourceLayers[index].title || self.sourceLayers[index].id\r\n                                            },\r\n                                            founds: _founds\r\n                                        });\r\n                                    }\r\n                                }\r\n                                callback({ servicesFound: results, servicesLooked: self.sourceLayers.length });\r\n                            }, TC._search.interval);\r\n                        }\r\n                    },\r\n                    callback: function (e) {\r\n                        self.textInput.value = e.target.text || e.target.innerText;\r\n                        TC._search.lastPattern = self.textInput.value;\r\n                        self.goToResult(unescape(e.target.hash).substring(1));\r\n                        TC.UI.autocomplete.call(self.textInput, 'clear');\r\n                    },\r\n                    buildHTML: function (data) {\r\n                        //si hay resultados, mostramos la lista\r\n                        if (data.results && data.results.servicesFound.length > 0) {\r\n                            var workLayers = self.map.getLayerTree().workLayers;\r\n                            for (var k = 0; k < data.results.servicesFound.length; k++) {\r\n                                var founds = data.results.servicesFound[k].founds;\r\n                                for (var j = 0; j < founds.length; j++) {\r\n                                    delete founds[j].alreadyAdded;\r\n                                    for (var i = 0; i < workLayers.length; i++) {\r\n                                        //if (workLayers[i].title == data.results[j].Title ) {\r\n                                        if (layerCheckedList.indexOf(founds[j].Name) >= 0) {\r\n                                            founds[j].alreadyAdded = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                    //Si la capa no tiene Name, no se puede añadir al TOC\r\n                                    if (!founds[j].Name) {\r\n                                        founds.splice(j, 1);\r\n                                        j--;\r\n                                    }\r\n                                }\r\n                                if (!data.results.servicesFound[k].founds.length) {\r\n                                    data.results.servicesFound.splice(k, 1);\r\n                                    continue;\r\n                                }\r\n                                //si estaba collapsado mantenemos el estado\r\n                                if (self.div.querySelectorAll(\".tc-ctl-lcat-search-group\")[k]) {\r\n                                    data.results.servicesFound[k].service.isCollapsed = self.div.querySelectorAll(\".tc-ctl-lcat-search-group\")[k].classList.contains(TC.Consts.classes.COLLAPSED);\r\n                                }\r\n                            }\r\n                        }\r\n                        var ret = '';\r\n                        dust.render(self.CLASS + '-results', data.results, function (err, out) {\r\n                            ret = out;\r\n                        });\r\n                        return ret;\r\n                    }\r\n                });\r\n            });\r\n\r\n\r\n        if (!self.searchInit) {\r\n            //botón de la lupa para alternar entre búsqueda y árbol\r\n            self.div.addEventListener('click', TC.EventTarget.listenerBySelector('h2 button', function (e) {\r\n                const wasCollapsed = self.div.classList.contains(TC.Consts.classes.COLLAPSED);\r\n                self.div.classList.remove(TC.Consts.classes.COLLAPSED);\r\n\r\n                const searchPane = self.div.querySelector('.' + self.CLASS + '-search');\r\n                const treePane = self.div.querySelector('.' + self.CLASS + '-tree');\r\n                const infoPane = self.div.querySelector('.' + self.CLASS + '-info');\r\n\r\n                const searchPaneMustShow = !!(searchPane.classList.contains(TC.Consts.classes.HIDDEN) || wasCollapsed);\r\n                searchPane.classList.toggle(TC.Consts.classes.HIDDEN, !searchPaneMustShow);\r\n                treePane.classList.toggle(TC.Consts.classes.HIDDEN, searchPaneMustShow);\r\n                e.target.classList.toggle(self.CLASS + '-btn-tree', searchPaneMustShow);\r\n                e.target.classList.toggle(self.CLASS + '-btn-search', !searchPaneMustShow);\r\n                if (searchPaneMustShow) {\r\n                    self.textInput.focus();\r\n                    e.target.setAttribute('title', self.getLocaleString('viewAvailableLayersTree'));\r\n\r\n                    //Si no hay resultados resaltados en el buscador, ocultamos el panel de info\r\n                    const selectedCount = self.div.querySelectorAll('.tc-ctl-lcat-search li button.tc-checked').length;\r\n                    if (selectedCount === 0) {\r\n                        infoPane.classList.add(TC.Consts.classes.HIDDEN);\r\n                    }\r\n                }\r\n                else {\r\n                    e.target.setAttribute('title', self.getLocaleString('searchLayersByText'));\r\n\r\n                    //Si hay resaltados en el árbol, mostramos el panel de info\r\n                    const selectedCount = self.div.querySelectorAll('.tc-ctl-lcat-tree li button.tc-checked').length;\r\n                    if (selectedCount > 0) {\r\n                        infoPane.classList.remove(TC.Consts.classes.HIDDEN);\r\n                    }\r\n                }\r\n            }));\r\n\r\n\r\n            //evento de expandir nodo de info\r\n            //self._$div.off(\"click\", \".tc-ctl-lcat-search button\");                        \r\n            self.div.addEventListener(\"click\", TC.EventTarget.listenerBySelector(\".\" + self.CLASS + \"-search button.\" + self.CLASS + \"-search-btn-info\", function (evt) {\r\n                evt.stopPropagation();\r\n                const target = evt.target;\r\n                if (!target.classList.contains(TC.Consts.classes.CHECKED)) {\r\n                    const li = target.parentElement;\r\n                    var parent = li;\r\n                    do {\r\n                        parent = parent.parentElement;\r\n                    }\r\n                    while (parent && parent.tagName !== 'LI');\r\n                    self.showLayerInfo(self.layers.length > 1 ? self.layers[parent.dataset.serviceIndex] : self.layers[0], li.dataset.layerName);\r\n                    target.classList.add(TC.Consts.classes.CHECKED);\r\n\r\n                } else {\r\n                    target.classList.remove(TC.Consts.classes.CHECKED);\r\n                    self.hideLayerInfo();\r\n                }\r\n            }));\r\n\r\n                        //click en un resultado - añadir capa\r\n            const searchListElementSelector = '.' + self.CLASS + '-search li';\r\n            self.div.addEventListener('click', TC.EventTarget.listenerBySelector(searchListElementSelector, function (evt) {\r\n                evt.stopPropagation();\r\n                var li = evt.target;\r\n                while (li && !li.matches(searchListElementSelector)) {\r\n                    li = li.parentElement;\r\n                }\r\n                if (li.classList.contains(self.CLASS + '-no-results')) {\r\n                    return; //si clicko en el li de \"no hay resultados\" rompo el ciclo de ejecución\r\n                }\r\n                if (li.classList.contains(self.CLASS + '-search-group')) {\r\n                    li.classList.toggle(TC.Consts.classes.COLLAPSED);\r\n                    return;\r\n                }\r\n                var layerName = li.dataset.layerName;\r\n                if (!layerName) {\r\n                    return;\r\n                }\r\n                layerName = layerName.toString();\r\n\r\n                if (layerName.trim().length === 0) {\r\n                    return;\r\n                }\r\n\r\n                //si la capa ya ha sido anteriormente, no la añadimos y mostramos un mensaje\r\n                if (li.classList.contains(TC.Consts.classes.CHECKED)) {\r\n                    return;\r\n                } else {\r\n                    var liParent = li;\r\n                    do {\r\n                        liParent = liParent.parentElement;\r\n                    }\r\n                    while (liParent && !liParent.matches('li.' + self.CLASS + '-search-group'));\r\n\r\n                    const layerIdx = !liParent ? 0 : liParent.dataset.serviceIndex;\r\n                    const url = self.layers[layerIdx].options.url;\r\n                    const title = self.layers[layerIdx].title;\r\n\r\n                    const layer = new TC.layer.Raster({\r\n                        id: self.getUID(),\r\n                        url: url,\r\n                        title: title,\r\n                        hideTitle: self.layers[layerIdx].hideTitle || self.layers[layerIdx].options.hideTitle,\r\n                        hideTree: false,\r\n                        layerNames: [layerName]\r\n                    });\r\n                    if (layer.isCompatible(self.map.crs)) {\r\n                        self.map.addLayer(layer, function (layer) {\r\n                            li.dataset.layerId = layer.id;\r\n                            layer.wrap.$events.on(TC.Consts.event.TILELOADERROR, function (event) {\r\n                                var layer = this.parent;\r\n                                if (event.error.code === 401 || event.error.code === 403)\r\n                                    layer.map.toast(event.error.text, { type: TC.Consts.msgType.ERROR });\r\n                                layer.map.removeLayer(layer);\r\n                            });\r\n                        });\r\n                        //marcamos el resultado como añadido\r\n                        li.classList.add(TC.Consts.classes.CHECKED);\r\n                        li.querySelector('h5').dataset.tooltip = self.getLocaleString('layerAlreadyAdded');\r\n                    }\r\n                    else {\r\n                        showProjectionChangeDialog(self, layer);\r\n                    }\r\n                }\r\n            }));\r\n\r\n            self.searchInit = true;\r\n        }\r\n    };\r\n\r\n    const getLayerTree = function (layer) {\r\n        var result = layer.getTree();\r\n        var makeNodeVisible = function makeNodeVisible(node) {\r\n            var result = false;\r\n            var childrenVisible = false;\r\n            for (var i = 0; i < node.children.length; i++) {\r\n                if (makeNodeVisible(node.children[i])) {\r\n                    childrenVisible = true;\r\n                }\r\n            }\r\n            if (node.hasOwnProperty('isVisible')) {\r\n                node.isVisible = (!layer.names || !layer.names.length) || childrenVisible || node.isVisible;\r\n            }\r\n            return node.isVisible;\r\n        };\r\n        makeNodeVisible(result);\r\n        return result;\r\n    };\r\n\r\n    const _refreshResultList = function () {\r\n        const self = this;\r\n\r\n        if (\"createEvent\" in document) {\r\n            var evt = document.createEvent(\"HTMLEvents\");\r\n            evt.initEvent(\"keyup\", false, true);\r\n            if (self.textInput) {\r\n                self.textInput.dispatchEvent(evt);\r\n            }\r\n        }\r\n        else {\r\n            if (self.textInput) {\r\n                self.textInput.fireEvent(\"keyup\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateControl = function (layer) {\r\n        const self = this;\r\n\r\n        self.getLayerNodes(layer).forEach(function (node) {\r\n            node.classList.remove(TC.Consts.classes.LOADING);\r\n            node.classList.add(TC.Consts.classes.CHECKED);\r\n            node.querySelector('span').dataset.tooltip = self.getLocaleString('layerAlreadyAdded');\r\n        });\r\n        _refreshResultList.call(self);\r\n    };\r\n\r\n    const setCheckedLayersOnNode = function () {\r\n        const self = this;\r\n\r\n        if (self.layersToSetChecked && self.layersToSetChecked.length > 0) {\r\n            self.layersToSetChecked.forEach(function (layer, index, array) {\r\n                if (self.getLayerRootNode(layer)) {\r\n                    updateControl.call(self, layer);\r\n\r\n                    array.splice(index, 1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const addLogicToNode = function (node, layer) {\r\n        const self = this;\r\n\r\n        node.querySelectorAll('li > button.' + self.CLASS + '-collapse-btn').forEach(function (btn) {\r\n            btn.addEventListener('click', onCollapseButtonClick);\r\n        });\r\n\r\n        node.querySelectorAll('span').forEach(function (span) {\r\n            span.addEventListener('click', function (e) {\r\n                onSpanClick(e, self);\r\n            });\r\n        });\r\n\r\n        self._roots = self.div.querySelectorAll(self._selectors.LAYER_ROOT);                \r\n        \r\n        node.dataset.layerId = layer.id;\r\n\r\n        var formatDescriptions = {};\r\n        node.querySelectorAll('.' + self.CLASS + '-btn-info').forEach(function (a) {\r\n            const span = a.parentElement.querySelector('span');\r\n            const name = a.parentElement.dataset.layerName;\r\n            if (name) {\r\n                span.classList.add(TC.Consts.classes.SELECTABLE);\r\n                var info = layer.wrap.getInfo(name);\r\n                if (!info.hasOwnProperty('abstract') && !info.hasOwnProperty('legend') && !info.hasOwnProperty('metadata')) {\r\n                    a.parentElement.removeChild(a);\r\n                }\r\n                else {                    \r\n                    a.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                        e.stopPropagation();\r\n                        const elm = this;\r\n                        if (elm.classList.toggle(TC.Consts.classes.CHECKED)) {\r\n                            self.showLayerInfo(layer, name);\r\n                        } else {\r\n                            self.hideLayerInfo();\r\n                        }\r\n                    });\r\n                }\r\n                if (layer.compatibleLayers && layer.compatibleLayers.indexOf(name) < 0) {\r\n                    span.classList.add(TC.Consts.classes.INCOMPATIBLE);\r\n                    span.setAttribute('title', self.getLocaleString('reprojectionNeeded'));\r\n                    //console.log(\"capa \" + name + \" incompatible\");\r\n                }\r\n                if (self.map) {\r\n                    for (var j = 0, len = self.map.workLayers.length; j < len; j++) {\r\n                        var wl = self.map.workLayers[j];\r\n                        if (wl.type === TC.Consts.layerType.WMS && wl.url === layer.url && wl.names.length === 1 && wl.names[0] === name) {\r\n                            span.parentElement.classList.add(TC.Consts.classes.CHECKED);\r\n                            span.dataset.tooltip = self.getLocaleString('layerAlreadyAdded');\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                span.dataset.tooltip = '';\r\n                a.parentElement.removeChild(a);\r\n            }\r\n        });        \r\n\r\n        setCheckedLayersOnNode.call(self);\r\n\r\n        self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n            self._dialogDiv.innerHTML = html;\r\n        });\r\n    };\r\n\r\n    ctlProto.renderBranch = function (layer, callback, promiseRenderResolve) {\r\n        const self = this;\r\n\r\n        layer.getCapabilitiesPromise()\r\n            .then(function (result) {\r\n\r\n                self.sourceLayers.push(layer);\r\n\r\n                self.getRenderedHtml(self.CLASS + '-branch', getLayerTree(this), function (html) {\r\n                    var template = document.createElement('template');\r\n                    template.innerHTML = html;\r\n\r\n                    var newChild = template.content ? template.content.firstChild : template.firstChild;\r\n                    var oldChild = self.div.querySelector('.' + self.CLASS + '-branch').querySelector('li.' + self.CLASS + '-loading-node[data-layer-id=\"' + this.id + '\"]');\r\n\r\n                    if (oldChild) {\r\n                        self.div.querySelector('.' + self.CLASS + '-branch').replaceChild(newChild, oldChild);\r\n                    } else {\r\n                        self.div.querySelector('.' + self.CLASS + '-branch').appendChild(newChild);\r\n                    }\r\n\r\n                    addLogicToNode.call(self, newChild, this);\r\n\r\n                    if (self.div.querySelector('.' + self.CLASS + '-branch').childElementCount === 1) {\r\n                        promiseRenderResolve();\r\n                    }\r\n\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        // pasamos el callback el item \r\n                        callback(self.sourceLayers[self.sourceLayers.map(function (l) { return l.id }).indexOf(this.id)]);\r\n                    }\r\n\r\n                }.bind(this));\r\n\r\n            }.bind(layer))\r\n            .catch(function (error) {\r\n                var index = self.layers.map(function (l) { return l.id }).indexOf(this.id);\r\n                self.layers.splice(index, 1);\r\n\r\n                var errorMessage = self.getLocaleString(\"lyrCtlg.errorLoadingNode\", { serviceName: this.title });\r\n                var liError = self.div.querySelector('.' + self.CLASS + '-branch').querySelector('li.' + self.CLASS + '-loading-node[data-layer-id=\"' + this.id + '\"]');\r\n                liError.classList.add('error');\r\n                liError.setAttribute('title', errorMessage);\r\n\r\n                self.map.toast(errorMessage, { type: TC.Consts.msgType.ERROR });\r\n\r\n            }.bind(layer));\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        self.sourceLayers = [];\r\n\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            if (self.layers.length === 0) {\r\n                self.renderData({ layerTrees: [], enableSearch: false }, function () {\r\n\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n\r\n                    resolve();\r\n                });\r\n            } else {\r\n                self.renderData({ layers: self.layers, enableSearch: true }, function () {\r\n\r\n                    createSearchAutocomplete.call(self);\r\n\r\n                    self.layers.forEach(function (layer) {\r\n                        self.renderBranch(layer, callback, resolve);\r\n                    });\r\n                });\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.getLayerRootNode = function (layer) {\r\n        const self = this;\r\n        var result = null;\r\n        if (!layer.isBase) {\r\n            var url = layer.options.url;\r\n            if (self._roots) {\r\n                self._roots.forEach(function (li) {\r\n                    const lyr = self.getLayer(li.dataset.layerId);\r\n                    if (lyr && lyr.type === layer.type && lyr.options.url === url) {\r\n                        result = li;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getLayerNodes = function (layer) {\r\n        const self = this;\r\n        const result = [];\r\n        const rootNode = self.getLayerRootNode(layer);\r\n        if (rootNode) {\r\n            for (var i = 0; i < layer.names.length; i++) {\r\n                const liLayer = rootNode.querySelector('li[data-layer-name=\"' + layer.names[i] + '\"]');\r\n                if (!liLayer) {\r\n                    continue;\r\n                }\r\n                result[result.length] = liLayer;\r\n                liLayer.querySelectorAll('li').forEach(function (li) {\r\n                    result[result.length] = li;\r\n                });\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.showLayerInfo = function (layer, name) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var info = self.div.querySelector('.' + self.CLASS + '-info');\r\n\r\n        const toggleInfo = function (layerName, infoObj) {\r\n            var result = false;\r\n            //if (lName !== undefined && lName.toString() === layerName) {\r\n            //    info.dataset.layerName = '';\r\n            //    $info.removeClass(TC.Consts.classes.HIDDEN);\r\n            //}\r\n            //else {\r\n            if (infoObj) {\r\n                result = true;\r\n                info.dataset.layerName = layerName;\r\n                info.classList.remove(TC.Consts.classes.HIDDEN);\r\n                dust.render(self.CLASS + '-info', infoObj, function (err, out) {\r\n                    info.innerHTML = out;\r\n                    if (err) {\r\n                        TC.error(err);\r\n                    }\r\n                    info.querySelector('.' + self.CLASS + '-info-close').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.hideLayerInfo();\r\n                    });\r\n                });\r\n            }\r\n            //}\r\n            return result;\r\n        };\r\n\r\n        self.div.querySelectorAll('.' + self.CLASS + '-btn-info, .' + self.CLASS + '-search-btn-info').forEach(function (btn) {\r\n            btn.classList.remove(TC.Consts.classes.CHECKED);\r\n        });\r\n\r\n        const formatDescriptions = {};\r\n        for (var i = 0, ii = self._roots.length; i < ii; i++) {\r\n            const root = self._roots[i];\r\n            if (root.dataset.layerId === layer.id) {\r\n                const as = root.querySelectorAll('.' + self.CLASS + '-btn-info');\r\n                for (var j = 0, jj = as.length; j < jj; j++) {\r\n                    const a = as[j];\r\n                    var n = a.parentElement.dataset.layerName;\r\n                    if (n === name) {\r\n                        const info = layer.wrap.getInfo(name);\r\n                        if (info.metadata) {\r\n                            info.metadata.forEach(function (md) {\r\n                                md.formatDescription = formatDescriptions[md.format] =\r\n                                    formatDescriptions[md.format] ||\r\n                                    self.getLocaleString(TC.Util.getSimpleMimeType(md.format)) ||\r\n                                    self.getLocaleString('viewMetadata');\r\n                            });\r\n                        }\r\n                        const infoBtn = self.div.querySelector('li [data-layer-name=\"' + n + '\"] > button.' + self.CLASS + '-btn-info');\r\n                        infoBtn.classList.toggle(TC.Consts.classes.CHECKED, toggleInfo(n, info));\r\n                        result = info;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.update = function () {\r\n        const self = this;\r\n        self.sourceLayers.forEach(function (layer) {\r\n            layer.getCapabilitiesPromise().then(function () {\r\n                layer.compatibleLayers = layer.wrap.getCompatibleLayers(self.map.crs);\r\n\r\n                const rootNode = self.getLayerRootNode(layer);\r\n                if (rootNode) {\r\n                    rootNode\r\n                        .querySelectorAll('li[data-layer-name]')\r\n                        .forEach(function (li) {\r\n                            const name = li.dataset.layerName;\r\n                            const span = li.querySelector('span.' + TC.Consts.classes.SELECTABLE);\r\n                            if (layer.compatibleLayers.indexOf(name) < 0) {\r\n                                span.classList.add(TC.Consts.classes.INCOMPATIBLE);\r\n                                span.setAttribute('title', self.getLocaleString('reprojectionNeeded'));\r\n                            }\r\n                            else {\r\n                                span.classList.remove(TC.Consts.classes.INCOMPATIBLE)\r\n                                span.removeAttribute('title');\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.hideLayerInfo = function () {\r\n        var self = this;\r\n        self.div.querySelectorAll('.' + self.CLASS + '-btn-info, .' + self.CLASS + '-search-btn-info').forEach(function (btn) {\r\n            btn.classList.remove(TC.Consts.classes.CHECKED);\r\n        });\r\n        self.div.querySelector('.' + self.CLASS + '-info').classList.add(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    ctlProto.addLayer = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var fromLayerCatalog = [];\r\n\r\n            if (self.options.layers && self.options.layers.length) {\r\n                fromLayerCatalog = self.options.layers.filter(function (l) {\r\n                    var getMap = TC.Util.reqGetMapOnCapabilities(l.url);\r\n                    return getMap && getMap.replace(TC.Util.regex.PROTOCOL) == layer.url.replace(TC.Util.regex.PROTOCOL);\r\n                });\r\n            }\r\n\r\n            if (fromLayerCatalog.length == 0)\r\n                fromLayerCatalog = self.layers.filter(function (l) {\r\n                    return l.url.replace(TC.Util.regex.PROTOCOL) == layer.url.replace(TC.Util.regex.PROTOCOL);\r\n                });\r\n\r\n            if (fromLayerCatalog.length == 0) {\r\n                self.layers.push(layer);\r\n                layer.getCapabilitiesPromise().then(function () {\r\n                    layer.compatibleLayers = layer.wrap.getCompatibleLayers(self.map.crs);\r\n                    layer.title = layer.title || layer.wrap.getServiceTitle();\r\n                    self.renderBranch(layer, function () {\r\n                        resolve(); //ver linea 55 y por ahí\r\n                    });\r\n                });\r\n            } else { resolve(); }\r\n        });\r\n    };\r\n\r\n    ctlProto.getLayer = function (id) {\r\n        const self = this;\r\n        for (var i = 0, len = self.layers.length; i < len; i++) {\r\n            const layer = self.layers[i];\r\n            if (layer.id === id) {\r\n                // 10/04/2019 GLS: validamos si es una capa que viene de configuración o es un WMS externo o por estado \r\n                // para decidir si mostramos el título del servicio o no\r\n                var configLayer = self.options.layers.filter(l => l.id === id);\r\n\r\n                if (configLayer.length > 0) {\r\n                    layer.hideTitle = layer.options.hideTitle = configLayer[0].hideTitle;\r\n                } else {\r\n                    layer.hideTitle = layer.options.hideTitle = false;\r\n                }                \r\n                \r\n                return layer;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.addLayerToMap = function (layer, layerName) {\r\n        const self = this;\r\n        const layerOptions = TC.Util.extend({}, layer.options);\r\n        layerOptions.id = self.getUID();\r\n        layerOptions.layerNames = [layerName];\r\n        layerOptions.title = layer.title;\r\n        const newLayer = new TC.layer.Raster(layerOptions);\r\n        if (newLayer.isCompatible(self.map.crs)) {\r\n            self.map.addLayer(layerOptions).then(function (layer) {\r\n                layer.wrap.$events.on(TC.Consts.event.TILELOADERROR, function (event) {\r\n                    var layer = this.parent;\r\n                    if (event.error.code === 401 || event.error.code === 403)\r\n                        layer.map.toast(event.error.text, { type: TC.Consts.msgType.ERROR });\r\n                    layer.map.removeLayer(layer);\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            showProjectionChangeDialog(self, newLayer);\r\n        }\r\n    };\r\n\r\n    ctlProto.loaded = function () {\r\n        return this._readyPromise;\r\n    };\r\n\r\n    ctlProto.getAvailableCRS = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        return self.map.getCompatibleCRS({\r\n            layers: self.map.workLayers.concat(self.map.baseLayer, options.layer),\r\n            includeFallbacks: true\r\n        });\r\n    };\r\n\r\n    ctlProto.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        TC.loadProjDef({\r\n            crs: options.crs,\r\n            callback: function () {\r\n                self.map.setProjection(options).then(function () {\r\n                    if (self._layerToAdd) {\r\n                        self.map.addLayer(self._layerToAdd);\r\n                    }\r\n                    TC.Util.closeModal();\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.showProjectionChangeDialog = function (options) {\r\n        const self = this;\r\n        self._layerToAdd = options.layer;\r\n        TC.control.ProjectionSelector.prototype.showProjectionChangeDialog.call(self, options);\r\n    };\r\n\r\n})();"]}