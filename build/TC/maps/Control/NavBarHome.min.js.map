{"version":3,"sources":["control/NavBarHome.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","NavBarHome","apply","this","arguments","inherit","ctlProto","prototype","CLASS","render","wrap","Promise","resolve","register","map","self","result","call","on","Consts","event","PROJECTIONCHANGE","e","crs","newCrs","bottomLeft","Util","reproject","options","initialExtent","topRight","setInitialExtent"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGC,QAAQI,WAAa,WACpBL,GAAGE,QAAQI,MAAMC,KAAMC,YAG3BR,GAAGS,QAAQT,GAAGC,QAAQI,WAAYL,GAAGE,UAErC,WACI,IAAIQ,EAAWV,GAAGC,QAAQI,WAAWM,UAErCD,EAASE,MAAQ,kBAEjBF,EAASG,OAAS,WACHN,KACDO,OADCP,KAEFO,KAAO,IAAId,GAAGc,KAAKb,QAAQI,WAFzBE,OAIX,OAAOQ,QAAQC,WAGnBN,EAASO,SAAW,SAAUC,GAC1B,MAAMC,EAAOZ,KACPa,EAASpB,GAAGE,QAAQS,UAAUM,SAASI,KAAKF,EAAMD,GACxDC,EAAKL,KAAKG,SAASC,GAEnBA,EAAII,GAAGtB,GAAGuB,OAAOC,MAAMC,iBAAkB,SAAUC,GAC/C,MAAMC,EAAMD,EAAEE,OACd,IAAIC,EAAa7B,GAAG8B,KAAKC,UAAU,CAACb,EAAIc,QAAQC,cAAc,GAAIf,EAAIc,QAAQC,cAAc,IAAKf,EAAIc,QAAQL,IAAKA,GAC9GO,EAAWlC,GAAG8B,KAAKC,UAAU,CAACb,EAAIc,QAAQC,cAAc,GAAIf,EAAIc,QAAQC,cAAc,IAAKf,EAAIc,QAAQL,IAAKA,GAChHR,EAAKL,KAAKqB,iBAAiB,CAACN,EAAW,GAAIA,EAAW,GAAIK,EAAS,GAAIA,EAAS,OAGpF,OAAOd,GAzBf","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.NavBarHome = function () {\r\n    TC.Control.apply(this, arguments);\r\n};\r\n\r\nTC.inherit(TC.control.NavBarHome, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.NavBarHome.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-nav-home';\r\n\r\n    ctlProto.render = function () {\r\n        var self = this;\r\n        if (!self.wrap) {\r\n            self.wrap = new TC.wrap.control.NavBarHome(self);\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n        self.wrap.register(map);        \r\n\r\n        map.on(TC.Consts.event.PROJECTIONCHANGE, function (e) {\r\n            const crs = e.newCrs;\r\n            var bottomLeft = TC.Util.reproject([map.options.initialExtent[0], map.options.initialExtent[1]], map.options.crs, crs);\r\n            var topRight = TC.Util.reproject([map.options.initialExtent[2], map.options.initialExtent[3]], map.options.crs, crs);\r\n            self.wrap.setInitialExtent([bottomLeft[0], bottomLeft[1], topRight[0], topRight[1]]);\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n})();"]}