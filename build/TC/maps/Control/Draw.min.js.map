{"version":3,"sources":["control/Draw.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Feature","feature","Point","Polyline","Polygon","Consts","event","DRAWSTART","DRAWEND","DRAWCANCEL","DRAWUNDO","DRAWREDO","MEASURE","MEASUREPARTIAL","STYLECHANGE","CHANGE","formatColor","color","match","length","Draw","self","this","apply","arguments","browserFeatures","inputTypeColor","window","CP","loadCSS","_classSelector","CLASS","_pointClass","_lineClass","_polygonClass","history","historyIndex","exportsState","on","e","resetValues","POINT","layer","persistent","features","clearFeatures","point","setDrawState","setFeatureAddReadyState","setId","getUID","getLocaleString","callBack","_layerPromise","inherit","ctlProto","prototype","ctl","_endBtn","disabled","mode","geom","POLYGON","POLYLINE","_redoBtn","_undoBtn","_cancelBtn","isDebug","template","dust","register","body_0","chk","ctx","w","f","get","h","$key","x","block","body_1","__dustBody","render","callback","strToolTip","strokeColor","strokeWidth","options","MULTIPOLYLINE","div","classList","add","Cfg","styles","line","MULTIPOLYGON","polygon","MULTIPOINT","renderObject","tooltip","styleTools","_set1stRenderPromise","renderData","input","querySelector","style","backgroundColor","value","picker","document","body","onclick","preventDefault","onfocus","blur","onchange","map","loaded","setStrokeColor","reset","measure","_cancelClick","Util","isFunction","undefined","wrap","_newBtn","addEventListener","CLICK","new","cancel","end","undo","redo","_strokeColorPicker","target","_strokeWidthSelector","setStrokeWidth","_strokeWidthWatch","result","call","VIEWCHANGE","view","PRINTING","setStyles","extend","Promise","resolve","reject","setLayer","addLayer","id","title","stealth","type","layerType","VECTOR","then","putLayerOnTop","setMode","trigger","ctrl","activate","classes","ACTIVE","remove","deactivate","clear","clearFatures","isExclusive","setStyle","isActive","getModeStyle","setStrokeColorWatch","property","setStrokeWidthWatch","width","parseInt","Number","NaN","borderBottomWidth","getLayer","exportState","importState","state"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAE9BJ,GAAGK,SAAYL,GAAGM,QAAQC,OAC3BP,GAAGG,WAAWH,GAAGI,YAAc,oBAE9BJ,GAAGK,SAAYL,GAAGM,QAAQE,UAC3BR,GAAGG,WAAWH,GAAGI,YAAc,uBAE9BJ,GAAGK,SAAYL,GAAGM,QAAQG,SAC3BT,GAAGG,WAAWH,GAAGI,YAAc,sBAGnCJ,GAAGU,OAAOC,MAAMC,UAAY,eAC5BZ,GAAGU,OAAOC,MAAME,QAAU,aAC1Bb,GAAGU,OAAOC,MAAMG,WAAa,gBAC7Bd,GAAGU,OAAOC,MAAMI,SAAW,cAC3Bf,GAAGU,OAAOC,MAAMK,SAAW,cAC3BhB,GAAGU,OAAOC,MAAMM,QAAU,aAC1BjB,GAAGU,OAAOC,MAAMO,eAAiB,oBACjClB,GAAGU,OAAOC,MAAMQ,YAAc,iBAC9BnB,GAAGU,OAAOC,MAAMS,OAAS,UAEzB,WAEI,MAAMC,EAAc,SAAUC,GAC1B,MAAMC,EAAQD,EAAMC,MAAM,sCAC1B,OAAIA,GAASA,EAAMC,OACR,IAAMD,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAEvED,GAGXtB,GAAGC,QAAQwB,KAAO,WACd,IAAIC,EAAOC,KAEX3B,GAAGE,QAAQ0B,MAAMF,EAAMG,WAEvB,IAAK7B,GAAG8B,gBAAgBC,mBAAqBC,OAAOC,GAAI,CACpDjC,GAAGkC,QAAQlC,GAAGI,YAAc,yCAC5BJ,GAAGG,WAAWH,GAAGI,YAAc,wCAGnCsB,EAAKS,eAAiB,IAAMT,EAAKU,MAEjCV,EAAKW,YAAcX,EAAKU,MAAQ,SAChCV,EAAKY,WAAaZ,EAAKU,MAAQ,QAC/BV,EAAKa,cAAgBb,EAAKU,MAAQ,WAElCV,EAAKc,QAAU,GACfd,EAAKe,aAAe,EACpBf,EAAKgB,cAAe,EAEpBhB,EACKiB,GAAG3C,GAAGU,OAAOC,MAAMC,UAAW,SAAUgC,GACrClB,EAAKmB,gBAERF,GAAG3C,GAAGU,OAAOC,MAAMmC,MAAO,SAAUF,GAC7BlB,EAAKqB,QAAUrB,EAAKsB,YAActB,EAAKqB,MAAME,UAAYvB,EAAKqB,MAAME,SAASzB,OAAS,GACtFE,EAAKqB,MAAMG,gBAGfxB,EAAKc,QAAQhB,OAASE,EAAKe,aAC3Bf,EAAKc,QAAQd,EAAKe,gBAAkBG,EAAEO,MAEtCC,EAAa1B,KAEhBiB,GAAG3C,GAAGU,OAAOC,MAAME,QAAS,SAAU+B,GACnCS,EAAwB3B,GAExBkB,EAAEtC,QAAQgD,MAAMtD,GAAGuD,OAAO7B,EAAK8B,gBAAgB,UAAY,MAEvD9B,EAAK+B,UACL/B,EAAK+B,SAASb,EAAEtC,WAI5BoB,EAAKgC,cAAgB,MAGzB1D,GAAG2D,QAAQ3D,GAAGC,QAAQwB,KAAMzB,GAAGE,SAE/B,IAAI0D,EAAW5D,GAAGC,QAAQwB,KAAKoC,UAE/BD,EAASxB,MAAQ,cAEjB,IAAIgB,EAAe,SAAUU,GACzBA,EAAIC,QAAQC,SACa,IAArBF,EAAIrB,cACHqB,EAAIG,OAASjE,GAAGU,OAAOwD,KAAKC,SAAWL,EAAIrB,aAAe,GAC1DqB,EAAIG,OAASjE,GAAGU,OAAOwD,KAAKE,UAAYN,EAAIrB,aAAe,EAChEqB,EAAIO,SAASL,SAAWF,EAAItB,QAAQhB,SAAWsC,EAAIrB,aACnDqB,EAAIQ,SAASN,SAAgC,IAArBF,EAAIrB,cAG5BY,EAA0B,SAAUS,GACpCA,EAAIjB,cACJiB,EAAIC,QAAQC,UAAW,EACvBF,EAAIS,WAAWP,UAAW,GAG1BhE,GAAGwE,QACHZ,EAASa,SAAWzE,GAAGI,YAAc,yBAGrCwD,EAASa,SAAW,WAAcC,KAAKC,SAASf,EAASxB,MAAOwC,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,yFAA8FC,EAAEF,EAAIG,IAAI,CAAC,YAAY,GAAQH,EAAK,KAAKC,EAAE,MAAOG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,QAASJ,EAAE,6EAAgFG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,SAAUJ,EAAE,MAAOG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,SAAUJ,EAAE,6EAAgFG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,SAAUJ,EAAE,MAAOG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,SAAUJ,EAAE,4EAA+EG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,QAASJ,EAAE,MAAOG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,QAASJ,EAAE,sEAAyEG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,WAAYJ,EAAE,MAAOG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,WAAYJ,EAAE,mBAAmBK,EAAEN,EAAIG,IAAI,CAAC,eAAe,GAAQH,EAAK,CAAEO,MAASC,GAAU,IAAOV,EAAOW,YAAa,EAAI,SAASD,EAAOT,EAAKC,GAAO,OAAOD,EAAIE,EAAE,mCAAqCG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,gBAAiBJ,EAAE,oEAAyEC,EAAEF,EAAIG,IAAI,CAAC,gBAAgB,GAAQH,EAAK,KAAKC,EAAE,aAAeG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,gBAAiBJ,EAAE,QAASG,EAAE,OAAQJ,EAAK,GAAI,CAAEK,KAAQ,gBAAiBJ,EAAE,oEAAuEC,EAAEF,EAAIG,IAAI,CAAC,gBAAgB,GAAQH,EAAK,KAAKC,EAAE,iFAAuFC,EAAEF,EAAIG,IAAI,CAAC,gBAAgB,GAAQH,EAAK,KAAKC,EAAE,+BAAuCO,EAAOC,YAAa,EAAI,OAAOX,GAG1uDhB,EAAS4B,OAAS,SAAUC,GACxB,IACIC,EACAC,EACAC,EAHAlE,EAAOC,KAIX,OAAQD,EAAKmE,QAAQ5B,MACjB,KAAKjE,GAAGU,OAAOwD,KAAKE,SACpB,KAAKpE,GAAGU,OAAOwD,KAAK4B,cAChBJ,EAAahE,EAAK8B,gBAAgB,YAClC9B,EAAKqE,IAAIC,UAAUC,IAAIvE,EAAKY,YAC5BqD,EAAc3F,GAAGkG,IAAIC,OAAOC,KAAKT,YACjCC,EAAc5F,GAAGkG,IAAIC,OAAOC,KAAKR,YACjC,MACJ,KAAK5F,GAAGU,OAAOwD,KAAKC,QACpB,KAAKnE,GAAGU,OAAOwD,KAAKmC,aAChBX,EAAahE,EAAK8B,gBAAgB,eAClC9B,EAAKqE,IAAIC,UAAUC,IAAIvE,EAAKa,eAC5BoD,EAAc3F,GAAGkG,IAAIC,OAAOG,QAAQX,YACpCC,EAAc5F,GAAGkG,IAAIC,OAAOG,QAAQV,YACpC,MACJ,KAAK5F,GAAGU,OAAOwD,KAAKpB,MACpB,KAAK9C,GAAGU,OAAOwD,KAAKqC,WAChBb,EAAahE,EAAK8B,gBAAgB,aAClC9B,EAAKqE,IAAIC,UAAUC,IAAIvE,EAAKW,aAC5BsD,EAAc3F,GAAGkG,IAAIC,OAAOhD,MAAMwC,YAClCC,EAAc5F,GAAGkG,IAAIC,OAAOhD,MAAMyC,YAClC,MACJ,QACIF,EAAahE,EAAK8B,gBAAgB,QAClCmC,EAAc3F,GAAGkG,IAAIC,OAAOC,KAAKT,YACjCC,EAAc5F,GAAGkG,IAAIC,OAAOC,KAAKR,YAGzC,MAAMY,EAAe,CACjBC,QAASf,EACTC,YAAatE,EAAYsE,GACzBC,YAAaA,EACbc,WAAYhF,EAAKmE,QAAQa,YAE7B,OAAOhF,EAAKiF,qBAAqBjF,EAAKkF,WAAWJ,EAAc,WAC3D,IAAKxG,GAAG8B,gBAAgBC,iBAAkB,CAEtC,MAAM8E,EAAQnF,EAAKqE,IAAIe,cAAc,qBACrC,GAAID,EAAO,CACPA,EAAME,MAAMC,gBAAkBH,EAAMI,MACpCJ,EAAME,MAAMzF,MAAQ,cACpB,MAAM4F,EAAS,IAAIjF,GAAG4E,EAAO,QAASM,SAASC,MAE/CP,EAAMQ,QAAU,SAAUzE,GACtBA,EAAE0E,kBAINT,EAAMU,QAAU,SAAU3E,GACtBjB,KAAK6F,QAGTX,EAAMY,SAAW,SAAU7E,GACvBjB,KAAKoF,MAAMC,gBAAkBrF,KAAKsF,OAGtCvF,EAAKgG,IAAIC,OAAO,WACZT,EAAOvE,GAAG,SAAU,SAAUrB,GAC1BI,EAAKkG,eAAe,IAAMtG,QAK1CI,EAAKmG,OAAQ,EACbnG,EAAK+B,SAAW,KAChB/B,EAAKoG,SAAU,EACfpG,EAAKqG,cAAe,EAEpBrG,EAAKuC,KAAOvC,EAAKmE,QAAQ5B,MAAQjE,GAAGU,OAAOwD,KAAKE,SAE5C1C,EAAKmE,QAAQiC,UACbpG,EAAKoG,QAAUpG,EAAKmE,QAAQiC,SAC5B9H,GAAGgI,KAAKC,WAAWvG,EAAKmE,QAAQJ,YAChC/D,EAAK+B,SAAW/B,EAAKmE,QAAQJ,eACDyC,IAA5BxG,EAAKmE,QAAQ7C,WACbtB,EAAKsB,YAAa,EAGlBtB,EAAKsB,WAAatB,EAAKmE,QAAQ7C,WAGnCtB,EAAKyG,KAAO,IAAInI,GAAGmI,KAAKlI,QAAQwB,KAAKC,GAErCA,EAAK0G,QAAU1G,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,YAC5DT,EAAK0G,QAAQC,iBAAiBrI,GAAGU,OAAOC,MAAM2H,MAAO,WACjD5G,EAAK6G,QAGT7G,EAAK6C,WAAa7C,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,eAC/DT,EAAK6C,WAAW8D,iBAAiBrI,GAAGU,OAAOC,MAAM2H,MAAO,WACpD5G,EAAK8G,WAGT9G,EAAKqC,QAAUrC,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,YAC5DT,EAAKqC,QAAQsE,iBAAiBrI,GAAGU,OAAOC,MAAM2H,MAAO,WACjD5G,EAAK+G,QAGT/G,EAAK4C,SAAW5C,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,aAC7DT,EAAK4C,SAAS+D,iBAAiBrI,GAAGU,OAAOC,MAAM2H,MAAO,WAClD5G,EAAKgH,SAGThH,EAAK2C,SAAW3C,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,aAC7DT,EAAK2C,SAASgE,iBAAiBrI,GAAGU,OAAOC,MAAM2H,MAAO,WAClD5G,EAAKiH,SAGT,GAAIjH,EAAKmE,QAAQa,WAAY,CACzBhF,EAAKkH,mBAAqBlH,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,UACvET,EAAKkH,mBAAmBP,iBAAiBrI,GAAGU,OAAOC,MAAMS,OAAQ,SAAUwB,GACvElB,EAAKkG,eAAehF,EAAEiG,OAAO5B,SAGjCvF,EAAKoH,qBAAuBpH,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,UACzET,EAAKoH,qBAAqBT,iBAAiBrI,GAAGU,OAAOC,MAAMS,OAAQ,SAAUwB,GACzElB,EAAKqH,eAAenG,EAAEiG,OAAO5B,SAEjCvF,EAAKsH,kBAAoBtH,EAAKqE,IAAIe,cAAcpF,EAAKS,eAAiB,gBAGtEnC,GAAGgI,KAAKC,WAAWxC,IACnBA,QAKZ7B,EAASe,SAAW,SAAU+C,GAC1B,MAAMhG,EAAOC,KACPsH,EAASjJ,GAAGE,QAAQ2D,UAAUc,SAASuE,KAAKxH,EAAMgG,GAExDhG,EAAKgG,IAAI/E,GAAG3C,GAAGU,OAAOC,MAAMwI,WAAY,WAChCzH,EAAKgG,IAAI0B,OAASpJ,GAAGU,OAAO0I,KAAKC,UACjC3H,EAAK+G,QAOb,MAAMa,EAAY,WACd5H,EAAKyE,OAAS,GACdnG,GAAGgI,KAAKuB,QAAO,EAAM7H,EAAKyE,OAAQzE,EAAKmE,QAAQM,QAAUzE,EAAKqB,MAAM8C,QAAQM,SAGhFzE,EAAKgC,cAAgB,IAAI8F,QAAQ,SAAUC,EAASC,GAChDhC,EAAIC,OAAO,WACP,GAAIjG,EAAKmE,QAAQ9C,MAAO,CACpBrB,EAAKiI,SAASjI,EAAKmE,QAAQ9C,OAC3B0G,EAAQ/H,EAAKqB,OACbuG,SAIA,IAA2B,IAAvB5H,EAAKmE,QAAQ9C,MAAiB,CAC9BrB,EAAKiI,SAAS,MACdF,EAAQ,WAGR/B,EAAIkC,SAAS,CACTC,GAAInI,EAAK6B,SACTuG,MAAO,cACPC,SAAS,EACTC,KAAMhK,GAAGU,OAAOuJ,UAAUC,OAC1B/D,OAAQ,CACJhD,MAAOuE,EAAI7B,QAAQM,OAAOhD,MAC1BiD,KAAMsB,EAAI7B,QAAQM,OAAOC,KACzBE,QAASoB,EAAI7B,QAAQM,OAAOG,WAEjC6D,KAAK,SAAUpH,GACd2E,EAAI0C,cAAcrH,GAClBrB,EAAKiI,SAAS5G,GACd0G,EAAQ/H,EAAKqB,OACbuG,UAOpB,OAAOL,GAGXrF,EAAS2E,IAAM,WACA5G,KACFoB,QADEpB,KACaqB,YADbrB,KAEFoB,MAAMG,gBAFJvB,KAIN4C,WAAWP,UAAW,EAJhBrC,KAKN0I,QALM1I,KAKOsC,MAAM,GACxB,OANWtC,MASfiC,EAAS8E,KAAO,WACZ,IACIO,EADOtH,KACOwG,KAAKO,OACvB,GAAIO,EAAQ,CAFDtH,KAGFc,eACLW,EAJOzB,MAAAA,KAMEc,cAAgB,GANlBd,KAOEkB,cAPFlB,KASF2I,QAAQtK,GAAGU,OAAOC,MAAMI,UAGjC,OAAOkI,GAGXrF,EAAS+E,KAAO,WACZ,IACIM,EAAStH,KAAKwG,KAAKQ,OACvB,GAAIM,EAAQ,CAFDtH,KAGFc,eACLW,EAJOzB,MAAAA,KAKF2I,QAAQtK,GAAGU,OAAOC,MAAMK,UAEjC,OAAOiI,GAGXrF,EAAS4E,OAAS,WACH7G,KACNoG,cAAe,EACpBpG,KAAK0I,QAAQ,MAAM,GAFR1I,KAGNkB,cACLQ,EAJW1B,MAAAA,KAKN4C,WAAWP,UAAW,EALhBrC,KAMN2I,QAAQtK,GAAGU,OAAOC,MAAMG,WAAY,CAAEyJ,KANhC5I,OAOX,OAPWA,MAUfiC,EAAS4G,SAAW,WACL7I,KACNyG,QAAQpC,UAAUC,IAAIjG,GAAGU,OAAO+J,QAAQC,QADlC/I,KAEN4C,WAAWP,UAAW,EAC3BhE,GAAGE,QAAQ2D,UAAU2G,SAAStB,KAHnBvH,MAAAA,KAINwG,KAAKqC,SAJC7I,KAIasC,MAJbtC,KAKNoE,IAAIC,UAAU2E,OALRhJ,KAKoBU,YALpBV,KAKsCW,WALtCX,KAKuDY,eAClE,OANWZ,KAMEsC,MACT,KAAKjE,GAAGU,OAAOwD,KAAKpB,MAPbnB,KAQEoE,IAAIC,UAAUC,IARhBtE,KAQyBU,aAC5B,MACJ,KAAKrC,GAAGU,OAAOwD,KAAKE,SAVbzC,KAWEoE,IAAIC,UAAUC,IAXhBtE,KAWyBW,YAC5B,MACJ,KAAKtC,GAAGU,OAAOwD,KAAKC,QAbbxC,KAcEoE,IAAIC,UAAUC,IAdhBtE,KAcyBY,iBAQxCqB,EAASgH,WAAa,WACPjJ,KACFyG,SADEzG,KAEFyG,QAAQpC,UAAU2E,OAAO3K,GAAGU,OAAO+J,QAAQC,QAFzC/I,KAIF4C,aAJE5C,KAKF4C,WAAWP,UAAW,GAE/BhE,GAAGE,QAAQ2D,UAAU+G,WAAW1B,KAPrBvH,MAAAA,KAOsCoG,cAPtCpG,KAQFwG,MARExG,KASFwG,KAAKyC,aATHjJ,KAWNkB,cAXMlB,KAaNoG,cAAe,GAGxBnE,EAASiH,MAAQ,WACb,MAAMnJ,EAAOC,KACTD,EAAKqB,OACLrB,EAAKqB,MAAM+H,eAEfpJ,EAAKmB,cACL,OAAOnB,GAGXkC,EAASmH,YAAc,WACnB,OAAO,GAGXnH,EAAS6E,IAAM,WACE9G,KACRwG,KAAKM,MADG9G,KAERkB,cACL,OAHalB,MAMjBiC,EAASyG,QAAU,SAAUpG,EAAMuG,GAC/B,MAAM9I,EAAOC,KAETsC,IACAvC,EAAKuC,KAAOA,GAEhB,GAAIuG,GAAYvG,EAAM,CACdvC,EAAKqB,OACLrB,EAAKqB,MAAM2E,IAAI0C,cAAc1I,EAAKqB,OAEtCrB,EAAK8I,gBAGL9I,EAAKkJ,aAET,OAAOlJ,GAGXkC,EAASoH,SAAW,SAAUjE,GAC1B,MAAMrF,EAAOC,KACb,GAAIoF,EACA/G,GAAGgI,KAAKuB,OAAO7H,EAAKqF,MAAOA,QAG3B,OAAQrF,EAAKmE,QAAQ5B,MACjB,KAAKjE,GAAGU,OAAOwD,KAAKE,SACpB,KAAKpE,GAAGU,OAAOwD,KAAK4B,cAChBiB,EAAQ,CAAEX,KAAM1E,EAAKyE,OAAOC,MAC5B,MACJ,KAAKpG,GAAGU,OAAOwD,KAAKC,QACpB,KAAKnE,GAAGU,OAAOwD,KAAKmC,aAChBU,EAAQ,CAAET,QAAS5E,EAAKyE,OAAOG,SAC/B,MACJ,KAAKtG,GAAGU,OAAOwD,KAAKpB,MACpB,KAAK9C,GAAGU,OAAOwD,KAAKqC,WAChBQ,EAAQ,CAAE5D,MAAOzB,EAAKyE,OAAOhD,OAC7B,MACJ,QACI4D,EAAQ,GAIhBrF,EAAKuJ,UACLvJ,EAAKyG,KAAK6C,SAASjE,IAI3BnD,EAASsH,aAAe,SAASjH,GAC7B,MAAMvC,EAAOC,KAEb,OADAsC,EAAOA,GAAQvC,EAAKmE,QAAQ5B,MAExB,KAAKjE,GAAGU,OAAOwD,KAAKE,SACpB,KAAKpE,GAAGU,OAAOwD,KAAK4B,cAChB,OAAOpE,EAAKyE,OAAOC,KACvB,KAAKpG,GAAGU,OAAOwD,KAAKC,QACpB,KAAKnE,GAAGU,OAAOwD,KAAKmC,aAChB,OAAO3E,EAAKyE,OAAOG,QACvB,KAAKtG,GAAGU,OAAOwD,KAAKpB,MACpB,KAAK9C,GAAGU,OAAOwD,KAAKqC,WAChB,OAAO7E,EAAKyE,OAAOhD,MACvB,QACI,OAAO,OAKnBS,EAASuH,oBAAsB,SAAU7J,GACrC,MAAMI,EAAOC,KACb,GAAID,EAAKmE,QAAQa,WAAY,MACXwB,IAAV5G,IACAA,EAAQI,EAAKwJ,eAAevF,aAEhC,MAAMpE,EAAQD,EAAMC,MAAM,sCACtBA,GAASA,EAAMC,SACfF,EAAQ,IAAMC,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAAKA,EAAM,IAE/EG,EAAKkH,mBAAmB3B,MAAQ3F,EAChC,IAAKtB,GAAG8B,gBAAgBC,iBAAkB,CACtC,MAAM8E,EAAQnF,EAAKkH,mBACnB/B,EAAME,MAAMC,gBAAkB1F,EAC9BuF,EAAMW,QAGd,OAAO9F,GAGXkC,EAASgE,eAAiB,SAAUtG,GAChC,MAAMI,EAAOC,KACPoF,EAAQrF,EAAKwJ,eACfnE,IACAA,EAAMpB,YAAcrE,GAIpBI,EAAKuJ,UACLvJ,EAAKsJ,WAGTtJ,EAAKyJ,oBAAoB7J,GACzBI,EAAK4I,QAAQtK,GAAGU,OAAOC,MAAMQ,YAAa,CAAEiK,SAAU,cAAenE,MAAO3F,IAC5E,OAAOI,GAGXkC,EAASyH,oBAAsB,SAAUC,GACrC,MAAM5J,EAAOC,KACb,GAAID,EAAKmE,QAAQa,WAAY,MACXwB,IAAVoD,IACAA,EAAQ5J,EAAKwJ,eAAetF,aAGhC,IADA0F,EAAQC,SAASD,EAAO,OACVE,OAAOC,IAAK,CACtB/J,EAAKoH,qBAAqB7B,MAAQqE,EAClC5J,EAAKsH,kBAAkBjC,MAAM2E,kBAAoBJ,EAAQ,MAGjE,OAAO5J,GAGXkC,EAASmF,eAAiB,SAASuC,GAC/B,MAAM5J,EAAOC,KAEb,IADA2J,EAAQC,SAASD,EAAO,OACVE,OAAOC,IAAK,CACtB,MAAM1E,EAAQrF,EAAKwJ,eACfnE,IACAA,EAAMnB,YAAc0F,GAIpB5J,EAAKuJ,UACLvJ,EAAKsJ,WAGTtJ,EAAK2J,oBAAoBC,GACzB5J,EAAK4I,QAAQtK,GAAGU,OAAOC,MAAMQ,YAAa,CAAEiK,SAAU,cAAenE,MAAOqE,IAEhF,OAAO5J,GAGXkC,EAAS+H,SAAW,WAChB,OAAOhK,KAAK+B,eAGhBE,EAAS+F,SAAW,SAAU5G,GACfpB,KACF+F,MADE/F,KAGEoB,MADc,iBAAZ,EAFJpB,KAGe+F,IAAIiE,SAAS5I,GAGlBA,IAKzBa,EAASf,YAAc,WACNlB,KACRa,QAAQhB,OAAS,EADTG,KAERc,aAAe,EACpBW,EAHazB,MAIb,OAJaA,MAOjBiC,EAASgI,YAAc,WACnB,MAAMlK,EAAOC,KACb,OAAID,EAAKgB,aACE,CACHmH,GAAInI,EAAKmI,GACT9G,MAAOrB,EAAKqB,MAAM6I,eAGnB,MAGXhI,EAASiI,YAAc,SAAUC,GAChBnK,KACRgK,WAAWxB,KAAK,SAAUpH,GAC3BA,EAAM8I,YAAYC,EAAM/I,UA7iBpC","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\nif (!TC.Feature || !TC.feature.Point) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/feature/Point');\r\n}\r\nif (!TC.Feature || !TC.feature.Polyline) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/feature/Polyline');\r\n}\r\nif (!TC.Feature || !TC.feature.Polygon) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/feature/Polygon');\r\n}\r\n\r\nTC.Consts.event.DRAWSTART = 'drawstart.tc';\r\nTC.Consts.event.DRAWEND = 'drawend.tc';\r\nTC.Consts.event.DRAWCANCEL = 'drawcancel.tc';\r\nTC.Consts.event.DRAWUNDO = 'drawundo.tc';\r\nTC.Consts.event.DRAWREDO = 'drawredo.tc';\r\nTC.Consts.event.MEASURE = 'measure.tc';\r\nTC.Consts.event.MEASUREPARTIAL = 'measurepartial.tc';\r\nTC.Consts.event.STYLECHANGE = 'stylechange.tc';\r\nTC.Consts.event.CHANGE = 'change';\r\n\r\n(function () {\r\n\r\n    const formatColor = function (color) {\r\n        const match = color.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n        if (match && match.length) {\r\n            return '#' + match[1] + match[1] + match[2] + match[2] + match[3] + match[3];\r\n        }\r\n        return color;\r\n    };\r\n\r\n    TC.control.Draw = function () {\r\n        var self = this;\r\n\r\n        TC.Control.apply(self, arguments);\r\n\r\n        if (!TC.browserFeatures.inputTypeColor() && !window.CP) {\r\n            TC.loadCSS(TC.apiLocation + 'lib/color-picker/color-picker.min.css');\r\n            TC.syncLoadJS(TC.apiLocation + 'lib/color-picker/color-picker.min.js');\r\n        }\r\n\r\n        self._classSelector = '.' + self.CLASS;\r\n\r\n        self._pointClass = self.CLASS + '-point';\r\n        self._lineClass = self.CLASS + '-line';\r\n        self._polygonClass = self.CLASS + '-polygon';\r\n\r\n        self.history = [];\r\n        self.historyIndex = 0;\r\n        self.exportsState = true;\r\n\r\n        self\r\n            .on(TC.Consts.event.DRAWSTART, function (e) {\r\n                self.resetValues();\r\n            })\r\n            .on(TC.Consts.event.POINT, function (e) {\r\n                if (self.layer && !self.persistent && self.layer.features && self.layer.features.length > 0) {\r\n                    self.layer.clearFeatures();\r\n                }\r\n\r\n                self.history.length = self.historyIndex;\r\n                self.history[self.historyIndex++] = e.point;\r\n\r\n                setDrawState(self);\r\n            })\r\n            .on(TC.Consts.event.DRAWEND, function (e) {\r\n                setFeatureAddReadyState(self);\r\n\r\n                e.feature.setId(TC.getUID(self.getLocaleString('sketch') + '.'));\r\n\r\n                if (self.callBack) {\r\n                    self.callBack(e.feature);\r\n                }\r\n            });\r\n\r\n        self._layerPromise = null;\r\n    };\r\n\r\n    TC.inherit(TC.control.Draw, TC.Control);\r\n\r\n    var ctlProto = TC.control.Draw.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-draw';\r\n\r\n    var setDrawState = function (ctl) {\r\n        ctl._endBtn.disabled =\r\n            ctl.historyIndex === 0 ||\r\n            (ctl.mode === TC.Consts.geom.POLYGON && ctl.historyIndex < 3) ||\r\n            (ctl.mode === TC.Consts.geom.POLYLINE && ctl.historyIndex < 2);\r\n        ctl._redoBtn.disabled = ctl.history.length === ctl.historyIndex;\r\n        ctl._undoBtn.disabled = ctl.historyIndex === 0;\r\n    };\r\n\r\n    var setFeatureAddReadyState = function (ctl) {\r\n        ctl.resetValues();\r\n        ctl._endBtn.disabled = true;\r\n        ctl._cancelBtn.disabled = false;\r\n    };\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template = TC.apiLocation + \"TC/templates/Draw.html\";\r\n    }\r\n    else {\r\n        ctlProto.template = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-draw-tools\\\"><button class=\\\"tc-ctl-btn tc-ctl-draw-btn-new\\\" title=\\\"\").f(ctx.get([\"tooltip\"], false), ctx, \"h\").w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"new\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-draw-btn-undo\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"undo\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"undo\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-draw-btn-redo\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"redo\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"redo\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-draw-btn-end\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"end\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"end\" }).w(\"</button><button class=\\\"tc-ctl-btn tc-ctl-draw-btn-cancel\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"</button></div>\").x(ctx.get([\"styleTools\"], false), ctx, { \"block\": body_1 }, {}); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-draw-style\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"strokeColor\" }).w(\"<input type=\\\"color\\\" class=\\\"tc-ctl-col tc-ctl-draw-str-c\\\" value=\\\"\").f(ctx.get([\"strokeColor\"], false), ctx, \"h\").w(\"\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"selectColor\" }).w(\"\\\" />\").h(\"i18n\", ctx, {}, { \"$key\": \"strokeWidth\" }).w(\"<div class=\\\"tc-ctl-draw-str-w-watch\\\" style=\\\"border-bottom-width:\").f(ctx.get([\"strokeWidth\"], false), ctx, \"h\").w(\"px;\\\"> </div><input type=\\\"number\\\" class=\\\"tc-ctl-draw-str-w tc-textbox\\\" value=\\\"\").f(ctx.get([\"strokeWidth\"], false), ctx, \"h\").w(\"\\\" min=\\\"1\\\" max=\\\"15\\\" /></div>\"); } body_1.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    ctlProto.render = function (callback) {\r\n        var self = this;\r\n        var strToolTip;\r\n        var strokeColor;\r\n        var strokeWidth;\r\n        switch (self.options.mode) {\r\n            case TC.Consts.geom.POLYLINE:\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                strToolTip = self.getLocaleString('drawLine');\r\n                self.div.classList.add(self._lineClass);\r\n                strokeColor = TC.Cfg.styles.line.strokeColor;\r\n                strokeWidth = TC.Cfg.styles.line.strokeWidth;\r\n                break;\r\n            case TC.Consts.geom.POLYGON:\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                strToolTip = self.getLocaleString('drawPolygon');\r\n                self.div.classList.add(self._polygonClass);\r\n                strokeColor = TC.Cfg.styles.polygon.strokeColor;\r\n                strokeWidth = TC.Cfg.styles.polygon.strokeWidth;\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                strToolTip = self.getLocaleString('drawPoint');\r\n                self.div.classList.add(self._pointClass);\r\n                strokeColor = TC.Cfg.styles.point.strokeColor;\r\n                strokeWidth = TC.Cfg.styles.point.strokeWidth;\r\n                break;\r\n            default:\r\n                strToolTip = self.getLocaleString('draw');\r\n                strokeColor = TC.Cfg.styles.line.strokeColor;\r\n                strokeWidth = TC.Cfg.styles.line.strokeWidth;\r\n                break;\r\n        }\r\n        const renderObject = {\r\n            tooltip: strToolTip,\r\n            strokeColor: formatColor(strokeColor),\r\n            strokeWidth: strokeWidth,\r\n            styleTools: self.options.styleTools\r\n        };\r\n        return self._set1stRenderPromise(self.renderData(renderObject, function () {\r\n            if (!TC.browserFeatures.inputTypeColor()) {\r\n                // El navegador no soporta input[type=color], usamos polyfill\r\n                const input = self.div.querySelector('input[type=color]');\r\n                if (input) {\r\n                    input.style.backgroundColor = input.value;\r\n                    input.style.color = 'transparent';\r\n                    const picker = new CP(input, 'click', document.body);\r\n\r\n                    input.onclick = function (e) {\r\n                        e.preventDefault();\r\n                    };\r\n\r\n                    // Evitamos que salga el teclado virtual en iOS\r\n                    input.onfocus = function (e) {\r\n                        this.blur();\r\n                    };\r\n\r\n                    input.onchange = function (e) {\r\n                        this.style.backgroundColor = this.value;\r\n                    };\r\n\r\n                    self.map.loaded(function () {\r\n                        picker.on(\"change\", function (color) {\r\n                            self.setStrokeColor('#' + color);\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            self.reset = true;\r\n            self.callBack = null;\r\n            self.measure = false;\r\n            self._cancelClick = false;\r\n\r\n            self.mode = self.options.mode || TC.Consts.geom.POLYLINE;\r\n\r\n            if (self.options.measure)\r\n                self.measure = self.options.measure\r\n            if (TC.Util.isFunction(self.options.callback))\r\n                self.callBack = self.options.callback;\r\n            if (self.options.persistent === undefined) {\r\n                self.persistent = true;\r\n            }\r\n            else {\r\n                self.persistent = self.options.persistent;\r\n            }\r\n\r\n            self.wrap = new TC.wrap.control.Draw(self);\r\n\r\n            self._newBtn = self.div.querySelector(self._classSelector + '-btn-new');\r\n            self._newBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.new();\r\n            });\r\n\r\n            self._cancelBtn = self.div.querySelector(self._classSelector + '-btn-cancel');\r\n            self._cancelBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.cancel();\r\n            });\r\n\r\n            self._endBtn = self.div.querySelector(self._classSelector + '-btn-end');\r\n            self._endBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.end();\r\n            });\r\n\r\n            self._undoBtn = self.div.querySelector(self._classSelector + '-btn-undo');\r\n            self._undoBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.undo();\r\n            });\r\n\r\n            self._redoBtn = self.div.querySelector(self._classSelector + '-btn-redo');\r\n            self._redoBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.redo();\r\n            });\r\n\r\n            if (self.options.styleTools) {\r\n                self._strokeColorPicker = self.div.querySelector(self._classSelector + '-str-c');\r\n                self._strokeColorPicker.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                    self.setStrokeColor(e.target.value);\r\n                });\r\n\r\n                self._strokeWidthSelector = self.div.querySelector(self._classSelector + '-str-w');\r\n                self._strokeWidthSelector.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                    self.setStrokeWidth(e.target.value);\r\n                });\r\n                self._strokeWidthWatch = self.div.querySelector(self._classSelector + '-str-w-watch');\r\n            }\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.map.on(TC.Consts.event.VIEWCHANGE, function () {\r\n            if (self.map.view === TC.Consts.view.PRINTING) {\r\n                self.end();\r\n\r\n                // No lanzo el evento porque da error al no llegar una feature\r\n                // self.trigger(TC.Consts.event.DRAWEND);\r\n            }\r\n        });\r\n\r\n        const setStyles = function () {\r\n            self.styles = {};\r\n            TC.Util.extend(true, self.styles, self.options.styles || self.layer.options.styles);\r\n        };\r\n\r\n        self._layerPromise = new Promise(function (resolve, reject) {\r\n            map.loaded(function () {\r\n                if (self.options.layer) {\r\n                    self.setLayer(self.options.layer);\r\n                    resolve(self.layer);\r\n                    setStyles();\r\n                }\r\n                else {\r\n                    // Si self.options.layer === false se instancia el control sin capa asociada\r\n                    if (self.options.layer === false) {\r\n                        self.setLayer(null);\r\n                        resolve(null);\r\n                    }\r\n                    else {\r\n                        map.addLayer({\r\n                            id: self.getUID(),\r\n                            title: 'DrawControl',\r\n                            stealth: true,\r\n                            type: TC.Consts.layerType.VECTOR,\r\n                            styles: {\r\n                                point: map.options.styles.point,\r\n                                line: map.options.styles.line,\r\n                                polygon: map.options.styles.polygon\r\n                            }\r\n                        }).then(function (layer) {\r\n                            map.putLayerOnTop(layer);\r\n                            self.setLayer(layer);\r\n                            resolve(self.layer);\r\n                            setStyles();\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.new = function () {\r\n        var self = this;\r\n        if (self.layer && !self.persistent) {\r\n            self.layer.clearFeatures();\r\n        }\r\n        self._cancelBtn.disabled = false;\r\n        self.setMode(self.mode, true);\r\n        return self;\r\n    };\r\n\r\n    ctlProto.undo = function () {\r\n        var self = this;\r\n        var result = self.wrap.undo();\r\n        if (result) {\r\n            self.historyIndex--;\r\n            setDrawState(self);\r\n\r\n            if (self.historyIndex <= 0) {\r\n                self.resetValues();\r\n            }\r\n            self.trigger(TC.Consts.event.DRAWUNDO);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.redo = function () {\r\n        var self = this;\r\n        var result = this.wrap.redo();\r\n        if (result) {\r\n            self.historyIndex++;\r\n            setDrawState(self);\r\n            self.trigger(TC.Consts.event.DRAWREDO);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.cancel = function () {\r\n        var self = this;\r\n        self._cancelClick = true;\r\n        this.setMode(null, false);\r\n        self.resetValues();\r\n        setFeatureAddReadyState(self);\r\n        self._cancelBtn.disabled = true;\r\n        self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        var self = this;\r\n        self._newBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n        self._cancelBtn.disabled = false;\r\n        TC.Control.prototype.activate.call(self);\r\n        self.wrap.activate(self.mode);\r\n        self.div.classList.remove(self._pointClass, self._lineClass, self._polygonClass);\r\n        switch (self.mode) {\r\n            case TC.Consts.geom.POINT:\r\n                self.div.classList.add(self._pointClass);\r\n                break;\r\n            case TC.Consts.geom.POLYLINE:\r\n                self.div.classList.add(self._lineClass);\r\n                break;\r\n            case TC.Consts.geom.POLYGON:\r\n                self.div.classList.add(self._polygonClass);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        var self = this;\r\n        if (self._newBtn) {\r\n            self._newBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n        }\r\n        if (self._cancelBtn) {\r\n            self._cancelBtn.disabled = true;\r\n        }\r\n        TC.Control.prototype.deactivate.call(self, !self._cancelClick);\r\n        if (self.wrap) {\r\n            self.wrap.deactivate();\r\n        }\r\n        self.resetValues();\r\n        //self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        self._cancelClick = false;\r\n    };\r\n\r\n    ctlProto.clear = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            self.layer.clearFatures();\r\n        }\r\n        self.resetValues();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return true;\r\n    };\r\n\r\n    ctlProto.end = function () {\r\n        const self = this;\r\n        self.wrap.end();\r\n        self.resetValues();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setMode = function (mode, activate) {\r\n        const self = this;\r\n\r\n        if (mode)\r\n            self.mode = mode;\r\n\r\n        if (activate && mode) {\r\n            if (self.layer) {\r\n                self.layer.map.putLayerOnTop(self.layer);\r\n            }\r\n            self.activate();\r\n        }\r\n        else {\r\n            self.deactivate();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStyle = function (style) {\r\n        const self = this;\r\n        if (style) {\r\n            TC.Util.extend(self.style, style);\r\n        }\r\n        else {\r\n            switch (self.options.mode) {\r\n                case TC.Consts.geom.POLYLINE:\r\n                case TC.Consts.geom.MULTIPOLYLINE:\r\n                    style = { line: self.styles.line };\r\n                    break;\r\n                case TC.Consts.geom.POLYGON:\r\n                case TC.Consts.geom.MULTIPOLYGON:\r\n                    style = { polygon: self.styles.polygon };\r\n                    break;\r\n                case TC.Consts.geom.POINT:\r\n                case TC.Consts.geom.MULTIPOINT:\r\n                    style = { point: self.styles.point };\r\n                    break;\r\n                default:\r\n                    style = {};\r\n                    break;\r\n            }\r\n        }\r\n        if (self.isActive) {\r\n            self.wrap.setStyle(style);\r\n        }\r\n    };\r\n\r\n    ctlProto.getModeStyle = function(mode) {\r\n        const self = this;\r\n        mode = mode || self.options.mode;\r\n        switch (mode) {\r\n            case TC.Consts.geom.POLYLINE:\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                return self.styles.line;\r\n            case TC.Consts.geom.POLYGON:\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                return self.styles.polygon;\r\n            case TC.Consts.geom.POINT:\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                return self.styles.point;\r\n            default:\r\n                return null;\r\n                break;\r\n        }\r\n    };\r\n\r\n    ctlProto.setStrokeColorWatch = function (color) {\r\n        const self = this;\r\n        if (self.options.styleTools) {\r\n            if (color === undefined) {\r\n                color = self.getModeStyle().strokeColor;\r\n            }\r\n            const match = color.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n            if (match && match.length) {\r\n                color = '#' + match[1] + match[1] + match[2] + match[2] + match[3] + match[3];\r\n            }\r\n            self._strokeColorPicker.value = color;\r\n            if (!TC.browserFeatures.inputTypeColor()) {\r\n                const input = self._strokeColorPicker;\r\n                input.style.backgroundColor = color;\r\n                input.blur();\r\n            }\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStrokeColor = function (color) {\r\n        const self = this;\r\n        const style = self.getModeStyle();\r\n        if (style) {\r\n            style.strokeColor = color;\r\n        }\r\n\r\n        // Resetea el estilo\r\n        if (self.isActive) {\r\n            self.setStyle();\r\n        }\r\n\r\n        self.setStrokeColorWatch(color);\r\n        self.trigger(TC.Consts.event.STYLECHANGE, { property: 'strokeColor', value: color });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStrokeWidthWatch = function (width) {\r\n        const self = this;\r\n        if (self.options.styleTools) {\r\n            if (width === undefined) {\r\n                width = self.getModeStyle().strokeWidth;\r\n            }\r\n            width = parseInt(width, 10);\r\n            if (width !== Number.NaN) {\r\n                self._strokeWidthSelector.value = width;\r\n                self._strokeWidthWatch.style.borderBottomWidth = width + 'px';\r\n            }\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStrokeWidth = function(width) {\r\n        const self = this;\r\n        width = parseInt(width, 10);\r\n        if (width !== Number.NaN) {\r\n            const style = self.getModeStyle();\r\n            if (style) {\r\n                style.strokeWidth = width;\r\n            }\r\n\r\n            // Resetea el estilo\r\n            if (self.isActive) {\r\n                self.setStyle();\r\n            }\r\n\r\n            self.setStrokeWidthWatch(width);\r\n            self.trigger(TC.Consts.event.STYLECHANGE, { property: 'strokeWidth', value: width });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLayer = function() {\r\n        return this._layerPromise;\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        var self = this;\r\n        if (self.map) {\r\n            if (typeof (layer) === \"string\") {\r\n                self.layer = self.map.getLayer(layer);\r\n            }\r\n            else {\r\n                self.layer = layer;\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.resetValues = function () {\r\n        const self = this;\r\n        self.history.length = 0;\r\n        self.historyIndex = 0;\r\n        setDrawState(self);\r\n        return self;\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState) {\r\n            return {\r\n                id: self.id,\r\n                layer: self.layer.exportState()\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        self.getLayer().then(function (layer) {\r\n            layer.importState(state.layer);\r\n        });\r\n    };\r\n})();"]}