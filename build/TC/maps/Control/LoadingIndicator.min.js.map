{"version":3,"sources":["control/LoadingIndicator.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","LoadingIndicator","self","this","apply","arguments","_waits","window","addEventListener","reset","inherit","ctlProto","prototype","CLASS","isDebug","template","dust","register","body_0","chk","ctx","w","__dustBody","startWait","e","layerId","layer","id","undefined","show","map","trigger","Consts","event","STARTLOADING","stopWait","wait","count","key","hide","STOPLOADING","result","call","on","BEFORELAYERADD","BEFORELAYERUPDATE","BEFOREFEATURESADD","LAYERADD","LAYERERROR","LAYERUPDATE","FEATURESADD","BEFOREFEATUREINFO","addWait","FEATUREINFO","NOFEATUREINFO","FEATUREINFOERROR","removeWait","msg","url","line","col","error","$","document","ajaxError","request","settings","uid","getUID"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.LoadingIndicator = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self._waits = {};\r\n\r\n    window.addEventListener('error', function () {\r\n        self.reset();\r\n        // Tell browser to run its own error handler as well\r\n        return false;\r\n    }, false);\r\n};\r\n\r\nTC.inherit(TC.control.LoadingIndicator, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.LoadingIndicator.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-load';\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template = TC.apiLocation + \"TC/templates/LoadingIndicator.html\";\r\n    }\r\n    else {\r\n        ctlProto.template = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-load-bar\\\"><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot1\\\"> </div><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot2\\\"> </div><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot3\\\"> </div><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot4\\\"> </div><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot5\\\"> </div><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot6\\\"> </div><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot7\\\"> </div><div class=\\\"tc-ctl-load-dots tc-ctl-load-dot8\\\"> </div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    ctlProto.startWait = function (e) {\r\n        const self = this;\r\n        const layerId = e.layer.id;\r\n        if (self._waits[layerId] === undefined) {\r\n            self._waits[layerId] = 0;\r\n        }\r\n        self._waits[layerId] = self._waits[layerId] + 1;\r\n        self.show();\r\n\r\n        self.map.trigger(TC.Consts.event.STARTLOADING);\r\n    };\r\n\r\n    ctlProto.stopWait = function (e) {\r\n        const self = this;\r\n        const layerId = e.layer.id;\r\n        var wait = self._waits[layerId];\r\n        if (wait > 0) {\r\n            wait = self._waits[layerId] = wait - 1;\r\n        }\r\n        if (!wait) {\r\n            delete self._waits[layerId];\r\n        }\r\n        var count = 0;\r\n        for (var key in self._waits) {\r\n            count++;\r\n        }\r\n        if (!count) {\r\n            self.hide();\r\n            self.map.trigger(TC.Consts.event.STOPLOADING);\r\n        }\r\n    };\r\n\r\n    ctlProto.reset = function (e) {\r\n        var self = this;\r\n        self._waits = {};\r\n        self.hide();\r\n        self.map.trigger(TC.Consts.event.STOPLOADING);\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n        map\r\n            .on(TC.Consts.event.BEFORELAYERADD + ' ' +\r\n                TC.Consts.event.BEFORELAYERUPDATE + ' ' +\r\n                TC.Consts.event.BEFOREFEATURESADD, function (e) { self.startWait(e); })\r\n            .on(TC.Consts.event.LAYERADD + ' ' +\r\n                TC.Consts.event.LAYERERROR + ' ' +\r\n                TC.Consts.event.LAYERUPDATE + ' ' +\r\n                TC.Consts.event.FEATURESADD, function (e) { self.stopWait(e); })\r\n            .on(TC.Consts.event.BEFOREFEATUREINFO, function () {\r\n                self.addWait(TC.Consts.event.FEATUREINFO);\r\n            })\r\n            .on(TC.Consts.event.FEATUREINFO + ' ' +\r\n                TC.Consts.event.NOFEATUREINFO + ' ' +\r\n                TC.Consts.event.FEATUREINFOERROR, function () {\r\n                self.removeWait(TC.Consts.event.FEATUREINFO);\r\n            });\r\n        if (!TC.isDebug) {\r\n            //Para evitar que se quede el indicador indefinidamente activo cuando hay un error en la p√°gina\r\n            window.addEventListener('error', function (msg, url, line, col, error) {\r\n                self.reset();\r\n                return false;\r\n            });\r\n\r\n            $(document).ajaxError(function (event, request, settings) {\r\n                self.reset();\r\n            });\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.addWait = function (uid) {\r\n        const self = this;\r\n        const result = uid || TC.getUID();\r\n        self.startWait({ layer: { id: result } });\r\n        return result;\r\n    };\r\n\r\n    ctlProto.removeWait = function (uid) {\r\n        this.stopWait({ layer: { id: uid } });\r\n    };\r\n\r\n})();\r\n"],"file":"../../control/LoadingIndicator.min.js"}