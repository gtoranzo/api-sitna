{"version":3,"sources":["Control/FullScreen.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","FullScreen","apply","this","arguments","fullScreenElement","document","documentElement","inherit","ctlProto","prototype","CLASS","isDebug","template","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","map","self","result","call","then","btn","div","querySelector","enabledFullScreen","addEventListener","Consts","event","CLICK","toggleFullScreen","fullscreenchangeListener","isFullScreen","classList","add","classes","ACTIVE","remove","setAttribute","getLocaleString","disable","requestFullScreen","elm","mozRequestFullScreen","webkitRequestFullScreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","enabled"],"mappings":"AAACA,GAAGC,QAAUD,GAAGC,YAEZD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGC,QAAQI,WAAa,WAGpBL,GAAGE,QAAQI,MAFAC,KAEYC,WAFZD,KAINE,kBAAoBC,SAASC,iBAGtCX,GAAGY,QAAQZ,GAAGC,QAAQI,WAAYL,GAAGE,UAErC,WACI,IAAIW,EAAWb,GAAGC,QAAQI,WAAWS,UAErCD,EAASE,MAAQ,iBAEbf,GAAGgB,QACHH,EAASI,SAAWjB,GAAGI,YAAc,+BAGrCS,EAASI,SAAW,WAAcC,KAAKC,SAASN,EAASE,MAAOK,GAAS,SAASA,EAAOC,EAAKC,GAAO,OAAOD,EAAIE,EAAE,8CAAiDC,EAAE,OAAQF,MAAWG,KAAQ,gBAAiBF,EAAE,eAAmBH,EAAOM,YAAa,EAAI,OAAON,GAGzQP,EAASM,SAAW,SAAUQ,GAC1B,MAAMC,EAAOrB,KACPsB,EAAS7B,GAAGE,QAAQY,UAAUK,SAASW,KAAKF,EAAMD,GAExDE,EAAOE,KAAK,WACR,MAAMC,EAAMJ,EAAKK,IAAIC,cAAc,IAAMN,EAAKb,MAAQ,QAEtD,GAAIa,EAAKO,oBAAqB,CAC1BH,EAAII,iBAAiBpC,GAAGqC,OAAOC,MAAMC,MAAO,WACxCX,EAAKY,qBAGT,MAAMC,EAA2B,WACzBb,EAAKc,eACLV,EAAIW,UAAUC,IAAI5C,GAAGqC,OAAOQ,QAAQC,QAGpCd,EAAIW,UAAUI,OAAO/C,GAAGqC,OAAOQ,QAAQC,QAE3Cd,EAAIgB,aAAa,QAASpB,EAAKc,eAAiBd,EAAKqB,gBAAgB,sBAAwBrB,EAAKqB,gBAAgB,iBAEtHvC,SAAS0B,iBAAiB,mBAAoBK,GAC9C/B,SAAS0B,iBAAiB,sBAAuBK,GACjD/B,SAAS0B,iBAAiB,yBAA0BK,GACpD/B,SAAS0B,iBAAiB,qBAAsBK,QAGhDb,EAAKsB,YAIb,OAAOrB,GAGXhB,EAASsC,kBAAoB,WACzB,IACIC,EADO7C,KACIE,kBACfC,SAASC,gBAAgBwC,kBAAoBC,EAAID,oBAC7CC,EAAIC,qBAAuBD,EAAIC,uBAC/BD,EAAIE,wBAA0BF,EAAIE,wBAAwBC,QAAQC,sBAClEJ,EAAIK,qBAAuBL,EAAIK,uBAGvC5C,EAAS6C,iBAAmB,WAExBhD,SAASgD,iBAAmBhD,SAASgD,mBACjChD,SAASiD,oBAAsBjD,SAASiD,sBACxCjD,SAASkD,uBAAyBlD,SAASkD,yBAC3ClD,SAASmD,kBAAoBnD,SAASmD,oBAG9ChD,EAAS6B,aAAe,WACpB,OAAOhC,SAASD,mBAAqBC,SAASoD,eAAiBpD,SAASqD,oBAAsBrD,SAASsD,qBAG3GnD,EAAS2B,iBAAmB,WACbjC,KACNmC,eADMnC,KACgBmD,mBADhBnD,KAC0C4C,qBAGzDtC,EAASsB,kBAAoB,WACzB,IACIiB,EADO7C,KACIE,kBACXwD,EAAUvD,SAASC,gBAAgBwC,mBAAqBC,EAAIC,sBAAwBD,EAAIE,yBAA2BF,EAAIK,oBAC3H,OAAOQ,GAA+B,mBAAb,GA5EjC","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.FullScreen = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.fullScreenElement = document.documentElement;\r\n};\r\n\r\nTC.inherit(TC.control.FullScreen, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.FullScreen.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-fscreen';\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template = TC.apiLocation + \"TC/templates/FullScreen.html\";\r\n    }\r\n    else {\r\n        ctlProto.template = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<button class=\\\"tc-ctl-fscreen-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"fscreen.tip\" }).w(\"\\\"></button>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        result.then(function () {\r\n            const btn = self.div.querySelector('.' + self.CLASS + '-btn');\r\n\r\n            if (self.enabledFullScreen()) {\r\n                btn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                    self.toggleFullScreen();                    \r\n                });\r\n\r\n                const fullscreenchangeListener = function () {\r\n                    if (self.isFullScreen()) {\r\n                        btn.classList.add(TC.Consts.classes.ACTIVE);\r\n                    }\r\n                    else {\r\n                        btn.classList.remove(TC.Consts.classes.ACTIVE);\r\n                    }\r\n                    btn.setAttribute('title', self.isFullScreen() ? self.getLocaleString(\"fscreen.tip.return\") : self.getLocaleString(\"fscreen.tip\"));\r\n                };\r\n                document.addEventListener('fullscreenchange', fullscreenchangeListener);\r\n                document.addEventListener('mozfullscreenchange', fullscreenchangeListener);\r\n                document.addEventListener('webkitfullscreenchange', fullscreenchangeListener);\r\n                document.addEventListener('MSFullscreenChange', fullscreenchangeListener);\r\n            } else {\r\n                // GLS: 19/02/2019 en lugar de ocultar el botón, deshabilitamos el control para que no quede espacio de más entre los botones\r\n                self.disable();                \r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.requestFullScreen = function () {\r\n        var self = this;\r\n        var elm = self.fullScreenElement;\r\n        document.documentElement.requestFullScreen ? elm.requestFullScreen() :\r\n            elm.mozRequestFullScreen ? elm.mozRequestFullScreen() :\r\n            elm.webkitRequestFullScreen ? elm.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT) :\r\n            elm.msRequestFullscreen && elm.msRequestFullscreen();\r\n    };\r\n\r\n    ctlProto.cancelFullScreen = function () {\r\n        var self = this;\r\n        document.cancelFullScreen ? document.cancelFullScreen() :\r\n            document.mozCancelFullScreen ? document.mozCancelFullScreen() :\r\n            document.webkitCancelFullScreen ? document.webkitCancelFullScreen() :\r\n            document.msExitFullscreen && document.msExitFullscreen();\r\n    };\r\n\r\n    ctlProto.isFullScreen = function () {\r\n        return document.fullScreenElement || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement;\r\n    };\r\n\r\n    ctlProto.toggleFullScreen = function () {\r\n        var self = this;\r\n        self.isFullScreen() ? self.cancelFullScreen() : self.requestFullScreen();\r\n    };\r\n\r\n    ctlProto.enabledFullScreen = function () {\r\n        var self = this;        \r\n        var elm = self.fullScreenElement;\r\n        var enabled = document.documentElement.requestFullScreen || elm.mozRequestFullScreen || elm.webkitRequestFullScreen || elm.msRequestFullscreen;        \r\n        return enabled && typeof (enabled) == \"function\";\r\n    };\r\n\r\n})();\r\n"],"file":"../../Control/FullScreen.min.js"}