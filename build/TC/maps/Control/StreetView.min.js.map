{"version":3,"sources":["control/StreetView.js"],"names":["TC","Control","syncLoadJS","apiLocation","Consts","url","GOOGLEMAPS","gMapsUrl","Cfg","proxyExceptions","push","control","StreetView","this","_sv","_mapActiveControl","apply","arguments","options","googleMapsKey","viewDiv","_startLonLat","inherit","ctlProto","prototype","CLASS","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","__dustBody","dispatchCanvasResize","event","document","createEvent","initEvent","map","div","querySelector","dispatchEvent","reset","ctl","view","transitionEvents","onTransitionend","Util","detectSafari","forEach","eventName","removeEventListener","call","setTimeout","addEventListener","layer","clearFeatures","classList","remove","classes","CHECKED","HIDDEN","self","getDiv","add","insertAdjacentElement","result","layerId","getUID","i","workLayers","length","type","layerType","VECTOR","id","loaded","addLayer","stealth","then","renderPromise","loadJS","window","Draggabilly","drag","containment","on","e","preset","btn","btnRect","getBoundingClientRect","dragRect","top","bottom","left","right","extent","getExtent","xy","Array","addMarker","cssClass","width","height","anchor","mapRect","xpos","devicePixelRatio","ypos","coords","wrap","getCoordinateFromPixel","callback","resolve","setPosition","CLICK","mapDiv","endProcess","COLLAPSED","resizeEvent","propertyName","VISIBLE","setDraggable","setVisible","stopPropagation","header","body","style","display","_previousActiveControl","activate","a","b","c","error","render","_set1stRenderPromise","Promise","reject","renderData","cache","err","out","innerHTML","waitId","ondrop","feature","bounds","getBounds","lonLat","reproject","crs","lng","lat","ondrag","li","getLoadingIndicator","addWait","setMarker","sv","center","heading","latLon","getPosition","getPov","Math","round","showsPopup","all","_markerPromises","setCenter","contains","google","maps","svDone","svOptions","position","LatLng","pov","pitch","zoom","fullscreenControl","zoomControlOptions","ControlPosition","LEFT_TOP","panControlOptions","setOptions","StreetViewPanorama","addListener","features","pegmanMarker","setStyle","refresh","svStatus","getStatus","removeWait","StreetViewStatus","OK","trigger","activeControl","deactivate","alert","ZERO_RESULTS","getLocaleString"],"mappings":"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","sourcesContent":["/// <reference path=\"../feature/Marker.js\" />\r\n/// <reference path=\"../feature/Point.js\" />\r\n/// <reference path=\"../ol/ol.js\" />\r\n\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\n(function () {\r\n    TC.Consts.url.GOOGLEMAPS = '//maps.googleapis.com/maps/api/js?v=3';\r\n    var gMapsUrl = TC.Consts.url.GOOGLEMAPS;\r\n    TC.Cfg.proxyExceptions = TC.Cfg.proxyExceptions || [];\r\n    TC.Cfg.proxyExceptions.push(TC.Consts.url.GOOGLEMAPS);\r\n\r\n    TC.control.StreetView = function () {\r\n        var self = this;\r\n        self._sv = null;\r\n        self._mapActiveControl = null;\r\n\r\n        TC.Control.apply(self, arguments);\r\n\r\n        if (self.options.googleMapsKey) {\r\n            gMapsUrl += '&key=' + self.options.googleMapsKey;\r\n        }\r\n\r\n        self.viewDiv = null;\r\n        self._startLonLat = null;\r\n\r\n        //self.render();\r\n    };\r\n\r\n    TC.inherit(TC.control.StreetView, TC.Control);\r\n\r\n    var ctlProto = TC.control.StreetView.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-sv';\r\n\r\n    ctlProto.template = {};\r\n\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/StreetView.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-view'] = TC.apiLocation + \"TC/templates/StreetViewView.html\";\r\n    } else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-sv-btn\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"sv.tip\" }).w(\"\\\"><div class=\\\"tc-ctl-sv-drag\\\"></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-view'] = function () { dust.register(ctlProto.CLASS + '-view', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-sv-btn-close\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"closeStreetView\" }).w(\"\\\"></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const dispatchCanvasResize = function () {\r\n        var event = document.createEvent('HTMLEvents');\r\n        event.initEvent('resize', true, false);\r\n        this.map.div.querySelector('canvas').dispatchEvent(event);\r\n    };\r\n\r\n    var preset = function (ctl) {\r\n        ctl.div.querySelector('.' + ctl.CLASS + '-btn').classList.add(TC.Consts.classes.CHECKED);\r\n        ctl.map.div.classList.add(ctl.CLASS + '-active');\r\n    };\r\n\r\n    var reset = function (ctl) {\r\n        const view = ctl.viewDiv;\r\n        const transitionEvents = ['webkitTransitionEnd', 'msTransitionEnd', 'oTransitionEnd', 'transitionend'];\r\n        const onTransitionend = function () {\r\n            if (!TC.Util.detectSafari()) {\r\n                transitionEvents.forEach(function (eventName) {\r\n                    view.removeEventListener(eventName, onTransitionend);\r\n                });\r\n            }\r\n\r\n            dispatchCanvasResize.call(ctl);\r\n        };\r\n\r\n        // Safari no lanza transitionend\r\n        if (TC.Util.detectSafari()) {\r\n            setTimeout(function () {\r\n                dispatchCanvasResize.call(ctl);\r\n            }, 500);\r\n        } else {\r\n            transitionEvents.forEach(function (eventName) {\r\n                view.addEventListener(eventName, onTransitionend);\r\n            });\r\n        }\r\n\r\n        ctl.layer.clearFeatures();\r\n        ctl.div.querySelector('.' + ctl.CLASS + '-btn').classList.remove(TC.Consts.classes.CHECKED);\r\n        ctl.div.querySelector('.' + ctl.CLASS + '-drag').classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl.map.div.classList.remove(ctl.CLASS + '-active');\r\n        ctl._startLonLat = null;\r\n    };\r\n\r\n    var resolve = function (ctl) {\r\n        var result = false;\r\n        const btn = ctl.div.querySelector('.' + ctl.CLASS + '-btn');\r\n        const drag = ctl.div.querySelector('.' + ctl.CLASS + '-drag');\r\n\r\n        var btnRect = btn.getBoundingClientRect();\r\n        var dragRect = drag.getBoundingClientRect();\r\n        drag.classList.add(TC.Consts.classes.HIDDEN);\r\n        if (dragRect.top < btnRect.top || dragRect.top > btnRect.bottom ||\r\n            dragRect.left < btnRect.left || dragRect.left > btnRect.right) {\r\n            // Hemos soltado fuera del botón: activar StreetView\r\n            result = true;\r\n            // Precarga de marcadores\r\n            var extent = ctl.map.getExtent();\r\n            var xy = [extent[2], extent[3]];\r\n            var deferreds = new Array(16);\r\n            for (var i = 0; i < 16; i++) {\r\n                ctl.layer.addMarker(xy, {\r\n                    cssClass: 'tc-marker-sv-' + i,\r\n                    width: 48,\r\n                    height: 48,\r\n                    anchor: [0, 1]\r\n                });\r\n            }\r\n            /////////////////////\r\n            // Activamos StreetView\r\n            var mapRect = ctl.map.div.getBoundingClientRect();\r\n            var xpos = (((dragRect.left * window.devicePixelRatio) + (dragRect.right * window.devicePixelRatio)) / 2) - (mapRect.left * window.devicePixelRatio);\r\n            var ypos = (dragRect.bottom * window.devicePixelRatio) - (mapRect.top * window.devicePixelRatio);\r\n            var coords = ctl.map.wrap.getCoordinateFromPixel([xpos, ypos]);\r\n            ctl.callback(coords);\r\n        }\r\n        else {\r\n            reset(ctl);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        if (!self.viewDiv) {\r\n            self.viewDiv = TC.Util.getDiv(self.options.viewDiv);\r\n            self.viewDiv.classList.add(self.CLASS + '-view');\r\n            self.viewDiv.classList.add(TC.Consts.classes.HIDDEN);\r\n            if (!self.options.viewDiv) {\r\n                map.div.insertAdjacentElement('beforebegin', self.viewDiv);\r\n            }\r\n        }\r\n\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.layer = null;\r\n        var layerId = self.getUID();\r\n        for (var i = 0; i < map.workLayers.length; i++) {\r\n            var layer = map.workLayers[i];\r\n            if (layer.type === TC.Consts.layerType.VECTOR && layer.id === layerId) {\r\n                self.layer = layer;\r\n                break;\r\n            }\r\n        }\r\n        if (!self.layer) {\r\n            map.loaded(function () {\r\n                map.addLayer({\r\n                    id: layerId,\r\n                    stealth: true,\r\n                    type: TC.Consts.layerType.VECTOR\r\n                }).then(function (layer) {\r\n                    self.layer = layer;\r\n                });\r\n            });\r\n        }\r\n\r\n        self.renderPromise().then(function () {\r\n            TC.loadJS(\r\n                !window.Draggabilly,\r\n                [TC.apiLocation + 'lib/draggabilly/draggabilly.pkgd.min.js'],\r\n                function () {\r\n                    const drag = new Draggabilly(self.div.querySelector('.' + self.CLASS + '-drag'), {\r\n                        containment: self.map.div\r\n                    });\r\n                    drag.on('dragStart', function (e) {\r\n                        preset(self);\r\n                    });\r\n                    drag.on('dragEnd', function (e) {\r\n                        resolve(self);\r\n                        drag.setPosition(0, 0);\r\n                    });\r\n                }\r\n            );\r\n\r\n            const view = self.viewDiv;\r\n            view.querySelector('.' + self.CLASS + '-btn-close').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                const mapDiv = self.map.div;\r\n                const endProcess = function () {\r\n                    mapDiv.classList.remove(TC.Consts.classes.COLLAPSED);\r\n                    const resizeEvent = document.createEvent('HTMLEvents');\r\n                    resizeEvent.initEvent('resize', false, false);\r\n                    mapDiv.dispatchEvent(resizeEvent); // Para evitar que salga borroso el mapa tras cerrar SV.\r\n                };\r\n                const transitionend = 'transitionend';\r\n                const onTransitionend = function (e) {\r\n                    if (e.propertyName === 'width' || e.propertyName === 'height') {\r\n                        view.removeEventListener(transitionend, onTransitionend);\r\n                        endProcess();\r\n                    }\r\n                };\r\n                view.removeEventListener(transitionend, onTransitionend);\r\n                view.addEventListener(transitionend, onTransitionend);\r\n                setTimeout(endProcess, 1000); // backup por si falla la transición.\r\n\r\n                view.classList.add(TC.Consts.classes.HIDDEN);\r\n                view.classList.remove(TC.Consts.classes.VISIBLE);\r\n                self.div.querySelector('.' + self.CLASS + '-drag').classList.remove(TC.Consts.classes.HIDDEN);\r\n                self.layer.wrap.setDraggable(false);\r\n                reset(self);\r\n                self._sv.setVisible(false);\r\n                e.stopPropagation();\r\n                const header = document.body.querySelector('header');\r\n                if (header) {\r\n                    header.style.display = '';\r\n                }\r\n\r\n                if (self._previousActiveControl) {\r\n                    self._previousActiveControl.activate();\r\n                }\r\n            });\r\n        }\r\n            , function (a, b, c) {\r\n                TC.error(\"Error de renderizado StreetView\");\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    ctlProto.render = function () {\r\n        const self = this;\r\n\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            self.renderData(null, function () {\r\n                if (dust.cache[self.CLASS + '-view']) {\r\n                    dust.render(self.CLASS + '-view', null, function (err, out) {\r\n                        //lo normal sería hacer el resolve después de volcar out en viewDiv\r\n                        //pero a veces fallaba\r\n                        //no se detonaba, sin dar error alguno\r\n                        //así que lo arreglo como a mí me gusta:\r\n                        setTimeout(function () {\r\n                            self.viewDiv.innerHTML = out;\r\n                            if (err) {\r\n                                TC.error(err);\r\n                            }\r\n                            resolve(self);\r\n                        }\r\n                            , 300);\r\n\r\n\r\n                        //console.log(\"Casi resuelto... \" + out.length);\r\n                        //self._$viewDiv.html(out);\r\n                        //if (err)\r\n                        //{\r\n                        //    TC.error(err);\r\n                        //}\r\n                        //resolve(self);\r\n                        //console.log(\"Resuelto!\");\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    TC.error(\"No hay dust.cache para StreetView\");\r\n                    resolve(self);\r\n                }\r\n            });\r\n        }));\r\n    };\r\n\r\n    var waitId = 0;\r\n\r\n    ctlProto.callback = function (coords) {\r\n        var self = this;\r\n        var geogCrs = 'EPSG:4326';\r\n\r\n        var ondrop = function (feature) {\r\n            if (self._sv) {\r\n                var bounds = feature.getBounds();                \r\n                lonLat = TC.Util.reproject([(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2], self.map.crs, geogCrs);                \r\n                self._sv.setPosition({ lng: lonLat[0], lat: lonLat[1] });\r\n            }\r\n        }\r\n\r\n        var ondrag = function (feature) {\r\n            if (self._sv) {\r\n                var bounds = feature.getBounds();\r\n                self._startLonLat = [(bounds[0] + bounds[2]) / 2, (bounds[1] + bounds[3]) / 2];\r\n            }\r\n        }\r\n\r\n        var li = self.map.getLoadingIndicator();\r\n        if (li) {\r\n            waitId = li.addWait(waitId);\r\n        }\r\n\r\n        const mapDiv = self.map.div;\r\n\r\n        var setMarker = function (sv, center) {\r\n            self.layer.clearFeatures();\r\n\r\n            var xy;\r\n            var heading;\r\n            if (sv) {\r\n                var latLon = sv.getPosition();\r\n                xy = TC.Util.reproject([latLon.lng(), latLon.lat()], geogCrs, self.map.crs);\r\n                heading = sv.getPov().heading;\r\n            }\r\n            else {\r\n                xy = coords;\r\n                heading = 0;\r\n            }\r\n            self.map.addMarker(xy, {\r\n                cssClass: 'tc-marker-sv-' + (Math.round(16.0 * heading / 360) + 16) % 16,\r\n                width: 48,\r\n                height: 48,\r\n                anchor: [0.4791666666666667, 0.7083333333333333],\r\n                layer: self.layer,\r\n                showsPopup: false\r\n            });\r\n            Promise.all(self.map._markerPromises).then(function () {\r\n                // Para poder arrastrar a pegman                \r\n                self.layer.wrap.setDraggable(true, ondrop, ondrag);\r\n            });\r\n\r\n            if (center) {\r\n                var setCenter = function () {\r\n                    self.map.setCenter(xy);\r\n                };\r\n                // Esperamos a que el mapa esté colapsado para centrarnos: ahorramos ancho de banda\r\n                if (mapDiv.classList.contains(TC.Consts.classes.COLLAPSED)) {\r\n                    setCenter();\r\n                }\r\n                else {\r\n                    setTimeout(setCenter, 1200);\r\n                }\r\n            }\r\n        };\r\n\r\n        TC.loadJS(\r\n            !window.google || !google.maps,\r\n            gMapsUrl,\r\n            function () {\r\n\r\n                if (window.google) {\r\n\r\n                    setMarker();\r\n\r\n                    const view = self.viewDiv;\r\n                    var lonLat = TC.Util.reproject(coords, self.map.crs, geogCrs);\r\n                    var svDone = view.classList.contains(TC.Consts.classes.VISIBLE);\r\n\r\n                    var svOptions = {\r\n                        position: new google.maps.LatLng(lonLat[1], lonLat[0]),\r\n                        pov: {\r\n                            heading: 0,\r\n                            pitch: 0\r\n                        },\r\n                        zoom: 1,\r\n                        fullscreenControl: false,\r\n                        zoomControlOptions: {\r\n                            position: google.maps.ControlPosition.LEFT_TOP\r\n                        },\r\n                        panControlOptions: {\r\n                            position: google.maps.ControlPosition.LEFT_TOP\r\n                        }\r\n                    };\r\n\r\n                    if (!self._sv) {\r\n                        self._sv = new google.maps.StreetViewPanorama(view, svOptions);\r\n                        google.maps.event.addListener(self._sv, 'position_changed', function () {\r\n                            setMarker(self._sv, view.classList.contains(TC.Consts.classes.VISIBLE));\r\n                        });\r\n                        google.maps.event.addListener(self._sv, 'pov_changed', function () {\r\n                            if (self.layer.features && self.layer.features.length > 0) {\r\n                                var pegmanMarker = self.layer.features[0];\r\n\r\n                                delete pegmanMarker.options.url;\r\n                                pegmanMarker.options.cssClass = 'tc-marker-sv-' + ((Math.round(16.0 * self._sv.getPov().heading / 360) + 16) % 16);\r\n                                pegmanMarker.setStyle(pegmanMarker.options);\r\n\r\n                                self.layer.refresh();\r\n                            }\r\n                        });\r\n                        google.maps.event.addListener(self._sv, 'status_changed', function () {\r\n                            var svStatus = self._sv.getStatus();\r\n                            if (li) {\r\n                                li.removeWait(waitId);\r\n                            }\r\n                            if (svStatus === google.maps.StreetViewStatus.OK) {\r\n\r\n                                mapDiv.classList.add(TC.Consts.classes.COLLAPSED);\r\n                                const resizeEvent = document.createEvent('HTMLEvents');\r\n                                resizeEvent.initEvent('resize', false, false);\r\n                                mapDiv.dispatchEvent(resizeEvent);\r\n\r\n                                const endProcess = function () {\r\n                                    google.maps.event.trigger(self._sv, 'resize');\r\n\r\n                                    dispatchCanvasResize.call(self);\r\n                                };\r\n                                var transitionend = 'transitionend';\r\n                                const onTransitionend = function (e) {\r\n                                    if (e.propertyName === 'width' || e.propertyName === 'height') {\r\n                                        if (!svDone) {\r\n                                            svDone = true;\r\n                                            view.removeEventListener(transitionend, onTransitionend);\r\n                                            endProcess();\r\n                                        }\r\n                                    }\r\n                                };\r\n                                view.removeEventListener(transitionend, onTransitionend);\r\n                                view.addEventListener(transitionend, onTransitionend);\r\n\r\n                                setTimeout(endProcess, 1000); // Backup por si no salta el transitionend.\r\n\r\n                                if (!view.classList.contains(TC.Consts.classes.VISIBLE)) {\r\n                                    self._sv.setVisible(true);\r\n                                    setMarker(self._sv, true);\r\n\r\n                                    //apagar lo que sea que esté encendido (probablemente featInfo)\r\n                                    //al cerrar con el aspa, volverá a detonarse StreetView.deactivate()\r\n                                    //que, a su vez, restaurará el control anterior (FeatureInfo)\r\n                                    if (self.map.activeControl) {\r\n                                        self._previousActiveControl = self.map.activeControl;\r\n                                        self.map.activeControl.deactivate(true);\r\n                                    }\r\n\r\n                                    setTimeout(function () {\r\n                                        view.style.left = '';\r\n                                        view.style.top = '';\r\n                                        // triggers transitionend\r\n                                        view.classList.remove(TC.Consts.classes.HIDDEN);\r\n                                        view.classList.add(TC.Consts.classes.VISIBLE);\r\n                                    }, 200);\r\n\r\n                                    const header = document.body.querySelector('header');\r\n                                    if (header) {\r\n                                        header.style.display = 'none';\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                TC.alert(svStatus === google.maps.StreetViewStatus.ZERO_RESULTS ? self.getLocaleString('noStreetView') : self.getLocaleString('streetViewUnknownError'));\r\n                                if (self._startLonLat) {\r\n                                    self.callback(self._startLonLat);\r\n                                }\r\n                                else {\r\n                                    self.layer.wrap.setDraggable(false);\r\n                                    reset(self);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        self._sv.setOptions(svOptions);\r\n                    }\r\n                    setMarker(self._sv);\r\n                }\r\n                else {\r\n                    reset(self);\r\n                }\r\n            }, false, true);\r\n    };\r\n})();"],"file":"../../control/StreetView.min.js"}