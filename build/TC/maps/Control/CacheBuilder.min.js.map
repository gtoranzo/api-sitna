{"version":3,"sources":["Control/CacheBuilder.js"],"names":["TC","control","SWCacheClient","syncLoadJS","apiLocation","Consts","classes","CONNECTION_OFFLINE","CONNECTION_WIFI","CONNECTION_MOBILE","OFFLINE","appCache","window","applicationCache","_appCacheBuilders","_appCacheUpdater","e","url","Util","getQueryStringParams","i","len","length","ctl","type","trigger","event","MAPCACHEDOWNLOAD","MAPCACHEDELETE","MAPCACHEPROGRESS","loaded","total","MAPCACHEERROR","reason","status","mustSendCacheEvents","requestManifest","Promise","resolve","reject","manifestFile","document","documentElement","getAttribute","ajax","method","responseType","then","data","loadJS","hex_md5","HASH","hash","idxEnd","indexOf","substr","lines","$","grep","split","elm","shift","urls","catch","sendAppCacheEvent","parent","referrer","isSameOrigin","location","href","addEventListener","CacheBuilder","self","this","apply","arguments","cs","_classSelector","CLASS","_selectors","DRAW","DRAWING","PROGRESS","NEW","LIST","LISTITEM","OKBTN","NEWBTN","SAVEBTN","CANCELBTN","EDITBTN","VIEWBTN","DELETEBTN","TILECOUNT","NAMETB","TEXTBOX","EXIT","OFFPANEL","BLLIST","BLLISTITEM","BLLISTTEXT","RNGMAXRES","SEARCH","EMPTYLIST","OFFLINEHIDDEN","storedMaps","push","localStorage","key","LOCAL_STORAGE_KEY_PREFIX","ROOT_CACHE_NAME","values","getItem","extent","getExtentFromString","map","name","join","decodeURIComponent","sort","a","b","error","getLocaleString","options","extend","_dialogDiv","getDiv","dialogDiv","_$dialogDiv","body","appendChild","mapIsOffline","pathname","CACHE_REQUEST_PATH","querySelectorAll","forEach","classList","add","HIDDEN","Control","wrap","isDownloading","baseLayers","avgTileSize","Cfg","requestSchemas","minResolution","currentMap","_loadedCount","pushState","history","state","result","_offlinePanelDiv","newPath","replace","params","MAP_DEFINITION_PARAM_NAME","MAP_EXTENT_PARAM_NAME","SERVICE_WORKER_FLAG","newParams","param","querySelector","setAttribute","connection","navigator","mozConnection","webkitConnection","onlineHandler","panel","remove","undefined","inherit","ctlProto","prototype","COOKIE_KEY_PREFIX","_states","READY","EDIT","DOWNLOADING","DELETING","_actions","CREATE","DELETE","offlineControls","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","f","get","x","else","body_1","block","body_2","body_3","s","body_4","__dustBody","p","rebase","getPath","str","parseFloat","setNameReadyState","li","formatNumber","number","toString","updateResolutions","opts","resDiv","range","resText","resLevel","resLeft","resolutions","getResolutions","rangeValue","value","Math","floor","parseInt","resValue","Number","toLocaleString","locale","disabled","style","left","innerHTML","updateThumbnails","cb","idx","checked","schema","filter","layerId","tml","resolution","tileMatrixLimits","res","findTileMatrixLimits","qsIdx","j","lenj","l","id","layerNames","matrixSet","format","tagName","parentElement","backgroundSize","backgroundPosition","backgroundImage","mId","rt","cl","formatSize","size","quantity","showEstimatedMapSize","text","tileCount","ii","jj","cr","rb","estimatedMapSize","round","getListElementByMapUrl","hashIdx","lis","div","anchor","openCachedPage","iframe","createElement","display","closeCachedPage","removeChild","saveMapToStorage","setItem","encodeURIComponent","removeMap","findStoredMap","removeItem","removeMapFromStorage","getListElementByMapName","inArray","splice","removeAttribute","render","callback","_set1stRenderPromise","renderObject","listId","getUID","getRenderedHtml","html","CLICK","preventDefault","selectionStart","selectionEnd","focus","renderData","generateCache","_updateReadyState","setEditState","setReadyState","cancelCacheRequest","list","EventTarget","listenerBySelector","startDeleteMap","target","textbox","setNameEditingState","newName","btn","showExtent","contains","ACTIVE","viewBtn","mapName","layer","clearFeatures","addPolygon","showsPopup","zoomToFeatures","features","trackSearch","searchListener","searchTerm","toLowerCase","mapLis","matches","removeProperty","visibility","r","RegExp","test","textContent","some","hidden","_filter","trim","checkbox","layerType","WMTS","updateRequestSchemas","rangeListener","isFunction","err","Error","msg","returnValue","call","serviceWorker","count","action","obj","hashStorageKey","cacheUrlList","one","firstLoad","confirm","reload","offlinePanelDiv","onLine","offPanel","drawId","layerPromise","addLayer","VECTOR","stealth","styles","line","all","renderPromise","addControl","mode","geom","RECTANGLE","persistent","objects","boxDraw","setLayer","on","DRAWSTART","toast","msgType","INFO","DRAWEND","points","feature","geometry","pStart","pEnd","minx","min","maxx","max","miny","maxy","setExtent","checkboxes","getRequestSchemas","layers","blListTextKey","showModal","openCallback","time","Date","opt","year","month","day","hour","minute","second","closeCallback","CONTROLDEACTIVATE","_state","EDITING","addRenderedListNode","blList","isLayerAdded","isValidLayer","mustReproject","detectSafari","detectIOS","parser","DOMParser","parseFromString","firstChild","LAYERADD","LAYERREMOVE","mapDefString","extentString","ready","offCtls","offCtl","toUpperCase","concat","getControlsByClass","controls","disable","putLayerOnTop","mapDef","JSON","parse","atob","excludedLayers","baseLayer","protocol","urlIdx","tms","tmsIdx","setBaseLayer","removeLayer","removeHash","serviceWorkerEnabled","DISABLED","alert","addMap","cookie","showDownloadProgress","handleError","detectIE","isArray","cancel","activate","startRequest","closeModal","setDownloadingState","requestCache","storageInfo","temporaryStorage","webkitTemporaryStorage","queryUsageAndQuota","usedBytes","grantedBytes","availableMB","mapSize","availableStorage","ieVersion","maxResourceCount","manifestResourceCount","confirmRequest","resourceCount","urlList","createCache","silent","getExtent","filterTml","arr","trimTml","intersectionExtent","POSITIVE_INFINITY","NEGATIVE_INFINITY","rs","unitsPerTile","tSize","origin","precision","pow","isGeo","DEGREE_PRECISION","METER_PRECISION","mapDefinition","bBox","ceil","Array","layerUrl","shortFormat","formatIdx","btoa","stringify","u","lastIndexOf","urlPattern","getGetTilePattern","k","lenk","m","deleteCache","deleteMap","confirmText","setDeletingState","current","percentString","width","resolutionMapper","allResolutions","maxRes","minRes","ri"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.SWCacheClient) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/SWCacheClient');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.Consts.classes.CONNECTION_OFFLINE = TC.Consts.classes.CONNECTION_OFFLINE || 'tc-conn-offline';\r\n    TC.Consts.classes.CONNECTION_WIFI = TC.Consts.classes.CONNECTION_WIFI || 'tc-conn-wifi';\r\n    TC.Consts.classes.CONNECTION_MOBILE = TC.Consts.classes.CONNECTION_MOBILE || 'tc-conn-mobile';\r\n    TC.Consts.classes.OFFLINE = TC.Consts.classes.OFFLINE || 'tc-offline';\r\n\r\n    var ALREADY_EXISTS = 'already_exists';\r\n\r\n    var appCache = window.applicationCache;\r\n\r\n    if (!TC._appCacheBuilders) {\r\n        TC._appCacheBuilders = [];\r\n    }\r\n\r\n    if (!TC._appCacheUpdater) {\r\n        TC._appCacheUpdater = function (e, url) {\r\n            var params = TC.Util.getQueryStringParams(url);\r\n            for (var i = 0, len = TC._appCacheBuilders.length; i < len; i++) {\r\n                var ctl = TC._appCacheBuilders[i];\r\n                switch (e.type) {\r\n                    case 'cached':\r\n                        // Nuevo mapa\r\n                        ctl.trigger(TC.Consts.event.MAPCACHEDOWNLOAD, { url: url });\r\n                        break;\r\n                    case 'obsolete':\r\n                        // Borrado de mapa\r\n                        ctl.trigger(TC.Consts.event.MAPCACHEDELETE, { url: url });\r\n                        break;\r\n                    case 'checking':\r\n                        break;\r\n                    case 'progress':\r\n                        ctl.trigger(TC.Consts.event.MAPCACHEPROGRESS, { url: url, loaded: e.loaded, total: e.total });\r\n                        break;\r\n                    case 'error':\r\n                        ctl.trigger(TC.Consts.event.MAPCACHEERROR, { url: url, reason: e.reason, status: e.status });\r\n                        break;\r\n                    case 'noupdate':\r\n                    case 'updateready':\r\n                        // En este caso se está pidiendo un mapa que ya tenemos pedido de antes\r\n                        ctl.trigger(TC.Consts.event.MAPCACHEERROR, { url: url, reason: ALREADY_EXISTS, status: e.status });\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    var manifestUrlList;\r\n    var requestManifest = function () {\r\n        return new Promise(function (resolve, reject) {\r\n            if (manifestUrlList && manifestUrlList.length) {\r\n                resolve(manifestUrlList);\r\n            }\r\n            else {\r\n                var manifestFile = document.documentElement.getAttribute('manifest');\r\n                if (manifestFile) {\r\n                    TC.ajax({\r\n                        url: manifestFile,\r\n                        method: 'GET',\r\n                        responseType: 'text'\r\n                    }).then(function (data) {\r\n                        TC.loadJS(\r\n                            !window.hex_md5,\r\n                            [TC.apiLocation + TC.Consts.url.HASH],\r\n                            function () {\r\n                                var hash = hex_md5(data);\r\n                                var idxEnd = data.indexOf('NETWORK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('FALLBACK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('SETTINGS:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                var lines = $.grep(data.split(/[\\n\\r]/), function (elm) {\r\n                                    return elm.length > 0 && elm.indexOf('#') !== 0 && elm !== 'CACHE:';\r\n                                });\r\n                                // Eliminamos la primera línea porque siempre es CACHE MANIFEST\r\n                                lines.shift();\r\n                                resolve({\r\n                                    hash: hash,\r\n                                    urls: lines\r\n                                });\r\n                            }\r\n                        );\r\n                    }).catch(function () {\r\n                        reject();\r\n                    });\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    if (appCache) {\r\n        const sendAppCacheEvent = (function () {\r\n            var mustSendCacheEvents = window.parent !== window && document.referrer && TC.Util.isSameOrigin(document.referrer) && parent.TC && parent.TC._appCacheUpdater;\r\n            return function (e) {\r\n                if (mustSendCacheEvents) {\r\n                    parent.TC._appCacheUpdater(e, location.href);\r\n                }\r\n            }\r\n        })();\r\n\r\n        // Fired after the first cache of the manifest.\r\n        appCache.addEventListener('cached', sendAppCacheEvent, false);\r\n\r\n        //// Checking for an update. Always the first event fired in the sequence.\r\n        //appCache.addEventListener('checking', handleCacheEvent, false);\r\n\r\n\r\n        //// An update was found. The browser is fetching resources.\r\n        //appCache.addEventListener('downloading', handleCacheEvent, false);\r\n\r\n        // The manifest returns 404 or 410, the download failed,\r\n        // or the manifest changed while the download was in progress.\r\n        appCache.addEventListener('error', sendAppCacheEvent, false);\r\n\r\n        // Fired after the first download of the manifest.\r\n        appCache.addEventListener('noupdate', sendAppCacheEvent, false);\r\n\r\n        // Fired if the manifest file returns a 404 or 410.\r\n        // This results in the application cache being deleted.\r\n        appCache.addEventListener('obsolete', sendAppCacheEvent, false);\r\n\r\n        // Fired for each resource listed in the manifest as it is being fetched.\r\n        appCache.addEventListener('progress', sendAppCacheEvent, false);\r\n\r\n        // Fired when the manifest resources have been newly redownloaded.\r\n        appCache.addEventListener('updateready', sendAppCacheEvent, false);\r\n    }\r\n\r\n    TC.control.CacheBuilder = function () {\r\n        var self = this;\r\n\r\n        TC.control.SWCacheClient.apply(this, arguments);\r\n\r\n        var cs = self._classSelector = '.' + self.CLASS;\r\n        self._selectors = {\r\n            DRAW: cs + '-draw',\r\n            DRAWING: cs + '-drawing',\r\n            PROGRESS: cs + '-progress',\r\n            NEW: cs + '-new',\r\n            LIST: cs + '-list',\r\n            LISTITEM: cs + '-list > li',\r\n            OKBTN: cs + '-btn-ok',\r\n            NEWBTN: cs + '-btn-new',\r\n            SAVEBTN: '.tc-btn-save',\r\n            CANCELBTN: '.tc-btn-cancel',\r\n            EDITBTN: '.tc-btn-edit',\r\n            VIEWBTN: '.tc-btn-view',\r\n            DELETEBTN: '.tc-btn-delete',\r\n            TILECOUNT: cs + '-tile-count',\r\n            NAMETB: cs + '-txt-name',\r\n            TEXTBOX: 'input.tc-textbox',\r\n            EXIT: cs + '-link-exit',\r\n            OFFPANEL: cs + '-off-panel',\r\n            BLLIST: cs + '-bl-list',\r\n            BLLISTITEM: cs + '-bl-list > li',\r\n            BLLISTTEXT: cs + '-bl-panel-txt',\r\n            RNGMAXRES: cs + '-rng-maxres',\r\n            SEARCH: cs + '-map-available-srch',\r\n            EMPTYLIST: cs + '-map-available-empty',\r\n            OFFLINEHIDDEN: '[data-no-cb]'\r\n        };\r\n\r\n        self.storedMaps = [];\r\n\r\n        TC._appCacheBuilders.push(self);\r\n\r\n        // Carga de mapas guardados\r\n        try {\r\n            if (window.localStorage) {\r\n                for (var i = 0, len = localStorage.length; i < len; i++) {\r\n                    var key = localStorage.key(i);\r\n                    if (key.indexOf(self.LOCAL_STORAGE_KEY_PREFIX) === 0 && key !== self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash') {\r\n                        // Es un nombre de mapa y no es el hash de integridad de la cache root\r\n                        var values = localStorage.getItem(key).split(\" \");\r\n                        var extent = getExtentFromString(values.shift());\r\n                        var name = values.join(\" \");\r\n                        var map = {\r\n                            name: name,\r\n                            extent: extent,\r\n                            url: decodeURIComponent(key.substr(self.LOCAL_STORAGE_KEY_PREFIX.length))\r\n                        }\r\n                        self.storedMaps.push(map);\r\n                    }\r\n                }\r\n                self.storedMaps.sort(function (a, b) {\r\n                    if (a.name > b.name) {\r\n                        return 1;\r\n                    }\r\n                    if (a.name < b.name) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n        }\r\n        catch (e) {\r\n            TC.error(self.getLocaleString('couldNotAccessLocalStorage'));\r\n        }\r\n\r\n        var options = $.extend({}, len > 1 ? arguments[1] : arguments[0]);\r\n        self._dialogDiv = TC.Util.getDiv(options.dialogDiv);\r\n        self._$dialogDiv = $(self._dialogDiv);\r\n        if (!options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        self.mapIsOffline = location.pathname.indexOf('/' + self.CACHE_REQUEST_PATH) === location.pathname.length - self.CACHE_REQUEST_PATH.length - 1;\r\n        if (self.mapIsOffline) {\r\n            document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                elm.classList.add(TC.Consts.classes.HIDDEN);\r\n            })\r\n        }\r\n\r\n        TC.Control.apply(self, arguments);\r\n        self.wrap = new TC.wrap.control.CacheBuilder(self);\r\n\r\n        self.isDownloading = false;\r\n        self.baseLayers = [];\r\n\r\n        self.options.avgTileSize = self.options.avgTileSize || TC.Cfg.avgTileSize;\r\n        self.requestSchemas = [];\r\n        self.minResolution = 0;\r\n        self.currentMap = null;\r\n\r\n        self._loadedCount = 0;\r\n\r\n        // Actualización del enlace al modo online\r\n        // Parche para detectar cambios en el hash. Lo usamos para actualizar los enlaces a los idiomas\r\n        var pushState = history.pushState;\r\n        history.pushState = function (state) {\r\n            var result;\r\n            //if (typeof history.onpushstate == \"function\") {\r\n            //    history.onpushstate({ state: state });\r\n            //}\r\n            result = pushState.apply(history, arguments);\r\n            if (self._offlinePanelDiv) {\r\n                var newPath = location.pathname.replace('/' + self.CACHE_REQUEST_PATH, '/');\r\n                var params = TC.Util.getQueryStringParams();\r\n                delete params[self.MAP_DEFINITION_PARAM_NAME];\r\n                delete params[self.MAP_EXTENT_PARAM_NAME];\r\n                delete params[self.SERVICE_WORKER_FLAG];\r\n                var newParams = $.param(params);\r\n                if (newParams.length) {\r\n                    newParams = '?' + newParams;\r\n                }\r\n                var href = newPath + newParams + location.hash;\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).setAttribute('href', href);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Detección de estado de conexión\r\n        var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection || {};\r\n        var onlineHandler = function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_WIFI);\r\n\r\n                var type = connection.type;\r\n                switch (type) {\r\n                    case 1:\r\n                    case 2:\r\n                    case undefined:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_WIFI);\r\n                        break;\r\n                    default:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_MOBILE);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        if (connection.addEventListener) {\r\n            connection.addEventListener('typechange', onlineHandler);\r\n        }\r\n        window.addEventListener('online', onlineHandler);\r\n        window.addEventListener('offline', function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_WIFI);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.inherit(TC.control.CacheBuilder, TC.control.SWCacheClient);\r\n\r\n    var ctlProto = TC.control.CacheBuilder.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-cbuild';\r\n    ctlProto.MAP_DEFINITION_PARAM_NAME = \"map-def\";\r\n    ctlProto.MAP_EXTENT_PARAM_NAME = \"map-extent\";\r\n    ctlProto.LOCAL_STORAGE_KEY_PREFIX = \"TC.offline.map.\";\r\n    ctlProto.ROOT_CACHE_NAME = \"root\";\r\n    ctlProto.COOKIE_KEY_PREFIX = \"TC.offline.map.\";\r\n    ctlProto.CACHE_REQUEST_PATH = \"offline\";\r\n    ctlProto.SERVICE_WORKER_FLAG = 'sw';\r\n    ctlProto._states = {\r\n        READY: 'ready',\r\n        EDIT: 'editing',\r\n        DOWNLOADING: 'downloading',\r\n        DELETING: 'deleting'\r\n    };\r\n    ctlProto._actions = {\r\n        CREATE: 'create',\r\n        DELETE: 'delete'\r\n    };\r\n    ctlProto.offlineControls = [\r\n        'attribution',\r\n        'basemapSelector',\r\n        'cacheBuilder',\r\n        'click',\r\n        'coordinates',\r\n        'draw',\r\n        'edit',\r\n        'geolocation',\r\n        'loadingIndicator',\r\n        'measure',\r\n        'navBar',\r\n        'popup',\r\n        'print',\r\n        'scale',\r\n        'scaleBar',\r\n        'scaleSelector',\r\n        'state',\r\n        'fullScreen'\r\n    ];\r\n\r\n    TC.Consts.event.MAPCACHEDOWNLOAD = TC.Consts.event.MAPCACHEDOWNLOAD || 'mapcachedownload.tc';\r\n    TC.Consts.event.MAPCACHEDELETE = TC.Consts.event.MAPCACHEDELETE || 'mapcachedelete.tc';\r\n    TC.Consts.event.MAPCACHEPROGRESS = TC.Consts.event.MAPCACHEPROGRESS || 'mapcacheprogress.tc';\r\n    TC.Consts.event.MAPCACHEERROR = TC.Consts.event.MAPCACHEERROR || 'mapcacheerror.tc';\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/CacheBuilder.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-map-node'] = TC.apiLocation + \"TC/templates/CacheBuilderMapNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-bl-node'] = TC.apiLocation + \"TC/templates/CacheBuilderBaseLayerNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/CacheBuilderDialog.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-off-panel'] = TC.apiLocation + \"TC/templates/CacheBuilderOfflinePanel.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"offlineMaps\" }).w(\"</h2><div class=\\\"tc-ctl-cbuild-content\\\"><div class=\\\"tc-ctl-cbuild-draw tc-hidden\\\"></div><i class=\\\"tc-ctl-cbuild-map-search-icon\\\"></i><input type=\\\"search\\\" list=\\\"\").f(ctx.get([\"listId\"], false), ctx, \"h\").w(\"\\\" class=\\\"tc-ctl-cbuild-map-available-srch tc-textbox\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cb.filter.plhr\" }).w(\"\\\"\").x(ctx.get([\"storedMaps\"], false), ctx, { \"else\": body_1, \"block\": body_2 }, {}).w(\" maxlength=\\\"200\\\" /> <ul id=\\\"\").f(ctx.get([\"listId\"], false), ctx, \"h\").w(\"\\\" class=\\\"tc-ctl-cbuild-list\\\"><li class=\\\"tc-ctl-cbuild-map-available-empty\\\"\").x(ctx.get([\"storedMaps\"], false), ctx, { \"block\": body_3 }, {}).w(\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"cb.noMaps\" }).w(\"</span></li><li class=\\\"tc-ctl-cbuild-map-not\\\" hidden><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"noMatches\" }).w(\"</span></li>\").s(ctx.get([\"storedMaps\"], false), ctx, { \"block\": body_4 }, {}).w(\"</ul><div class=\\\"tc-ctl-cbuild-new\\\"><button class=\\\"tc-button tc-icon-button tc-ctl-cbuild-btn-new\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"newofflinemap\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"newOfflineMap\" }).w(\"</button></div><div class=\\\"tc-ctl-cbuild-drawing tc-hidden\\\"><div class=\\\"tc-ctl-cbuild-tile-cmd\\\"><button class=\\\"tc-button tc-icon-button tc-ctl-cbuild-btn-cancel-draw\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"</button></div></div><div class=\\\"tc-ctl-cbuild-progress tc-hidden\\\"><p>\").h(\"i18n\", ctx, {}, { \"$key\": \"cb.DownloadingMap|s\" }).w(\": <span class=\\\"tc-ctl-cbuild-progress-count\\\"></span></p><div class=\\\"tc-ctl-cbuild-progress-bar\\\"><div class=\\\"tc-ctl-cbuild-progress-ratio\\\" style=\\\"width:0\\\"></div></div><button class=\\\"tc-button tc-icon-button tc-ctl-cbuild-btn-cancel-dl\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"</button></div></div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\" disabled\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk; } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\" hidden\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.p(\"tc-ctl-cbuild-map-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_4.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-map-node'] = function () { dust.register(ctlProto.CLASS + '-map-node', body_0); function body_0(chk, ctx) { return chk.w(\"<li data-extent=\\\"\").f(ctx.get([\"extent\"], false), ctx, \"h\").w(\"\\\"><span><a href=\\\"\").f(ctx.get([\"url\"], false), ctx, \"h\").w(\"\\\" title=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\">\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"</a></span><input class=\\\"tc-textbox tc-hidden\\\" type=\\\"text\\\" value=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" /><button class=\\\"tc-btn-save tc-hidden\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"save\" }).w(\"\\\"></button><button class=\\\"tc-btn-cancel tc-hidden\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"\\\"></button><button class=\\\"tc-btn-edit\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"editMapName\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"editMapName\" }).w(\"</button><button class=\\\"tc-btn-view\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"viewMapExtent\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"viewMapExtent\" }).w(\"</button><button class=\\\"tc-btn-delete\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteMap\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteMap\" }).w(\"</button></li>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-bl-node'] = function () { dust.register(ctlProto.CLASS + '-bl-node', body_0); function body_0(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-cbuild-bl-node\\\" data-tc-layer-uid=\\\"\").f(ctx.get([\"id\"], false), ctx, \"h\").w(\"\\\"><label style=\\\"background-size: 100% 100%; background-image: url(\").f(ctx.get([\"thumbnail\"], false), ctx, \"h\").w(\")\\\"><input type=\\\"checkbox\\\" name=\\\"cbbl\\\" value=\\\"\").f(ctx.get([\"id\"], false), ctx, \"h\").w(\"\\\" disabled><span>\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span></label></li>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-cbuild-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"newOfflineMap\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><input type=\\\"text\\\" class=\\\"tc-ctl-cbuild-txt-name\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"nameRequired\" }).w(\"\\\" required /><div class=\\\"tc-ctl-cbuild-bl-panel\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"availableOfflineMaps\" }).w(\"</h4><p class=\\\"tc-ctl-cbuild-bl-panel-txt\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"selectAtLeastOne\" }).w(\"</p><ul class=\\\"tc-ctl-cbuild-bl-list\\\"></ul></div><div class=\\\"tc-ctl-cbuild-res-panel\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"maxRes\" }).w(\"</h4><div class=\\\"tc-ctl-cbuild-res\\\"></div><input type=\\\"range\\\" class=\\\"tc-ctl-cbuild-rng-maxres\\\" disabled value=\\\"0\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"maxRes\" }).w(\"\\\"></div><div class=\\\"tc-ctl-cbuild-tile-count\\\"></div></div><div class=\\\"tc-modal-footer\\\"><button class=\\\"tc-button tc-modal-close tc-ctl-cbuild-btn-ok\\\" disabled>\").h(\"i18n\", ctx, {}, { \"$key\": \"ok\" }).w(\"</button><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close tc-ctl-cbuild-btn-cancel\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"</button></div></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-off-panel'] = function () { dust.register(ctlProto.CLASS + '-off-panel', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-cbuild-off-panel tc-conn-wifi\\\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"offlineMap\" }).w(\"</span> <a href=\\\"\\\" class=\\\"tc-ctl-cbuild-link-exit\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"returnToOnlineMaps\" }).w(\"\\\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"returnToOnlineMaps\" }).w(\"</span></a></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const getExtentFromString = function (str) {\r\n        return $.map(decodeURIComponent(str).split(','), function (elm) {\r\n            return parseFloat(elm);\r\n        });\r\n    };\r\n\r\n    const setDownloadingState = function (ctl) {\r\n        ctl._state = ctl._states.DOWNLOADING;\r\n        TC.Util.closeModal();\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = true;\r\n        ctl.layer.clearFeatures();\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setDeletingState = function (ctl) {\r\n        ctl._state = ctl._states.DELETING;\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelectorAll(ctl._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.add(TC.Consts.classes.DISABLED);\r\n        });\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = false;\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = '';\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setNameEditingState = function (ctl, li) {\r\n        li.querySelector('span').classList.add(TC.Consts.classes.HIDDEN);\r\n        const textbox = li.querySelector(ctl._selectors.TEXTBOX);\r\n        textbox.classList.remove(TC.Consts.classes.HIDDEN);\r\n        textbox.value = li.querySelector('span a').innerHTML;\r\n        textbox.focus();\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    const setNameReadyState = function (ctl, li) {\r\n        li.querySelector('span').classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.TEXTBOX).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    var formatNumber = function (number) {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    };\r\n\r\n    var updateResolutions = function (ctl, options) {\r\n        var opts = options || {};\r\n        const resDiv = ctl._dialogDiv.querySelector(ctl._classSelector + '-res');\r\n        const range = ctl._dialogDiv.querySelector(ctl._selectors.RNGMAXRES);\r\n        var resolutions = ctl.getResolutions();\r\n        var resText, resLevel, resLeft;\r\n        if (resolutions.length) {\r\n            if (ctl.minResolution) {\r\n                // Si ya había resolución previa y no se ha tocado el slider, se actualiza su valor\r\n                if (opts.rangeValue === undefined) {\r\n                    for (var i = 0, len = resolutions.length; i < len; i++) {\r\n                        if (ctl.minResolution >= resolutions[i]) {\r\n                            range.value = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (opts.rangeValue === undefined) {\r\n                    range.value = Math.floor(resolutions.length / 2);\r\n                }\r\n            }\r\n            range.setAttribute('max', resolutions.length - 1);\r\n            resLevel = parseInt(range.value);\r\n            var resValue = Math.floor(new Number(resolutions[resLevel]) * 1000) / 1000;\r\n            resText = ctl.getLocaleString('metersPerPixel', {\r\n                value: resValue.toLocaleString((ctl.map ? ctl.map.options.locale : TC.Cfg.locale).replace('_', '-'))\r\n            });\r\n            resLeft = (resLevel + 1) * 100 / (resolutions.length + 1) + '%';\r\n            range.disabled = false;\r\n            ctl.minResolution = resolutions[range.value];\r\n        }\r\n        else {\r\n            resLevel = 0;\r\n            resText = '';\r\n            range.value = 0;\r\n            resLeft = '0';\r\n            ctl.minResolution = 0;\r\n            range.disabled = true;\r\n        }\r\n        resDiv.style.left = resLeft;\r\n        resDiv.innerHTML = resText;\r\n    };\r\n\r\n    const findTileMatrixLimits = function (schema, resolution) {\r\n        var result = null;\r\n        for (var i = 0, len = schema.tileMatrixLimits.length; i < len; i++) {\r\n            result = schema.tileMatrixLimits[i];\r\n            if (result.res <= resolution) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const updateThumbnails = function (ctl) {\r\n        ctl._dialogDiv.querySelectorAll(ctl._classSelector + '-bl-node input[type=checkbox]').forEach(function (cb, idx) {\r\n            if (cb.checked) {\r\n                var schema = ctl.requestSchemas.filter(function (elm) {\r\n                    return elm.layerId === cb.value;\r\n                })[0];\r\n                if (schema) {\r\n                    var tml = findTileMatrixLimits(schema, ctl.minResolution);\r\n                    if (tml) {\r\n                        var tmKey = '{TileMatrix}';\r\n                        var trKey = '{TileRow}';\r\n                        var tcKey = '{TileCol}';\r\n                        var url = schema.url;\r\n                        if (url.indexOf(tmKey) < 0) {\r\n                            // Caso KVP\r\n                            var qsIdx = url.indexOf('?');\r\n                            if (qsIdx >= 0) {\r\n                                url = url.substr(0, qsIdx);\r\n                            }\r\n                            for (var j = 0, lenj = ctl.baseLayers.length; j < lenj; j++) {\r\n                                var l = ctl.baseLayers[j];\r\n                                if (l.id === schema.layerId) {\r\n                                    url = url + '?layer=' + l.layerNames + '&style=default&tilematrixset=' + l.matrixSet +\r\n                                        '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + l.format +\r\n                                        '&TileMatrix=' + tmKey + '&TileRow=' + trKey + '&TileCol=' + tcKey;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        while (cb && cb.tagName !== 'LABEL') {\r\n                            cb = cb.parentElement;\r\n                        }\r\n                        if (cb) {\r\n                            cb.style.backgroundSize = 'auto';\r\n                            cb.style.backgroundPosition = 'left bottom';\r\n                            cb.style.backgroundImage = 'url(' + url.replace('{TileMatrix}', tml.mId).replace(trKey, tml.rt).replace(tcKey, tml.cl) + ')';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const formatSize = function (ctl, size) {\r\n        var result;\r\n        if (size < 1) {\r\n            result = ctl.getLocaleString('lessThan1Mb');\r\n        }\r\n        else {\r\n            result = ctl.getLocaleString('approxXMb', { quantity: formatNumber(size) });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const showEstimatedMapSize = function (ctl) {\r\n        var text = '';\r\n        ctl.tileCount = 0;\r\n        for (var i = 0, ii = ctl.requestSchemas.length; i < ii; i++) {\r\n            var schema = ctl.requestSchemas[i];\r\n            for (var j = 0, jj = schema.tileMatrixLimits.length; j < jj; j++) {\r\n                var tml = schema.tileMatrixLimits[j];\r\n                ctl.tileCount += (tml.cr - tml.cl + 1) * (tml.rb - tml.rt + 1);\r\n                if (tml.res < ctl.minResolution) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (ctl.tileCount) {\r\n            ctl.estimatedMapSize = Math.round(ctl.tileCount * ctl.options.avgTileSize / 1048576);\r\n            text = ctl.getLocaleString('xTiles', { quantity: formatNumber(ctl.tileCount) }) + ' (' + formatSize(ctl, ctl.estimatedMapSize) + ')';\r\n        }\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = text;\r\n    };\r\n\r\n    const getListElementByMapName = function (ctl, name) {\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.innerHTML === name) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const getListElementByMapUrl = function (ctl, url) {\r\n        var hashIdx = url.indexOf('#');\r\n        if (hashIdx >= 0) {\r\n            url = url.substr(0, hashIdx);\r\n        }\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.getAttribute('href') === url) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const openCachedPage = function (ctl, url) {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        iframe.setAttribute('src', url);\r\n        ctl.div.appendChild(iframe);\r\n    };\r\n\r\n    const closeCachedPage = function (ctl, url) {\r\n        const iframe = ctl.div.querySelector('iframe[src=\"' + url + '\"]');\r\n        if (iframe) {\r\n            iframe.parentElement.removeChild(iframe);\r\n        }\r\n    };\r\n\r\n    var saveMapToStorage = function (ctl, map) {\r\n        var result = false;\r\n        if (window.localStorage) {\r\n            localStorage.setItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(map.url), map.extent + \" \" + map.name);\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var removeMapFromStorage = function (ctl, url) {\r\n        var result = false;\r\n        if (window.localStorage) {\r\n            localStorage.removeItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(url));\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const addMap = function (ctl) {\r\n        const map = ctl.currentMap;\r\n        if (saveMapToStorage(ctl, map)) {\r\n            ctl.getRenderedHtml(ctl.CLASS + '-map-node', { name: map.name, url: map.url }, function (html) {\r\n                const parser = new DOMParser();\r\n                ctl.div.querySelector(ctl._selectors.LIST).appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).setAttribute('hidden', 'hidden');\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = false;\r\n            });\r\n            ctl.storedMaps.push(map);\r\n        }\r\n    };\r\n\r\n    const removeMap = function (ctl, url) {\r\n        const map = ctl.findStoredMap({ url: url });\r\n        if (map) {\r\n            if (removeMapFromStorage(ctl, url)) {\r\n                const li = getListElementByMapName(ctl, map.name);\r\n                if (li) {\r\n                    li.parentElement.removeChild(li);\r\n                }\r\n            }\r\n            var idx = $.inArray(map, ctl.storedMaps);\r\n            ctl.storedMaps.splice(idx, 1);\r\n            if (!ctl.storedMaps.length) {\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = true;\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).removeAttribute('hidden');\r\n            }\r\n\r\n            return map.name;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            var renderObject = { storedMaps: self.storedMaps, listId: self.CLASS + '-list-' + TC.getUID() };\r\n            self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n                self._dialogDiv.innerHTML = html;\r\n                self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    e.preventDefault();\r\n                    this.selectionStart = 0;\r\n                    this.selectionEnd = this.value.length;\r\n                    this.focus();\r\n\r\n                });\r\n            }).then(function () {\r\n                self.renderData(renderObject, function () {\r\n                    self._dialogDiv.querySelector(self._selectors.OKBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.generateCache();\r\n                    });\r\n                    self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener('input', function () {\r\n                        self._updateReadyState();\r\n                    });\r\n                    self.div.querySelector(self._selectors.NEWBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setEditState();\r\n                    });\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-draw').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setReadyState();\r\n                    });\r\n\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-dl').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.cancelCacheRequest();\r\n                    });\r\n\r\n                    const list = self.div.querySelector(self._selectors.LIST);\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.DELETEBTN, function (e) {\r\n                        self.startDeleteMap(e.target.parentElement.querySelector('a').innerHTML);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.EDITBTN, function (e) {\r\n                        setNameEditingState(self, e.target.parentElement);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.CANCELBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        li.querySelector(self._selectors.TEXTBOX).value = li.querySelector('a').innerHTML;\r\n                        setNameReadyState(self, li);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.SAVEBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        setNameReadyState(self, li);\r\n                        const anchor = li.querySelector('a');\r\n                        const oldName = anchor.innerHTML;\r\n                        const newName = li.querySelector(self._selectors.TEXTBOX).value;\r\n                        const map = self.findStoredMap({ url: anchor.getAttribute('href') });\r\n                        if (map) {\r\n                            map.name = newName;\r\n                            anchor.innerHTML = newName;\r\n                            anchor.setAttribute('title', newName);\r\n                            saveMapToStorage(self, map);\r\n                        }\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.VIEWBTN, function (e) {\r\n                        const btn = e.target;\r\n                        var showExtent = !btn.classList.contains(TC.Consts.classes.ACTIVE);\r\n                        const viewBtn = self.div.querySelector(self._selectors.VIEWBTN);\r\n                        viewBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        viewBtn.parentElement.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        const mapName = btn.parentElement.querySelector('a').innerHTML;\r\n                        if (mapName) {\r\n                            var map = self.findStoredMap({ name: mapName });\r\n                            if (map) {\r\n                                var extent = getExtentFromString(map.extent);\r\n                                self.layer.clearFeatures();\r\n                                if (showExtent) {\r\n                                    self.layer.addPolygon(\r\n                                        [\r\n                                            [\r\n                                                [extent[0], extent[1]],\r\n                                                [extent[0], extent[3]],\r\n                                                [extent[2], extent[3]],\r\n                                                [extent[2], extent[1]]\r\n                                            ]\r\n                                        ]\r\n                                        , {\r\n                                            showsPopup: false\r\n                                        }).then(function () {\r\n                                            self.layer.map.zoomToFeatures(self.layer.features);\r\n                                        });\r\n                                    btn.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.parentElement.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.setAttribute('title', self.getLocaleString('removeMapExtent'));\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n\r\n                    var _filter = function (searchTerm) {\r\n                        searchTerm = searchTerm.toLowerCase();\r\n                        //tc-ctl-cbuild-map-available-empty\r\n                        const lis = self.div.querySelectorAll(self._selectors.LISTITEM);\r\n                        lis.forEach(function (li) {\r\n                            li.style.display = 'none';\r\n                        });\r\n                        const mapLis = [];\r\n                        lis.forEach(function (li) {\r\n                            if (li.matches('li:not([class]),li.' + TC.Consts.classes.ACTIVE)) {\r\n                                mapLis.push(li);\r\n                            }\r\n                        });\r\n\r\n                        if (searchTerm.length === 0) {\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.removeProperty('display');\r\n                            });\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'visible';\r\n                        } else {\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'hidden';\r\n                            var r = new RegExp(searchTerm, 'i');\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.display = r.test(li.querySelector('a').textContent) ? '' : 'none';\r\n                            });\r\n\r\n                            if (!mapLis.some(function (li) {\r\n                                return !li.hidden;\r\n                            })) {\r\n                                lis.forEach(function (li) {\r\n                                    if (li.matches('[class^=\"tc-ctl-cbuild-map-not\"]')) {\r\n                                        li.style.removeProperty('display');\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    const trackSearch = self.div.querySelector(self._selectors.SEARCH);\r\n                    const searchListener = function () {\r\n                        _filter(this.value.toLowerCase().trim());\r\n                    };\r\n                    trackSearch.addEventListener('keyup', searchListener);\r\n                    trackSearch.addEventListener('search', searchListener);\r\n\r\n                    self._dialogDiv.querySelector(self._selectors.BLLIST).addEventListener('change', TC.EventTarget.listenerBySelector('input[type=checkbox]', function (e) {\r\n                        self.baseLayers.length = 0;\r\n                        self._dialogDiv.querySelectorAll(self._selectors.BLLIST + ' input[type=checkbox]').forEach(function (checkbox) {\r\n                            if (checkbox.checked) {\r\n                                var layerId = checkbox.value;\r\n                                for (var i = 0, len = self.map.baseLayers.length; i < len; i++) {\r\n                                    var layer = self.map.baseLayers[i];\r\n                                    if (layer.id === layerId && layer.type === TC.Consts.layerType.WMTS) {\r\n                                        self.baseLayers[self.baseLayers.length] = layer;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        self.updateRequestSchemas();\r\n                        updateResolutions(self);\r\n                        updateThumbnails(self);\r\n                        self._updateReadyState();\r\n                        showEstimatedMapSize(self);\r\n                    }));\r\n\r\n                    const range = self._dialogDiv.querySelector(self._selectors.RNGMAXRES);\r\n                    const rangeListener = function (e) {\r\n                        updateResolutions(self, {\r\n                            rangeValue: e.target.value\r\n                        });\r\n                        updateThumbnails(self);\r\n                        showEstimatedMapSize(self);\r\n                    };\r\n                    range.addEventListener('input', rangeListener);\r\n                    range.addEventListener('change', rangeListener);\r\n\r\n                    const li = getListElementByMapUrl(self, location.href);\r\n                    if (li) {\r\n                        li.classList.add(TC.Consts.classes.ACTIVE);\r\n                    }\r\n\r\n                    if ($.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n                })\r\n                    .then(function () {\r\n                        resolve();\r\n                    })\r\n                    .catch(function (err) {\r\n                        reject(err instanceof Error ? err : Error(err));\r\n                    });\r\n            });\r\n\r\n            // Control para evitar que se cancele una descarga de cache al salir de la página\r\n            window.addEventListener('beforeunload', function (e) {\r\n                if (self.isDownloading) {\r\n                    var msg = self.getLocaleString('cb.mapDownloading.warning');\r\n                    e.returnValue = msg;\r\n                    return msg;\r\n                }\r\n            }, true);\r\n        }));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n\r\n        const result = TC.control.SWCacheClient.prototype.register.call(self, map);\r\n\r\n        if (navigator.serviceWorker) {\r\n\r\n            navigator.serviceWorker.addEventListener('message', function (event) {\r\n                switch (event.data.event) {\r\n                    case 'progress':\r\n                        self.trigger(TC.Consts.event.MAPCACHEPROGRESS, { url: event.data.name, loaded: event.data.count, total: event.data.total });\r\n                        break;\r\n                    case 'cached':\r\n                        self.trigger(TC.Consts.event.MAPCACHEDOWNLOAD, { url: event.data.name });\r\n                        break;\r\n                    case 'deleted':\r\n                        self.trigger(TC.Consts.event.MAPCACHEDELETE, { url: event.data.name });\r\n                        break;\r\n                    case 'error':\r\n                        if (event.data.action === self._actions.CREATE) {\r\n                            TC.error(self.getLocaleString('cb.resourceDownload.error', { url: event.data.url }));\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n\r\n            // Cacheamos mediante service worker las URLs del manifiesto\r\n            requestManifest().then(function (obj) {\r\n                const hashStorageKey = self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash';\r\n                var hash;\r\n                if (window.localStorage) {\r\n                    hash = localStorage.getItem(hashStorageKey);\r\n                }\r\n                if (hash !== obj.hash) {\r\n                    self.cacheUrlList(obj.urls);\r\n                    self.one(TC.Consts.event.MAPCACHEDOWNLOAD, function () {\r\n                        const firstLoad = !hash;\r\n                        if (window.localStorage) {\r\n                            localStorage.setItem(hashStorageKey, obj.hash);\r\n                        }\r\n                        if (!firstLoad) {\r\n                            TC.confirm(self.getLocaleString('newAppVersionAvailable'), function () {\r\n                                location.reload();\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (self.mapIsOffline) {\r\n            map.div.classList.add(TC.Consts.classes.OFFLINE);\r\n\r\n            // Si no está especificado, el panel de aviso offline se cuelga del div del mapa\r\n            self._offlinePanelDiv = TC.Util.getDiv(self.options.offlinePanelDiv);\r\n            if (!self.options.offlinePanelDiv) {\r\n                map.div.appendChild(self._offlinePanelDiv);\r\n            }\r\n            self.getRenderedHtml(self.CLASS + '-off-panel', null, function (html) {\r\n                self._offlinePanelDiv.innerHTML = html;\r\n                if (!navigator.onLine) {\r\n                    const offPanel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                    offPanel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                    offPanel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE);\r\n                    offPanel.classList.remove(TC.Consts.classes.CONNECTION_WIFI);\r\n                }\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    TC.confirm(self.getLocaleString('offlineMapExit.confirm'),\r\n                        null,\r\n                        function () {\r\n                            e.preventDefault();\r\n                        });\r\n                });\r\n            });\r\n        }\r\n\r\n        const drawId = self.getUID();\r\n        const layerId = self.getUID();\r\n        self.layerPromise = map.addLayer({\r\n            id: layerId,\r\n            type: TC.Consts.layerType.VECTOR,\r\n            stealth: true,\r\n            styles: {\r\n                line: map.options.styles.line\r\n            }\r\n        });\r\n        self.layer = null;\r\n        Promise.all([\r\n            self.layerPromise,\r\n            self.renderPromise(),\r\n            map.addControl('draw', {\r\n                id: drawId,\r\n                div: self.div.querySelector(self._selectors.DRAW),\r\n                mode: TC.Consts.geom.RECTANGLE,\r\n                persistent: false\r\n            })\r\n        ]).then(function (objects) {\r\n            const layer = self.layer = objects[0];\r\n            const boxDraw = self.boxDraw = objects[2];\r\n            boxDraw.setLayer(layer);\r\n            boxDraw\r\n                .on(TC.Consts.event.DRAWSTART, function (e) {\r\n                    self.map.toast(self.getLocaleString('clickOnDownloadAreaOppositeCorner'), { type: TC.Consts.msgType.INFO });\r\n                })\r\n                .on(TC.Consts.event.DRAWEND, function (e) {\r\n                    var points = e.feature.geometry[0];\r\n                    var pStart = points[0];\r\n                    var pEnd = points[2];\r\n                    var minx = Math.min(pStart[0], pEnd[0]);\r\n                    var maxx = Math.max(pStart[0], pEnd[0]);\r\n                    var miny = Math.min(pStart[1], pEnd[1]);\r\n                    var maxy = Math.max(pStart[1], pEnd[1]);\r\n                    self.setExtent([minx, miny, maxx, maxy]);\r\n                    const checkboxes = self._dialogDiv.querySelectorAll('input[type=checkbox]');\r\n                    checkboxes.forEach(function (checkbox) {\r\n                        // Comprobamos que la extensión del mapa está disponible a resolución máxima \r\n                        // (criterio arbitrario, elegido porque no nos vale el criterio de que el mapa\r\n                        // esté disponible a alguna resolución, dado que el mapa base de IDENA abarca\r\n                        // toda España)\r\n                        for (var i = 0, len = self.map.baseLayers.length; i < len; i++) {\r\n                            var layer = self.map.baseLayers[i];\r\n                            if (checkbox.value === layer.id) {\r\n                                var li = checkbox;\r\n                                while (li && li.tagName !== 'LI') {\r\n                                    li = li.parentElement;\r\n                                }\r\n                                var resolutions = layer.getResolutions();\r\n                                var tml = self.wrap.getRequestSchemas({\r\n                                    extent: self.extent,\r\n                                    layers: [layer]\r\n                                })[0].tileMatrixLimits;\r\n                                if (!tml.length || resolutions[resolutions.length - 1] != tml[tml.length - 1].res) {\r\n                                    checkbox.checked = false;\r\n                                    li.classList.add(TC.Consts.classes.HIDDEN);\r\n                                }\r\n                                else {\r\n                                    li.classList.remove(TC.Consts.classes.HIDDEN);\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                    var blListTextKey;\r\n                    const lis = self._dialogDiv.querySelectorAll(self._selectors.BLLISTITEM);\r\n                    for (var i = 0, len = lis.length; i < len; i++) {\r\n                        if (lis[i].matches('.' + TC.Consts.classes.HIDDEN)) {\r\n                            blListTextKey = 'selectAtLeastOne';\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!blListTextKey) {\r\n                        blListTextKey = 'cb.noMapsAtSelectedExtent';\r\n                    }\r\n                    self._dialogDiv.querySelector(self._selectors.BLLISTTEXT).innerHTML = self.getLocaleString(blListTextKey);\r\n\r\n                    updateThumbnails(self);\r\n                    showEstimatedMapSize(self);\r\n                    TC.Util.showModal(self._dialogDiv.querySelector(self._classSelector + '-dialog'), {\r\n                        openCallback: function () {\r\n                            checkboxes.forEach(function (cb) {\r\n                                cb.disabled = false;\r\n                            });\r\n                            var time;\r\n                            if (Date.prototype.toLocaleString) {\r\n                                var opt = {};\r\n                                opt.year = opt.month = opt.day = opt.hour = opt.minute = opt.second = 'numeric';\r\n                                time = new Date().toLocaleString(self.map.options.locale.replace('_', '-'), opt);\r\n                            }\r\n                            else {\r\n                                time = new Date().toString();\r\n                            }\r\n                            self._dialogDiv.querySelector(self._selectors.NAMETB).value = time;\r\n                            self._updateReadyState();\r\n                        },\r\n                        closeCallback: function () {\r\n                            checkboxes.forEach(function (cb) {\r\n                                cb.disabled = true;\r\n                            });\r\n                            self.layer.clearFeatures();\r\n                        }\r\n                    });\r\n                });\r\n\r\n            map.on(TC.Consts.event.CONTROLDEACTIVATE, function (e) {\r\n                if (boxDraw === e.control) {\r\n                    if (self._state === self._states.EDITING) {\r\n                        self.setReadyState();\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        var addRenderedListNode = function (layer) {\r\n            var result = false;\r\n            const blList = self._dialogDiv.querySelector(self._selectors.BLLIST);\r\n            const isLayerAdded = function () {\r\n                return !!blList.querySelector('li[data-tc-layer-uid=\"' + layer.id + '\"]');\r\n            };\r\n            var isValidLayer = layer.type === TC.Consts.layerType.WMTS && !layer.mustReproject;\r\n            if (TC.Util.detectSafari() && TC.Util.detectIOS()) {\r\n                isValidLayer = isValidLayer && TC.Util.isSameOrigin(layer.url);\r\n            }\r\n            if (isValidLayer && !isLayerAdded()) {\r\n                result = true;\r\n                self.getRenderedHtml(self.CLASS + '-bl-node', layer, function (html) {\r\n                    if (!isLayerAdded()) {\r\n                        const parser = new DOMParser();\r\n                        blList.appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        };\r\n\r\n        map\r\n            .on(TC.Consts.event.LAYERADD, function (e) {\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    addRenderedListNode(e.layer);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    const layer = e.layer;\r\n                    if (layer.type === TC.Consts.layerType.WMTS) {\r\n                        const li = self._dialogDiv\r\n                            .querySelector(self._selectors.BLLIST)\r\n                            .querySelector('li[data-tc-layer-uid=\"' + layer.id + '\"]');\r\n                        li.parentElement.removeChild(li);\r\n                    }\r\n                });\r\n            });\r\n\r\n\r\n        var params = TC.Util.getQueryStringParams();\r\n        var mapDefString = params[self.MAP_DEFINITION_PARAM_NAME];\r\n        var extentString = params[self.MAP_EXTENT_PARAM_NAME];\r\n\r\n        map.ready(function () {\r\n            if (self.mapIsOffline) {\r\n                // Deshabilitamos los controles que no son usables en modo offline\r\n                var offCtls = [];\r\n                var i, len;\r\n                for (i = 0, len = self.offlineControls.length; i < len; i++) {\r\n                    var offCtl = self.offlineControls[i];\r\n                    offCtl = offCtl.substr(0, 1).toUpperCase() + offCtl.substr(1);\r\n                    offCtls = offCtls.concat(map.getControlsByClass('TC.control.' + offCtl));\r\n                }\r\n\r\n                for (i = 0, len = map.controls.length; i < len; i++) {\r\n                    var ctl = map.controls[i];\r\n                    if (offCtls.indexOf(ctl) < 0) {\r\n                        ctl.disable();\r\n                    }\r\n                }\r\n\r\n                document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                    elm.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n            }\r\n        });\r\n\r\n        map.loaded(function () {\r\n\r\n            self.layerPromise.then(function (layer) {\r\n                map.putLayerOnTop(layer);\r\n            });\r\n\r\n            self.renderPromise().then(function () {\r\n                self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n                for (var i = 0, len = map.baseLayers.length; i < len; i++) {\r\n                    addRenderedListNode(map.baseLayers[i]);\r\n                }\r\n            });\r\n\r\n            if (self.mapIsOffline) {\r\n                var mapDef = JSON.parse(window.atob(decodeURIComponent(mapDefString)));\r\n                var excludedLayers = [];\r\n                // Obtenemos la primera capa del esquema de la cache y de paso vemos qué capas no van a estar disponibles\r\n                var baseLayer = $.grep(map.baseLayers, function (layer) {\r\n                    var result = false;\r\n                    if (layer.type === TC.Consts.layerType.WMTS) {\r\n                        for (var i = 0, len = mapDef.layers.length; i < len; i++) {\r\n                            var l = mapDef.layers[i];\r\n                            var layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                            if (layerUrl === mapDef.url[l.urlIdx] && layer.layerNames === l.id && layer.matrixSet === mapDef.tms[l.tmsIdx]) {\r\n                                result = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    // Quitamos todas las capas que no estén cacheadas y que no sean el mapa en blanco\r\n                    if (!result) {\r\n                        if (layer.type !== TC.Consts.layerType.VECTOR) {\r\n                            excludedLayers[excludedLayers.length] = layer;\r\n                        }\r\n                    }\r\n                    return result;\r\n                })[0];\r\n                if (baseLayer) {\r\n                    map.setBaseLayer(baseLayer);\r\n                }\r\n                for (var i = 0, len = excludedLayers.length; i < len; i++) {\r\n                    map.removeLayer(excludedLayers[i]);\r\n                }\r\n\r\n                map.setExtent(getExtentFromString(extentString));\r\n            }\r\n        });\r\n\r\n        self\r\n            .on(TC.Consts.event.MAPCACHEDOWNLOAD, function (e) {\r\n                self.isDownloading = false;\r\n                const removeHash = function (url) {\r\n                    const hashIdx = url.indexOf('#');\r\n                    return (hashIdx >= 0) ? url.substr(0, hashIdx) : url;\r\n                }\r\n                const url = removeHash(e.url);\r\n                const li = getListElementByMapUrl(self, url);\r\n                if (li && !self.serviceWorkerEnabled) {\r\n                    // Se ha descargado un mapa cuando se quería borrar. Pasa cuando la cache ya estaba borrada pero la entrada en localStorage no.\r\n                    li.classList.remove(TC.Consts.classes.DISABLED);\r\n                    TC.alert(self.getLocaleString('cb.delete.error'));\r\n                }\r\n                else {\r\n                    if (self.currentMap && url === self.currentMap.url) {\r\n                        addMap(self);\r\n                        map.toast(self.getLocaleString('mapDownloaded', { mapName: self.currentMap.name }));\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n                closeCachedPage(self, e.url);\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEDELETE, function (e) {\r\n                self.isDownloading = false;\r\n                var mapName = removeMap(self, e.url) || (self.currentMap && self.currentMap.name);\r\n                closeCachedPage(self, e.url);\r\n                self.currentMap = null;\r\n                if (mapName) {\r\n                    document.cookie = self.COOKIE_KEY_PREFIX + 'delete=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';\r\n                    map.toast(self.getLocaleString('mapDeleted', { mapName: mapName }));\r\n                }\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEPROGRESS, function (e) {\r\n                var total = e.total;\r\n                if (!total && self.requestSchemas) {\r\n                    total = self.requestSchemas[0].tileCount;\r\n                }\r\n                var loaded = e.loaded;\r\n                if (loaded) {\r\n                    self._loadedCount = loaded;\r\n                }\r\n                else {\r\n                    self._loadedCount += 1;\r\n                    loaded = self._loadedCount;\r\n                }\r\n                self.showDownloadProgress(loaded, total);\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEERROR, function (e) {\r\n                self.isDownloading = false;\r\n                closeCachedPage(self, e.url);\r\n                self.setReadyState();\r\n                var msg = self.getLocaleString('cb.mapCreation.error');\r\n                var handleError = true;\r\n                switch (e.reason) {\r\n                    case 'quota':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonQuota');\r\n                        break;\r\n                    case 'resource':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonResource');\r\n                        break;\r\n                    case 'manifest':\r\n                        if (e.status == '410') {\r\n                            removeMap(self, e.url);\r\n                        }\r\n                        handleError = false;\r\n                        break;\r\n                    case ALREADY_EXISTS:\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonAlreadyExists');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (handleError) {\r\n                    if (TC.Util.detectIE()) {\r\n                        TC.error(msg);\r\n                        TC.alert(self.getLocaleString('cb.mapCreation.error.reasonIE'));\r\n                    }\r\n                    else {\r\n                        TC.alert(msg);\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setExtent = function (extent) {\r\n        var self = this;\r\n        if ($.isArray(extent) && extent.length >= 4) {\r\n            self.extent = extent;\r\n            self.updateRequestSchemas();\r\n        }\r\n    };\r\n\r\n    ctlProto._updateReadyState = function () {\r\n        const self = this;\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled =\r\n            !self.extent ||\r\n            self._dialogDiv.querySelector(self._selectors.NAMETB).value.length === 0 ||\r\n            self._dialogDiv.querySelector(self._selectors.RNGMAXRES).disabled;\r\n    };\r\n\r\n    ctlProto.setReadyState = function () {\r\n        const self = this;\r\n        self._state = self._states.READY;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelectorAll(self._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.DISABLED);\r\n        });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n        self._dialogDiv.querySelector(self._selectors.TILECOUNT).innerHTML = '';\r\n        self.extent = null;\r\n        self._loadedCount = 0;\r\n        if (self.boxDraw) {\r\n            self.boxDraw.cancel();\r\n        }\r\n    };\r\n\r\n    ctlProto.setEditState = function () {\r\n        const self = this;\r\n        self._state = self._states.EDITING;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.map.toast(self.getLocaleString('clickOnDownloadAreaFirstCorner'), { type: TC.Consts.msgType.INFO });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = true;\r\n        self._dialogDiv.querySelector(self._selectors.NAMETB).value = '';\r\n        self.boxDraw.activate();\r\n    };\r\n\r\n    ctlProto.generateCache = function () {\r\n        const self = this;\r\n        const options = {\r\n            mapName: self._dialogDiv.querySelector(self._selectors.NAMETB).value\r\n        };\r\n        if (self.findStoredMap({ name: options.mapName })) {\r\n            TC.alert(self.getLocaleString('cb.mapNameAlreadyExists.error', options));\r\n        }\r\n        else {\r\n            var startRequest = function () {\r\n                self.div.querySelector(self._classSelector + '-name').innerHTML = options.mapName;\r\n                self.map.toast(self.getLocaleString('downloadingMap', { mapName: options.mapName }));\r\n                setDownloadingState(self);\r\n                self.requestCache(options);\r\n            };\r\n            // Usamos Quota Management API si existe\r\n            var storageInfo = navigator.temporaryStorage || navigator.webkitTemporaryStorage || {};\r\n            if (storageInfo.queryUsageAndQuota) {\r\n                storageInfo.queryUsageAndQuota(\r\n                    function (usedBytes, grantedBytes) {\r\n                        var availableMB = (grantedBytes - usedBytes) / 1048576;\r\n                        if (self.estimatedMapSize < availableMB) {\r\n                            startRequest();\r\n                        }\r\n                        else {\r\n                            TC.confirm(self.getLocaleString('cb.mapCreation.warning.reasonSize', {\r\n                                mapName: options.mapName,\r\n                                mapSize: formatSize(self, self.estimatedMapSize),\r\n                                availableStorage: formatSize(self, Math.round(availableMB))\r\n                            }), startRequest);\r\n                        }\r\n                    },\r\n                    function (e) {\r\n                        TC.error(e);\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                // En IE por defecto el límite de recursos por manifiesto es 1000, en Edge, 2000\r\n                var ieVersion = TC.Util.detectIE();\r\n                if (ieVersion) {\r\n                    var maxResourceCount = ieVersion < 12 ? 1000 : 2000;\r\n                    // Calculamos el número de recursos del manifiesto para ver cuándo va a fallar una cache en IE por exceso de recursos\r\n                    var manifestResourceCount = 0;\r\n                    var confirmRequest = function () {\r\n                        var resourceCount = self.tileCount + manifestResourceCount;\r\n                        if (resourceCount > maxResourceCount) {\r\n                            TC.confirm(self.getLocaleString('cb.mapCreation.warning.reasonCount', {\r\n                                mapName: options.mapName,\r\n                                resourceCount: formatNumber(resourceCount),\r\n                                maxResourceCount: formatNumber(maxResourceCount)\r\n                            }), startRequest);\r\n                        }\r\n                        else {\r\n                            startRequest();\r\n                        }\r\n                    };\r\n                    requestManifest()\r\n                        .then(function (obj) {\r\n                            manifestResourceCount = obj.urls.length;\r\n                            confirmRequest();\r\n                        })\r\n                        .catch(confirmRequest);\r\n                }\r\n                else {\r\n                    startRequest();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.cacheUrlList = function (urlList, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        self.createCache(opts.name || (self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME), {\r\n            urlList: urlList,\r\n            silent: opts.silent\r\n        });\r\n    };\r\n\r\n    ctlProto.requestCache = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        if (self.map) {\r\n            var extent = opts.extent || self.extent || self.map.getExtent();\r\n            self.updateRequestSchemas({ extent: extent });\r\n\r\n            if (self.requestSchemas) {\r\n                var filterTml = function (elm, i, arr) {\r\n                    var result = elm.res >= self.minResolution;\r\n                    if (!result && i > 0) {\r\n                        result = arr[i - 1].res > self.minResolution;\r\n                    }\r\n                    return result;\r\n                };\r\n                var trimTml = function (tml) {\r\n                    return {\r\n                        mId: tml.mId,\r\n                        cl: tml.cl,\r\n                        cr: tml.cr,\r\n                        rt: tml.rt,\r\n                        rb: tml.rb\r\n                    };\r\n                };\r\n                // Solo mantenemos los esquemas hasta el nivel de resolución mínima o el inmediatamente inferior a ella si no lo tiene\r\n                var requestSchemas = self.requestSchemas.map(function (schema) {\r\n                    return {\r\n                        layerId: schema.layerId,\r\n                        tileMatrixLimits: schema.tileMatrixLimits.filter(filterTml)\r\n                    };\r\n                });\r\n                // Actualizamos el extent para que coincida con las teselas del último nivel de los esquemas\r\n                // También eliminamos del esquema todo lo irrelevante para la petición\r\n                var intersectionExtent = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\r\n                for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                    var rs = requestSchemas[i];\r\n                    var tml = rs.tileMatrixLimits[rs.tileMatrixLimits.length - 1];\r\n                    var unitsPerTile = tml.res * tml.tSize;\r\n                    intersectionExtent[0] = Math.min(intersectionExtent[0], tml.origin[0] + unitsPerTile * tml.cl);\r\n                    intersectionExtent[1] = Math.min(intersectionExtent[1], tml.origin[1] - unitsPerTile * (tml.rb + 1));\r\n                    intersectionExtent[2] = Math.max(intersectionExtent[2], tml.origin[0] + unitsPerTile * (tml.cr + 1));\r\n                    intersectionExtent[3] = Math.max(intersectionExtent[3], tml.origin[1] - unitsPerTile * tml.rt);\r\n                    rs.tileMatrixLimits = rs.tileMatrixLimits.map(trimTml);\r\n                }\r\n\r\n\r\n                // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                var precision = Math.pow(10, self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION);\r\n                intersectionExtent = intersectionExtent.map(function (elm, idx) {\r\n                    var round = (idx < 3) ? Math.ceil : Math.floor;\r\n                    return round(elm * precision) / precision;\r\n                });\r\n\r\n                var mapDefinition = {\r\n                    bBox: intersectionExtent,\r\n                    res: Math.floor(self.minResolution * 1000) / 1000, // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                    url: [],\r\n                    tms: [],\r\n                    format: [],\r\n                    layers: new Array(self.baseLayers.length)\r\n                };\r\n                for (var i = 0, len = self.baseLayers.length; i < len; i++) {\r\n                    var layer = self.baseLayers[i];\r\n                    var layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    var urlIdx = $.inArray(layerUrl, mapDefinition.url);\r\n                    if (urlIdx < 0) {\r\n                        urlIdx = mapDefinition.url.push(layerUrl) - 1;\r\n                    }\r\n                    var tmsIdx = $.inArray(layer.matrixSet, mapDefinition.tms);\r\n                    if (tmsIdx < 0) {\r\n                        tmsIdx = mapDefinition.tms.push(layer.matrixSet) - 1;\r\n                    }\r\n                    var shortFormat = layer.format.substr(layer.format.indexOf('/') + 1);\r\n                    var formatIdx = $.inArray(shortFormat, mapDefinition.format);\r\n                    if (formatIdx < 0) {\r\n                        formatIdx = mapDefinition.format.push(shortFormat) - 1;\r\n                    }\r\n                    mapDefinition.layers[i] = {\r\n                        urlIdx: urlIdx,\r\n                        id: layer.layerNames,\r\n                        tmsIdx: tmsIdx,\r\n                        formatIdx: formatIdx\r\n                    };\r\n                }\r\n\r\n                var params = TC.Util.getQueryStringParams();\r\n                var e = params[self.MAP_EXTENT_PARAM_NAME] = intersectionExtent.toString();\r\n                params[self.MAP_DEFINITION_PARAM_NAME] = btoa(JSON.stringify(mapDefinition));\r\n                if (self.serviceWorkerEnabled) {\r\n                    params[self.SERVICE_WORKER_FLAG] = 1;\r\n                }\r\n                var u = location.origin + location.pathname.substr(0, location.pathname.lastIndexOf('/') + 1) + self.CACHE_REQUEST_PATH + '?' + $.param(params);\r\n                self.currentMap = { name: opts.mapName, extent: e, url: u };\r\n                self.isDownloading = true;\r\n\r\n                // Guardado mediante service workers\r\n                if (self.serviceWorkerEnabled) {\r\n                    for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                        var schema = requestSchemas[i];\r\n                        var urlPattern = null;\r\n                        for (var j = 0, lenj = self.baseLayers.length; j < lenj; j++) {\r\n                            var l = self.baseLayers[j];\r\n                            if (l.id === schema.layerId) {\r\n                                urlPattern = self.wrap.getGetTilePattern(l);\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (urlPattern) {\r\n                            urlList = [];\r\n                            var idx = 0;\r\n                            for (k = 0, lenk = schema.tileMatrixLimits.length; k < lenk; k++) {\r\n                                var tml = schema.tileMatrixLimits[k];\r\n                                for (l = tml.cl; l <= tml.cr; l++) {\r\n                                    for (m = tml.rt; m <= tml.rb; m++) {\r\n                                        urlList[idx++] = urlPattern.replace('{TileMatrix}', tml.mId).replace('{TileCol}', l).replace('{TileRow}', m);\r\n                                    }\r\n                                }\r\n                            }\r\n                            urlList.push(u);\r\n                            self.cacheUrlList(urlList, { name: u });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Guardado mediante application cache\r\n                    openCachedPage(self, u);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ctlProto.cancelCacheRequest = function () {\r\n        var self = this;\r\n        if (self.currentMap) {\r\n            closeCachedPage(self, self.currentMap.url);\r\n            self.deleteCache(self.currentMap.url).then(function (obj) {\r\n                if (!obj) {\r\n                    self.currentMap = null;\r\n                }\r\n            });\r\n        }\r\n        self.isDownloading = false;\r\n        self.setReadyState();\r\n    };\r\n\r\n    ctlProto.deleteMap = function (name) {\r\n        var self = this;\r\n\r\n        var map = self.findStoredMap({ name: name });\r\n        if (map) {\r\n            var params = TC.Util.getQueryStringParams(map.url);\r\n            var errorCallback = function (request, status, error) {\r\n                TC.error('[' + status + '] ' + error);\r\n            };\r\n            self.deleteCache(map.url).then(function (obj) {\r\n                if (!obj) {\r\n                    // Borrado de application cache\r\n                    document.cookie = self.COOKIE_KEY_PREFIX + 'delete=' + atob(decodeURIComponent(params[self.MAP_DEFINITION_PARAM_NAME]));\r\n                    openCachedPage(self, map.url);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.startDeleteMap = function (name) {\r\n        const self = this;\r\n        if (navigator.onLine) {\r\n            if (name) {\r\n                var confirmText = self.getLocaleString('cb.delete.confirm', { mapName: name });\r\n                if (!self.serviceWorkerEnabled) {\r\n                    confirmText = confirmText + \" \" + self.getLocaleString('cb.delete.confirm.connect.warning');\r\n                }\r\n                if (confirm(confirmText)) {\r\n                    if (navigator.onLine) {\r\n                        setDeletingState(self);\r\n                        self.deleteMap(name);\r\n                    } else {\r\n                        TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n        }\r\n    };\r\n\r\n    ctlProto.findStoredMap = function (options) {\r\n        var self = this;\r\n        return $.grep(self.storedMaps, function (elm) {\r\n            var result = true;\r\n            if (options.name && options.name !== elm.name) {\r\n                result = false;\r\n            }\r\n            if (result && options.url && options.url !== elm.url) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        })[0];\r\n    };\r\n\r\n    ctlProto.showDownloadProgress = function (current, total) {\r\n        const self = this;\r\n        const cs = self._classSelector;\r\n        const count = self.div.querySelector(cs + '-progress-count');\r\n        if (total) {\r\n            var percent = Math.min(Math.round(current * 100 / total), 100);\r\n            var percentString = percent + '%';\r\n            self.div.querySelector(cs + '-progress-ratio').style.width = percentString;\r\n            count.innerHTML = percentString;\r\n        }\r\n        else {\r\n            self.div.querySelector(cs + '-progress-bar').classList.add(TC.Consts.classes.HIDDEN);\r\n            count.innerHTML = self.getLocaleString('xFiles', { quantity: current });\r\n        }\r\n    };\r\n\r\n    ctlProto.updateRequestSchemas = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        opts.extent = opts.extent || self.extent;\r\n        opts.layers = opts.layers || self.baseLayers;\r\n        self.requestSchemas = self.wrap.getRequestSchemas(opts);\r\n        return self.requestSchemas;\r\n    };\r\n\r\n    ctlProto.getResolutions = function () {\r\n        var self = this;\r\n        var result = [];\r\n\r\n        var resolutionMapper = function (tml) {\r\n            return tml.res;\r\n        };\r\n        // Obtenemos un array de resoluciones por cada esquema de cada capa\r\n        var allResolutions = self.requestSchemas.map(function (schema) {\r\n            return schema.tileMatrixLimits.map(resolutionMapper);\r\n        });\r\n\r\n        // \"Hacemos la cremallera\" con los arrays de resoluciones de todas las capas\r\n        // y obtenemos uno que tenga todas las resoluciones dentro del rango de resoluciones común a todas las capas\r\n\r\n        // Obtenemos el rango de resoluciones\r\n        var maxRes = Number.POSITIVE_INFINITY;\r\n        var minRes = 0;\r\n        for (var i = 0, len = allResolutions.length; i < len; i++) {\r\n            var ri = allResolutions[i];\r\n            maxRes = Math.min(maxRes, ri[0]);\r\n            minRes = Math.max(minRes, ri[ri.length - 1]);\r\n        }\r\n        // Quitamos resoluciones fuera del rango y el resto las añadimos al array de resultados\r\n        for (var i = 0, len = allResolutions.length; i < len; i++) {\r\n            result = result.concat(allResolutions[i].filter(function (elm) {\r\n                return elm <= maxRes && elm >= minRes && result.indexOf(elm) < 0;\r\n            }));\r\n        }\r\n        result.sort(function (a, b) {\r\n            return b - a;\r\n        });\r\n        return result;\r\n    };\r\n\r\n})();\r\n"],"file":"../../Control/CacheBuilder.min.js"}