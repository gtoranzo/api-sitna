{"version":3,"sources":["control/CacheBuilder.js"],"names":["TC","control","SWCacheClient","syncLoadJS","apiLocation","Consts","classes","CONNECTION_OFFLINE","CONNECTION_WIFI","CONNECTION_MOBILE","OFFLINE","CacheBuilder","self","this","apply","arguments","cs","_classSelector","CLASS","_selectors","DRAW","DRAWING","PROGRESS","NEW","LIST","LISTITEM","OKBTN","NEWBTN","SAVEBTN","CANCELBTN","EDITBTN","VIEWBTN","DELETEBTN","TILECOUNT","NAMETB","TEXTBOX","EXIT","OFFPANEL","BLLIST","BLLISTITEM","BLLISTTEXT","RNGMAXRES","SEARCH","EMPTYLIST","OFFLINEHIDDEN","storedMaps","mapDefString","Util","getParameterByName","MAP_DEFINITION_PARAM_NAME","extentString","MAP_EXTENT_PARAM_NAME","mapIsOffline","currentMapDefinition","JSON","parse","window","atob","decodeURIComponent","currentMapExtent","getExtentFromString","localStorage","key","setItem","removeItem","e","error","getLocaleString","i","len","length","indexOf","LOCAL_STORAGE_KEY_PREFIX","ROOT_CACHE_NAME","values","getItem","split","extent","shift","map","name","join","url","substr","push","sort","a","b","options","extend","_dialogDiv","getDiv","dialogDiv","$","_$dialogDiv","document","body","appendChild","querySelectorAll","forEach","elm","classList","add","HIDDEN","Control","wrap","isDownloading","baseLayers","avgTileSize","Cfg","requestSchemas","minResolution","currentMap","_loadedCount","pushState","history","state","result","_offlinePanelDiv","params","getQueryStringParams","SERVICE_WORKER_FLAG","newParams","getParamString","href","location","pathname","hash","querySelector","setAttribute","connection","navigator","mozConnection","webkitConnection","onlineHandler","panel","remove","type","undefined","addEventListener","inherit","ctlProto","prototype","_states","READY","EDIT","DOWNLOADING","DELETING","_actions","CREATE","DELETE","offlineControls","event","MAPCACHEDOWNLOAD","MAPCACHEDELETE","MAPCACHEPROGRESS","MAPCACHEERROR","template","isDebug","dust","register","body_0","chk","ctx","w","h","$key","f","get","x","else","body_1","block","body_2","body_3","s","body_4","__dustBody","p","rebase","getPath","str","parseFloat","setNameReadyState","ctl","li","formatNumber","number","toString","replace","updateResolutions","opts","resDiv","range","resText","resLevel","resLeft","resolutions","getResolutions","rangeValue","value","currentResolution","getResolution","filter","r","parseInt","resValue","Math","floor","Number","toLocaleString","locale","disabled","style","left","innerHTML","updateThumbnails","cb","idx","checked","schema","layerId","tml","resolution","tileMatrixLimits","res","findTileMatrixLimits","qsIdx","j","lenj","l","id","layerNames","matrixSet","format","tagName","parentElement","backgroundSize","backgroundPosition","backgroundImage","mId","rt","cl","formatSize","size","quantity","showEstimatedMapSize","text","tileCount","ii","jj","cr","rb","estimatedMapSize","round","getListElementByMapUrl","hashIdx","lis","div","anchor","getAttribute","saveMapToStorage","encodeURIComponent","removeMap","findStoredMap","removeMapFromStorage","getListElementByMapName","removeChild","splice","removeAttribute","render","callback","_set1stRenderPromise","Promise","resolve","reject","renderObject","listId","getUID","getRenderedHtml","html","CLICK","preventDefault","selectionStart","selectionEnd","focus","then","renderData","generateCache","_updateReadyState","setEditState","setReadyState","cancelCacheRequest","list","EventTarget","listenerBySelector","startDeleteMap","target","textbox","setNameEditingState","newName","btn","showExtent","contains","ACTIVE","viewBtn","mapName","layer","clearFeatures","addPolygon","showsPopup","zoomToFeatures","features","trackSearch","searchListener","searchTerm","toLowerCase","display","mapLis","matches","removeProperty","visibility","RegExp","test","textContent","some","hidden","_filter","trim","checkbox","getLayer","updateRequestSchemas","rangeListener","isFunction","catch","err","Error","msg","returnValue","call","serviceWorker","ready","data","trigger","loaded","count","total","action","onLine","manifestFile","documentElement","ajax","method","responseType","response","loadJS","hex_md5","HASH","idxEnd","lines","urls","obj","hashStorageKey","cacheUrlList","one","firstLoad","confirm","reload","offlinePanelDiv","offPanel","drawId","layerPromise","addLayer","layerType","VECTOR","stealth","styles","line","all","renderPromise","addControl","mode","geom","RECTANGLE","persistent","objects","boxDraw","setLayer","on","DRAWSTART","toast","msgType","INFO","DRAWEND","points","feature","geometry","pStart","pEnd","minx","min","maxx","max","miny","maxy","setExtent","checkboxes","getRequestSchemas","layers","toggle","visibleLi","showModal","openCallback","time","Date","opt","year","month","day","hour","minute","second","closeCallback","CONTROLDEACTIVATE","_state","EDITING","addRenderedListNode","blList","isLayerAdded","isValidLayer","WMTS","mustReproject","detectSafari","detectIOS","isSameOrigin","parser","DOMParser","parseFromString","firstChild","LAYERADD","isBase","cachedResolutions","setResolutions","LAYERREMOVE","offCtls","offCtl","toUpperCase","concat","getControlsByClass","controls","disable","putLayerOnTop","mapDef","isSameLayer","mapDefLayer","protocol","urlIdx","tms","tmsIdx","missingLayers","availableBaseLayers","abl","finally","cachedLayers","baseLayer","setBaseLayer","includes","removeLayer","animate","removeHash","serviceWorkerEnabled","DISABLED","alert","addMap","showDownloadProgress","handleError","reason","status","detectIE","Array","isArray","cancel","activate","startRequest","closeModal","setDownloadingState","requestCache","storage","estimate","availableMB","quota","usage","mapSize","availableStorage","urlList","createCache","silent","getExtent","filterTml","arr","trimTml","intersectionExtent","POSITIVE_INFINITY","NEGATIVE_INFINITY","rs","unitsPerTile","tSize","origin","precision","pow","isGeo","DEGREE_PRECISION","METER_PRECISION","mapDefinition","bBox","ceil","layerUrl","shortFormat","formatIdx","btoa","stringify","u","lastIndexOf","urlPattern","getGetTilePattern","getFallbackLayer","thumbnail","k","lenk","c","deleteCache","deleteMap","confirmText","setDeletingState","current","percentString","width","resolutionMapper","allResolutions"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.SWCacheClient) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/SWCacheClient');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.Consts.classes.CONNECTION_OFFLINE = TC.Consts.classes.CONNECTION_OFFLINE || 'tc-conn-offline';\r\n    TC.Consts.classes.CONNECTION_WIFI = TC.Consts.classes.CONNECTION_WIFI || 'tc-conn-wifi';\r\n    TC.Consts.classes.CONNECTION_MOBILE = TC.Consts.classes.CONNECTION_MOBILE || 'tc-conn-mobile';\r\n    TC.Consts.classes.OFFLINE = TC.Consts.classes.OFFLINE || 'tc-offline';\r\n\r\n    var ALREADY_EXISTS = 'already_exists';\r\n\r\n    var manifestUrlList;\r\n    var requestManifest = function () {\r\n        return new Promise(function (resolve, reject) {\r\n            if (manifestUrlList && manifestUrlList.length) {\r\n                resolve(manifestUrlList);\r\n            }\r\n            else {\r\n                var manifestFile = document.documentElement.getAttribute('manifest') || 'manifest.appcache';\r\n                if (manifestFile) {\r\n                    TC.ajax({\r\n                        url: manifestFile,\r\n                        method: 'GET',\r\n                        responseType: 'text'\r\n                    }).then(function (response) {\r\n                        var data = response.data;\r\n                        TC.loadJS(\r\n                            !window.hex_md5,\r\n                            [TC.apiLocation + TC.Consts.url.HASH],\r\n                            function () {\r\n                                var hash = hex_md5(data);\r\n                                var idxEnd = data.indexOf('NETWORK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('FALLBACK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('SETTINGS:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                var lines = data.split(/[\\n\\r]/).filter(function (elm) {\r\n                                    return elm.length > 0 && elm.indexOf('#') !== 0 && elm !== 'CACHE:';\r\n                                });\r\n                                // Eliminamos la primera línea porque siempre es CACHE MANIFEST\r\n                                lines.shift();\r\n                                resolve({\r\n                                    hash: hash,\r\n                                    urls: lines\r\n                                });\r\n                            }\r\n                        );\r\n                    }).catch(function () {\r\n                        reject();\r\n                    });\r\n                }\r\n                else {\r\n                    reject();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.control.CacheBuilder = function () {\r\n        var self = this;\r\n\r\n        TC.control.SWCacheClient.apply(this, arguments);\r\n\r\n        var cs = self._classSelector = '.' + self.CLASS;\r\n        self._selectors = {\r\n            DRAW: cs + '-draw',\r\n            DRAWING: cs + '-drawing',\r\n            PROGRESS: cs + '-progress',\r\n            NEW: cs + '-new',\r\n            LIST: cs + '-list',\r\n            LISTITEM: cs + '-list > li',\r\n            OKBTN: cs + '-btn-ok',\r\n            NEWBTN: cs + '-btn-new',\r\n            SAVEBTN: '.tc-btn-save',\r\n            CANCELBTN: '.tc-btn-cancel',\r\n            EDITBTN: '.tc-btn-edit',\r\n            VIEWBTN: '.tc-btn-view',\r\n            DELETEBTN: '.tc-btn-delete',\r\n            TILECOUNT: cs + '-tile-count',\r\n            NAMETB: cs + '-txt-name',\r\n            TEXTBOX: 'input.tc-textbox',\r\n            EXIT: cs + '-link-exit',\r\n            OFFPANEL: cs + '-off-panel',\r\n            BLLIST: cs + '-bl-list',\r\n            BLLISTITEM: cs + '-bl-list > li',\r\n            BLLISTTEXT: cs + '-bl-panel-txt',\r\n            RNGMAXRES: cs + '-rng-maxres',\r\n            SEARCH: cs + '-map-available-srch',\r\n            EMPTYLIST: cs + '-map-available-empty',\r\n            OFFLINEHIDDEN: '[data-no-cb]'\r\n        };\r\n\r\n        self.storedMaps = [];\r\n\r\n        const mapDefString = TC.Util.getParameterByName(self.MAP_DEFINITION_PARAM_NAME);\r\n        const extentString = TC.Util.getParameterByName(self.MAP_EXTENT_PARAM_NAME);\r\n        self.mapIsOffline = !!mapDefString;\r\n        if (mapDefString) {\r\n            self.currentMapDefinition = JSON.parse(window.atob(decodeURIComponent(mapDefString)));\r\n        }\r\n        if (extentString) {\r\n            self.currentMapExtent = getExtentFromString(extentString);\r\n        }\r\n\r\n        // Comprobación de disponibilidad de localStorage\r\n        try {\r\n            self.localStorage = window.localStorage;\r\n            const key = \"__delete_me__\";\r\n            self.localStorage.setItem(key, key);\r\n            self.localStorage.removeItem(key);\r\n        }\r\n        catch (e) {\r\n            self.localStorage = null;\r\n            TC.error(self.getLocaleString('couldNotAccessLocalStorage'));\r\n        }\r\n\r\n        // Carga de mapas guardados\r\n        if (self.localStorage) {\r\n            for (var i = 0, len = self.localStorage.length; i < len; i++) {\r\n                var key = self.localStorage.key(i);\r\n                if (key.indexOf(self.LOCAL_STORAGE_KEY_PREFIX) === 0 && key !== self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash') {\r\n                    // Es un nombre de mapa y no es el hash de integridad de la cache root\r\n                    var values = self.localStorage.getItem(key).split(\" \");\r\n                    var extent = getExtentFromString(values.shift());\r\n                    var name = values.join(\" \");\r\n                    var map = {\r\n                        name: name,\r\n                        extent: extent,\r\n                        url: decodeURIComponent(key.substr(self.LOCAL_STORAGE_KEY_PREFIX.length))\r\n                    }\r\n                    self.storedMaps.push(map);\r\n                }\r\n            }\r\n            self.storedMaps.sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        var options = TC.Util.extend({}, len > 1 ? arguments[1] : arguments[0]);\r\n        self._dialogDiv = TC.Util.getDiv(options.dialogDiv);\r\n        if (window.$) {\r\n            self._$dialogDiv = $(self._dialogDiv);\r\n        }\r\n        if (!options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        if (self.mapIsOffline) {\r\n            document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                elm.classList.add(TC.Consts.classes.HIDDEN);\r\n            })\r\n        }\r\n\r\n        TC.Control.apply(self, arguments);\r\n        self.wrap = new TC.wrap.control.CacheBuilder(self);\r\n\r\n        self.isDownloading = false;\r\n        self.baseLayers = [];\r\n\r\n        self.options.avgTileSize = self.options.avgTileSize || TC.Cfg.avgTileSize;\r\n        self.requestSchemas = [];\r\n        self.minResolution = 0;\r\n        self.currentMap = null;\r\n\r\n        self._loadedCount = 0;\r\n\r\n        // Actualización del enlace al modo online\r\n        // Parche para detectar cambios en el hash. Lo usamos para actualizar los enlaces a los idiomas\r\n        var pushState = history.pushState;\r\n        history.pushState = function (state) {\r\n            var result;\r\n            //if (typeof history.onpushstate == \"function\") {\r\n            //    history.onpushstate({ state: state });\r\n            //}\r\n            result = pushState.apply(history, arguments);\r\n            if (self._offlinePanelDiv) {\r\n                const params = TC.Util.getQueryStringParams();\r\n                delete params[self.MAP_DEFINITION_PARAM_NAME];\r\n                delete params[self.MAP_EXTENT_PARAM_NAME];\r\n                delete params[self.SERVICE_WORKER_FLAG];\r\n                var newParams = TC.Util.getParamString(params);\r\n                if (newParams.length) {\r\n                    newParams = '?' + newParams;\r\n                }\r\n                const href = location.pathname + newParams + location.hash;\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).setAttribute('href', href);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Detección de estado de conexión\r\n        var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection || {};\r\n        var onlineHandler = function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.remove(\r\n                    TC.Consts.classes.CONNECTION_OFFLINE,\r\n                    TC.Consts.classes.CONNECTION_MOBILE,\r\n                    TC.Consts.classes.CONNECTION_WIFI);\r\n\r\n                var type = connection.type;\r\n                switch (type) {\r\n                    case 1:\r\n                    case 2:\r\n                    case undefined:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_WIFI);\r\n                        break;\r\n                    default:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_MOBILE);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        if (connection.addEventListener) {\r\n            connection.addEventListener('typechange', onlineHandler);\r\n        }\r\n        window.addEventListener('online', onlineHandler);\r\n        window.addEventListener('offline', function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.inherit(TC.control.CacheBuilder, TC.control.SWCacheClient);\r\n\r\n    var ctlProto = TC.control.CacheBuilder.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-cbuild';\r\n    ctlProto.MAP_DEFINITION_PARAM_NAME = \"map-def\";\r\n    ctlProto.MAP_EXTENT_PARAM_NAME = \"map-extent\";\r\n    ctlProto.LOCAL_STORAGE_KEY_PREFIX = \"TC.offline.map.\";\r\n    ctlProto.ROOT_CACHE_NAME = \"root\";\r\n    ctlProto.SERVICE_WORKER_FLAG = 'sw';\r\n    ctlProto._states = {\r\n        READY: 'ready',\r\n        EDIT: 'editing',\r\n        DOWNLOADING: 'downloading',\r\n        DELETING: 'deleting'\r\n    };\r\n    ctlProto._actions = {\r\n        CREATE: 'create',\r\n        DELETE: 'delete'\r\n    };\r\n    ctlProto.offlineControls = [\r\n        'attribution',\r\n        'basemapSelector',\r\n        'cacheBuilder',\r\n        'click',\r\n        'coordinates',\r\n        'draw',\r\n        'edit',\r\n        'geolocation',\r\n        'loadingIndicator',\r\n        'measure',\r\n        'navBar',\r\n        'popup',\r\n        'print',\r\n        'scale',\r\n        'scaleBar',\r\n        'scaleSelector',\r\n        'state',\r\n        'fullScreen'\r\n    ];\r\n\r\n    TC.Consts.event.MAPCACHEDOWNLOAD = TC.Consts.event.MAPCACHEDOWNLOAD || 'mapcachedownload.tc';\r\n    TC.Consts.event.MAPCACHEDELETE = TC.Consts.event.MAPCACHEDELETE || 'mapcachedelete.tc';\r\n    TC.Consts.event.MAPCACHEPROGRESS = TC.Consts.event.MAPCACHEPROGRESS || 'mapcacheprogress.tc';\r\n    TC.Consts.event.MAPCACHEERROR = TC.Consts.event.MAPCACHEERROR || 'mapcacheerror.tc';\r\n\r\n    ctlProto.template = {};\r\n    if (TC.isDebug) {\r\n        ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/CacheBuilder.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-map-node'] = TC.apiLocation + \"TC/templates/CacheBuilderMapNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-bl-node'] = TC.apiLocation + \"TC/templates/CacheBuilderBaseLayerNode.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/CacheBuilderDialog.html\";\r\n        ctlProto.template[ctlProto.CLASS + '-off-panel'] = TC.apiLocation + \"TC/templates/CacheBuilderOfflinePanel.html\";\r\n    }\r\n    else {\r\n        ctlProto.template[ctlProto.CLASS] = function () { dust.register(ctlProto.CLASS, body_0); function body_0(chk, ctx) { return chk.w(\"<h2>\").h(\"i18n\", ctx, {}, { \"$key\": \"offlineMaps\" }).w(\"</h2><div class=\\\"tc-ctl-cbuild-content\\\"><div class=\\\"tc-ctl-cbuild-draw tc-hidden\\\"></div><i class=\\\"tc-ctl-cbuild-map-search-icon\\\"></i><input type=\\\"search\\\" list=\\\"\").f(ctx.get([\"listId\"], false), ctx, \"h\").w(\"\\\" class=\\\"tc-ctl-cbuild-map-available-srch tc-textbox\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cb.filter.plhr\" }).w(\"\\\"\").x(ctx.get([\"storedMaps\"], false), ctx, { \"else\": body_1, \"block\": body_2 }, {}).w(\" maxlength=\\\"200\\\" /> <ul id=\\\"\").f(ctx.get([\"listId\"], false), ctx, \"h\").w(\"\\\" class=\\\"tc-ctl-cbuild-list\\\"><li class=\\\"tc-ctl-cbuild-map-available-empty\\\"\").x(ctx.get([\"storedMaps\"], false), ctx, { \"block\": body_3 }, {}).w(\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"cb.noMaps\" }).w(\"</span></li><li class=\\\"tc-ctl-cbuild-map-not\\\" hidden><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"noMatches\" }).w(\"</span></li>\").s(ctx.get([\"storedMaps\"], false), ctx, { \"block\": body_4 }, {}).w(\"</ul><div class=\\\"tc-ctl-cbuild-new\\\"><button class=\\\"tc-button tc-icon-button tc-ctl-cbuild-btn-new\\\" disabled title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"newofflinemap\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"newOfflineMap\" }).w(\"</button></div><div class=\\\"tc-ctl-cbuild-drawing tc-hidden\\\"><div class=\\\"tc-ctl-cbuild-tile-cmd\\\"><button class=\\\"tc-button tc-icon-button tc-ctl-cbuild-btn-cancel-draw\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"</button></div></div><div class=\\\"tc-ctl-cbuild-progress tc-hidden\\\"><p>\").h(\"i18n\", ctx, {}, { \"$key\": \"cb.DownloadingMap|s\" }).w(\": <span class=\\\"tc-ctl-cbuild-progress-count\\\"></span></p><div class=\\\"tc-ctl-cbuild-progress-bar\\\"><div class=\\\"tc-ctl-cbuild-progress-ratio\\\" style=\\\"width:0\\\"></div></div><button class=\\\"tc-button tc-icon-button tc-ctl-cbuild-btn-cancel-dl\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"</button></div></div>\"); } body_0.__dustBody = !0; function body_1(chk, ctx) { return chk.w(\" disabled\"); } body_1.__dustBody = !0; function body_2(chk, ctx) { return chk; } body_2.__dustBody = !0; function body_3(chk, ctx) { return chk.w(\" hidden\"); } body_3.__dustBody = !0; function body_4(chk, ctx) { return chk.p(\"tc-ctl-cbuild-map-node\", ctx, ctx.rebase(ctx.getPath(true, [])), {}); } body_4.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-map-node'] = function () { dust.register(ctlProto.CLASS + '-map-node', body_0); function body_0(chk, ctx) { return chk.w(\"<li data-extent=\\\"\").f(ctx.get([\"extent\"], false), ctx, \"h\").w(\"\\\"><span><a href=\\\"\").f(ctx.get([\"url\"], false), ctx, \"h\").w(\"\\\" title=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\">\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"</a></span><input class=\\\"tc-textbox tc-hidden\\\" type=\\\"text\\\" value=\\\"\").f(ctx.get([\"name\"], false), ctx, \"h\").w(\"\\\" /><button class=\\\"tc-btn-save tc-hidden\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"save\" }).w(\"\\\"></button><button class=\\\"tc-btn-cancel tc-hidden\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"\\\"></button><button class=\\\"tc-btn-edit\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"editMapName\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"editMapName\" }).w(\"</button><button class=\\\"tc-btn-view\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"viewMapExtent\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"viewMapExtent\" }).w(\"</button><button class=\\\"tc-btn-delete\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteMap\" }).w(\"\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"deleteMap\" }).w(\"</button></li>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-bl-node'] = function () { dust.register(ctlProto.CLASS + '-bl-node', body_0); function body_0(chk, ctx) { return chk.w(\"<li class=\\\"tc-ctl-cbuild-bl-node\\\" data-layer-uid=\\\"\").f(ctx.get([\"id\"], false), ctx, \"h\").w(\"\\\"><label style=\\\"background-size: 100% 100%; background-image: url(\").f(ctx.get([\"thumbnail\"], false), ctx, \"h\").w(\")\\\"><input type=\\\"checkbox\\\" name=\\\"cbbl\\\" value=\\\"\").f(ctx.get([\"id\"], false), ctx, \"h\").w(\"\\\" disabled><span>\").f(ctx.get([\"title\"], false), ctx, \"h\").w(\"</span></label></li>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-dialog'] = function () { dust.register(ctlProto.CLASS + '-dialog', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-cbuild-dialog tc-modal\\\"><div class=\\\"tc-modal-background tc-modal-close\\\"></div><div class=\\\"tc-modal-window\\\"><div class=\\\"tc-modal-header\\\"><h3>\").h(\"i18n\", ctx, {}, { \"$key\": \"newOfflineMap\" }).w(\"</h3><div class=\\\"tc-modal-close\\\"></div></div><div class=\\\"tc-modal-body\\\"><input type=\\\"text\\\" class=\\\"tc-ctl-cbuild-txt-name\\\" placeholder=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"nameRequired\" }).w(\"\\\" required /><div class=\\\"tc-ctl-cbuild-bl-panel\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"availableOfflineMaps\" }).w(\"</h4><p class=\\\"tc-ctl-cbuild-bl-panel-txt\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"selectAtLeastOne\" }).w(\"</p><ul class=\\\"tc-ctl-cbuild-bl-list\\\"></ul></div><div class=\\\"tc-ctl-cbuild-res-panel\\\"><h4>\").h(\"i18n\", ctx, {}, { \"$key\": \"maxRes\" }).w(\"</h4><div class=\\\"tc-ctl-cbuild-res\\\"></div><input type=\\\"range\\\" class=\\\"tc-ctl-cbuild-rng-maxres\\\" disabled value=\\\"0\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"maxRes\" }).w(\"\\\"></div><div class=\\\"tc-ctl-cbuild-tile-count\\\"></div></div><div class=\\\"tc-modal-footer\\\"><button class=\\\"tc-button tc-modal-close tc-ctl-cbuild-btn-ok\\\" disabled>\").h(\"i18n\", ctx, {}, { \"$key\": \"ok\" }).w(\"</button><button type=\\\"button\\\" class=\\\"tc-button tc-modal-close tc-ctl-cbuild-btn-cancel\\\">\").h(\"i18n\", ctx, {}, { \"$key\": \"cancel\" }).w(\"</button></div></div></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n        ctlProto.template[ctlProto.CLASS + '-off-panel'] = function () { dust.register(ctlProto.CLASS + '-off-panel', body_0); function body_0(chk, ctx) { return chk.w(\"<div class=\\\"tc-ctl-cbuild-off-panel tc-conn-wifi\\\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"offlineMap\" }).w(\"</span> <a href=\\\"\\\" class=\\\"tc-ctl-cbuild-link-exit\\\" title=\\\"\").h(\"i18n\", ctx, {}, { \"$key\": \"returnToOnlineMaps\" }).w(\"\\\"><span>\").h(\"i18n\", ctx, {}, { \"$key\": \"returnToOnlineMaps\" }).w(\"</span></a></div>\"); } body_0.__dustBody = !0; return body_0 };\r\n    }\r\n\r\n    const getExtentFromString = function (str) {\r\n        return decodeURIComponent(str).split(',').map(function (elm) {\r\n            return parseFloat(elm);\r\n        });\r\n    };\r\n\r\n    const setDownloadingState = function (ctl) {\r\n        ctl._state = ctl._states.DOWNLOADING;\r\n        TC.Util.closeModal();\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = true;\r\n        ctl.layer.clearFeatures();\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setDeletingState = function (ctl) {\r\n        ctl._state = ctl._states.DELETING;\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelectorAll(ctl._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.add(TC.Consts.classes.DISABLED);\r\n        });\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = false;\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = '';\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setNameEditingState = function (ctl, li) {\r\n        li.querySelector('span').classList.add(TC.Consts.classes.HIDDEN);\r\n        const textbox = li.querySelector(ctl._selectors.TEXTBOX);\r\n        textbox.classList.remove(TC.Consts.classes.HIDDEN);\r\n        textbox.value = li.querySelector('span a').innerHTML;\r\n        textbox.focus();\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    const setNameReadyState = function (ctl, li) {\r\n        li.querySelector('span').classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.TEXTBOX).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    var formatNumber = function (number) {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    };\r\n\r\n    var updateResolutions = function (ctl, options) {\r\n        var opts = options || {};\r\n        const resDiv = ctl._dialogDiv.querySelector(ctl._classSelector + '-res');\r\n        const range = ctl._dialogDiv.querySelector(ctl._selectors.RNGMAXRES);\r\n        var resolutions = ctl.getResolutions();\r\n        var resText, resLevel, resLeft;\r\n        if (resolutions.length) {\r\n            range.setAttribute('max', resolutions.length - 1);\r\n            if (ctl.minResolution) {\r\n                // Si ya había resolución previa y no se ha tocado el slider, se actualiza su valor\r\n                if (opts.rangeValue === undefined) {\r\n                    for (var i = 0, len = resolutions.length; i < len; i++) {\r\n                        if (ctl.minResolution >= resolutions[i]) {\r\n                            range.value = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (opts.rangeValue === undefined) {\r\n                    // Si no había resolución previa se selecciona un valor inicial igual a la resolución actual\r\n                    const currentResolution = ctl.map.getResolution();\r\n                    range.value = resolutions.filter(r => r > currentResolution).length;\r\n                }\r\n            }\r\n            resLevel = parseInt(range.value);\r\n            var resValue = Math.floor(new Number(resolutions[resLevel]) * 1000) / 1000;\r\n            resText = ctl.getLocaleString('metersPerPixel', {\r\n                value: resValue.toLocaleString((ctl.map ? ctl.map.options.locale : TC.Cfg.locale).replace('_', '-'))\r\n            });\r\n            resLeft = (resLevel + 1) * 100 / (resolutions.length + 1) + '%';\r\n            range.disabled = false;\r\n            ctl.minResolution = resolutions[range.value];\r\n        }\r\n        else {\r\n            resLevel = 0;\r\n            resText = '';\r\n            range.value = 0;\r\n            resLeft = '0';\r\n            ctl.minResolution = 0;\r\n            range.disabled = true;\r\n        }\r\n        resDiv.style.left = resLeft;\r\n        resDiv.innerHTML = resText;\r\n    };\r\n\r\n    const findTileMatrixLimits = function (schema, resolution) {\r\n        var result = null;\r\n        for (var i = 0, len = schema.tileMatrixLimits.length; i < len; i++) {\r\n            result = schema.tileMatrixLimits[i];\r\n            if (result.res <= resolution) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const updateThumbnails = function (ctl) {\r\n        ctl._dialogDiv.querySelectorAll(ctl._classSelector + '-bl-node input[type=checkbox]').forEach(function (cb, idx) {\r\n            if (cb.checked) {\r\n                var schema = ctl.requestSchemas.filter(function (elm) {\r\n                    return elm.layerId === cb.value;\r\n                })[0];\r\n                if (schema) {\r\n                    var tml = findTileMatrixLimits(schema, ctl.minResolution);\r\n                    if (tml) {\r\n                        var tmKey = '{TileMatrix}';\r\n                        var trKey = '{TileRow}';\r\n                        var tcKey = '{TileCol}';\r\n                        var url = schema.url;\r\n                        if (url.indexOf(tmKey) < 0) {\r\n                            // Caso KVP\r\n                            var qsIdx = url.indexOf('?');\r\n                            if (qsIdx >= 0) {\r\n                                url = url.substr(0, qsIdx);\r\n                            }\r\n                            for (var j = 0, lenj = ctl.baseLayers.length; j < lenj; j++) {\r\n                                var l = ctl.baseLayers[j];\r\n                                if (l.id === schema.layerId) {\r\n                                    url = url + '?layer=' + l.layerNames + '&style=default&tilematrixset=' + l.matrixSet +\r\n                                        '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + l.format +\r\n                                        '&TileMatrix=' + tmKey + '&TileRow=' + trKey + '&TileCol=' + tcKey;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        while (cb && cb.tagName !== 'LABEL') {\r\n                            cb = cb.parentElement;\r\n                        }\r\n                        if (cb) {\r\n                            cb.style.backgroundSize = 'auto';\r\n                            cb.style.backgroundPosition = 'left bottom';\r\n                            cb.style.backgroundImage = 'url(' + url.replace('{TileMatrix}', tml.mId).replace(trKey, tml.rt).replace(tcKey, tml.cl) + ')';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const formatSize = function (ctl, size) {\r\n        var result;\r\n        if (size < 1) {\r\n            result = ctl.getLocaleString('lessThan1Mb');\r\n        }\r\n        else {\r\n            result = ctl.getLocaleString('approxXMb', { quantity: formatNumber(size) });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const showEstimatedMapSize = function (ctl) {\r\n        var text = '';\r\n        ctl.tileCount = 0;\r\n        for (var i = 0, ii = ctl.requestSchemas.length; i < ii; i++) {\r\n            var schema = ctl.requestSchemas[i];\r\n            for (var j = 0, jj = schema.tileMatrixLimits.length; j < jj; j++) {\r\n                var tml = schema.tileMatrixLimits[j];\r\n                ctl.tileCount += (tml.cr - tml.cl + 1) * (tml.rb - tml.rt + 1);\r\n                if (tml.res < ctl.minResolution) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (ctl.tileCount) {\r\n            ctl.estimatedMapSize = Math.round(ctl.tileCount * ctl.options.avgTileSize / 1048576);\r\n            text = ctl.getLocaleString('xTiles', { quantity: formatNumber(ctl.tileCount) }) + ' (' + formatSize(ctl, ctl.estimatedMapSize) + ')';\r\n        }\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = text;\r\n    };\r\n\r\n    const getListElementByMapName = function (ctl, name) {\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.innerHTML === name) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const getListElementByMapUrl = function (ctl, url) {\r\n        var hashIdx = url.indexOf('#');\r\n        if (hashIdx >= 0) {\r\n            url = url.substr(0, hashIdx);\r\n        }\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.getAttribute('href') === url) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    var saveMapToStorage = function (ctl, map) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.setItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(map.url), map.extent + \" \" + map.name);\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var removeMapFromStorage = function (ctl, url) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.removeItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(url));\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const addMap = function (ctl) {\r\n        const map = ctl.currentMap;\r\n        if (saveMapToStorage(ctl, map)) {\r\n            ctl.getRenderedHtml(ctl.CLASS + '-map-node', { name: map.name, url: map.url }, function (html) {\r\n                const parser = new DOMParser();\r\n                ctl.div.querySelector(ctl._selectors.LIST).appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).setAttribute('hidden', 'hidden');\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = false;\r\n            });\r\n            ctl.storedMaps.push(map);\r\n        }\r\n    };\r\n\r\n    const removeMap = function (ctl, url) {\r\n        const map = ctl.findStoredMap({ url: url });\r\n        if (map) {\r\n            if (removeMapFromStorage(ctl, url)) {\r\n                const li = getListElementByMapName(ctl, map.name);\r\n                if (li) {\r\n                    li.parentElement.removeChild(li);\r\n                }\r\n            }\r\n            var idx = ctl.storedMaps.indexOf(map);\r\n            ctl.storedMaps.splice(idx, 1);\r\n            if (!ctl.storedMaps.length) {\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = true;\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).removeAttribute('hidden');\r\n            }\r\n\r\n            return map.name;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            var renderObject = { storedMaps: self.storedMaps, listId: self.CLASS + '-list-' + TC.getUID() };\r\n            self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n                self._dialogDiv.innerHTML = html;\r\n                self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    e.preventDefault();\r\n                    this.selectionStart = 0;\r\n                    this.selectionEnd = this.value.length;\r\n                    this.focus();\r\n\r\n                });\r\n            }).then(function () {\r\n                self.renderData(renderObject, function () {\r\n                    self._dialogDiv.querySelector(self._selectors.OKBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.generateCache();\r\n                    });\r\n                    self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener('input', function () {\r\n                        self._updateReadyState();\r\n                    });\r\n                    self.div.querySelector(self._selectors.NEWBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setEditState();\r\n                    });\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-draw').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setReadyState();\r\n                    });\r\n\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-dl').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.cancelCacheRequest();\r\n                    });\r\n\r\n                    const list = self.div.querySelector(self._selectors.LIST);\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.DELETEBTN, function (e) {\r\n                        self.startDeleteMap(e.target.parentElement.querySelector('a').innerHTML);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.EDITBTN, function (e) {\r\n                        setNameEditingState(self, e.target.parentElement);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.CANCELBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        li.querySelector(self._selectors.TEXTBOX).value = li.querySelector('a').innerHTML;\r\n                        setNameReadyState(self, li);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.SAVEBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        setNameReadyState(self, li);\r\n                        const anchor = li.querySelector('a');\r\n                        const oldName = anchor.innerHTML;\r\n                        const newName = li.querySelector(self._selectors.TEXTBOX).value;\r\n                        const map = self.findStoredMap({ url: anchor.getAttribute('href') });\r\n                        if (map) {\r\n                            map.name = newName;\r\n                            anchor.innerHTML = newName;\r\n                            anchor.setAttribute('title', newName);\r\n                            saveMapToStorage(self, map);\r\n                        }\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.VIEWBTN, function (e) {\r\n                        const btn = e.target;\r\n                        var showExtent = !btn.classList.contains(TC.Consts.classes.ACTIVE);\r\n                        const viewBtn = self.div.querySelector(self._selectors.VIEWBTN);\r\n                        viewBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        viewBtn.parentElement.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        const mapName = btn.parentElement.querySelector('a').innerHTML;\r\n                        if (mapName) {\r\n                            var map = self.findStoredMap({ name: mapName });\r\n                            if (map) {\r\n                                var extent = getExtentFromString(map.extent);\r\n                                self.layer.clearFeatures();\r\n                                if (showExtent) {\r\n                                    self.layer.addPolygon(\r\n                                        [\r\n                                            [\r\n                                                [extent[0], extent[1]],\r\n                                                [extent[0], extent[3]],\r\n                                                [extent[2], extent[3]],\r\n                                                [extent[2], extent[1]]\r\n                                            ]\r\n                                        ]\r\n                                        , {\r\n                                            showsPopup: false\r\n                                        }).then(function () {\r\n                                            self.layer.map.zoomToFeatures(self.layer.features);\r\n                                        });\r\n                                    btn.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.parentElement.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.setAttribute('title', self.getLocaleString('removeMapExtent'));\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n\r\n                    var _filter = function (searchTerm) {\r\n                        searchTerm = searchTerm.toLowerCase();\r\n                        //tc-ctl-cbuild-map-available-empty\r\n                        const lis = self.div.querySelectorAll(self._selectors.LISTITEM);\r\n                        lis.forEach(function (li) {\r\n                            li.style.display = 'none';\r\n                        });\r\n                        const mapLis = [];\r\n                        lis.forEach(function (li) {\r\n                            if (li.matches('li:not([class]),li.' + TC.Consts.classes.ACTIVE)) {\r\n                                mapLis.push(li);\r\n                            }\r\n                        });\r\n\r\n                        if (searchTerm.length === 0) {\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.removeProperty('display');\r\n                            });\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'visible';\r\n                        } else {\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'hidden';\r\n                            var r = new RegExp(searchTerm, 'i');\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.display = r.test(li.querySelector('a').textContent) ? '' : 'none';\r\n                            });\r\n\r\n                            if (!mapLis.some(function (li) {\r\n                                return !li.hidden;\r\n                            })) {\r\n                                lis.forEach(function (li) {\r\n                                    if (li.matches('[class^=\"tc-ctl-cbuild-map-not\"]')) {\r\n                                        li.style.removeProperty('display');\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    const trackSearch = self.div.querySelector(self._selectors.SEARCH);\r\n                    const searchListener = function () {\r\n                        _filter(this.value.toLowerCase().trim());\r\n                    };\r\n                    trackSearch.addEventListener('keyup', searchListener);\r\n                    trackSearch.addEventListener('search', searchListener);\r\n\r\n                    self._dialogDiv.querySelector(self._selectors.BLLIST).addEventListener('change', TC.EventTarget.listenerBySelector('input[type=checkbox]', function (e) {\r\n                        const checkbox = e.target;\r\n                        if (checkbox.checked) {\r\n                            self.baseLayers.push(self.map.getLayer(checkbox.value));\r\n                        }\r\n                        else {\r\n                            for (var i = 0, ii = self.baseLayers.length; i < ii; i++) {\r\n                                const bl = self.baseLayers[i];\r\n                                if (bl.id === checkbox.value) {\r\n                                    self.baseLayers.splice(i, 1);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        self.updateRequestSchemas();\r\n                        updateResolutions(self);\r\n                        updateThumbnails(self);\r\n                        self._updateReadyState();\r\n                        showEstimatedMapSize(self);\r\n                    }));\r\n\r\n                    const range = self._dialogDiv.querySelector(self._selectors.RNGMAXRES);\r\n                    const rangeListener = function (e) {\r\n                        updateResolutions(self, {\r\n                            rangeValue: e.target.value\r\n                        });\r\n                        updateThumbnails(self);\r\n                        showEstimatedMapSize(self);\r\n                    };\r\n                    range.addEventListener('input', rangeListener);\r\n                    range.addEventListener('change', rangeListener);\r\n\r\n                    const li = getListElementByMapUrl(self, location.href);\r\n                    if (li) {\r\n                        li.classList.add(TC.Consts.classes.ACTIVE);\r\n                    }\r\n\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n                })\r\n                    .then(function () {\r\n                        resolve();\r\n                    })\r\n                    .catch(function (err) {\r\n                        reject(err instanceof Error ? err : Error(err));\r\n                    });\r\n            });\r\n\r\n            // Control para evitar que se cancele una descarga de cache al salir de la página\r\n            window.addEventListener('beforeunload', function (e) {\r\n                if (self.isDownloading) {\r\n                    var msg = self.getLocaleString('cb.mapDownloading.warning');\r\n                    e.returnValue = msg;\r\n                    return msg;\r\n                }\r\n            }, true);\r\n        }));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n\r\n        const result = TC.control.SWCacheClient.prototype.register.call(self, map);\r\n\r\n        if (navigator.serviceWorker) {\r\n            navigator.serviceWorker.ready.then(function () {\r\n                navigator.serviceWorker.addEventListener('message', function (event) {\r\n                    switch (event.data.event) {\r\n                        case 'progress':\r\n                            self.trigger(TC.Consts.event.MAPCACHEPROGRESS, { url: event.data.name, loaded: event.data.count, total: event.data.total });\r\n                            break;\r\n                        case 'cached':\r\n                            self.trigger(TC.Consts.event.MAPCACHEDOWNLOAD, { url: event.data.name });\r\n                            break;\r\n                        case 'deleted':\r\n                            self.trigger(TC.Consts.event.MAPCACHEDELETE, { url: event.data.name });\r\n                            break;\r\n                        case 'error':\r\n                            if (event.data.action === self._actions.CREATE) {\r\n                                TC.error(self.getLocaleString('cb.resourceDownload.error', { url: event.data.url }));\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                });\r\n            });\r\n\r\n            if (navigator.onLine) {\r\n                // Cacheamos mediante service worker las URLs del manifiesto\r\n                requestManifest().then(function (obj) {\r\n                    const hashStorageKey = self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash';\r\n                    var hash;\r\n                    if (self.localStorage) {\r\n                        hash = self.localStorage.getItem(hashStorageKey);\r\n                    }\r\n                    if (hash !== obj.hash) {\r\n                        self.cacheUrlList(obj.urls);\r\n                        self.one(TC.Consts.event.MAPCACHEDOWNLOAD, function () {\r\n                            const firstLoad = !hash;\r\n                            if (self.localStorage) {\r\n                                self.localStorage.setItem(hashStorageKey, obj.hash);\r\n                            }\r\n                            if (!firstLoad) {\r\n                                TC.confirm(self.getLocaleString('newAppVersionAvailable'), function () {\r\n                                    location.reload();\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (self.mapIsOffline) {\r\n            map.div.classList.add(TC.Consts.classes.OFFLINE);\r\n\r\n            // Si no está especificado, el panel de aviso offline se cuelga del div del mapa\r\n            self._offlinePanelDiv = TC.Util.getDiv(self.options.offlinePanelDiv);\r\n            if (!self.options.offlinePanelDiv) {\r\n                map.div.appendChild(self._offlinePanelDiv);\r\n            }\r\n            self.getRenderedHtml(self.CLASS + '-off-panel', null, function (html) {\r\n                self._offlinePanelDiv.innerHTML = html;\r\n                if (!navigator.onLine) {\r\n                    const offPanel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                    offPanel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                    offPanel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n                }\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    TC.confirm(self.getLocaleString('offlineMapExit.confirm'),\r\n                        null,\r\n                        function () {\r\n                            e.preventDefault();\r\n                        });\r\n                });\r\n            });\r\n        }\r\n\r\n        const drawId = self.getUID();\r\n        const layerId = self.getUID();\r\n        self.layerPromise = map.addLayer({\r\n            id: layerId,\r\n            type: TC.Consts.layerType.VECTOR,\r\n            stealth: true,\r\n            styles: {\r\n                line: map.options.styles.line\r\n            }\r\n        });\r\n        self.layer = null;\r\n        Promise.all([\r\n            self.layerPromise,\r\n            self.renderPromise(),\r\n            map.addControl('draw', {\r\n                id: drawId,\r\n                div: self.div.querySelector(self._selectors.DRAW),\r\n                mode: TC.Consts.geom.RECTANGLE,\r\n                persistent: false\r\n            })\r\n        ]).then(function (objects) {\r\n            const layer = self.layer = objects[0];\r\n            const boxDraw = self.boxDraw = objects[2];\r\n            boxDraw.setLayer(layer);\r\n            boxDraw\r\n                .on(TC.Consts.event.DRAWSTART, function (e) {\r\n                    self.map.toast(self.getLocaleString('clickOnDownloadAreaOppositeCorner'), { type: TC.Consts.msgType.INFO });\r\n                })\r\n                .on(TC.Consts.event.DRAWEND, function (e) {\r\n                    var points = e.feature.geometry[0];\r\n                    var pStart = points[0];\r\n                    var pEnd = points[2];\r\n                    var minx = Math.min(pStart[0], pEnd[0]);\r\n                    var maxx = Math.max(pStart[0], pEnd[0]);\r\n                    var miny = Math.min(pStart[1], pEnd[1]);\r\n                    var maxy = Math.max(pStart[1], pEnd[1]);\r\n                    self.setExtent([minx, miny, maxx, maxy]);\r\n                    const checkboxes = self._dialogDiv.querySelectorAll('input[type=checkbox]');\r\n                    checkboxes.forEach(function (checkbox) {\r\n                        // Comprobamos que la extensión del mapa está disponible a alguna resolución\r\n                        const layer = self.map.getLayer(checkbox.value);\r\n                        var li = checkbox;\r\n                        while (li && li.tagName !== 'LI') {\r\n                            li = li.parentElement;\r\n                        }\r\n                        const tml = self.wrap.getRequestSchemas({\r\n                            extent: self.extent,\r\n                            layers: [layer]\r\n                        })[0].tileMatrixLimits;\r\n\r\n                        li.classList.toggle(TC.Consts.classes.HIDDEN, !tml.length);\r\n                    });\r\n                    const visibleLi = self._dialogDiv.querySelector(self._selectors.BLLISTITEM + ':not(.' + TC.Consts.classes.HIDDEN + ')');\r\n                    self._dialogDiv.querySelector(self._selectors.BLLISTTEXT).innerHTML = self.getLocaleString(visibleLi ? 'selectAtLeastOne' : 'cb.noMapsAtSelectedExtent');\r\n\r\n                    updateThumbnails(self);\r\n                    showEstimatedMapSize(self);\r\n                    TC.Util.showModal(self._dialogDiv.querySelector(self._classSelector + '-dialog'), {\r\n                        openCallback: function () {\r\n                            checkboxes.forEach(function (cb) {\r\n                                cb.disabled = false;\r\n                            });\r\n                            var time;\r\n                            if (Date.prototype.toLocaleString) {\r\n                                var opt = {};\r\n                                opt.year = opt.month = opt.day = opt.hour = opt.minute = opt.second = 'numeric';\r\n                                time = new Date().toLocaleString(self.map.options.locale.replace('_', '-'), opt);\r\n                            }\r\n                            else {\r\n                                time = new Date().toString();\r\n                            }\r\n                            self._dialogDiv.querySelector(self._selectors.NAMETB).value = time;\r\n                            self._updateReadyState();\r\n                        },\r\n                        closeCallback: function () {\r\n                            checkboxes.forEach(function (cb) {\r\n                                cb.disabled = true;\r\n                            });\r\n                            self.boxDraw.layer.clearFeatures();\r\n                        }\r\n                    });\r\n                });\r\n\r\n            map.on(TC.Consts.event.CONTROLDEACTIVATE, function (e) {\r\n                if (boxDraw === e.control) {\r\n                    if (self._state === self._states.EDITING) {\r\n                        self.setReadyState();\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        var addRenderedListNode = function (layer) {\r\n            var result = false;\r\n            const blList = self._dialogDiv.querySelector(self._selectors.BLLIST);\r\n            const isLayerAdded = function () {\r\n                return !!blList.querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n            };\r\n            var isValidLayer = layer.type === TC.Consts.layerType.WMTS && !layer.mustReproject;\r\n            if (TC.Util.detectSafari() && TC.Util.detectIOS()) {\r\n                isValidLayer = isValidLayer && TC.Util.isSameOrigin(layer.url);\r\n            }\r\n            if (isValidLayer && !isLayerAdded()) {\r\n                result = true;\r\n                self.getRenderedHtml(self.CLASS + '-bl-node', layer, function (html) {\r\n                    if (!isLayerAdded()) {\r\n                        const parser = new DOMParser();\r\n                        blList.appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        };\r\n\r\n        map\r\n            .on(TC.Consts.event.LAYERADD, function (e) {\r\n                if (e.layer.isBase && self.mapIsOffline) {\r\n                    // Capamos las resoluciones de la capa\r\n                    const resolutions = e.layer.getResolutions();\r\n                    if (resolutions) {\r\n                        const cachedResolutions = resolutions.filter(r => r >= self.currentMapDefinition.res);\r\n                        if (cachedResolutions.length) {\r\n                            e.layer.setResolutions(cachedResolutions);\r\n                        }\r\n                    }\r\n                }\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    addRenderedListNode(e.layer);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    const layer = e.layer;\r\n                    if (layer.type === TC.Consts.layerType.WMTS) {\r\n                        const li = self._dialogDiv\r\n                            .querySelector(self._selectors.BLLIST)\r\n                            .querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n                        li.parentElement.removeChild(li);\r\n                    }\r\n                });\r\n            });\r\n\r\n        map.ready(function () {\r\n            if (self.mapIsOffline) {\r\n                // Deshabilitamos los controles que no son usables en modo offline\r\n                var offCtls = [];\r\n                var i, len;\r\n                for (i = 0, len = self.offlineControls.length; i < len; i++) {\r\n                    var offCtl = self.offlineControls[i];\r\n                    offCtl = offCtl.substr(0, 1).toUpperCase() + offCtl.substr(1);\r\n                    offCtls = offCtls.concat(map.getControlsByClass('TC.control.' + offCtl));\r\n                }\r\n\r\n                for (i = 0, len = map.controls.length; i < len; i++) {\r\n                    var ctl = map.controls[i];\r\n                    if (offCtls.indexOf(ctl) < 0) {\r\n                        ctl.disable();\r\n                    }\r\n                }\r\n\r\n                document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                    elm.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n            }\r\n        });\r\n\r\n        map.loaded(function () {\r\n\r\n            self.layerPromise.then(function (layer) {\r\n                map.putLayerOnTop(layer);\r\n            });\r\n\r\n            self.renderPromise().then(function () {\r\n                self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n                for (var i = 0, len = map.baseLayers.length; i < len; i++) {\r\n                    addRenderedListNode(map.baseLayers[i]);\r\n                }\r\n            });\r\n\r\n            if (self.mapIsOffline) {\r\n                const mapDef = self.currentMapDefinition;\r\n                const isSameLayer = function (layer, mapDefLayer) {\r\n                    const layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    return (layerUrl === mapDef.url[mapDefLayer.urlIdx] && layer.layerNames === mapDefLayer.id && layer.matrixSet === mapDef.tms[mapDefLayer.tmsIdx]);\r\n                };\r\n                // Añadimos al mapa las capas guardadas que no están por defecto\r\n                const missingLayers = map.options.availableBaseLayers\r\n                    .filter((abl) => abl.type === TC.Consts.layerType.WMTS) // Capas cacheables\r\n                    .filter((abl) => { // Que estén en el mapa sin conexión\r\n                        return mapDef.layers.some((l) => isSameLayer(abl, l));\r\n                    })\r\n                    .filter((abl) => { // Que no estén en las capas por defecto\r\n                        return !map.baseLayers.some((l) => l.id === abl.id);\r\n                    });\r\n                Promise.all(missingLayers.map((layer) => {\r\n                    return map.addLayer(TC.Util.extend({}, layer, { isBase: true }));\r\n                })).finally(function () {\r\n                    // Obtenemos las capas cacheadas\r\n                    const cachedLayers = [];\r\n                    for (var i = 0, ii = mapDef.layers.length; i < ii; i++) {\r\n                        for (var j = 0, jj = map.baseLayers.length; j < jj; j++) {\r\n                            const baseLayer = map.baseLayers[j];\r\n                            if (baseLayer.type === TC.Consts.layerType.WMTS && isSameLayer(baseLayer, mapDef.layers[i])) {\r\n                                cachedLayers.push(baseLayer);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (cachedLayers.length) {\r\n                        map.setBaseLayer(cachedLayers[0], function () {\r\n                            // Quitamos las capas no disponibles (la capa en blanco la mantenemos)\r\n                            for (var i = map.baseLayers.length - 1; i >= 0; i--) {\r\n                                const baseLayer = map.baseLayers[i];\r\n                                if (baseLayer.type !== TC.Consts.layerType.VECTOR && !cachedLayers.includes(baseLayer)) {\r\n                                    map.removeLayer(baseLayer);\r\n                                }\r\n                            }\r\n\r\n                            map.setExtent(self.currentMapExtent, { animate: false });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        self\r\n            .on(TC.Consts.event.MAPCACHEDOWNLOAD, function (e) {\r\n                self.isDownloading = false;\r\n                const removeHash = function (url) {\r\n                    const hashIdx = url.indexOf('#');\r\n                    return (hashIdx >= 0) ? url.substr(0, hashIdx) : url;\r\n                }\r\n                const url = removeHash(e.url);\r\n                const li = getListElementByMapUrl(self, url);\r\n                if (li && !self.serviceWorkerEnabled) {\r\n                    // Se ha descargado un mapa cuando se quería borrar. Pasa cuando la cache ya estaba borrada pero la entrada en localStorage no.\r\n                    li.classList.remove(TC.Consts.classes.DISABLED);\r\n                    TC.alert(self.getLocaleString('cb.delete.error'));\r\n                }\r\n                else {\r\n                    if (self.currentMap && url === self.currentMap.url) {\r\n                        addMap(self);\r\n                        map.toast(self.getLocaleString('mapDownloaded', { mapName: self.currentMap.name }));\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEDELETE, function (e) {\r\n                self.isDownloading = false;\r\n                var mapName = removeMap(self, e.url) || (self.currentMap && self.currentMap.name);\r\n                self.currentMap = null;\r\n                if (mapName) {\r\n                    map.toast(self.getLocaleString('mapDeleted', { mapName: mapName }));\r\n                }\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEPROGRESS, function (e) {\r\n                var total = e.total;\r\n                if (!total && self.requestSchemas) {\r\n                    total = self.requestSchemas[0].tileCount;\r\n                }\r\n                var loaded = e.loaded;\r\n                if (loaded) {\r\n                    self._loadedCount = loaded;\r\n                }\r\n                else {\r\n                    self._loadedCount += 1;\r\n                    loaded = self._loadedCount;\r\n                }\r\n                self.showDownloadProgress(loaded, total);\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEERROR, function (e) {\r\n                self.isDownloading = false;\r\n                self.setReadyState();\r\n                var msg = self.getLocaleString('cb.mapCreation.error');\r\n                var handleError = true;\r\n                switch (e.reason) {\r\n                    case 'quota':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonQuota');\r\n                        break;\r\n                    case 'resource':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonResource');\r\n                        break;\r\n                    case 'manifest':\r\n                        if (e.status == '410') {\r\n                            removeMap(self, e.url);\r\n                        }\r\n                        handleError = false;\r\n                        break;\r\n                    case ALREADY_EXISTS:\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonAlreadyExists');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (handleError) {\r\n                    if (TC.Util.detectIE()) {\r\n                        TC.error(msg);\r\n                        TC.alert(self.getLocaleString('cb.mapCreation.error.reasonEdge'));\r\n                    }\r\n                    else {\r\n                        TC.alert(msg);\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setExtent = function (extent) {\r\n        var self = this;\r\n        if (Array.isArray(extent) && extent.length >= 4) {\r\n            self.extent = extent;\r\n            self.updateRequestSchemas();\r\n        }\r\n    };\r\n\r\n    ctlProto._updateReadyState = function () {\r\n        const self = this;\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled =\r\n            !self.extent ||\r\n            self._dialogDiv.querySelector(self._selectors.NAMETB).value.length === 0 ||\r\n            self._dialogDiv.querySelector(self._selectors.RNGMAXRES).disabled;\r\n    };\r\n\r\n    ctlProto.setReadyState = function () {\r\n        const self = this;\r\n        self._state = self._states.READY;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelectorAll(self._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.DISABLED);\r\n        });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n        self._dialogDiv.querySelector(self._selectors.TILECOUNT).innerHTML = '';\r\n        self.extent = null;\r\n        self._loadedCount = 0;\r\n        if (self.boxDraw) {\r\n            self.boxDraw.cancel();\r\n        }\r\n    };\r\n\r\n    ctlProto.setEditState = function () {\r\n        const self = this;\r\n        self._state = self._states.EDITING;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.map.toast(self.getLocaleString('clickOnDownloadAreaFirstCorner'), { type: TC.Consts.msgType.INFO });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = true;\r\n        self._dialogDiv.querySelector(self._selectors.NAMETB).value = '';\r\n        self.boxDraw.activate();\r\n    };\r\n\r\n    ctlProto.generateCache = function () {\r\n        const self = this;\r\n        const options = {\r\n            mapName: self._dialogDiv.querySelector(self._selectors.NAMETB).value\r\n        };\r\n        if (self.findStoredMap({ name: options.mapName })) {\r\n            TC.alert(self.getLocaleString('cb.mapNameAlreadyExists.error', options));\r\n        }\r\n        else {\r\n            var startRequest = function () {\r\n                self.div.querySelector(self._classSelector + '-name').innerHTML = options.mapName;\r\n                self.map.toast(self.getLocaleString('downloadingMap', { mapName: options.mapName }));\r\n                setDownloadingState(self);\r\n                self.requestCache(options);\r\n            };\r\n\r\n            // Usamos Storage API si existe\r\n            if (navigator.storage && navigator.storage.estimate) {\r\n                navigator.storage.estimate().then(function (estimate) {\r\n                    const availableMB = (estimate.quota - estimate.usage) / 1048576;\r\n                    if (self.estimatedMapSize < availableMB) {\r\n                        startRequest();\r\n                    }\r\n                    else {\r\n                        TC.confirm(self.getLocaleString('cb.mapCreation.warning.reasonSize', {\r\n                            mapName: options.mapName,\r\n                            mapSize: formatSize(self, self.estimatedMapSize),\r\n                            availableStorage: formatSize(self, Math.round(availableMB))\r\n                        }), startRequest);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                startRequest();\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.cacheUrlList = function (urlList, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        self.createCache(opts.name || (self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME), {\r\n            urlList: urlList,\r\n            silent: opts.silent\r\n        });\r\n    };\r\n\r\n    ctlProto.requestCache = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        if (self.map) {\r\n            var extent = opts.extent || self.extent || self.map.getExtent();\r\n            self.updateRequestSchemas({ extent: extent });\r\n\r\n            if (self.requestSchemas) {\r\n                var filterTml = function (elm, i, arr) {\r\n                    var result = elm.res >= self.minResolution;\r\n                    if (!result && i > 0) {\r\n                        result = arr[i - 1].res > self.minResolution;\r\n                    }\r\n                    return result;\r\n                };\r\n                var trimTml = function (tml) {\r\n                    return {\r\n                        mId: tml.mId,\r\n                        cl: tml.cl,\r\n                        cr: tml.cr,\r\n                        rt: tml.rt,\r\n                        rb: tml.rb\r\n                    };\r\n                };\r\n                // Solo mantenemos los esquemas hasta el nivel de resolución mínima o el inmediatamente inferior a ella si no lo tiene\r\n                var requestSchemas = self.requestSchemas.map(function (schema) {\r\n                    return {\r\n                        layerId: schema.layerId,\r\n                        tileMatrixLimits: schema.tileMatrixLimits.filter(filterTml)\r\n                    };\r\n                });\r\n                // Actualizamos el extent para que coincida con las teselas del último nivel de los esquemas\r\n                // También eliminamos del esquema todo lo irrelevante para la petición\r\n                var intersectionExtent = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\r\n                for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                    var rs = requestSchemas[i];\r\n                    var tml = rs.tileMatrixLimits[rs.tileMatrixLimits.length - 1];\r\n                    var unitsPerTile = tml.res * tml.tSize;\r\n                    intersectionExtent[0] = Math.min(intersectionExtent[0], tml.origin[0] + unitsPerTile * tml.cl);\r\n                    intersectionExtent[1] = Math.min(intersectionExtent[1], tml.origin[1] - unitsPerTile * (tml.rb + 1));\r\n                    intersectionExtent[2] = Math.max(intersectionExtent[2], tml.origin[0] + unitsPerTile * (tml.cr + 1));\r\n                    intersectionExtent[3] = Math.max(intersectionExtent[3], tml.origin[1] - unitsPerTile * tml.rt);\r\n                    rs.tileMatrixLimits = rs.tileMatrixLimits.map(trimTml);\r\n                }\r\n\r\n\r\n                // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                var precision = Math.pow(10, self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION);\r\n                intersectionExtent = intersectionExtent.map(function (elm, idx) {\r\n                    var round = (idx < 3) ? Math.ceil : Math.floor;\r\n                    return round(elm * precision) / precision;\r\n                });\r\n\r\n                var mapDefinition = {\r\n                    bBox: intersectionExtent,\r\n                    res: Math.floor(self.minResolution * 1000) / 1000, // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                    url: [],\r\n                    tms: [],\r\n                    format: [],\r\n                    layers: new Array(self.baseLayers.length)\r\n                };\r\n                for (var i = 0, len = self.baseLayers.length; i < len; i++) {\r\n                    var layer = self.baseLayers[i];\r\n                    var layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    var urlIdx = mapDefinition.url.indexOf(layerUrl);\r\n                    if (urlIdx < 0) {\r\n                        urlIdx = mapDefinition.url.push(layerUrl) - 1;\r\n                    }\r\n                    var tmsIdx = mapDefinition.tms.indexOf(layer.matrixSet);\r\n                    if (tmsIdx < 0) {\r\n                        tmsIdx = mapDefinition.tms.push(layer.matrixSet) - 1;\r\n                    }\r\n                    var shortFormat = layer.format.substr(layer.format.indexOf('/') + 1);\r\n                    var formatIdx = mapDefinition.format.indexOf(shortFormat);\r\n                    if (formatIdx < 0) {\r\n                        formatIdx = mapDefinition.format.push(shortFormat) - 1;\r\n                    }\r\n                    mapDefinition.layers[i] = {\r\n                        urlIdx: urlIdx,\r\n                        id: layer.layerNames,\r\n                        tmsIdx: tmsIdx,\r\n                        formatIdx: formatIdx\r\n                    };\r\n                }\r\n\r\n                var params = TC.Util.getQueryStringParams();\r\n                var e = params[self.MAP_EXTENT_PARAM_NAME] = intersectionExtent.toString();\r\n                params[self.MAP_DEFINITION_PARAM_NAME] = btoa(JSON.stringify(mapDefinition));\r\n                if (self.serviceWorkerEnabled) {\r\n                    params[self.SERVICE_WORKER_FLAG] = 1;\r\n                }\r\n                var u = location.origin + location.pathname.substr(0, location.pathname.lastIndexOf('/') + 1) + '?' + TC.Util.getParamString(params);\r\n                self.currentMap = { name: opts.mapName, extent: e, url: u };\r\n                self.isDownloading = true;\r\n\r\n                // Guardado mediante service workers\r\n                if (self.serviceWorkerEnabled) {\r\n                    const urlList = [];\r\n                    for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                        var schema = requestSchemas[i];\r\n                        var urlPattern = null;\r\n                        for (var j = 0, lenj = self.baseLayers.length; j < lenj; j++) {\r\n                            var l = self.baseLayers[j];\r\n                            if (l.id === schema.layerId) {\r\n                                urlPattern = self.wrap.getGetTilePattern(l);\r\n                                if (l.getFallbackLayer) {\r\n                                    // Esto se usa para meter en almacenamiento local el capabilities de la capa de fallback y evitar errores cuando no haya red\r\n                                    l.getFallbackLayer();\r\n                                }\r\n                                if (l.thumbnail) {\r\n                                    urlList.push(l.thumbnail);\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (urlPattern) {\r\n                            for (var k = 0, lenk = schema.tileMatrixLimits.length; k < lenk; k++) {\r\n                                var tml = schema.tileMatrixLimits[k];\r\n                                for (var r = tml.rt; r <= tml.rb; r++) {\r\n                                    for (var c = tml.cl; c <= tml.cr; c++) {\r\n                                        urlList.push(urlPattern.replace('{TileMatrix}', tml.mId).replace('{TileCol}', c).replace('{TileRow}', r));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    urlList.push(u);\r\n                    self.cacheUrlList(urlList, { name: u });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ctlProto.cancelCacheRequest = function () {\r\n        var self = this;\r\n        if (self.currentMap) {\r\n            self.deleteCache(self.currentMap.url).then(function (obj) {\r\n                if (!obj) {\r\n                    self.currentMap = null;\r\n                }\r\n            });\r\n        }\r\n        self.isDownloading = false;\r\n        self.setReadyState();\r\n    };\r\n\r\n    ctlProto.deleteMap = function (name) {\r\n        var self = this;\r\n\r\n        var map = self.findStoredMap({ name: name });\r\n        if (map) {\r\n            self.deleteCache(map.url);\r\n        }\r\n    };\r\n\r\n    ctlProto.startDeleteMap = function (name) {\r\n        const self = this;\r\n        if (navigator.onLine) {\r\n            if (name) {\r\n                var confirmText = self.getLocaleString('cb.delete.confirm', { mapName: name });\r\n                if (!self.serviceWorkerEnabled) {\r\n                    confirmText = confirmText + \" \" + self.getLocaleString('cb.delete.confirm.connect.warning');\r\n                }\r\n                if (confirm(confirmText)) {\r\n                    if (navigator.onLine) {\r\n                        setDeletingState(self);\r\n                        self.deleteMap(name);\r\n                    } else {\r\n                        TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n        }\r\n    };\r\n\r\n    ctlProto.findStoredMap = function (options) {\r\n        var self = this;\r\n        return self.storedMaps.filter(function (elm) {\r\n            var result = true;\r\n            if (options.name && options.name !== elm.name) {\r\n                result = false;\r\n            }\r\n            if (result && options.url && options.url !== elm.url) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        })[0];\r\n    };\r\n\r\n    ctlProto.showDownloadProgress = function (current, total) {\r\n        const self = this;\r\n        const cs = self._classSelector;\r\n        const count = self.div.querySelector(cs + '-progress-count');\r\n        if (total) {\r\n            var percent = Math.min(Math.round(current * 100 / total), 100);\r\n            var percentString = percent + '%';\r\n            self.div.querySelector(cs + '-progress-ratio').style.width = percentString;\r\n            count.innerHTML = percentString;\r\n        }\r\n        else {\r\n            self.div.querySelector(cs + '-progress-bar').classList.add(TC.Consts.classes.HIDDEN);\r\n            count.innerHTML = self.getLocaleString('xFiles', { quantity: current });\r\n        }\r\n    };\r\n\r\n    ctlProto.updateRequestSchemas = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        opts.extent = opts.extent || self.extent;\r\n        opts.layers = opts.layers || self.baseLayers;\r\n        self.requestSchemas = self.wrap.getRequestSchemas(opts);\r\n        return self.requestSchemas;\r\n    };\r\n\r\n    ctlProto.getResolutions = function () {\r\n        const self = this;\r\n        var result = [];\r\n\r\n        const resolutionMapper = function (tml) {\r\n            return tml.res;\r\n        };\r\n        // Obtenemos un array de resoluciones por cada esquema de cada capa\r\n        const allResolutions = self.requestSchemas.map(function (schema) {\r\n            return schema.tileMatrixLimits.map(resolutionMapper);\r\n        });\r\n\r\n        // \"Hacemos la cremallera\" con los arrays de resoluciones de todas las capas y añadimos resoluciones al array de resultados\r\n        result = result.concat.apply(result, allResolutions);\r\n        result.sort(function (a, b) {\r\n            return b - a;\r\n        });\r\n        return result;\r\n    };\r\n\r\n})();\r\n"]}