{"version":3,"sources":["control/CacheBuilder.js"],"names":["TC","control","SWCacheClient","syncLoadJS","apiLocation","Consts","classes","CONNECTION_OFFLINE","CONNECTION_WIFI","CONNECTION_MOBILE","OFFLINE","CacheBuilder","self","this","apply","arguments","cs","_classSelector","CLASS","_selectors","DRAW","DRAWING","PROGRESS","NEW","LIST","LISTITEM","OKBTN","NEWBTN","SAVEBTN","CANCELBTN","EDITBTN","VIEWBTN","DELETEBTN","TILECOUNT","NAMETB","TEXTBOX","EXIT","OFFPANEL","BLLIST","BLLISTITEM","BLLISTTEXT","RNGMAXRES","SEARCH","EMPTYLIST","OFFLINEHIDDEN","storedMaps","mapDefString","Util","getParameterByName","MAP_DEFINITION_PARAM_NAME","extentString","MAP_EXTENT_PARAM_NAME","mapIsOffline","currentMapDefinition","JSON","parse","window","atob","decodeURIComponent","currentMapExtent","getExtentFromString","localStorage","key","setItem","removeItem","e","error","getLocaleString","i","len","length","indexOf","LOCAL_STORAGE_KEY_PREFIX","ROOT_CACHE_NAME","values","getItem","split","extent","shift","map","name","join","url","substr","push","sort","a","b","options","extend","_dialogDiv","getDiv","dialogDiv","$","_$dialogDiv","document","body","appendChild","querySelectorAll","forEach","elm","classList","add","HIDDEN","Control","wrap","isDownloading","baseLayers","avgTileSize","Cfg","requestSchemas","minResolution","currentMap","_loadedCount","pushState","history","state","result","_offlinePanelDiv","params","getQueryStringParams","SERVICE_WORKER_FLAG","newParams","getParamString","href","location","pathname","hash","querySelector","setAttribute","connection","navigator","mozConnection","webkitConnection","onlineHandler","panel","remove","type","undefined","addEventListener","inherit","ctlProto","prototype","_states","READY","EDIT","DOWNLOADING","DELETING","_actions","CREATE","DELETE","offlineControls","event","MAPCACHEDOWNLOAD","MAPCACHEDELETE","MAPCACHEPROGRESS","MAPCACHEERROR","template","dust","register","body_0","chk","ctx","w","h","$key","f","get","x","else","body_1","block","body_2","body_3","s","body_4","__dustBody","p","rebase","getPath","str","parseFloat","setNameReadyState","ctl","li","formatNumber","number","toString","replace","updateResolutions","opts","resDiv","range","resText","resLevel","resLeft","resolutions","getResolutions","rangeValue","value","currentResolution","getResolution","filter","r","parseInt","resValue","Math","floor","Number","toLocaleString","locale","disabled","style","left","innerHTML","updateThumbnails","cb","idx","checked","schema","layerId","tml","resolution","tileMatrixLimits","res","findTileMatrixLimits","qsIdx","j","lenj","l","id","layerNames","matrixSet","format","tagName","parentElement","backgroundSize","backgroundPosition","backgroundImage","mId","rt","cl","formatSize","size","quantity","showEstimatedMapSize","text","tileCount","ii","jj","cr","rb","estimatedMapSize","round","getListElementByMapUrl","hashIdx","lis","div","anchor","getAttribute","saveMapToStorage","encodeURIComponent","removeMap","findStoredMap","removeMapFromStorage","getListElementByMapName","removeChild","splice","removeAttribute","render","callback","_set1stRenderPromise","Promise","resolve","reject","renderObject","listId","getUID","getRenderedHtml","html","CLICK","preventDefault","selectionStart","selectionEnd","focus","then","renderData","generateCache","_updateReadyState","setEditState","setReadyState","cancelCacheRequest","list","EventTarget","listenerBySelector","startDeleteMap","target","textbox","setNameEditingState","newName","btn","showExtent","contains","ACTIVE","viewBtn","mapName","layer","clearFeatures","addPolygon","showsPopup","zoomToFeatures","features","trackSearch","searchListener","searchTerm","toLowerCase","display","mapLis","matches","removeProperty","visibility","RegExp","test","textContent","some","hidden","_filter","trim","checkbox","getLayer","updateRequestSchemas","rangeListener","isFunction","catch","err","Error","msg","returnValue","call","getServiceWorker","serviceWorker","ready","data","trigger","loaded","count","total","action","onLine","manifestFile","documentElement","ajax","method","responseType","response","loadJS","hex_md5","HASH","idxEnd","lines","urls","obj","hashStorageKey","cacheUrlList","one","firstLoad","confirm","reload","renderPromise","container","warning","createElement","header","reason","message","console","log","offlinePanelDiv","offPanel","drawId","layerPromise","addLayer","layerType","VECTOR","stealth","owner","styles","line","all","addControl","mode","geom","RECTANGLE","persistent","objects","boxDraw","setLayer","on","DRAWSTART","toast","msgType","INFO","DRAWEND","points","feature","geometry","pStart","pEnd","minx","min","maxx","max","miny","maxy","setExtent","checkboxes","getRequestSchemas","layers","toggle","visibleLi","showModal","openCallback","setTimeout","time","Date","opt","year","month","day","hour","minute","second","closeCallback","CONTROLDEACTIVATE","_state","EDITING","addRenderedListNode","blList","isLayerAdded","isValidLayer","WMTS","mustReproject","detectSafari","detectIOS","isSameOrigin","parser","DOMParser","parseFromString","firstChild","LAYERADD","isBase","cachedResolutions","setResolutions","LAYERREMOVE","offCtls","offCtl","toUpperCase","concat","getControlsByClass","controls","disable","putLayerOnTop","mapDef","isSameLayer","mapDefLayer","protocol","urlIdx","tms","tmsIdx","missingLayers","availableBaseLayers","abl","finally","cachedLayers","baseLayer","setBaseLayer","includes","removeLayer","animate","removeHash","serviceWorkerEnabled","DISABLED","alert","addMap","showDownloadProgress","handleError","status","detectIE","Array","isArray","cancel","activate","startRequest","closeModal","setDownloadingState","requestCache","storage","estimate","availableMB","quota","usage","mapSize","availableStorage","urlList","createCache","silent","getExtent","filterTml","arr","trimTml","intersectionExtent","POSITIVE_INFINITY","NEGATIVE_INFINITY","rs","unitsPerTile","tSize","origin","precision","pow","isGeo","DEGREE_PRECISION","METER_PRECISION","mapDefinition","bBox","ceil","layerUrl","shortFormat","formatIdx","btoa","stringify","u","lastIndexOf","urlPattern","getGetTilePattern","getFallbackLayer","thumbnail","k","lenk","c","deleteCache","deleteMap","confirmText","setDeletingState","current","percentString","width","resolutionMapper","allResolutions"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.SWCacheClient) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/SWCacheClient');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.Consts.classes.CONNECTION_OFFLINE = TC.Consts.classes.CONNECTION_OFFLINE || 'tc-conn-offline';\r\n    TC.Consts.classes.CONNECTION_WIFI = TC.Consts.classes.CONNECTION_WIFI || 'tc-conn-wifi';\r\n    TC.Consts.classes.CONNECTION_MOBILE = TC.Consts.classes.CONNECTION_MOBILE || 'tc-conn-mobile';\r\n    TC.Consts.classes.OFFLINE = TC.Consts.classes.OFFLINE || 'tc-offline';\r\n\r\n    var ALREADY_EXISTS = 'already_exists';\r\n\r\n    var manifestUrlList;\r\n    var requestManifest = function () {\r\n        return new Promise(function (resolve, reject) {\r\n            if (manifestUrlList && manifestUrlList.length) {\r\n                resolve(manifestUrlList);\r\n            }\r\n            else {\r\n                var manifestFile = document.documentElement.getAttribute('manifest') || 'manifest.appcache';\r\n                if (manifestFile) {\r\n                    TC.ajax({\r\n                        url: manifestFile,\r\n                        method: 'GET',\r\n                        responseType: 'text'\r\n                    }).then(function (response) {\r\n                        var data = response.data;\r\n                        TC.loadJS(\r\n                            !window.hex_md5,\r\n                            [TC.apiLocation + TC.Consts.url.HASH],\r\n                            function () {\r\n                                var hash = hex_md5(data);\r\n                                var idxEnd = data.indexOf('NETWORK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('FALLBACK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('SETTINGS:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                var lines = data.split(/[\\n\\r]/).filter(function (elm) {\r\n                                    return elm.length > 0 && elm.indexOf('#') !== 0 && elm !== 'CACHE:';\r\n                                });\r\n                                // Eliminamos la primera línea porque siempre es CACHE MANIFEST\r\n                                lines.shift();\r\n                                resolve({\r\n                                    hash: hash,\r\n                                    urls: lines\r\n                                });\r\n                            }\r\n                        );\r\n                    }).catch(function (error) {\r\n                        reject(error);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(Error('There is no manifest in document'));\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.control.CacheBuilder = function () {\r\n        var self = this;\r\n\r\n        TC.control.SWCacheClient.apply(this, arguments);\r\n\r\n        var cs = self._classSelector = '.' + self.CLASS;\r\n        self._selectors = {\r\n            DRAW: cs + '-draw',\r\n            DRAWING: cs + '-drawing',\r\n            PROGRESS: cs + '-progress',\r\n            NEW: cs + '-new',\r\n            LIST: cs + '-list',\r\n            LISTITEM: cs + '-list > li',\r\n            OKBTN: cs + '-btn-ok',\r\n            NEWBTN: cs + '-btn-new',\r\n            SAVEBTN: '.tc-btn-save',\r\n            CANCELBTN: '.tc-btn-cancel',\r\n            EDITBTN: '.tc-btn-edit',\r\n            VIEWBTN: '.tc-btn-view',\r\n            DELETEBTN: '.tc-btn-delete',\r\n            TILECOUNT: cs + '-tile-count',\r\n            NAMETB: cs + '-txt-name',\r\n            TEXTBOX: 'input.tc-textbox',\r\n            EXIT: cs + '-link-exit',\r\n            OFFPANEL: cs + '-off-panel',\r\n            BLLIST: cs + '-bl-list',\r\n            BLLISTITEM: cs + '-bl-list > li',\r\n            BLLISTTEXT: cs + '-bl-panel-txt',\r\n            RNGMAXRES: cs + '-rng-maxres',\r\n            SEARCH: cs + '-map-available-srch',\r\n            EMPTYLIST: cs + '-map-available-empty',\r\n            OFFLINEHIDDEN: '[data-no-cb]'\r\n        };\r\n\r\n        self.storedMaps = [];\r\n\r\n        const mapDefString = TC.Util.getParameterByName(self.MAP_DEFINITION_PARAM_NAME);\r\n        const extentString = TC.Util.getParameterByName(self.MAP_EXTENT_PARAM_NAME);\r\n        self.mapIsOffline = !!mapDefString;\r\n        if (mapDefString) {\r\n            self.currentMapDefinition = JSON.parse(window.atob(decodeURIComponent(mapDefString)));\r\n        }\r\n        if (extentString) {\r\n            self.currentMapExtent = getExtentFromString(extentString);\r\n        }\r\n\r\n        // Comprobación de disponibilidad de localStorage\r\n        try {\r\n            self.localStorage = window.localStorage;\r\n            const key = \"__delete_me__\";\r\n            self.localStorage.setItem(key, key);\r\n            self.localStorage.removeItem(key);\r\n        }\r\n        catch (e) {\r\n            self.localStorage = null;\r\n            TC.error(self.getLocaleString('couldNotAccessLocalStorage'));\r\n        }\r\n\r\n        // Carga de mapas guardados\r\n        if (self.localStorage) {\r\n            for (var i = 0, len = self.localStorage.length; i < len; i++) {\r\n                var key = self.localStorage.key(i);\r\n                if (key.indexOf(self.LOCAL_STORAGE_KEY_PREFIX) === 0 && key !== self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash') {\r\n                    // Es un nombre de mapa y no es el hash de integridad de la cache root\r\n                    var values = self.localStorage.getItem(key).split(\" \");\r\n                    var extent = getExtentFromString(values.shift());\r\n                    var name = values.join(\" \");\r\n                    var map = {\r\n                        name: name,\r\n                        extent: extent,\r\n                        url: decodeURIComponent(key.substr(self.LOCAL_STORAGE_KEY_PREFIX.length))\r\n                    }\r\n                    self.storedMaps.push(map);\r\n                }\r\n            }\r\n            self.storedMaps.sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        var options = TC.Util.extend({}, len > 1 ? arguments[1] : arguments[0]);\r\n        self._dialogDiv = TC.Util.getDiv(options.dialogDiv);\r\n        if (window.$) {\r\n            self._$dialogDiv = $(self._dialogDiv);\r\n        }\r\n        if (!options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        if (self.mapIsOffline) {\r\n            document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                elm.classList.add(TC.Consts.classes.HIDDEN);\r\n            })\r\n        }\r\n\r\n        TC.Control.apply(self, arguments);\r\n        self.wrap = new TC.wrap.control.CacheBuilder(self);\r\n\r\n        self.isDownloading = false;\r\n        self.baseLayers = [];\r\n\r\n        self.options.avgTileSize = self.options.avgTileSize || TC.Cfg.avgTileSize;\r\n        self.requestSchemas = [];\r\n        self.minResolution = 0;\r\n        self.currentMap = null;\r\n\r\n        self._loadedCount = 0;\r\n\r\n        // Actualización del enlace al modo online\r\n        // Parche para detectar cambios en el hash. Lo usamos para actualizar los enlaces a los idiomas\r\n        var pushState = history.pushState;\r\n        history.pushState = function (state) {\r\n            var result;\r\n            //if (typeof history.onpushstate == \"function\") {\r\n            //    history.onpushstate({ state: state });\r\n            //}\r\n            result = pushState.apply(history, arguments);\r\n            if (self._offlinePanelDiv) {\r\n                const params = TC.Util.getQueryStringParams();\r\n                delete params[self.MAP_DEFINITION_PARAM_NAME];\r\n                delete params[self.MAP_EXTENT_PARAM_NAME];\r\n                delete params[self.SERVICE_WORKER_FLAG];\r\n                var newParams = TC.Util.getParamString(params);\r\n                if (newParams.length) {\r\n                    newParams = '?' + newParams;\r\n                }\r\n                const href = location.pathname + newParams + location.hash;\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).setAttribute('href', href);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Detección de estado de conexión\r\n        var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection || {};\r\n        var onlineHandler = function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.remove(\r\n                    TC.Consts.classes.CONNECTION_OFFLINE,\r\n                    TC.Consts.classes.CONNECTION_MOBILE,\r\n                    TC.Consts.classes.CONNECTION_WIFI);\r\n\r\n                var type = connection.type;\r\n                switch (type) {\r\n                    case 1:\r\n                    case 2:\r\n                    case undefined:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_WIFI);\r\n                        break;\r\n                    default:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_MOBILE);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        if (connection.addEventListener) {\r\n            connection.addEventListener('typechange', onlineHandler);\r\n        }\r\n        window.addEventListener('online', onlineHandler);\r\n        window.addEventListener('offline', function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.inherit(TC.control.CacheBuilder, TC.control.SWCacheClient);\r\n\r\n    var ctlProto = TC.control.CacheBuilder.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-cbuild';\r\n    ctlProto.MAP_DEFINITION_PARAM_NAME = \"map-def\";\r\n    ctlProto.MAP_EXTENT_PARAM_NAME = \"map-extent\";\r\n    ctlProto.LOCAL_STORAGE_KEY_PREFIX = \"TC.offline.map.\";\r\n    ctlProto.ROOT_CACHE_NAME = \"root\";\r\n    ctlProto.SERVICE_WORKER_FLAG = 'sw';\r\n    ctlProto._states = {\r\n        READY: 'ready',\r\n        EDIT: 'editing',\r\n        DOWNLOADING: 'downloading',\r\n        DELETING: 'deleting'\r\n    };\r\n    ctlProto._actions = {\r\n        CREATE: 'create',\r\n        DELETE: 'delete'\r\n    };\r\n    ctlProto.offlineControls = [\r\n        'attribution',\r\n        'basemapSelector',\r\n        'cacheBuilder',\r\n        'click',\r\n        'coordinates',\r\n        'draw',\r\n        'edit',\r\n        'geolocation',\r\n        'loadingIndicator',\r\n        'measure',\r\n        'navBar',\r\n        'popup',\r\n        'print',\r\n        'scale',\r\n        'scaleBar',\r\n        'scaleSelector',\r\n        'state',\r\n        'fullScreen'\r\n    ];\r\n\r\n    TC.Consts.event.MAPCACHEDOWNLOAD = TC.Consts.event.MAPCACHEDOWNLOAD || 'mapcachedownload.tc';\r\n    TC.Consts.event.MAPCACHEDELETE = TC.Consts.event.MAPCACHEDELETE || 'mapcachedelete.tc';\r\n    TC.Consts.event.MAPCACHEPROGRESS = TC.Consts.event.MAPCACHEPROGRESS || 'mapcacheprogress.tc';\r\n    TC.Consts.event.MAPCACHEERROR = TC.Consts.event.MAPCACHEERROR || 'mapcacheerror.tc';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/CacheBuilder.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-map-node'] = TC.apiLocation + \"TC/templates/CacheBuilderMapNode.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-bl-node'] = TC.apiLocation + \"TC/templates/CacheBuilderBaseLayerNode.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/CacheBuilderDialog.html\";\r\n    ctlProto.template[ctlProto.CLASS + '-off-panel'] = TC.apiLocation + \"TC/templates/CacheBuilderOfflinePanel.html\";\r\n\r\n    const getExtentFromString = function (str) {\r\n        return decodeURIComponent(str).split(',').map(function (elm) {\r\n            return parseFloat(elm);\r\n        });\r\n    };\r\n\r\n    const setDownloadingState = function (ctl) {\r\n        ctl._state = ctl._states.DOWNLOADING;\r\n        TC.Util.closeModal();\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = true;\r\n        ctl.layer.clearFeatures();\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setDeletingState = function (ctl) {\r\n        ctl._state = ctl._states.DELETING;\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelectorAll(ctl._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.add(TC.Consts.classes.DISABLED);\r\n        });\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = false;\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = '';\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setNameEditingState = function (ctl, li) {\r\n        li.querySelector('span').classList.add(TC.Consts.classes.HIDDEN);\r\n        const textbox = li.querySelector(ctl._selectors.TEXTBOX);\r\n        textbox.classList.remove(TC.Consts.classes.HIDDEN);\r\n        textbox.value = li.querySelector('span a').innerHTML;\r\n        textbox.focus();\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    const setNameReadyState = function (ctl, li) {\r\n        li.querySelector('span').classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.TEXTBOX).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    var formatNumber = function (number) {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    };\r\n\r\n    var updateResolutions = function (ctl, options) {\r\n        var opts = options || {};\r\n        const resDiv = ctl._dialogDiv.querySelector(ctl._classSelector + '-res');\r\n        const range = ctl._dialogDiv.querySelector(ctl._selectors.RNGMAXRES);\r\n        var resolutions = ctl.getResolutions();\r\n        var resText, resLevel, resLeft;\r\n        if (resolutions.length) {\r\n            range.setAttribute('max', resolutions.length - 1);\r\n            if (ctl.minResolution) {\r\n                // Si ya había resolución previa y no se ha tocado el slider, se actualiza su valor\r\n                if (opts.rangeValue === undefined) {\r\n                    for (var i = 0, len = resolutions.length; i < len; i++) {\r\n                        if (ctl.minResolution >= resolutions[i]) {\r\n                            range.value = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (opts.rangeValue === undefined) {\r\n                    // Si no había resolución previa se selecciona un valor inicial igual a la resolución actual\r\n                    const currentResolution = ctl.map.getResolution();\r\n                    range.value = resolutions.filter(r => r > currentResolution).length;\r\n                }\r\n            }\r\n            resLevel = parseInt(range.value);\r\n            var resValue = Math.floor(new Number(resolutions[resLevel]) * 1000) / 1000;\r\n            resText = ctl.getLocaleString('metersPerPixel', {\r\n                value: resValue.toLocaleString((ctl.map ? ctl.map.options.locale : TC.Cfg.locale).replace('_', '-'))\r\n            });\r\n            resLeft = (resLevel + 1) * 100 / (resolutions.length + 1) + '%';\r\n            range.disabled = false;\r\n            ctl.minResolution = resolutions[range.value];\r\n        }\r\n        else {\r\n            resLevel = 0;\r\n            resText = '';\r\n            range.value = 0;\r\n            resLeft = '0';\r\n            ctl.minResolution = 0;\r\n            range.disabled = true;\r\n        }\r\n        resDiv.style.left = resLeft;\r\n        resDiv.innerHTML = resText;\r\n    };\r\n\r\n    const findTileMatrixLimits = function (schema, resolution) {\r\n        var result = null;\r\n        for (var i = 0, len = schema.tileMatrixLimits.length; i < len; i++) {\r\n            result = schema.tileMatrixLimits[i];\r\n            if (result.res <= resolution) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const updateThumbnails = function (ctl) {\r\n        ctl._dialogDiv.querySelectorAll(ctl._classSelector + '-bl-node input[type=checkbox]').forEach(function (cb, idx) {\r\n            if (cb.checked) {\r\n                var schema = ctl.requestSchemas.filter(function (elm) {\r\n                    return elm.layerId === cb.value;\r\n                })[0];\r\n                if (schema) {\r\n                    var tml = findTileMatrixLimits(schema, ctl.minResolution);\r\n                    if (tml) {\r\n                        var tmKey = '{TileMatrix}';\r\n                        var trKey = '{TileRow}';\r\n                        var tcKey = '{TileCol}';\r\n                        var url = schema.url;\r\n                        if (url.indexOf(tmKey) < 0) {\r\n                            // Caso KVP\r\n                            var qsIdx = url.indexOf('?');\r\n                            if (qsIdx >= 0) {\r\n                                url = url.substr(0, qsIdx);\r\n                            }\r\n                            for (var j = 0, lenj = ctl.baseLayers.length; j < lenj; j++) {\r\n                                var l = ctl.baseLayers[j];\r\n                                if (l.id === schema.layerId) {\r\n                                    url = url + '?layer=' + l.layerNames + '&style=default&tilematrixset=' + l.matrixSet +\r\n                                        '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + l.format +\r\n                                        '&TileMatrix=' + tmKey + '&TileRow=' + trKey + '&TileCol=' + tcKey;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        while (cb && cb.tagName !== 'LABEL') {\r\n                            cb = cb.parentElement;\r\n                        }\r\n                        if (cb) {\r\n                            cb.style.backgroundSize = 'auto';\r\n                            cb.style.backgroundPosition = 'left bottom';\r\n                            cb.style.backgroundImage = 'url(' + url.replace('{TileMatrix}', tml.mId).replace(trKey, tml.rt).replace(tcKey, tml.cl) + ')';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const formatSize = function (ctl, size) {\r\n        var result;\r\n        if (size < 1) {\r\n            result = ctl.getLocaleString('lessThan1Mb');\r\n        }\r\n        else {\r\n            result = ctl.getLocaleString('approxXMb', { quantity: formatNumber(size) });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const showEstimatedMapSize = function (ctl) {\r\n        var text = '';\r\n        ctl.tileCount = 0;\r\n        for (var i = 0, ii = ctl.requestSchemas.length; i < ii; i++) {\r\n            var schema = ctl.requestSchemas[i];\r\n            for (var j = 0, jj = schema.tileMatrixLimits.length; j < jj; j++) {\r\n                var tml = schema.tileMatrixLimits[j];\r\n                ctl.tileCount += (tml.cr - tml.cl + 1) * (tml.rb - tml.rt + 1);\r\n                if (tml.res < ctl.minResolution) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (ctl.tileCount) {\r\n            ctl.estimatedMapSize = Math.round(ctl.tileCount * ctl.options.avgTileSize / 1048576);\r\n            text = ctl.getLocaleString('xTiles', { quantity: formatNumber(ctl.tileCount) }) + ' (' + formatSize(ctl, ctl.estimatedMapSize) + ')';\r\n        }\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = text;\r\n    };\r\n\r\n    const getListElementByMapName = function (ctl, name) {\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.innerHTML === name) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const getListElementByMapUrl = function (ctl, url) {\r\n        var hashIdx = url.indexOf('#');\r\n        if (hashIdx >= 0) {\r\n            url = url.substr(0, hashIdx);\r\n        }\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.getAttribute('href') === url) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    var saveMapToStorage = function (ctl, map) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.setItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(map.url), map.extent + \" \" + map.name);\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var removeMapFromStorage = function (ctl, url) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.removeItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(url));\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const addMap = function (ctl) {\r\n        const map = ctl.currentMap;\r\n        if (saveMapToStorage(ctl, map)) {\r\n            ctl.getRenderedHtml(ctl.CLASS + '-map-node', { name: map.name, url: map.url }, function (html) {\r\n                const parser = new DOMParser();\r\n                ctl.div.querySelector(ctl._selectors.LIST).appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).setAttribute('hidden', 'hidden');\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = false;\r\n            });\r\n            ctl.storedMaps.push(map);\r\n        }\r\n    };\r\n\r\n    const removeMap = function (ctl, url) {\r\n        const map = ctl.findStoredMap({ url: url });\r\n        if (map) {\r\n            if (removeMapFromStorage(ctl, url)) {\r\n                const li = getListElementByMapName(ctl, map.name);\r\n                if (li) {\r\n                    li.parentElement.removeChild(li);\r\n                }\r\n            }\r\n            var idx = ctl.storedMaps.indexOf(map);\r\n            ctl.storedMaps.splice(idx, 1);\r\n            if (!ctl.storedMaps.length) {\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = true;\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).removeAttribute('hidden');\r\n            }\r\n\r\n            return map.name;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            var renderObject = { storedMaps: self.storedMaps, listId: self.CLASS + '-list-' + TC.getUID() };\r\n            self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n                self._dialogDiv.innerHTML = html;\r\n                self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    e.preventDefault();\r\n                    this.selectionStart = 0;\r\n                    this.selectionEnd = this.value.length;\r\n                    this.focus();\r\n\r\n                });\r\n            }).then(function () {\r\n                self.renderData(renderObject, function () {\r\n                    self._dialogDiv.querySelector(self._selectors.OKBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.generateCache();\r\n                    });\r\n                    self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener('input', function () {\r\n                        self._updateReadyState();\r\n                    });\r\n                    self.div.querySelector(self._selectors.NEWBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setEditState();\r\n                    });\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-draw').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setReadyState();\r\n                    });\r\n\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-dl').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.cancelCacheRequest();\r\n                    });\r\n\r\n                    const list = self.div.querySelector(self._selectors.LIST);\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.DELETEBTN, function (e) {\r\n                        self.startDeleteMap(e.target.parentElement.querySelector('a').innerHTML);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.EDITBTN, function (e) {\r\n                        setNameEditingState(self, e.target.parentElement);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.CANCELBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        li.querySelector(self._selectors.TEXTBOX).value = li.querySelector('a').innerHTML;\r\n                        setNameReadyState(self, li);\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.SAVEBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        setNameReadyState(self, li);\r\n                        const anchor = li.querySelector('a');\r\n                        const oldName = anchor.innerHTML;\r\n                        const newName = li.querySelector(self._selectors.TEXTBOX).value;\r\n                        const map = self.findStoredMap({ url: anchor.getAttribute('href') });\r\n                        if (map) {\r\n                            map.name = newName;\r\n                            anchor.innerHTML = newName;\r\n                            anchor.setAttribute('title', newName);\r\n                            saveMapToStorage(self, map);\r\n                        }\r\n                    }));\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.VIEWBTN, function (e) {\r\n                        const btn = e.target;\r\n                        var showExtent = !btn.classList.contains(TC.Consts.classes.ACTIVE);\r\n                        const viewBtn = self.div.querySelector(self._selectors.VIEWBTN);\r\n                        viewBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        viewBtn.parentElement.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        const mapName = btn.parentElement.querySelector('a').innerHTML;\r\n                        if (mapName) {\r\n                            var map = self.findStoredMap({ name: mapName });\r\n                            if (map) {\r\n                                var extent = getExtentFromString(map.extent);\r\n                                self.layer.clearFeatures();\r\n                                if (showExtent) {\r\n                                    self.layer.addPolygon(\r\n                                        [\r\n                                            [\r\n                                                [extent[0], extent[1]],\r\n                                                [extent[0], extent[3]],\r\n                                                [extent[2], extent[3]],\r\n                                                [extent[2], extent[1]]\r\n                                            ]\r\n                                        ]\r\n                                        , {\r\n                                            showsPopup: false\r\n                                        }).then(function () {\r\n                                            self.layer.map.zoomToFeatures(self.layer.features);\r\n                                        });\r\n                                    btn.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.parentElement.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.setAttribute('title', self.getLocaleString('removeMapExtent'));\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n\r\n                    var _filter = function (searchTerm) {\r\n                        searchTerm = searchTerm.toLowerCase();\r\n                        //tc-ctl-cbuild-map-available-empty\r\n                        const lis = self.div.querySelectorAll(self._selectors.LISTITEM);\r\n                        lis.forEach(function (li) {\r\n                            li.style.display = 'none';\r\n                        });\r\n                        const mapLis = [];\r\n                        lis.forEach(function (li) {\r\n                            if (li.matches('li:not([class]),li.' + TC.Consts.classes.ACTIVE)) {\r\n                                mapLis.push(li);\r\n                            }\r\n                        });\r\n\r\n                        if (searchTerm.length === 0) {\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.removeProperty('display');\r\n                            });\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'visible';\r\n                        } else {\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'hidden';\r\n                            var r = new RegExp(searchTerm, 'i');\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.display = r.test(li.querySelector('a').textContent) ? '' : 'none';\r\n                            });\r\n\r\n                            if (!mapLis.some(function (li) {\r\n                                return !li.hidden;\r\n                            })) {\r\n                                lis.forEach(function (li) {\r\n                                    if (li.matches('[class^=\"tc-ctl-cbuild-map-not\"]')) {\r\n                                        li.style.removeProperty('display');\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    const trackSearch = self.div.querySelector(self._selectors.SEARCH);\r\n                    const searchListener = function () {\r\n                        _filter(this.value.toLowerCase().trim());\r\n                    };\r\n                    trackSearch.addEventListener('keyup', searchListener);\r\n                    trackSearch.addEventListener('search', searchListener);\r\n\r\n                    self._dialogDiv.querySelector(self._selectors.BLLIST).addEventListener('change', TC.EventTarget.listenerBySelector('input[type=checkbox]', function (e) {\r\n                        const checkbox = e.target;\r\n                        if (checkbox.checked) {\r\n                            self.baseLayers.push(self.map.getLayer(checkbox.value));\r\n                        }\r\n                        else {\r\n                            for (var i = 0, ii = self.baseLayers.length; i < ii; i++) {\r\n                                const bl = self.baseLayers[i];\r\n                                if (bl.id === checkbox.value) {\r\n                                    self.baseLayers.splice(i, 1);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        self.updateRequestSchemas();\r\n                        updateResolutions(self);\r\n                        updateThumbnails(self);\r\n                        self._updateReadyState();\r\n                        showEstimatedMapSize(self);\r\n                    }));\r\n\r\n                    const range = self._dialogDiv.querySelector(self._selectors.RNGMAXRES);\r\n                    const rangeListener = function (e) {\r\n                        updateResolutions(self, {\r\n                            rangeValue: e.target.value\r\n                        });\r\n                        updateThumbnails(self);\r\n                        showEstimatedMapSize(self);\r\n                    };\r\n                    range.addEventListener('input', rangeListener);\r\n                    range.addEventListener('change', rangeListener);\r\n\r\n                    const li = getListElementByMapUrl(self, location.href);\r\n                    if (li) {\r\n                        li.classList.add(TC.Consts.classes.ACTIVE);\r\n                    }\r\n\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n                })\r\n                    .then(function () {\r\n                        resolve();\r\n                    })\r\n                    .catch(function (err) {\r\n                        reject(err instanceof Error ? err : Error(err));\r\n                    });\r\n            });\r\n\r\n            // Control para evitar que se cancele una descarga de cache al salir de la página\r\n            window.addEventListener('beforeunload', function (e) {\r\n                if (self.isDownloading) {\r\n                    var msg = self.getLocaleString('cb.mapDownloading.warning');\r\n                    e.returnValue = msg;\r\n                    return msg;\r\n                }\r\n            }, true);\r\n        }));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n\r\n        const result = TC.control.SWCacheClient.prototype.register.call(self, map);\r\n\r\n        self.getServiceWorker().then(\r\n            function () {\r\n                navigator.serviceWorker.ready.then(function () {\r\n                    navigator.serviceWorker.addEventListener('message', function (event) {\r\n                        switch (event.data.event) {\r\n                            case 'progress':\r\n                                self.trigger(TC.Consts.event.MAPCACHEPROGRESS, { url: event.data.name, loaded: event.data.count, total: event.data.total });\r\n                                break;\r\n                            case 'cached':\r\n                                self.trigger(TC.Consts.event.MAPCACHEDOWNLOAD, { url: event.data.name });\r\n                                break;\r\n                            case 'deleted':\r\n                                self.trigger(TC.Consts.event.MAPCACHEDELETE, { url: event.data.name });\r\n                                break;\r\n                            case 'error':\r\n                                if (event.data.action === self._actions.CREATE) {\r\n                                    TC.error(self.getLocaleString('cb.resourceDownload.error', { url: event.data.url }));\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if (navigator.onLine) {\r\n                    // Cacheamos mediante service worker las URLs del manifiesto\r\n                    requestManifest().then(function (obj) {\r\n                        const hashStorageKey = self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash';\r\n                        var hash;\r\n                        if (self.localStorage) {\r\n                            hash = self.localStorage.getItem(hashStorageKey);\r\n                        }\r\n                        if (hash !== obj.hash) {\r\n                            self.cacheUrlList(obj.urls);\r\n                            self.one(TC.Consts.event.MAPCACHEDOWNLOAD, function () {\r\n                                const firstLoad = !hash;\r\n                                if (self.localStorage) {\r\n                                    self.localStorage.setItem(hashStorageKey, obj.hash);\r\n                                }\r\n                                if (!firstLoad) {\r\n                                    TC.confirm(self.getLocaleString('newAppVersionAvailable'), function () {\r\n                                        location.reload();\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            function (error) {\r\n                self.renderPromise().then(function () {\r\n                    const container = self.div.querySelector(`.${self.CLASS}-new`);\r\n                    const warning = document.createElement('div');\r\n                    warning.classList.add('tc-alert', 'alert-warning');\r\n                    const header = document.createElement('p');\r\n                    const text = document.createElement('strong');\r\n                    text.innerHTML = self.getLocaleString('offlineMap.error');\r\n                    header.appendChild(text);\r\n                    const reason = document.createElement('p');\r\n                    reason.innerHTML = error.message;\r\n                    warning.appendChild(header);\r\n                    warning.appendChild(reason);\r\n                    container.querySelector(self._selectors.NEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n                    container.appendChild(warning);\r\n                });\r\n            }\r\n        ).catch(() => console.log(\"No SW available: no events handled\"));\r\n\r\n        if (self.mapIsOffline) {\r\n            map.div.classList.add(TC.Consts.classes.OFFLINE);\r\n\r\n            // Si no está especificado, el panel de aviso offline se cuelga del div del mapa\r\n            self._offlinePanelDiv = TC.Util.getDiv(self.options.offlinePanelDiv);\r\n            if (!self.options.offlinePanelDiv) {\r\n                map.div.appendChild(self._offlinePanelDiv);\r\n            }\r\n            self.getRenderedHtml(self.CLASS + '-off-panel', null, function (html) {\r\n                self._offlinePanelDiv.innerHTML = html;\r\n                if (!navigator.onLine) {\r\n                    const offPanel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                    offPanel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                    offPanel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n                }\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    TC.confirm(self.getLocaleString('offlineMapExit.confirm'),\r\n                        null,\r\n                        function () {\r\n                            e.preventDefault();\r\n                        });\r\n                });\r\n            });\r\n        }\r\n\r\n        const drawId = self.getUID();\r\n        const layerId = self.getUID();\r\n        self.layerPromise = map.addLayer({\r\n            id: layerId,\r\n            type: TC.Consts.layerType.VECTOR,\r\n            stealth: true,\r\n            owner: self,\r\n            styles: {\r\n                line: map.options.styles.line\r\n            }\r\n        });\r\n        self.layer = null;\r\n        Promise.all([\r\n            self.layerPromise,\r\n            self.renderPromise(),\r\n            map.addControl('draw', {\r\n                id: drawId,\r\n                div: self.div.querySelector(self._selectors.DRAW),\r\n                mode: TC.Consts.geom.RECTANGLE,\r\n                persistent: false\r\n            })\r\n        ]).then(function (objects) {\r\n            const layer = self.layer = objects[0];\r\n            const boxDraw = self.boxDraw = objects[2];\r\n            boxDraw.setLayer(layer);\r\n            boxDraw\r\n                .on(TC.Consts.event.DRAWSTART, function (e) {\r\n                    self.map.toast(self.getLocaleString('clickOnDownloadAreaOppositeCorner'), { type: TC.Consts.msgType.INFO });\r\n                })\r\n                .on(TC.Consts.event.DRAWEND, function (e) {\r\n                    var points = e.feature.geometry[0];\r\n                    var pStart = points[0];\r\n                    var pEnd = points[2];\r\n                    var minx = Math.min(pStart[0], pEnd[0]);\r\n                    var maxx = Math.max(pStart[0], pEnd[0]);\r\n                    var miny = Math.min(pStart[1], pEnd[1]);\r\n                    var maxy = Math.max(pStart[1], pEnd[1]);\r\n                    self.setExtent([minx, miny, maxx, maxy]);\r\n                    const checkboxes = self._dialogDiv.querySelectorAll('input[type=checkbox]');\r\n                    checkboxes.forEach(function (checkbox) {\r\n                        // Comprobamos que la extensión del mapa está disponible a alguna resolución\r\n                        const layer = self.map.getLayer(checkbox.value);\r\n                        var li = checkbox;\r\n                        while (li && li.tagName !== 'LI') {\r\n                            li = li.parentElement;\r\n                        }\r\n                        const tml = self.wrap.getRequestSchemas({\r\n                            extent: self.extent,\r\n                            layers: [layer]\r\n                        })[0].tileMatrixLimits;\r\n\r\n                        li.classList.toggle(TC.Consts.classes.HIDDEN, !tml.length);\r\n                    });\r\n                    const visibleLi = self._dialogDiv.querySelector(self._selectors.BLLISTITEM + ':not(.' + TC.Consts.classes.HIDDEN + ')');\r\n                    self._dialogDiv.querySelector(self._selectors.BLLISTTEXT).innerHTML = self.getLocaleString(visibleLi ? 'selectAtLeastOne' : 'cb.noMapsAtSelectedExtent');\r\n\r\n                    updateThumbnails(self);\r\n                    showEstimatedMapSize(self);\r\n                    TC.Util.showModal(self._dialogDiv.querySelector(self._classSelector + '-dialog'), {\r\n                        openCallback: function () {\r\n                            setTimeout(function () { // Este timeout evita el pulsado accidental cuando sale el diálogo\r\n                                checkboxes.forEach(function (cb) {\r\n                                    cb.disabled = false;\r\n                                });\r\n                            }, 100);\r\n                            var time;\r\n                            if (Date.prototype.toLocaleString) {\r\n                                var opt = {};\r\n                                opt.year = opt.month = opt.day = opt.hour = opt.minute = opt.second = 'numeric';\r\n                                time = new Date().toLocaleString(self.map.options.locale.replace('_', '-'), opt);\r\n                            }\r\n                            else {\r\n                                time = new Date().toString();\r\n                            }\r\n                            self._dialogDiv.querySelector(self._selectors.NAMETB).value = time;\r\n                            self._updateReadyState();\r\n                        },\r\n                        closeCallback: function () {\r\n                            checkboxes.forEach(function (cb) {\r\n                                cb.disabled = true;\r\n                            });\r\n                            self.boxDraw.layer.clearFeatures();\r\n                        }\r\n                    });\r\n                });\r\n\r\n            map.on(TC.Consts.event.CONTROLDEACTIVATE, function (e) {\r\n                if (boxDraw === e.control) {\r\n                    if (self._state === self._states.EDITING) {\r\n                        self.setReadyState();\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        var addRenderedListNode = function (layer) {\r\n            var result = false;\r\n            const blList = self._dialogDiv.querySelector(self._selectors.BLLIST);\r\n            const isLayerAdded = function () {\r\n                return !!blList.querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n            };\r\n            var isValidLayer = layer.type === TC.Consts.layerType.WMTS && !layer.mustReproject;\r\n            if (TC.Util.detectSafari() && TC.Util.detectIOS()) {\r\n                isValidLayer = isValidLayer && TC.Util.isSameOrigin(layer.url);\r\n            }\r\n            if (isValidLayer && !isLayerAdded()) {\r\n                result = true;\r\n                self.getRenderedHtml(self.CLASS + '-bl-node', layer, function (html) {\r\n                    if (!isLayerAdded()) {\r\n                        const parser = new DOMParser();\r\n                        blList.appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        };\r\n\r\n        map\r\n            .on(TC.Consts.event.LAYERADD, function (e) {\r\n                if (e.layer.isBase && self.mapIsOffline) {\r\n                    // Capamos las resoluciones de la capa\r\n                    const resolutions = e.layer.getResolutions();\r\n                    if (resolutions) {\r\n                        const cachedResolutions = resolutions.filter(r => r >= self.currentMapDefinition.res);\r\n                        if (cachedResolutions.length) {\r\n                            e.layer.setResolutions(cachedResolutions);\r\n                        }\r\n                    }\r\n                }\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    addRenderedListNode(e.layer);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    const layer = e.layer;\r\n                    if (layer.type === TC.Consts.layerType.WMTS) {\r\n                        const li = self._dialogDiv\r\n                            .querySelector(self._selectors.BLLIST)\r\n                            .querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n                        li.parentElement.removeChild(li);\r\n                    }\r\n                });\r\n            });\r\n\r\n        map.ready(function () {\r\n            if (self.mapIsOffline) {\r\n                // Deshabilitamos los controles que no son usables en modo offline\r\n                var offCtls = [];\r\n                var i, len;\r\n                for (i = 0, len = self.offlineControls.length; i < len; i++) {\r\n                    var offCtl = self.offlineControls[i];\r\n                    offCtl = offCtl.substr(0, 1).toUpperCase() + offCtl.substr(1);\r\n                    offCtls = offCtls.concat(map.getControlsByClass('TC.control.' + offCtl));\r\n                }\r\n\r\n                for (i = 0, len = map.controls.length; i < len; i++) {\r\n                    var ctl = map.controls[i];\r\n                    if (offCtls.indexOf(ctl) < 0) {\r\n                        ctl.disable();\r\n                    }\r\n                }\r\n\r\n                document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                    elm.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n            }\r\n        });\r\n\r\n        map.loaded(function () {\r\n\r\n            self.layerPromise.then(function (layer) {\r\n                map.putLayerOnTop(layer);\r\n            });\r\n\r\n            self.renderPromise().then(function () {\r\n                self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n                map.baseLayers.forEach(addRenderedListNode);\r\n            });\r\n\r\n            if (self.mapIsOffline) {\r\n                const mapDef = self.currentMapDefinition;\r\n                const isSameLayer = function (layer, mapDefLayer) {\r\n                    const layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    return (layerUrl === mapDef.url[mapDefLayer.urlIdx] && layer.layerNames === mapDefLayer.id && layer.matrixSet === mapDef.tms[mapDefLayer.tmsIdx]);\r\n                };\r\n                // Añadimos al mapa las capas guardadas que no están por defecto\r\n                const missingLayers = map.options.availableBaseLayers\r\n                    .filter((abl) => abl.type === TC.Consts.layerType.WMTS) // Capas cacheables\r\n                    .filter((abl) => { // Que estén en el mapa sin conexión\r\n                        return mapDef.layers.some((l) => isSameLayer(abl, l));\r\n                    })\r\n                    .filter((abl) => { // Que no estén en las capas por defecto\r\n                        return !map.baseLayers.some((l) => l.id === abl.id);\r\n                    });\r\n                Promise.all(missingLayers.map((layer) => {\r\n                    return map.addLayer(TC.Util.extend({}, layer, { isBase: true }));\r\n                })).finally(function () {\r\n                    // Obtenemos las capas cacheadas\r\n                    const cachedLayers = [];\r\n                    for (var i = 0, ii = mapDef.layers.length; i < ii; i++) {\r\n                        for (var j = 0, jj = map.baseLayers.length; j < jj; j++) {\r\n                            const baseLayer = map.baseLayers[j];\r\n                            if (baseLayer.type === TC.Consts.layerType.WMTS && isSameLayer(baseLayer, mapDef.layers[i])) {\r\n                                cachedLayers.push(baseLayer);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (cachedLayers.length) {\r\n                        map.setBaseLayer(cachedLayers[0], function () {\r\n                            // Quitamos las capas no disponibles (la capa en blanco la mantenemos)\r\n                            for (var i = map.baseLayers.length - 1; i >= 0; i--) {\r\n                                const baseLayer = map.baseLayers[i];\r\n                                if (baseLayer.type !== TC.Consts.layerType.VECTOR && !cachedLayers.includes(baseLayer)) {\r\n                                    map.removeLayer(baseLayer);\r\n                                }\r\n                            }\r\n\r\n                            map.setExtent(self.currentMapExtent, { animate: false });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        self\r\n            .on(TC.Consts.event.MAPCACHEDOWNLOAD, function (e) {\r\n                self.isDownloading = false;\r\n                const removeHash = function (url) {\r\n                    const hashIdx = url.indexOf('#');\r\n                    return (hashIdx >= 0) ? url.substr(0, hashIdx) : url;\r\n                }\r\n                const url = removeHash(e.url);\r\n                const li = getListElementByMapUrl(self, url);\r\n                if (li && !self.serviceWorkerEnabled) {\r\n                    // Se ha descargado un mapa cuando se quería borrar. Pasa cuando la cache ya estaba borrada pero la entrada en localStorage no.\r\n                    li.classList.remove(TC.Consts.classes.DISABLED);\r\n                    TC.alert(self.getLocaleString('cb.delete.error'));\r\n                }\r\n                else {\r\n                    if (self.currentMap && url === self.currentMap.url) {\r\n                        addMap(self);\r\n                        map.toast(self.getLocaleString('mapDownloaded', { mapName: self.currentMap.name }));\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEDELETE, function (e) {\r\n                self.isDownloading = false;\r\n                var mapName = removeMap(self, e.url) || (self.currentMap && self.currentMap.name);\r\n                self.currentMap = null;\r\n                if (mapName) {\r\n                    map.toast(self.getLocaleString('mapDeleted', { mapName: mapName }));\r\n                }\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEPROGRESS, function (e) {\r\n                var total = e.total;\r\n                if (!total && self.requestSchemas) {\r\n                    total = self.requestSchemas[0].tileCount;\r\n                }\r\n                var loaded = e.loaded;\r\n                if (loaded) {\r\n                    self._loadedCount = loaded;\r\n                }\r\n                else {\r\n                    self._loadedCount += 1;\r\n                    loaded = self._loadedCount;\r\n                }\r\n                self.showDownloadProgress(loaded, total);\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEERROR, function (e) {\r\n                self.isDownloading = false;\r\n                self.setReadyState();\r\n                var msg = self.getLocaleString('cb.mapCreation.error');\r\n                var handleError = true;\r\n                switch (e.reason) {\r\n                    case 'quota':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonQuota');\r\n                        break;\r\n                    case 'resource':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonResource');\r\n                        break;\r\n                    case 'manifest':\r\n                        if (e.status == '410') {\r\n                            removeMap(self, e.url);\r\n                        }\r\n                        handleError = false;\r\n                        break;\r\n                    case ALREADY_EXISTS:\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonAlreadyExists');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (handleError) {\r\n                    if (TC.Util.detectIE()) {\r\n                        TC.error(msg);\r\n                        TC.alert(self.getLocaleString('cb.mapCreation.error.reasonEdge'));\r\n                    }\r\n                    else {\r\n                        TC.alert(msg);\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setExtent = function (extent) {\r\n        var self = this;\r\n        if (Array.isArray(extent) && extent.length >= 4) {\r\n            self.extent = extent;\r\n            self.updateRequestSchemas();\r\n        }\r\n    };\r\n\r\n    ctlProto._updateReadyState = function () {\r\n        const self = this;\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled =\r\n            !self.extent ||\r\n            self._dialogDiv.querySelector(self._selectors.NAMETB).value.length === 0 ||\r\n            self._dialogDiv.querySelector(self._selectors.RNGMAXRES).disabled;\r\n    };\r\n\r\n    ctlProto.setReadyState = function () {\r\n        const self = this;\r\n        self._state = self._states.READY;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelectorAll(self._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.DISABLED);\r\n        });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n        self._dialogDiv.querySelector(self._selectors.TILECOUNT).innerHTML = '';\r\n        self.extent = null;\r\n        self._loadedCount = 0;\r\n        if (self.boxDraw) {\r\n            self.boxDraw.cancel();\r\n        }\r\n    };\r\n\r\n    ctlProto.setEditState = function () {\r\n        const self = this;\r\n        self._state = self._states.EDITING;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.map.toast(self.getLocaleString('clickOnDownloadAreaFirstCorner'), { type: TC.Consts.msgType.INFO });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = true;\r\n        self._dialogDiv.querySelector(self._selectors.NAMETB).value = '';\r\n        self.boxDraw.activate();\r\n    };\r\n\r\n    ctlProto.generateCache = function () {\r\n        const self = this;\r\n        const options = {\r\n            mapName: self._dialogDiv.querySelector(self._selectors.NAMETB).value\r\n        };\r\n        if (self.findStoredMap({ name: options.mapName })) {\r\n            TC.alert(self.getLocaleString('cb.mapNameAlreadyExists.error', options));\r\n        }\r\n        else {\r\n            var startRequest = function () {\r\n                self.div.querySelector(self._classSelector + '-name').innerHTML = options.mapName;\r\n                self.map.toast(self.getLocaleString('downloadingMap', { mapName: options.mapName }));\r\n                setDownloadingState(self);\r\n                self.requestCache(options);\r\n            };\r\n\r\n            // Usamos Storage API si existe\r\n            if (navigator.storage && navigator.storage.estimate) {\r\n                navigator.storage.estimate().then(function (estimate) {\r\n                    const availableMB = (estimate.quota - estimate.usage) / 1048576;\r\n                    if (self.estimatedMapSize < availableMB) {\r\n                        startRequest();\r\n                    }\r\n                    else {\r\n                        TC.confirm(self.getLocaleString('cb.mapCreation.warning.reasonSize', {\r\n                            mapName: options.mapName,\r\n                            mapSize: formatSize(self, self.estimatedMapSize),\r\n                            availableStorage: formatSize(self, Math.round(availableMB))\r\n                        }), startRequest);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                startRequest();\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.cacheUrlList = function (urlList, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        self.createCache(opts.name || (self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME), {\r\n            urlList: urlList,\r\n            silent: opts.silent\r\n        });\r\n    };\r\n\r\n    ctlProto.requestCache = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        if (self.map) {\r\n            var extent = opts.extent || self.extent || self.map.getExtent();\r\n            self.updateRequestSchemas({ extent: extent });\r\n\r\n            if (self.requestSchemas) {\r\n                var filterTml = function (elm, i, arr) {\r\n                    var result = elm.res >= self.minResolution;\r\n                    if (!result && i > 0) {\r\n                        result = arr[i - 1].res > self.minResolution;\r\n                    }\r\n                    return result;\r\n                };\r\n                var trimTml = function (tml) {\r\n                    return {\r\n                        mId: tml.mId,\r\n                        cl: tml.cl,\r\n                        cr: tml.cr,\r\n                        rt: tml.rt,\r\n                        rb: tml.rb\r\n                    };\r\n                };\r\n                // Solo mantenemos los esquemas hasta el nivel de resolución mínima o el inmediatamente inferior a ella si no lo tiene\r\n                var requestSchemas = self.requestSchemas.map(function (schema) {\r\n                    return {\r\n                        layerId: schema.layerId,\r\n                        tileMatrixLimits: schema.tileMatrixLimits.filter(filterTml)\r\n                    };\r\n                });\r\n                // Actualizamos el extent para que coincida con las teselas del último nivel de los esquemas\r\n                // También eliminamos del esquema todo lo irrelevante para la petición\r\n                var intersectionExtent = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\r\n                for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                    var rs = requestSchemas[i];\r\n                    var tml = rs.tileMatrixLimits[rs.tileMatrixLimits.length - 1];\r\n                    var unitsPerTile = tml.res * tml.tSize;\r\n                    intersectionExtent[0] = Math.min(intersectionExtent[0], tml.origin[0] + unitsPerTile * tml.cl);\r\n                    intersectionExtent[1] = Math.min(intersectionExtent[1], tml.origin[1] - unitsPerTile * (tml.rb + 1));\r\n                    intersectionExtent[2] = Math.max(intersectionExtent[2], tml.origin[0] + unitsPerTile * (tml.cr + 1));\r\n                    intersectionExtent[3] = Math.max(intersectionExtent[3], tml.origin[1] - unitsPerTile * tml.rt);\r\n                    rs.tileMatrixLimits = rs.tileMatrixLimits.map(trimTml);\r\n                }\r\n\r\n\r\n                // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                var precision = Math.pow(10, self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION);\r\n                intersectionExtent = intersectionExtent.map(function (elm, idx) {\r\n                    var round = (idx < 3) ? Math.ceil : Math.floor;\r\n                    return round(elm * precision) / precision;\r\n                });\r\n\r\n                var mapDefinition = {\r\n                    bBox: intersectionExtent,\r\n                    res: Math.floor(self.minResolution * 1000) / 1000, // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                    url: [],\r\n                    tms: [],\r\n                    format: [],\r\n                    layers: new Array(self.baseLayers.length)\r\n                };\r\n                for (var i = 0, len = self.baseLayers.length; i < len; i++) {\r\n                    var layer = self.baseLayers[i];\r\n                    var layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    var urlIdx = mapDefinition.url.indexOf(layerUrl);\r\n                    if (urlIdx < 0) {\r\n                        urlIdx = mapDefinition.url.push(layerUrl) - 1;\r\n                    }\r\n                    var tmsIdx = mapDefinition.tms.indexOf(layer.matrixSet);\r\n                    if (tmsIdx < 0) {\r\n                        tmsIdx = mapDefinition.tms.push(layer.matrixSet) - 1;\r\n                    }\r\n                    var shortFormat = layer.format.substr(layer.format.indexOf('/') + 1);\r\n                    var formatIdx = mapDefinition.format.indexOf(shortFormat);\r\n                    if (formatIdx < 0) {\r\n                        formatIdx = mapDefinition.format.push(shortFormat) - 1;\r\n                    }\r\n                    mapDefinition.layers[i] = {\r\n                        urlIdx: urlIdx,\r\n                        id: layer.layerNames,\r\n                        tmsIdx: tmsIdx,\r\n                        formatIdx: formatIdx\r\n                    };\r\n                }\r\n\r\n                var params = TC.Util.getQueryStringParams();\r\n                var e = params[self.MAP_EXTENT_PARAM_NAME] = intersectionExtent.toString();\r\n                params[self.MAP_DEFINITION_PARAM_NAME] = btoa(JSON.stringify(mapDefinition));\r\n                if (self.serviceWorkerEnabled) {\r\n                    params[self.SERVICE_WORKER_FLAG] = 1;\r\n                }\r\n                var u = location.origin + location.pathname.substr(0, location.pathname.lastIndexOf('/') + 1) + '?' + TC.Util.getParamString(params);\r\n                self.currentMap = { name: opts.mapName, extent: e, url: u };\r\n                self.isDownloading = true;\r\n\r\n                // Guardado mediante service workers\r\n                if (self.serviceWorkerEnabled) {\r\n                    const urlList = [];\r\n                    for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                        var schema = requestSchemas[i];\r\n                        var urlPattern = null;\r\n                        for (var j = 0, lenj = self.baseLayers.length; j < lenj; j++) {\r\n                            var l = self.baseLayers[j];\r\n                            if (l.id === schema.layerId) {\r\n                                urlPattern = self.wrap.getGetTilePattern(l);\r\n                                if (l.getFallbackLayer) {\r\n                                    // Esto se usa para meter en almacenamiento local el capabilities de la capa de fallback y evitar errores cuando no haya red\r\n                                    l.getFallbackLayer();\r\n                                }\r\n                                if (l.thumbnail) {\r\n                                    urlList.push(l.thumbnail);\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (urlPattern) {\r\n                            for (var k = 0, lenk = schema.tileMatrixLimits.length; k < lenk; k++) {\r\n                                var tml = schema.tileMatrixLimits[k];\r\n                                for (var r = tml.rt; r <= tml.rb; r++) {\r\n                                    for (var c = tml.cl; c <= tml.cr; c++) {\r\n                                        urlList.push(urlPattern.replace('{TileMatrix}', tml.mId).replace('{TileCol}', c).replace('{TileRow}', r));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    urlList.push(u);\r\n                    self.cacheUrlList(urlList, { name: u });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ctlProto.cancelCacheRequest = function () {\r\n        var self = this;\r\n        if (self.currentMap) {\r\n            self.deleteCache(self.currentMap.url).then(function (obj) {\r\n                if (!obj) {\r\n                    self.currentMap = null;\r\n                }\r\n            });\r\n        }\r\n        self.isDownloading = false;\r\n        self.setReadyState();\r\n    };\r\n\r\n    ctlProto.deleteMap = function (name) {\r\n        var self = this;\r\n\r\n        var map = self.findStoredMap({ name: name });\r\n        if (map) {\r\n            self.deleteCache(map.url);\r\n        }\r\n    };\r\n\r\n    ctlProto.startDeleteMap = function (name) {\r\n        const self = this;\r\n        if (navigator.onLine) {\r\n            if (name) {\r\n                var confirmText = self.getLocaleString('cb.delete.confirm', { mapName: name });\r\n                if (!self.serviceWorkerEnabled) {\r\n                    confirmText = confirmText + \" \" + self.getLocaleString('cb.delete.confirm.connect.warning');\r\n                }\r\n                if (confirm(confirmText)) {\r\n                    if (navigator.onLine) {\r\n                        setDeletingState(self);\r\n                        self.deleteMap(name);\r\n                    } else {\r\n                        TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n        }\r\n    };\r\n\r\n    ctlProto.findStoredMap = function (options) {\r\n        var self = this;\r\n        return self.storedMaps.filter(function (elm) {\r\n            var result = true;\r\n            if (options.name && options.name !== elm.name) {\r\n                result = false;\r\n            }\r\n            if (result && options.url && options.url !== elm.url) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        })[0];\r\n    };\r\n\r\n    ctlProto.showDownloadProgress = function (current, total) {\r\n        const self = this;\r\n        const cs = self._classSelector;\r\n        const count = self.div.querySelector(cs + '-progress-count');\r\n        if (total) {\r\n            var percent = Math.min(Math.round(current * 100 / total), 100);\r\n            var percentString = percent + '%';\r\n            self.div.querySelector(cs + '-progress-ratio').style.width = percentString;\r\n            count.innerHTML = percentString;\r\n        }\r\n        else {\r\n            self.div.querySelector(cs + '-progress-bar').classList.add(TC.Consts.classes.HIDDEN);\r\n            count.innerHTML = self.getLocaleString('xFiles', { quantity: current });\r\n        }\r\n    };\r\n\r\n    ctlProto.updateRequestSchemas = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        opts.extent = opts.extent || self.extent;\r\n        opts.layers = opts.layers || self.baseLayers;\r\n        self.requestSchemas = self.wrap.getRequestSchemas(opts);\r\n        return self.requestSchemas;\r\n    };\r\n\r\n    ctlProto.getResolutions = function () {\r\n        const self = this;\r\n        var result = [];\r\n\r\n        const resolutionMapper = function (tml) {\r\n            return tml.res;\r\n        };\r\n        // Obtenemos un array de resoluciones por cada esquema de cada capa\r\n        const allResolutions = self.requestSchemas.map(function (schema) {\r\n            return schema.tileMatrixLimits.map(resolutionMapper);\r\n        });\r\n\r\n        // \"Hacemos la cremallera\" con los arrays de resoluciones de todas las capas y añadimos resoluciones al array de resultados\r\n        result = result.concat.apply(result, allResolutions);\r\n        result.sort(function (a, b) {\r\n            return b - a;\r\n        });\r\n        return result;\r\n    };\r\n\r\n})();\r\n"]}