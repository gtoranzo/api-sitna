{"version":3,"sources":["layout/responsive/script.js"],"names":["document","querySelectorAll","forEach","elm","map","TC","Map","get","_layoutDone","Cfg","applyChanges","configArray","changes","Array","item","elem","apply","clickedElems","elements","querySelector","div","addEventListener","event","EventTarget","listenerBySelector","join","window","matchMedia","screenCondition","matches","change","targets","isArray","classes","cls","classList","add","ready","ovPanel","ovmap","h1","Consts","CLICK","e","preventDefault","stopPropagation","panel","target","parentElement","isCollapsed","toggle","disable","setTimeout","enable","tab","tagName","ctlDiv","layout","accordion","contains","COLLAPSED","this","h2","loaded","getControlsByClass","toc","mfi","CLASS","insertAdjacentElement","containerControl","TOOLSCLOSE","TOOLSOPEN","on","remove","browserFeatures","touch","addSwipe","direction","selector","className","options","noSwipe","Util","swipe"],"mappings":"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","sourcesContent":["\r\ndocument.querySelectorAll('.tc-map').forEach(function (elm) {\r\n    const map = TC.Map.get(elm);\r\n\r\n    if (map && !map._layoutDone) {\r\n\r\n        /**\r\n             * Array de condiciones para distintas resoluciones de pantalla. La estructura del array que recibe como par치metro es es:\r\n             *  - screenCondition (string): media query que debe evaluarse a true para que se apliquen los cambios.\r\n             *  - apply:\r\n             *      - event (string): evento que debe producirse para que se lleve a cabo la acci칩n.\r\n             *      - elements (array o string): selectores CSS de los elementos sobre los que se debe producir el evento anterior.\r\n             *      - changes:\r\n             *          - targets (array o string): selectores CSS de los elementos a los que se aplicar치n las clases CSS siguientes\r\n             *          - classes (array o string): clases CSS a aplicar\r\n             */\r\n        TC.Cfg.applyChanges = function (configArray) {\r\n            var changes = configArray instanceof Array ? configArray : [configArray];\r\n\r\n            if (changes) {\r\n                var map;\r\n                changes.forEach(function (item) {\r\n                    var elem = item.apply;\r\n                    var clickedElems = elem.elements instanceof Array ? elem.elements : [elem.elements];\r\n                    map = item.map || map || TC.Map.get(document.querySelector('.tc-map'));\r\n                    map.div.addEventListener(elem.event, TC.EventTarget.listenerBySelector(clickedElems.join(), function () {\r\n                        if (window.matchMedia(item.screenCondition).matches) { // si es una pantalla estrecha\r\n                            elem.changes.forEach(function (change) {\r\n                                var targets = Array.isArray(change.targets) ? change.targets : [change.targets];\r\n                                var classes = Array.isArray(change.classes) ? change.classes : [change.classes];\r\n\r\n                                map.div.querySelectorAll(targets.join()).forEach(function (elm) {\r\n                                    classes.forEach(function (cls) {\r\n                                        elm.classList.add(cls);\r\n                                    });\r\n                                });\r\n                            });\r\n                        }\r\n                    }));\r\n                });\r\n            }\r\n        };\r\n\r\n\r\n        map.ready(function () {\r\n\r\n            const ovPanel = map.div.querySelector('.ovmap-panel');\r\n            const rcollapsedClass = 'right-collapsed';\r\n            const lcollapsedClass = 'left-collapsed';\r\n            var ovmap;\r\n\r\n            map.div.querySelectorAll('.right-panel > h1').forEach(function (h1) {\r\n                h1.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    const tab = e.target;\r\n                    const panel = tab.parentElement;\r\n                    const isCollapsed = panel.classList.toggle(rcollapsedClass);\r\n                    if (map && panel === ovPanel) {\r\n                        if (ovmap) {\r\n                            if (isCollapsed) {\r\n                                ovmap.disable();\r\n                            }\r\n                            else {\r\n                                setTimeout(function () {\r\n                                    ovmap.enable();\r\n                                }, 250);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n\r\n            map.div.querySelectorAll('.left-panel > h1').forEach(function (h1) {\r\n                h1.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    const panel = e.target.parentElement;\r\n                    panel.classList.toggle(lcollapsedClass);\r\n                });\r\n            });\r\n\r\n            map.div.querySelector('.tools-panel').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                const tab = e.target;\r\n                if (tab.tagName === ('H2')) {\r\n                    const ctlDiv = tab.parentElement;\r\n                    if (map && map.layout && map.layout.accordion) {\r\n                        if (ctlDiv.classList.contains(TC.Consts.classes.COLLAPSED)) {\r\n                            this.querySelectorAll('h2').forEach(function (h2) {\r\n                                const div = h2.parentElement;\r\n                                if (div !== ctlDiv && !div.matches('.tc-ctl-search')) {\r\n                                    div.classList.add(TC.Consts.classes.COLLAPSED);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    ctlDiv.classList.toggle(TC.Consts.classes.COLLAPSED);\r\n                }\r\n            });          \r\n\r\n\r\n            map.loaded(function () {\r\n\r\n                ovmap = map.getControlsByClass('TC.control.OverviewMap')[0];\r\n                if (ovmap) {\r\n                    ovmap.loaded(function () {\r\n                        ovmap.disable();\r\n                    });\r\n                }\r\n                //mover el Multifeature info dentro del TOC\r\n                const toc = map.getControlsByClass('TC.control.WorkLayerManager')[0];\r\n                const mfi = map.getControlsByClass('TC.control.MultiFeatureInfo')[0];\r\n                if (toc && mfi) {\r\n                    toc.div.querySelector('.' + toc.CLASS + '-content').insertAdjacentElement('afterend', mfi.div);\r\n                    mfi.containerControl = toc;\r\n                }\r\n\r\n                //Aplicar clases CSS cuando se haga click en elementos definidos por configuraci칩n\r\n                TC.Cfg.applyChanges([\r\n                    {\r\n                        \"map\": map,\r\n                        \"screenCondition\": \"(max-width: 42em)\",\r\n                        \"apply\": {\r\n                            \"event\": \"click\",\r\n                            \"elements\": [\".tc-ctl-bms-node > label\"],\r\n                            \"changes\": [\r\n                                {\r\n                                    \"targets\": \"#tools-panel\",\r\n                                    \"classes\": \"right-collapsed\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                ]);\r\n            });\r\n\r\n            TC.Consts.event.TOOLSCLOSE = TC.Consts.event.TOOLSCLOSE || 'toolsclose.tc';\r\n            TC.Consts.event.TOOLSOPEN = TC.Consts.event.TOOLSOPEN || 'toolsopen.tc';\r\n\r\n            map.on(TC.Consts.event.TOOLSOPEN, function (e) {\r\n                map.div.querySelector('.tools-panel').classList.remove(rcollapsedClass);\r\n            });\r\n\r\n            map.on(TC.Consts.event.TOOLSCLOSE, function (e) {\r\n                map.div.querySelector('.tools-panel').classList.add(rcollapsedClass);\r\n            });\r\n\r\n            if (TC.browserFeatures.touch()) {\r\n                const addSwipe = function (direction) {\r\n                    const selector = '.' + direction + '-panel';\r\n                    const className = direction + '-collapsed';\r\n                    const options = { noSwipe: 'li,a' };\r\n                    options[direction] = function () {\r\n                        this.classList.add(className);\r\n                    };\r\n                    map.div.querySelectorAll(selector).forEach(function (panel) {\r\n                        TC.Util.swipe(panel, options);\r\n                    });\r\n                };\r\n                addSwipe('right');\r\n                addSwipe('left');\r\n            }\r\n            //TC.loadJS(\r\n            //    Modernizr.touch,\r\n            //    TC.apiLocation + 'FastClick/fastclick.min.js',\r\n            //    function () {\r\n            //        if (Modernizr.touch) {\r\n            //            document.addEventListener('DOMContentLoaded', function () {\r\n            //                Origami.fastclick(document.body);\r\n            //            });\r\n            //        }\r\n            //    }\r\n            //);\r\n\r\n        });\r\n    }\r\n    map._layoutDone = true;\r\n});\r\n\r\n"]}