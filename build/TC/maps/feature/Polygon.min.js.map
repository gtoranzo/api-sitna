{"version":3,"sources":["feature/Polygon.js"],"names":["TC","feature","Feature","syncLoadJS","apiLocation","Polygon","coords","options","opts","apply","this","arguments","wrap","isNative","_wrap","$","extend","Cfg","styles","polygon","createPolygon","inherit","prototype","STYLETYPE","Consts","geom","POLYGON","CLASSNAME","getCoords","call","pointArray","concat","getLength","getArea"],"mappings":"AAACA,GAAGC,QAAUD,GAAGC,YAEZD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAOnCJ,GAAGC,QAAQI,QAAU,SAAUC,EAAQC,GACnC,IAIIC,EAFJR,GAAGE,QAAQO,MAFAC,KAEYC,WAGvB,GALWD,KAKFE,KAAKC,SAASP,GAAS,CAC5BA,EAAOQ,MANAJ,KAMaE,KANbF,KAOFE,KAAKX,QAAUK,MAEnB,CACDE,EAVOE,KAUKH,QAAUQ,EAAEC,QAAO,EAVxBN,KAUmCH,QAASP,GAAGiB,IAAIC,OAAOC,QAASZ,GAVnEG,KAWFE,KAAKQ,cAAcd,EAAQE,KAIxCR,GAAGqB,QAAQrB,GAAGC,QAAQI,QAASL,GAAGE,SAElCF,GAAGC,QAAQI,QAAQiB,UAAUC,UAAYvB,GAAGwB,OAAOC,KAAKC,QAExD1B,GAAGC,QAAQI,QAAQiB,UAAUK,UAAY,qBAEzC3B,GAAGC,QAAQI,QAAQiB,UAAUM,UAAY,SAAUrB,GAC/CA,EAAUA,MACV,MAAMD,EAASN,GAAGE,QAAQoB,UAAUM,UAAUC,KAAKnB,KAAMH,GACzD,OAAIA,EAAQuB,cACEC,OAAOtB,SAAUH,GAExBA,GAGXN,GAAGC,QAAQI,QAAQiB,UAAUU,UAAY,SAAUzB,GAC/C,OAAOG,KAAKE,KAAKoB,UAAUzB,IAG/BP,GAAGC,QAAQI,QAAQiB,UAAUW,QAAU,SAAU1B,GAC7C,OAAOG,KAAKE,KAAKqB,QAAQ1B","sourcesContent":["TC.feature = TC.feature || {};\r\n\r\nif (!TC.Feature) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n}\r\n\r\n/*\r\n * Polygon\r\n * Parameters: coords, array of array of 2 element arrays of numbers; options, object\r\n */\r\nTC.feature.Polygon = function (coords, options) {\r\n    var self = this;\r\n\r\n    TC.Feature.apply(self, arguments);\r\n\r\n    var opts;\r\n    if (self.wrap.isNative(coords)) {\r\n        coords._wrap = self.wrap;\r\n        self.wrap.feature = coords;\r\n    }\r\n    else {\r\n        opts = self.options = $.extend(true, self.options, TC.Cfg.styles.polygon, options);\r\n        self.wrap.createPolygon(coords, opts);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.feature.Polygon, TC.Feature);\r\n\r\nTC.feature.Polygon.prototype.STYLETYPE = TC.Consts.geom.POLYGON;\r\n\r\nTC.feature.Polygon.prototype.CLASSNAME = 'TC.feature.Polygon';\r\n\r\nTC.feature.Polygon.prototype.getCoords = function (options) {\r\n    options = options || {};\r\n    const coords = TC.Feature.prototype.getCoords.call(this, options);\r\n    if (options.pointArray) {\r\n        return [].concat.apply([], coords);\r\n    }\r\n    return coords;\r\n};\r\n\r\nTC.feature.Polygon.prototype.getLength = function (options) {\r\n    return this.wrap.getLength(options);\r\n};\r\n\r\nTC.feature.Polygon.prototype.getArea = function (options) {\r\n    return this.wrap.getArea(options);\r\n};"],"file":"../../feature/Polygon.min.js"}