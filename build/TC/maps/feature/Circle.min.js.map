{"version":3,"sources":["feature/Circle.js"],"names":["TC","feature","Feature","syncLoadJS","apiLocation","Circle","coords","options","self","this","apply","arguments","wrap","isNative","createCircle","inherit","featProto","prototype","STYLETYPE","Consts","geom","POLYGON","CLASSNAME","getCoords","getGeometry","setCoords","Array","isArray","Error","call"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGC,QAAQI,OAAS,SAAUC,EAAQC,GAClC,MAAMC,EAAOC,KAEbT,GAAGE,QAAQQ,MAAMF,EAAMG,WAElBH,EAAKI,KAAKC,SAASP,IACpBE,EAAKI,KAAKE,aAAaR,EAAQC,IAIvCP,GAAGe,QAAQf,GAAGC,QAAQI,OAAQL,GAAGE,UAEjC,WACI,IAAIc,EAAYhB,GAAGC,QAAQI,OAAOY,UAElCD,EAAUE,UAAYlB,GAAGmB,OAAOC,KAAKC,QAErCL,EAAUM,UAAY,oBAEtBN,EAAUO,UAAY,WAClB,OAAOd,KAAKG,KAAKY,eAIrBR,EAAUS,UAAY,SAAUnB,GAC5B,MAAME,EAAOC,KACb,IAAIiB,MAAMC,QAAQrB,KACdoB,MAAMC,QAAQrB,EAAO,KACjBoB,MAAMC,QAAQrB,EAAO,GAAG,KAAQoB,MAAMC,QAAQrB,EAAO,GAAG,KACxDoB,MAAMC,QAAQrB,EAAO,IAIzB,MAAM,IAAIsB,MAAM,oCAHhB,OAAO5B,GAAGE,QAAQe,UAAUQ,UAAUI,KAAKrB,EAAMF,IAlB7D","sourcesContent":["TC.feature = TC.feature || {};\r\n\r\nif (!TC.Feature) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n}\r\n\r\nTC.feature.Circle = function (coords, options) {\r\n    const self = this;\r\n\r\n    TC.Feature.apply(self, arguments);\r\n\r\n    if (!self.wrap.isNative(coords)) {\r\n        self.wrap.createCircle(coords, options);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.feature.Circle, TC.Feature);\r\n\r\n(function () {\r\n    var featProto = TC.feature.Circle.prototype;\r\n\r\n    featProto.STYLETYPE = TC.Consts.geom.POLYGON;\r\n\r\n    featProto.CLASSNAME = 'TC.feature.Circle';\r\n\r\n    featProto.getCoords = function () {\r\n        return this.wrap.getGeometry();\r\n\r\n    };\r\n\r\n    featProto.setCoords = function (coords) {\r\n        const self = this;\r\n        if (Array.isArray(coords) &&\r\n            Array.isArray(coords[0])\r\n            && !Array.isArray(coords[0][0]) && !Array.isArray(coords[0][1])\r\n            && !Array.isArray(coords[1])) {\r\n            return TC.Feature.prototype.setCoords.call(self, coords);\r\n        }\r\n        else {\r\n            throw new Error('Coordinates not valid for circle');\r\n        }\r\n    };\r\n\r\n})();"]}