{"version":3,"sources":["feature/Polyline.js"],"names":["TC","feature","Feature","syncLoadJS","apiLocation","Polyline","coords","options","self","this","apply","arguments","wrap","isNative","createPolyline","inherit","prototype","STYLETYPE","CLASSNAME","setCoords","Array","isArray","call","getLength"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAOnCJ,GAAGC,QAAQI,SAAW,SAAUC,EAAQC,GACpC,MAAMC,EAAOC,KAEbT,GAAGE,QAAQQ,MAAMF,EAAMG,WAElBH,EAAKI,KAAKC,SAASP,IACpBE,EAAKI,KAAKE,eAAeR,EAAQC,IAIzCP,GAAGe,QAAQf,GAAGC,QAAQI,SAAUL,GAAGE,SAEnCF,GAAGC,QAAQI,SAASW,UAAUC,UAAY,OAE1CjB,GAAGC,QAAQI,SAASW,UAAUE,UAAY,sBAE1ClB,GAAGC,QAAQI,SAASW,UAAUG,UAAY,SAAUb,GAE5Cc,MAAMC,QAAQf,KAAYc,MAAMC,QAAQf,EAAO,MAC/CA,EAAS,CAACA,IAEd,OAAON,GAAGE,QAAQc,UAAUG,UAAUG,KAJzBb,KAIoCH,IAGrDN,GAAGC,QAAQI,SAASW,UAAUO,UAAY,SAAUhB,GAChD,OAAOE,KAAKG,KAAKW,UAAUhB","sourcesContent":["TC.feature = TC.feature || {};\r\n\r\nif (!TC.Feature) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n}\r\n\r\n/*\r\n * Polyline\r\n * Parameters: coords, array of 2 element arrays of numbers; options, object\r\n */\r\nTC.feature.Polyline = function (coords, options) {\r\n    const self = this;\r\n\r\n    TC.Feature.apply(self, arguments);\r\n\r\n    if (!self.wrap.isNative(coords)) {\r\n        self.wrap.createPolyline(coords, options);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.feature.Polyline, TC.Feature);\r\n\r\nTC.feature.Polyline.prototype.STYLETYPE = \"line\";\r\n\r\nTC.feature.Polyline.prototype.CLASSNAME = 'TC.feature.Polyline';\r\n\r\nTC.feature.Polyline.prototype.setCoords = function (coords) {\r\n    const self = this;\r\n    if (Array.isArray(coords) && !Array.isArray(coords[0])) {\r\n        coords = [coords];\r\n    }\r\n    return TC.Feature.prototype.setCoords.call(self, coords);\r\n};\r\n\r\nTC.feature.Polyline.prototype.getLength = function (options) {\r\n    return this.wrap.getLength(options);\r\n};"]}