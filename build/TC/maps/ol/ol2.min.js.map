{"version":3,"sources":["ol/ol2.js"],"names":["window","OpenLayers","TC","syncLoadJS","url","ol","_getScriptLocation","result","substr","lastIndexOf","CustomTheme","apiLocation","Util","extend","Feature","Vector","style","fillColor","Cfg","styles","polygon","fillOpacity","strokeColor","line","strokeWidth","Format","XML","prototype","_write","write","child","apply","this","arguments","replace","RegExp","Control","PanZoom","onButtonClick","evt","buttonElement","action","map","pan","getSlideFactor","zoomIn","zoomOut","zoomToExtent","options","extent","OverviewMap","_updateOverview","updateOverview","active","WMSGetFeatureInfo","Class","layerIdentifier","featureIdentifier","regExes","trimSpace","removeSpace","splitSpace","trimComma","gmlFormat","read","data","root","documentElement","nodeName","call","GML","read_msGMLOutput","response","layerNodes","getSiblingNodesByTagCriteria","i","len","length","node","layerName","prefix","split","featureNodes","j","featureNode","geomInfo","parseGeometry","attributes","parseAttributes","feature","geometry","bounds","type","push","read_FeatureInfoResponse","getElementsByTagNameNS","jlen","attribute","nodeValue","nodes","childNodes","nodeType","getAttribute","criteria","children","tagName","n","matchNodes","hasChildNodes","k","nextSibling","indexOf","grandchildren","name","grandchild","value","parseFeature","clone","destroy","CLASS_NAME","_oldParseFeature","externalProjection","nodeList","order","gmlns","srsName","loadProjDef","crs","sync","Projection","hover","drillDown","maxFeatures","clickCallback","output","layers","queryVisible","layerUrls","infoFormat","vendorParams","format","formatOptions","handler","hoverRequest","initialize","handlerOptions","Handler","Hover","move","cancelHover","pause","getInfoForHover","delay","callbacks","getInfoForClick","Click","click","events","triggerEvent","xy","Element","addClass","viewPortDiv","request","abort","findLayers","layer","candidates","Layer","WMS","getVisibility","isArray","urlMatches","matches","isEquivalentUrl","buildWMSOptions","clickPosition","layerNames","styleNames","params","LAYERS","concat","getStyleNames","firstLayer","projection","getProjection","layerProj","equals","getProjectionObject","getCode","service","version","VERSION","exceptions","EXCEPTIONS","bbox","getExtent","toBBOX","reverseAxisOrder","feature_count","height","getSize","h","width","w","info_format","INFO_FORMAT","parseFloat","parseInt","x","y","srs","query_layers","applyDefaults","upperCaseObject","callback","handleResponse","scope","STYLES","Array","wmsOptions","FORMAT","Request","GET","_requestCount","_numRequests","features","services","removeClass","triggerGetFeatureInfo","text","responseText","doc","responseXML","_features","_defaultRead_FeatureInfoResponse","layerNode","fieldNames","fieldValues","fieldName","fieldValue","undefined","textContent","namespaceURI","bGecko","controllers","bIE","document","all","opera","navigator","userAgent","match","fReadyStateChange","oRequest","XMLHttpRequest","onreadystatechange","dispatchEvent","bubbles","cancelable","timeStamp","Date","fSynchronizeValues","_object","e","fGetDocument","status","statusText","fCleanTransport","Function","open","sMethod","sUrl","bAsync","sUser","sPassword","sameOrigin","urlParts","URL_SPLIT_REGEX","location","protocol","hostname","uPort","lPort","port","isSameOrigin","XDomainRequest","_headers","_async","fOnUnload","nState","readyState","DONE","attachEvent","onopen","OPENED","_aborted","UNSENT","_data","detachEvent","onload","setRequestHeader","sName","sValue","KML","_getNodeText","innerHTML","_getFolderHierarchy","ret","cur","parentNode","toLowerCase","folderName","reverse","_folderTree","addArrayToTree","parserTimeout","parseFeatures","t1","diff","t0","getTime","extractStyles","styleUrl","getStyle","inlineStyleNode","inlineStyle","parseStyle","parseFolders","_folders","extractTracks","tracks","namespaces","gx","track","container","readNode","_read","getChildEl","_documentName","Popup","Anchored","calculateRelativePosition","PanZoomBar","_draw","draw","centered","div","removeAttribute","classList","add","zoomin","buttons","getBoundingClientRect","zoombarDiv","slider","zoomout","home","wrap","Map","setMap","resizeTimeout","self","parent","proxy","ProxyHost","initialExtent","maxExtent","restrictedExtent","controls","Navigation","dragPanOptions","enableKinetic","pinchZoomOptions","autoActivate","zoomWheelEnabled","mouseWheelZoom","theme","register","trigger","Consts","event","BEFOREZOOM","ZOOM","_wrap","FEATURECLICK","workLayers","NOFEATURECLICK","addEventListener","clearTimeout","setTimeout","updateSize","_promise","Promise","resolve","getMetersPerUnit","error","setProjection","insertLayer","olLayer","idx","alreadyExists","addLayer","setLayerIndex","removeLayer","getLayerCount","getNumLayers","indexOfFirstVector","getLayerIndex","index","setBaseLayer","reject","baseLayer","setExtent","left","bottom","right","top","setCenter","coords","panTo","getResolution","setResolution","resolution","getMap","then","olMap","zoomTo","getZoomForResolution","getResolutions","resolutions","getCoordinateFromPixel","coord","getLonLatFromPixel","lon","lat","getPixelFromCoordinate","getPixelFromLonLat","getViewport","synchronous","isNative","isGeo","units","getUnits","addPopup","popupCtl","popupDiv","createElement","hidePopup","popup","removePopup","exportFeatures","enableDragAndDrop","loadFiles","setVisibility","visible","getLayer","WmsParser","WMSCapabilities","WmtsParser","WMTSCapabilities","addCommonEvents","state","LOADING","BEFORELAYERUPDATE","IDLE","LAYERUPDATE","LAYERVISIBILITY","Raster","getGetMapUrl","getServiceType","layerType","capabilities","capability","getmap","href","WMTS","operationsMetadata","GetTile","dcp","http","get","getInfoFormats","c","getfeatureinfo","formats","infoFormatPreference","getWMTSLayer","contents","tileMatrixSetLinks","matrixSet","tileMatrixSet","getTileMatrix","tileMatrixSets","_layer","matrixIds","getScaleDenominators","scaleDenominator","minScale","maxScale","getName","getLayerNodes","max","Infinity","min","childDenominators","getAttribution","serviceProvider","providerName","trim","site","providerSite","serviceIdentification","title","getInfo","nameMatch","fullName","l","legend","metadataURLs","metadata","md","queryable","getServiceTitle","getRootLayerNode","nestedLayers","ignorePrefix","getIdentifier","identifier","$","normalizeLayerNode","Title","Abstract","normalizeCapabilities","Capability","Exception","cap","exception","Service","getAllLayerNodes","getLegend","src","isCompatible","names","slice","lyr","inArray","splice","supportedCrs","supportedCRS","crsRegExp","test","getCompatibleCRS","getCompatibleLayers","key","createWMSLayer","id","isBaseLayer","isBase","singleTile","transitionEffect","ratio","imageRatio","_originalGetURL","getURL","_noGetURL","BLANK_IMAGE","createWMTSLayer","createLayer","requestEncoding","encoding","WMTSEncoding","RESTFUL","getParams","setParams","mergeNewParams","setMatrixSet","getCompatibleMatrixSets","setWMTSUrl","Geometry","getNearest","point","d","LineString","Point","distanceTo","details","x0","y0","createVectorLayer","defaultStyle","geometryType","Style","getSymbolizerPrefix","customStyle","strokeOpacity","strokeLinecap","strokeDashstyle","context","getStrokeColor","getStrokeWidth","getStrokeOpacity","getStrokeLinecap","getStrokeDashstyle","getFillColor","getFillOpacity","getValue","property","isFunction","functionName","getUID","pointRadius","radius","graphic","label","fontColor","fontSize","fontWeight","angle","vectorOptions","styleMap","StyleMap","default","isLabeling","renderers","Renderer","SVG","drawText","featureId","drawOutline","labelOutlineWidth","outlineStyle","labelOutlineColor","fontStrokeColor","fontStrokeWidth","labelOutlineOpacity","fontOpacity","featureDx","suffix","LABEL_OUTLINE_SUFFIX","LABEL_ID_SUFFIX","nodeFactory","setAttributeNS","rotate","fontFamily","fontStyle","labelSelect","_featureId","align","labelAlign","defaultSymbolizer","LABEL_ALIGN","IS_GECKO","labelRows","numRows","removeChild","lastChild","tspan","_geometry","_geometryClass","LABEL_VSHIFT","setAttribute","vfactor","LABEL_VFACTOR","appendChild","textRoot","fixedStrategy","Strategy","Fixed","strategies","Protocol","HTTP","proxify","extractAttributes","internalProjection","WFS","filterObject","properties","ignoreHyphens","featureType","geometryName","featurePrefix","namespace","outputFormat","filter","object","filters","f","Filter","Comparison","Logical","OR","EQUAL_TO","AND","_createFilter","cluster","Cluster","distance","BEFOREFEATURESADD","markers","polylines","polygons","olFeat","MultiLineString","Polygon","MultiPolygon","promises","addMarkers","addPolylines","addPolygons","feat","elm","constructor","FEATURESADD","FEATUREREMOVE","VECTORUPDATE","activate","updateTitle","unregister","getGetFeatureUrl","import","addFeatures","getFeatures","s","setFilter","getFeatureById","removeFeature","removeFeatures","clearFeatures","removeAllFeatures","setFeatureVisibility","display","_redrawTimeout","redraw","getRGBA","color","opacity","componentLength","findFeature","values","subfilter","refresh","sendTransaction","inserts","updates","deletes","setDraggable","draggable","onend","onstart","olObjects","_ctl","onComplete","pixel","onStart","DragFeature","addControl","deactivate","control","lonlat","single","double","pixelTolerance","stopSingle","stopDouble","ScaleBar","render","ctl","ScaleLine","bottomInUnits","bottomOutUnits","NavBar","zsCtl","panIcons","zoomWorldIcon","moveZoomBar","Coordinates","onMouseMove","getMousePosition","originalEvent","latLon","update","Geolocation","Parser","parser","fid","JSON","GeoJSON","inherit","Search","addEvents","pointBoundsRadius","getMetersPerDegree","getBounds","getInitialExtent","setInitialExtent","rect","Size","size","ovMap","minRatio","maxRatio","autoPan","mapOptions","displayProjection","minRectSize","maximized","load","querySelector","CLASS","remove","classes","HIDDEN","VISIBLE","isLoaded","MAPLOAD","ovmap","ovmapDiv","updateRectToMap","reset","get3DCameraLayer","draw3DCamera","enable","disable","FeatureInfo","_map","isSuitableLayer","_gfi","buffer","on","LAYERADD","LAYERREMOVE","gfiLayers","beforeRequest","targetService","featureCount","featurePromises","featureInsertionPoints","targetServices","sourceService","mapLayers","sourceFeature","layerTitle","targetLayer","createFeature","contentType","getResponseHeader","rawUrl","responseURL","rawContent","lonLat","responseCallback","_resolution","responseError","message","getFeatureInfo","fitToView","setDragged","dragged","externalGraphic","graphicWidth","graphicHeight","createPoint","styleOptions","fill","stroke","createMarker","getPointIconUrl","graphicXOffset","Math","round","anchor","graphicYOffset","createPolyline","points","g","getVertices","createPolygon","rings","_getRing","LinearRing","createCircle","loadJS","Polyline","MultiPolyline","cloneFeature","labelOffset","labelXOffset","labelYOffset","getGeometry","getPoint","olPoint","olGeom","getPolygon","olPolygon","components","geom","setGeometry","getId","setId","mapToOLCoords","mapToArrayCoords","vertex","getLength","coordinates","reproject","getArea","setStyle","createLiterals","toCamelCase","drawFeature","toggleSelectedStyle","condition","getInnerPoint","getCentroid","intersects","closest","showPopup","Modernizr","canvas","displayClass","PopupClass","FramedCloud","_innerCentroid","currentFeature","html","markerOptions","offset","Pixel","LonLat","closeButton","hide","Event","stop","POPUPHIDE","autoSize","panMapIfOutOfView","keepInMap","maxSize","CONTROLRENDER","overflow","border","content","contentDiv","position","closeBtn","groupDiv","getLocaleString","marginRight","getPath","getTemplate","balloonStyle","getData","setData","clearData","Draw","mode","POLYGON","Path","removeControl","measureHandler","MEASUREPARTIAL","MEASURE","measure","area","perimeter","DRAWEND","Measure","geodesic","persist","immediate","POINT","measurepartial","undo","redo","end","finishGeometry","CacheBuilder","getRequestSchema","getGetTilePattern"],"mappings":"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","sourcesContent":["if (!window.OpenLayers) {\r\n    TC.syncLoadJS(TC.url.ol);\r\n}\r\n\r\n(function () {\r\n    OpenLayers._getScriptLocation = (function () {\r\n        var result = OpenLayers._getScriptLocation();\r\n        if (!result) {\r\n            result = TC.url.ol.substr(0, TC.url.ol.lastIndexOf('/') + 1);\r\n        }\r\n        return (function () { return result; });\r\n    })();\r\n\r\n    OpenLayers.CustomTheme = TC.apiLocation + 'OpenLayers/theme/tcsa/style.css';\r\n    OpenLayers.Util.extend(OpenLayers.Feature.Vector.style[\"default\"], {\r\n        fillColor: TC.Cfg.styles.polygon.fillColor,\r\n        fillOpacity: TC.Cfg.styles.polygon.fillOpacity,\r\n        strokeColor: TC.Cfg.styles.line.strokeColor,\r\n        strokeWidth: TC.Cfg.styles.line.strokeWidth\r\n    });\r\n\r\n    // IE11 tiene un comportamiento raro en su XMLSerializer nativo\r\n    // esto causa que meta namespaces falsos \"NS1\" por ahí\r\n    // este parche sale de un foro http://osgeo-org.1560.x6.nabble.com/WFS-and-IE-11-td5090636.html\r\n    OpenLayers.Format.XML.prototype._write = OpenLayers.Format.XML.prototype.write;\r\n    OpenLayers.Format.XML.prototype.write = function () {\r\n        var child = OpenLayers.Format.XML.prototype._write.apply(this, arguments);\r\n        // NOTE: Remove the rogue namespaces as one block of text.\r\n        //       The second fragment \"NSd:\" is too small on its own and could cause valid text (in, say, ogc:Literal elements) to be erroneously removed.\r\n        child = child.replace(new RegExp('xmlns:NS\\\\d+=\"\" NS\\\\d+:', 'g'), '');\r\n        return child;\r\n    };\r\n\r\n    OpenLayers.Control.PanZoom.prototype.onButtonClick = function (evt) {\r\n        var btn = evt.buttonElement;\r\n        switch (btn.action) {\r\n            case \"panup\":\r\n                this.map.pan(0, -this.getSlideFactor(\"h\"));\r\n                break;\r\n            case \"pandown\":\r\n                this.map.pan(0, this.getSlideFactor(\"h\"));\r\n                break;\r\n            case \"panleft\":\r\n                this.map.pan(-this.getSlideFactor(\"w\"), 0);\r\n                break;\r\n            case \"panright\":\r\n                this.map.pan(this.getSlideFactor(\"w\"), 0);\r\n                break;\r\n            case \"zoomin\":\r\n                this.map.zoomIn();\r\n                break;\r\n            case \"zoomout\":\r\n                this.map.zoomOut();\r\n                break;\r\n            case \"zoomworld\":\r\n                this.map.zoomToExtent(this.map.options.extent);\r\n                break;\r\n        }\r\n    };\r\n\r\n    OpenLayers.Control.OverviewMap.prototype._updateOverview = OpenLayers.Control.OverviewMap.prototype.updateOverview;\r\n    OpenLayers.Control.OverviewMap.prototype.updateOverview = function () {\r\n        var self = this;\r\n        if (self.active || self.active === null) {\r\n            self._updateOverview();\r\n        }\r\n    };\r\n\r\n    /* Copyright (c) 2006-2013 by OpenLayers Contributors (see authors.txt for\r\n     * full list of contributors). Published under the 2-clause BSD license.\r\n     * See license.txt in the OpenLayers distribution or repository for the\r\n     * full text of the license. */\r\n\r\n    /**\r\n     * @requires OpenLayers/Format/XML.js\r\n     */\r\n\r\n    /**\r\n     * Class: OpenLayers.Format.WMSGetFeatureInfo\r\n     * Class to read GetFeatureInfo responses from Web Mapping Services\r\n     *\r\n     * Inherits from:\r\n     *  - <OpenLayers.Format.XML>\r\n     */\r\n    OpenLayers.Format.WMSGetFeatureInfo = OpenLayers.Class(OpenLayers.Format.XML, {\r\n\r\n        /**\r\n         * APIProperty: layerIdentifier\r\n         * {String} All xml nodes containing this search criteria will populate an\r\n         *     internal array of layer nodes.\r\n         */\r\n        layerIdentifier: '_layer',\r\n\r\n        /**\r\n         * APIProperty: featureIdentifier\r\n         * {String} All xml nodes containing this search criteria will populate an \r\n         *     internal array of feature nodes for each layer node found.\r\n         */\r\n        featureIdentifier: '_feature',\r\n\r\n        /**\r\n         * Property: regExes\r\n         * Compiled regular expressions for manipulating strings.\r\n         */\r\n        regExes: {\r\n            trimSpace: (/^\\s*|\\s*$/g),\r\n            removeSpace: (/\\s*/g),\r\n            splitSpace: (/\\s+/),\r\n            trimComma: (/\\s*,\\s*/g)\r\n        },\r\n\r\n        /**\r\n         * Property: gmlFormat\r\n         * {<OpenLayers.Format.GML>} internal GML format for parsing geometries\r\n         *     in msGMLOutput\r\n         */\r\n        gmlFormat: null,\r\n\r\n        /**\r\n         * Constructor: OpenLayers.Format.WMSGetFeatureInfo\r\n         * Create a new parser for WMS GetFeatureInfo responses\r\n         *\r\n         * Parameters:\r\n         * options - {Object} An optional object whose properties will be set on\r\n         *     this instance.\r\n         */\r\n\r\n        /**\r\n         * APIMethod: read\r\n         * Read WMS GetFeatureInfo data from a string, and return an array of features\r\n         *\r\n         * Parameters:\r\n         * data - {String} or {DOMElement} data to read/parse.\r\n         *\r\n         * Returns:\r\n         * {Array(<OpenLayers.Feature.Vector>)} An array of features.\r\n         */\r\n        read: function (data) {\r\n            var result;\r\n            if (typeof data == \"string\") {\r\n                data = OpenLayers.Format.XML.prototype.read.apply(this, [data]);\r\n            }\r\n            var root = data.documentElement;\r\n            if (root) {\r\n                var scope = this;\r\n                var read = this[\"read_\" + root.nodeName];\r\n                if (read) {\r\n                    result = read.call(this, root);\r\n                } else {\r\n                    // fall-back to GML since this is a common output format for WMS\r\n                    // GetFeatureInfo responses\r\n                    result = new OpenLayers.Format.GML((this.options ? this.options : {})).read(data);\r\n                }\r\n            } else {\r\n                result = data;\r\n            }\r\n            return result;\r\n        },\r\n\r\n\r\n        /**\r\n         * Method: read_msGMLOutput\r\n         * Parse msGMLOutput nodes.\r\n         *\r\n         * Parameters:\r\n         * data - {DOMElement}\r\n         *\r\n         * Returns:\r\n         * {Array}\r\n         */\r\n        read_msGMLOutput: function (data) {\r\n            var response = [];\r\n            var layerNodes = this.getSiblingNodesByTagCriteria(data,\r\n                this.layerIdentifier);\r\n            if (layerNodes) {\r\n                for (var i = 0, len = layerNodes.length; i < len; ++i) {\r\n                    var node = layerNodes[i];\r\n                    var layerName = node.nodeName;\r\n                    if (node.prefix) {\r\n                        layerName = layerName.split(':')[1];\r\n                    }\r\n                    var layerName = layerName.replace(this.layerIdentifier, '');\r\n                    var featureNodes = this.getSiblingNodesByTagCriteria(node,\r\n                        this.featureIdentifier);\r\n                    if (featureNodes) {\r\n                        for (var j = 0; j < featureNodes.length; j++) {\r\n                            var featureNode = featureNodes[j];\r\n                            var geomInfo = this.parseGeometry(featureNode);\r\n                            var attributes = this.parseAttributes(featureNode);\r\n                            var feature = new OpenLayers.Feature.Vector(geomInfo.geometry,\r\n                                attributes, null);\r\n                            feature.bounds = geomInfo.bounds;\r\n                            feature.type = layerName;\r\n                            response.push(feature);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return response;\r\n        },\r\n\r\n        /**\r\n         * Method: read_FeatureInfoResponse\r\n         * Parse FeatureInfoResponse nodes.\r\n         *\r\n         * Parameters:\r\n         * data - {DOMElement}\r\n         *\r\n         * Returns:\r\n         * {Array}\r\n         */\r\n        read_FeatureInfoResponse: function (data) {\r\n            var response = [];\r\n            var featureNodes = this.getElementsByTagNameNS(data, '*',\r\n                'FIELDS');\r\n\r\n            for (var i = 0, len = featureNodes.length; i < len; i++) {\r\n                var featureNode = featureNodes[i];\r\n                var geom = null;\r\n\r\n                // attributes can be actual attributes on the FIELDS tag, \r\n                // or FIELD children\r\n                var attributes = {};\r\n                var j;\r\n                var jlen = featureNode.attributes.length;\r\n                if (jlen > 0) {\r\n                    for (j = 0; j < jlen; j++) {\r\n                        var attribute = featureNode.attributes[j];\r\n                        attributes[attribute.nodeName] = attribute.nodeValue;\r\n                    }\r\n                } else {\r\n                    var nodes = featureNode.childNodes;\r\n                    for (j = 0, jlen = nodes.length; j < jlen; ++j) {\r\n                        var node = nodes[j];\r\n                        if (node.nodeType != 3) {\r\n                            attributes[node.getAttribute(\"name\")] =\r\n                                node.getAttribute(\"value\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n                response.push(\r\n                    new OpenLayers.Feature.Vector(geom, attributes, null)\r\n                );\r\n            }\r\n            return response;\r\n        },\r\n\r\n        /**\r\n         * Method: getSiblingNodesByTagCriteria\r\n         * Recursively searches passed xml node and all it's descendant levels for \r\n         *     nodes whose tagName contains the passed search string. This returns an \r\n         *     array of all sibling nodes which match the criteria from the highest \r\n         *     hierarchial level from which a match is found.\r\n         * \r\n         * Parameters:\r\n         * node - {DOMElement} An xml node\r\n         * criteria - {String} Search string which will match some part of a tagName \r\n         *                                       \r\n         * Returns:\r\n         * Array({DOMElement}) An array of sibling xml nodes\r\n         */\r\n        getSiblingNodesByTagCriteria: function (node, criteria) {\r\n            var nodes = [];\r\n            var children, tagName, n, matchNodes, child;\r\n            if (node && node.hasChildNodes()) {\r\n                children = node.childNodes;\r\n                n = children.length;\r\n\r\n                for (var k = 0; k < n; k++) {\r\n                    child = children[k];\r\n                    while (child && child.nodeType != 1) {\r\n                        child = child.nextSibling;\r\n                        k++;\r\n                    }\r\n                    tagName = (child ? child.nodeName : '');\r\n                    if (tagName.length > 0 && tagName.indexOf(criteria) > -1) {\r\n                        nodes.push(child);\r\n                    } else {\r\n                        matchNodes = this.getSiblingNodesByTagCriteria(\r\n                            child, criteria);\r\n\r\n                        if (matchNodes.length > 0) {\r\n                            (nodes.length == 0) ?\r\n                                nodes = matchNodes : nodes.push(matchNodes);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            return nodes;\r\n        },\r\n\r\n        /**\r\n         * Method: parseAttributes\r\n         *\r\n         * Parameters:\r\n         * node - {<DOMElement>}\r\n         *\r\n         * Returns:\r\n         * {Object} An attributes object.\r\n         * \r\n         * Notes:\r\n         * Assumes that attributes are direct child xml nodes of the passed node\r\n         * and contain only a single text node. \r\n         */\r\n        parseAttributes: function (node) {\r\n            var attributes = {};\r\n            if (node.nodeType == 1) {\r\n                var children = node.childNodes;\r\n                var n = children.length;\r\n                for (var i = 0; i < n; ++i) {\r\n                    var child = children[i];\r\n                    if (child.nodeType == 1) {\r\n                        var grandchildren = child.childNodes;\r\n                        var name = (child.prefix) ?\r\n                            child.nodeName.split(\":\")[1] : child.nodeName;\r\n                        if (grandchildren.length == 0) {\r\n                            attributes[name] = null;\r\n                        } else if (grandchildren.length == 1) {\r\n                            var grandchild = grandchildren[0];\r\n                            if (grandchild.nodeType == 3 ||\r\n                                grandchild.nodeType == 4) {\r\n                                var value = grandchild.nodeValue.replace(\r\n                                    this.regExes.trimSpace, \"\");\r\n                                attributes[name] = value;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return attributes;\r\n        },\r\n\r\n        /**\r\n         * Method: parseGeometry\r\n         * Parse the geometry and the feature bounds out of the node using \r\n         *     Format.GML\r\n         *\r\n         * Parameters:\r\n         * node - {<DOMElement>}\r\n         *\r\n         * Returns:\r\n         * {Object} An object containing the geometry and the feature bounds\r\n        */\r\n        parseGeometry: function (node) {\r\n            // we need to use the old Format.GML parser since we do not know the \r\n            // geometry name\r\n            if (!this.gmlFormat) {\r\n                this.gmlFormat = new OpenLayers.Format.GML();\r\n            }\r\n            var feature = this.gmlFormat.parseFeature(node);\r\n            var geometry, bounds = null;\r\n            if (feature) {\r\n                geometry = feature.geometry && feature.geometry.clone();\r\n                bounds = feature.bounds && feature.bounds.clone();\r\n                feature.destroy();\r\n            }\r\n            return { geometry: geometry, bounds: bounds };\r\n        },\r\n\r\n        CLASS_NAME: \"OpenLayers.Format.WMSGetFeatureInfo\"\r\n\r\n    });\r\n\r\n    // Parcheo para que OpenLayers interprete el CRS de la feature en el GML y reproyecte en consecuencia.\r\n    OpenLayers.Format.GML.prototype._oldParseFeature = OpenLayers.Format.GML.prototype.parseFeature;\r\n    OpenLayers.Format.GML.prototype.parseFeature = function (node) {\r\n        this.externalProjection = null;\r\n        // only accept one geometry per feature - look for highest \"order\"\r\n        var order = [\"MultiPolygon\", \"Polygon\",\r\n                     \"MultiLineString\", \"LineString\",\r\n                     \"MultiPoint\", \"Point\", \"Envelope\"];\r\n        // FIXME: In case we parse a feature with no geometry, but boundedBy an Envelope,\r\n        // this code creates a geometry derived from the Envelope. This is not correct.\r\n        var type, nodeList, geometry;\r\n        for (var i = 0; i < order.length; ++i) {\r\n            type = order[i];\r\n            nodeList = this.getElementsByTagNameNS(node, this.gmlns, type);\r\n            if (nodeList.length > 0) {\r\n                // only deal with first geometry of this type\r\n                var srsName = nodeList[0].getAttribute('srsName');\r\n                if (srsName) {\r\n                    TC.loadProjDef({ crs: srsName, sync: true });\r\n                    this.externalProjection = new OpenLayers.Projection('EPSG:' + srsName.substr(srsName.lastIndexOf('#') + 1));\r\n                }\r\n                // stop looking for different geometry types\r\n                break;\r\n            }\r\n        }\r\n        return this._oldParseFeature(node);\r\n    }\r\n\r\n    /* Copyright (c) 2006-2013 by OpenLayers Contributors (see authors.txt for\r\n     * full list of contributors). Published under the 2-clause BSD license.\r\n     * See license.txt in the OpenLayers distribution or repository for the\r\n     * full text of the license. */\r\n\r\n\r\n    /**\r\n     * @requires OpenLayers/Control.js\r\n     * @requires OpenLayers/Handler/Click.js\r\n     * @requires OpenLayers/Handler/Hover.js\r\n     * @requires OpenLayers/Request.js\r\n     * @requires OpenLayers/Format/WMSGetFeatureInfo.js\r\n     */\r\n\r\n    /**\r\n     * Class: OpenLayers.Control.WMSGetFeatureInfo\r\n     * The WMSGetFeatureInfo control uses a WMS query to get information about a point on the map.  The\r\n     * information may be in a display-friendly format such as HTML, or a machine-friendly format such\r\n     * as GML, depending on the server's capabilities and the client's configuration.  This control\r\n     * handles click or hover events, attempts to parse the results using an OpenLayers.Format, and\r\n     * fires a 'getfeatureinfo' event with the click position, the raw body of the response, and an\r\n     * array of features if it successfully read the response.\r\n     *\r\n     * Inherits from:\r\n     *  - <OpenLayers.Control>\r\n     */\r\n    OpenLayers.Control.WMSGetFeatureInfo = OpenLayers.Class(OpenLayers.Control, {\r\n\r\n        /**\r\n          * APIProperty: hover\r\n          * {Boolean} Send GetFeatureInfo requests when mouse stops moving.\r\n          *     Default is false.\r\n          */\r\n        hover: false,\r\n\r\n        /**\r\n         * APIProperty: drillDown\r\n         * {Boolean} Drill down over all WMS layers in the map. When\r\n         *     using drillDown mode, hover is not possible, and an infoFormat that\r\n         *     returns parseable features is required. Default is false.\r\n         */\r\n        drillDown: false,\r\n\r\n        /**\r\n         * APIProperty: maxFeatures\r\n         * {Integer} Maximum number of features to return from a WMS query. This\r\n         *     sets the feature_count parameter on WMS GetFeatureInfo\r\n         *     requests.\r\n         */\r\n        maxFeatures: 10,\r\n\r\n        /**\r\n         * APIProperty: clickCallback\r\n         * {String} The click callback to register in the\r\n         *     {<OpenLayers.Handler.Click>} object created when the hover\r\n         *     option is set to false. Default is \"click\".\r\n         */\r\n        clickCallback: \"click\",\r\n\r\n        /**\r\n         * APIProperty: output\r\n         * {String} Either \"features\" or \"object\". When triggering a getfeatureinfo\r\n         *     request should we pass on an array of features or an object with with\r\n         *     a \"features\" property and other properties (such as the url of the\r\n         *     WMS). Default is \"features\".\r\n         */\r\n        output: \"features\",\r\n\r\n        /**\r\n         * APIProperty: layers\r\n         * {Array(<OpenLayers.Layer.WMS>)} The layers to query for feature info.\r\n         *     If omitted, all map WMS layers with a url that matches this <url> or\r\n         *     <layerUrls> will be considered.\r\n         */\r\n        layers: null,\r\n\r\n        /**\r\n         * APIProperty: queryVisible\r\n         * {Boolean} If true, filter out hidden layers when searching the map for\r\n         *     layers to query.  Default is false.\r\n         */\r\n        queryVisible: false,\r\n\r\n        /**\r\n         * APIProperty: url\r\n         * {String} The URL of the WMS service to use.  If not provided, the url\r\n         *     of the first eligible layer will be used.\r\n         */\r\n        url: null,\r\n\r\n        /**\r\n         * APIProperty: layerUrls\r\n         * {Array(String)} Optional list of urls for layers that should be queried.\r\n         *     This can be used when the layer url differs from the url used for\r\n         *     making GetFeatureInfo requests (in the case of a layer using cached\r\n         *     tiles).\r\n         */\r\n        layerUrls: null,\r\n\r\n        /**\r\n         * APIProperty: infoFormat\r\n         * {String} The mimetype to request from the server. If you are using\r\n         *     drillDown mode and have multiple servers that do not share a common\r\n         *     infoFormat, you can override the control's infoFormat by providing an\r\n         *     INFO_FORMAT parameter in your <OpenLayers.Layer.WMS> instance(s).\r\n         */\r\n        infoFormat: 'text/html',\r\n\r\n        /**\r\n         * APIProperty: vendorParams\r\n         * {Object} Additional parameters that will be added to the request, for\r\n         *     WMS implementations that support them. This could e.g. look like\r\n         * (start code)\r\n         * {\r\n         *     radius: 5\r\n         * }\r\n         * (end)\r\n         */\r\n        vendorParams: {},\r\n\r\n        /**\r\n         * APIProperty: format\r\n         * {<OpenLayers.Format>} A format for parsing GetFeatureInfo responses.\r\n         *     Default is <OpenLayers.Format.WMSGetFeatureInfo>.\r\n         */\r\n        format: null,\r\n\r\n        /**\r\n         * APIProperty: formatOptions\r\n         * {Object} Optional properties to set on the format (if one is not provided\r\n         *     in the <format> property.\r\n         */\r\n        formatOptions: null,\r\n\r\n        /**\r\n         * APIProperty: handlerOptions\r\n         * {Object} Additional options for the handlers used by this control, e.g.\r\n         * (start code)\r\n         * {\r\n         *     \"click\": {delay: 100},\r\n         *     \"hover\": {delay: 300}\r\n         * }\r\n         * (end)\r\n         */\r\n\r\n        /**\r\n         * Property: handler\r\n         * {Object} Reference to the <OpenLayers.Handler> for this control\r\n         */\r\n        handler: null,\r\n\r\n        /**\r\n         * Property: hoverRequest\r\n         * {<OpenLayers.Request>} contains the currently running hover request\r\n         *     (if any).\r\n         */\r\n        hoverRequest: null,\r\n\r\n        /**\r\n         * APIProperty: events\r\n         * {<OpenLayers.Events>} Events instance for listeners and triggering\r\n         *     control specific events.\r\n         *\r\n         * Register a listener for a particular event with the following syntax:\r\n         * (code)\r\n         * control.events.register(type, obj, listener);\r\n         * (end)\r\n         *\r\n         * Supported event types (in addition to those from <OpenLayers.Control.events>):\r\n         * beforegetfeatureinfo - Triggered before the request is sent.\r\n         *      The event object has an *xy* property with the position of the\r\n         *      mouse click or hover event that triggers the request.\r\n         * nogetfeatureinfo - no queryable layers were found.\r\n         * getfeatureinfo - Triggered when a GetFeatureInfo response is received.\r\n         *      The event object has a *text* property with the body of the\r\n         *      response (String), a *features* property with an array of the\r\n         *      parsed features, an *xy* property with the position of the mouse\r\n         *      click or hover event that triggered the request, and a *request*\r\n         *      property with the request itself. If drillDown is set to true and\r\n         *      multiple requests were issued to collect feature info from all\r\n         *      layers, *text* and *request* will only contain the response body\r\n         *      and request object of the last request.\r\n         */\r\n\r\n        /**\r\n         * Constructor: <OpenLayers.Control.WMSGetFeatureInfo>\r\n         *\r\n         * Parameters:\r\n         * options - {Object}\r\n         */\r\n        initialize: function (options) {\r\n            options = options || {};\r\n            options.handlerOptions = options.handlerOptions || {};\r\n\r\n            OpenLayers.Control.prototype.initialize.apply(this, [options]);\r\n\r\n            if (!this.format) {\r\n                this.format = new OpenLayers.Format.WMSGetFeatureInfo(\r\n                    options.formatOptions\r\n                );\r\n            }\r\n\r\n            if (this.drillDown === true) {\r\n                this.hover = false;\r\n            }\r\n\r\n            if (this.hover) {\r\n                this.handler = new OpenLayers.Handler.Hover(\r\n                       this, {\r\n                           'move': this.cancelHover,\r\n                           'pause': this.getInfoForHover\r\n                       },\r\n                       OpenLayers.Util.extend(this.handlerOptions.hover || {}, {\r\n                           'delay': 250\r\n                       }));\r\n            } else {\r\n                var callbacks = {};\r\n                callbacks[this.clickCallback] = this.getInfoForClick;\r\n                this.handler = new OpenLayers.Handler.Click(\r\n                    this, callbacks, this.handlerOptions.click || {});\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method: getInfoForClick\r\n         * Called on click\r\n         *\r\n         * Parameters:\r\n         * evt - {<OpenLayers.Event>}\r\n         */\r\n        getInfoForClick: function (evt) {\r\n            this.events.triggerEvent(\"beforegetfeatureinfo\", { xy: evt.xy });\r\n            // Set the cursor to \"wait\" to tell the user we're working on their\r\n            // click.\r\n            OpenLayers.Element.addClass(this.map.viewPortDiv, \"olCursorWait\");\r\n            this.request(evt.xy, {});\r\n        },\r\n\r\n        /**\r\n         * Method: getInfoForHover\r\n         * Pause callback for the hover handler\r\n         *\r\n         * Parameters:\r\n         * evt - {Object}\r\n         */\r\n        getInfoForHover: function (evt) {\r\n            this.events.triggerEvent(\"beforegetfeatureinfo\", { xy: evt.xy });\r\n            this.request(evt.xy, { hover: true });\r\n        },\r\n\r\n        /**\r\n         * Method: cancelHover\r\n         * Cancel callback for the hover handler\r\n         */\r\n        cancelHover: function () {\r\n            if (this.hoverRequest) {\r\n                this.hoverRequest.abort();\r\n                this.hoverRequest = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method: findLayers\r\n         * Internal method to get the layers, independent of whether we are\r\n         *     inspecting the map or using a client-provided array\r\n         */\r\n        findLayers: function () {\r\n\r\n            var candidates = this.layers || this.map.layers;\r\n            var layers = [];\r\n            var layer, url;\r\n            for (var i = candidates.length - 1; i >= 0; --i) {\r\n                layer = candidates[i];\r\n                if (layer instanceof OpenLayers.Layer.WMS &&\r\n                   (!this.queryVisible || layer.getVisibility())) {\r\n                    url = OpenLayers.Util.isArray(layer.url) ? layer.url[0] : layer.url;\r\n                    // if the control was not configured with a url, set it\r\n                    // to the first layer url\r\n                    if (this.drillDown === false && !this.url) {\r\n                        this.url = url;\r\n                    }\r\n                    if (this.drillDown === true || this.urlMatches(url)) {\r\n                        layers.push(layer);\r\n                    }\r\n                }\r\n            }\r\n            return layers;\r\n        },\r\n\r\n        /**\r\n         * Method: urlMatches\r\n         * Test to see if the provided url matches either the control <url> or one\r\n         *     of the <layerUrls>.\r\n         *\r\n         * Parameters:\r\n         * url - {String} The url to test.\r\n         *\r\n         * Returns:\r\n         * {Boolean} The provided url matches the control <url> or one of the\r\n         *     <layerUrls>.\r\n         */\r\n        urlMatches: function (url) {\r\n            var matches = OpenLayers.Util.isEquivalentUrl(this.url, url);\r\n            if (!matches && this.layerUrls) {\r\n                for (var i = 0, len = this.layerUrls.length; i < len; ++i) {\r\n                    if (OpenLayers.Util.isEquivalentUrl(this.layerUrls[i], url)) {\r\n                        matches = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return matches;\r\n        },\r\n\r\n        /**\r\n         * Method: buildWMSOptions\r\n         * Build an object with the relevant WMS options for the GetFeatureInfo request\r\n         *\r\n         * Parameters:\r\n         * url - {String} The url to be used for sending the request\r\n         * layers - {Array(<OpenLayers.Layer.WMS)} An array of layers\r\n         * clickPosition - {<OpenLayers.Pixel>} The position on the map where the mouse\r\n         *     event occurred.\r\n         * format - {String} The format from the corresponding GetMap request\r\n         */\r\n        buildWMSOptions: function (url, layers, clickPosition, format) {\r\n            var layerNames = [], styleNames = [];\r\n            for (var i = 0, len = layers.length; i < len; i++) {\r\n                if (layers[i].params.LAYERS != null) {\r\n                    layerNames = layerNames.concat(layers[i].params.LAYERS);\r\n                    styleNames = styleNames.concat(this.getStyleNames(layers[i]));\r\n                }\r\n            }\r\n            var firstLayer = layers[0];\r\n            // use the firstLayer's projection if it matches the map projection -\r\n            // this assumes that all layers will be available in this projection\r\n            var projection = this.map.getProjection();\r\n            var layerProj = firstLayer.projection;\r\n            if (layerProj && layerProj.equals(this.map.getProjectionObject())) {\r\n                projection = layerProj.getCode();\r\n            }\r\n            var params = OpenLayers.Util.extend({\r\n                service: \"WMS\",\r\n                version: firstLayer.params.VERSION,\r\n                request: \"GetFeatureInfo\",\r\n                exceptions: firstLayer.params.EXCEPTIONS,\r\n                bbox: this.map.getExtent().toBBOX(null,\r\n                    firstLayer.reverseAxisOrder()),\r\n                feature_count: this.maxFeatures,\r\n                height: this.map.getSize().h,\r\n                width: this.map.getSize().w,\r\n                format: format,\r\n                info_format: firstLayer.params.INFO_FORMAT || this.infoFormat\r\n            }, (parseFloat(firstLayer.params.VERSION) >= 1.3) ?\r\n            {\r\n                crs: projection,\r\n                i: parseInt(clickPosition.x),\r\n                j: parseInt(clickPosition.y)\r\n            } :\r\n            {\r\n                srs: projection,\r\n                x: parseInt(clickPosition.x),\r\n                y: parseInt(clickPosition.y)\r\n            }\r\n            );\r\n            if (layerNames.length != 0) {\r\n                params = OpenLayers.Util.extend({\r\n                    layers: layerNames,\r\n                    query_layers: layerNames,\r\n                    styles: styleNames\r\n                }, params);\r\n            }\r\n            OpenLayers.Util.applyDefaults(params, this.vendorParams);\r\n            return {\r\n                url: url,\r\n                params: OpenLayers.Util.upperCaseObject(params),\r\n                callback: function (request) {\r\n                    this.handleResponse(clickPosition, request, url);\r\n                },\r\n                scope: this\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Method: getStyleNames\r\n         * Gets the STYLES parameter for the layer. Make sure the STYLES parameter\r\n         * matches the LAYERS parameter\r\n         *\r\n         * Parameters:\r\n         * layer - {<OpenLayers.Layer.WMS>}\r\n         *\r\n         * Returns:\r\n         * {Array(String)} The STYLES parameter\r\n         */\r\n        getStyleNames: function (layer) {\r\n            // in the event of a WMS layer bundling multiple layers but not\r\n            // specifying styles,we need the same number of commas to specify\r\n            // the default style for each of the layers.  We can't just leave it\r\n            // blank as we may be including other layers that do specify styles.\r\n            var styleNames;\r\n            if (layer.params.STYLES) {\r\n                styleNames = layer.params.STYLES;\r\n            } else {\r\n                if (OpenLayers.Util.isArray(layer.params.LAYERS)) {\r\n                    styleNames = new Array(layer.params.LAYERS.length);\r\n                } else { // Assume it's a String\r\n                    styleNames = layer.params.LAYERS.replace(/[^,]/g, \"\");\r\n                }\r\n            }\r\n            return styleNames;\r\n        },\r\n\r\n        /**\r\n         * Method: request\r\n         * Sends a GetFeatureInfo request to the WMS\r\n         *\r\n         * Parameters:\r\n         * clickPosition - {<OpenLayers.Pixel>} The position on the map where the\r\n         *     mouse event occurred.\r\n         * options - {Object} additional options for this method.\r\n         *\r\n         * Valid options:\r\n         * - *hover* {Boolean} true if we do the request for the hover handler\r\n         */\r\n        request: function (clickPosition, options) {\r\n            var layers = this.findLayers();\r\n            if (layers.length == 0) {\r\n                this.events.triggerEvent(\"nogetfeatureinfo\");\r\n                // Reset the cursor.\r\n                OpenLayers.Element.removeClass(this.map.viewPortDiv, \"olCursorWait\");\r\n                return;\r\n            }\r\n\r\n            options = options || {};\r\n            if (this.drillDown === false) {\r\n                var wmsOptions = this.buildWMSOptions(this.url, layers,\r\n                    clickPosition, layers[0].params.FORMAT);\r\n                var request = OpenLayers.Request.GET(wmsOptions);\r\n\r\n                if (options.hover === true) {\r\n                    this.hoverRequest = request;\r\n                }\r\n            } else {\r\n                this._requestCount = 0;\r\n                this._numRequests = 0;\r\n                this.features = [];\r\n                // group according to service url to combine requests\r\n                var services = {}, url;\r\n                for (var i = 0, len = layers.length; i < len; i++) {\r\n                    var layer = layers[i];\r\n                    var service, found = false;\r\n                    url = OpenLayers.Util.isArray(layer.url) ? layer.url[0] : layer.url;\r\n                    if (url in services) {\r\n                        services[url].push(layer);\r\n                    } else {\r\n                        this._numRequests++;\r\n                        services[url] = [layer];\r\n                    }\r\n                }\r\n                var layers;\r\n                for (var url in services) {\r\n                    layers = services[url];\r\n                    var wmsOptions = this.buildWMSOptions(url, layers,\r\n                        clickPosition, layers[0].params.FORMAT);\r\n                    OpenLayers.Request.GET(wmsOptions);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Method: triggerGetFeatureInfo\r\n         * Trigger the getfeatureinfo event when all is done\r\n         *\r\n         * Parameters:\r\n         * request - {XMLHttpRequest} The request object\r\n         * xy - {<OpenLayers.Pixel>} The position on the map where the\r\n         *     mouse event occurred.\r\n         * features - {Array(<OpenLayers.Feature.Vector>)} or\r\n         *     {Array({Object}) when output is \"object\". The object has a url and a\r\n         *     features property which contains an array of features.\r\n         */\r\n        triggerGetFeatureInfo: function (request, xy, features) {\r\n            this.events.triggerEvent(\"getfeatureinfo\", {\r\n                text: request.responseText,\r\n                features: features,\r\n                request: request,\r\n                xy: xy\r\n            });\r\n\r\n            // Reset the cursor.\r\n            OpenLayers.Element.removeClass(this.map.viewPortDiv, \"olCursorWait\");\r\n        },\r\n\r\n        /**\r\n         * Method: handleResponse\r\n         * Handler for the GetFeatureInfo response.\r\n         *\r\n         * Parameters:\r\n         * xy - {<OpenLayers.Pixel>} The position on the map where the\r\n         *     mouse event occurred.\r\n         * request - {XMLHttpRequest} The request object.\r\n         * url - {String} The url which was used for this request.\r\n         */\r\n        handleResponse: function (xy, request, url) {\r\n\r\n            var doc = request.responseXML;\r\n            if (!doc || !doc.documentElement) {\r\n                doc = request.responseText;\r\n            }\r\n            var features = this.format.read(doc);\r\n            if (this.drillDown === false) {\r\n                this.triggerGetFeatureInfo(request, xy, features);\r\n            } else {\r\n                this._requestCount++;\r\n                if (this.output === \"object\") {\r\n                    this._features = (this._features || []).concat(\r\n                        { url: url, features: features }\r\n                    );\r\n                } else {\r\n                    this._features = (this._features || []).concat(features);\r\n                }\r\n                if (this._requestCount === this._numRequests) {\r\n                    this.triggerGetFeatureInfo(request, xy, this._features.concat());\r\n                    delete this._features;\r\n                    delete this._requestCount;\r\n                    delete this._numRequests;\r\n                }\r\n            }\r\n        },\r\n\r\n        CLASS_NAME: \"OpenLayers.Control.WMSGetFeatureInfo\"\r\n    });\r\n\r\n    OpenLayers.Format.WMSGetFeatureInfo.prototype._defaultRead_FeatureInfoResponse = OpenLayers.Format.WMSGetFeatureInfo.prototype.read_FeatureInfoResponse;\r\n    OpenLayers.Format.WMSGetFeatureInfo.prototype['read_esri_wms:FeatureInfoResponse'] = function (data) {\r\n        var response = [];\r\n        var layerNodes = this.getElementsByTagNameNS(data, 'http://www.esri.com/wms',\r\n            'FeatureInfoCollection');\r\n        for (var i = 0; i < layerNodes.length; i++) {\r\n            var layerNode = layerNodes[i];\r\n            var featureNodes = this.getElementsByTagNameNS(layerNode, 'http://www.esri.com/wms',\r\n            'FeatureInfo');\r\n\r\n            for (var j = 0; j < featureNodes.length; j++) {\r\n                var featureNode = featureNodes[j];\r\n                var geom = null;\r\n\r\n                var fieldNames = this.getElementsByTagNameNS(featureNode, 'http://www.esri.com/wms', 'FieldName');\r\n                var fieldValues = this.getElementsByTagNameNS(featureNode, 'http://www.esri.com/wms', 'FieldValue');\r\n                var attributes = {};\r\n                for (var k = 0; k < fieldNames.length; k++) {\r\n                    var fieldName = fieldNames[k];\r\n                    var fieldValue = fieldValues[k];\r\n                    // IE: text, rest: textContent\r\n                    var text = fieldName.textContent === undefined ? 'text' : 'textContent'\r\n                    attributes[fieldName[text]] = fieldValue[text];\r\n                }\r\n\r\n                var feature = new OpenLayers.Feature.Vector(geom, attributes, null);\r\n                feature.type = layerNode.getAttribute('layername');\r\n                response.push(feature);\r\n            }\r\n        }\r\n        return response;\r\n    };\r\n\r\n    OpenLayers.Format.WMSGetFeatureInfo.prototype.read_FeatureInfoResponse = function (data) {\r\n        if (data.namespaceURI === 'http://www.esri.com/wms') {\r\n            return OpenLayers.Format.WMSGetFeatureInfo.prototype['read_esri_wms:FeatureInfoResponse'].call(this, data);\r\n        }\r\n        else {\r\n            return OpenLayers.Format.WMSGetFeatureInfo.prototype._defaultRead_FeatureInfoResponse.call(this, data);\r\n        }\r\n    };\r\n\r\n    (function () {\r\n        // IE8 CORS fix\r\n\r\n        // Define on browser type\r\n        var bGecko = !!window.controllers,\r\n            bIE = window.document.all && !window.opera,\r\n            bIE7 = bIE && window.navigator.userAgent.match(/MSIE 7.0/);\r\n\r\n        // Helper function\r\n        function fReadyStateChange(oRequest) {\r\n            // Sniffing code\r\n            if (OpenLayers.Request.XMLHttpRequest.onreadystatechange)\r\n                OpenLayers.Request.XMLHttpRequest.onreadystatechange.apply(oRequest);\r\n\r\n            // Fake event\r\n            oRequest.dispatchEvent({\r\n                'type': \"readystatechange\",\r\n                'bubbles': false,\r\n                'cancelable': false,\r\n                'timeStamp': new Date + 0\r\n            });\r\n        };\r\n\r\n        function fSynchronizeValues(oRequest) {\r\n            try { oRequest.responseText = oRequest._object.responseText; } catch (e) { }\r\n            try { oRequest.responseXML = fGetDocument(oRequest._object); } catch (e) { }\r\n            try { oRequest.status = oRequest._object.status; } catch (e) { }\r\n            try { oRequest.statusText = oRequest._object.statusText; } catch (e) { }\r\n        };\r\n\r\n        function fCleanTransport(oRequest) {\r\n            // BUGFIX: IE - memory leak (on-page leak)\r\n            oRequest._object.onreadystatechange = new window.Function;\r\n        };\r\n\r\n        OpenLayers.Request.XMLHttpRequest.prototype.open = function (sMethod, sUrl, bAsync, sUser, sPassword) {\r\n            // IE8 CORS fix\r\n            function isSameOrigin(url) {\r\n                var sameOrigin = url.indexOf(\"http\") !== 0 && url.indexOf(\"//\") !== 0;\r\n                var urlParts = !sameOrigin && url.match(this.URL_SPLIT_REGEX);\r\n                if (urlParts) {\r\n                    var location = window.location;\r\n                    sameOrigin =\r\n                        urlParts[1] == location.protocol &&\r\n                        urlParts[3] == location.hostname;\r\n                    var uPort = urlParts[4], lPort = location.port;\r\n                    if (uPort != 80 && uPort != \"\" || lPort != \"80\" && lPort != \"\") {\r\n                        sameOrigin = sameOrigin && uPort == lPort;\r\n                    }\r\n                }\r\n                return sameOrigin;\r\n            }\r\n\r\n            if (!isSameOrigin(sUrl)) {\r\n                if (!(\"withCredentials\" in this._object) && window.XDomainRequest) {\r\n                    this._object = new window.XDomainRequest();\r\n                }\r\n            }\r\n\r\n            // Delete headers, required when object is reused\r\n            delete this._headers;\r\n\r\n            // When bAsync parameter value is omitted, use true as default\r\n            if (arguments.length < 3)\r\n                bAsync = true;\r\n\r\n            // Save async parameter for fixing Gecko bug with missing readystatechange in synchronous requests\r\n            this._async = bAsync;\r\n\r\n            // Set the onreadystatechange handler\r\n            var oRequest = this,\r\n                nState = this.readyState,\r\n                fOnUnload;\r\n\r\n            // BUGFIX: IE - memory leak on page unload (inter-page leak)\r\n            if (bIE && bAsync) {\r\n                fOnUnload = function () {\r\n                    if (nState != OpenLayers.Request.XMLHttpRequest.DONE) {\r\n                        fCleanTransport(oRequest);\r\n                        // Safe to abort here since onreadystatechange handler removed\r\n                        oRequest.abort();\r\n                    }\r\n                };\r\n                window.attachEvent(\"onunload\", fOnUnload);\r\n            }\r\n\r\n            // Add method sniffer\r\n            if (OpenLayers.Request.XMLHttpRequest.onopen)\r\n                OpenLayers.Request.XMLHttpRequest.onopen.apply(this, arguments);\r\n\r\n            if (arguments.length > 4)\r\n                this._object.open(sMethod, sUrl, bAsync, sUser, sPassword);\r\n            else\r\n                if (arguments.length > 3)\r\n                    this._object.open(sMethod, sUrl, bAsync, sUser);\r\n                else\r\n                    this._object.open(sMethod, sUrl, bAsync);\r\n\r\n            this.readyState = OpenLayers.Request.XMLHttpRequest.OPENED;\r\n            fReadyStateChange(this);\r\n\r\n            if (\"withCredentials\" in this._object || \"onreadystatechange\" in this._object) { // Fix para soportar vista de compatibilidad de IE, XHR tiene la propiedad onreadystatechange pero sigue sin tener withCredentials\r\n                this._object.onreadystatechange = function () {\r\n                    if (bGecko && !bAsync)\r\n                        return;\r\n\r\n                    // Synchronize state\r\n                    oRequest.readyState = oRequest._object.readyState;\r\n\r\n                    //\r\n                    fSynchronizeValues(oRequest);\r\n\r\n                    // BUGFIX: Firefox fires unnecessary DONE when aborting\r\n                    if (oRequest._aborted) {\r\n                        // Reset readyState to UNSENT\r\n                        oRequest.readyState = OpenLayers.Request.XMLHttpRequest.UNSENT;\r\n\r\n                        // Return now\r\n                        return;\r\n                    }\r\n\r\n                    if (oRequest.readyState == OpenLayers.Request.XMLHttpRequest.DONE) {\r\n                        // Free up queue\r\n                        delete oRequest._data;\r\n                        /*                if (bAsync)\r\n                        fQueue_remove(oRequest);*/\r\n                        //\r\n                        fCleanTransport(oRequest);\r\n                        // Uncomment this block if you need a fix for IE cache\r\n                        /*\r\n                        // BUGFIX: IE - cache issue\r\n                        if (!oRequest._object.getResponseHeader(\"Date\")) {\r\n                        // Save object to cache\r\n                        oRequest._cached    = oRequest._object;\r\n    \r\n                        // Instantiate a new transport object\r\n                        OpenLayers.Request.XMLHttpRequest.call(oRequest);\r\n    \r\n                        // Re-send request\r\n                        if (sUser) {\r\n                        if (sPassword)\r\n                        oRequest._object.open(sMethod, sUrl, bAsync, sUser, sPassword);\r\n                        else\r\n                        oRequest._object.open(sMethod, sUrl, bAsync, sUser);\r\n                        }\r\n                        else\r\n                        oRequest._object.open(sMethod, sUrl, bAsync);\r\n                        oRequest._object.setRequestHeader(\"If-Modified-Since\", oRequest._cached.getResponseHeader(\"Last-Modified\") || new window.Date(0));\r\n                        // Copy headers set\r\n                        if (oRequest._headers)\r\n                        for (var sHeader in oRequest._headers)\r\n                        if (typeof oRequest._headers[sHeader] == \"string\")    // Some frameworks prototype objects with functions\r\n                        oRequest._object.setRequestHeader(sHeader, oRequest._headers[sHeader]);\r\n    \r\n                        oRequest._object.onreadystatechange    = function() {\r\n                        // Synchronize state\r\n                        oRequest.readyState        = oRequest._object.readyState;\r\n    \r\n                        if (oRequest._aborted) {\r\n                        //\r\n                        oRequest.readyState    = OpenLayers.Request.XMLHttpRequest.UNSENT;\r\n    \r\n                        // Return\r\n                        return;\r\n                        }\r\n    \r\n                        if (oRequest.readyState == OpenLayers.Request.XMLHttpRequest.DONE) {\r\n                        // Clean Object\r\n                        fCleanTransport(oRequest);\r\n    \r\n                        // get cached request\r\n                        if (oRequest.status == 304)\r\n                        oRequest._object    = oRequest._cached;\r\n    \r\n                        //\r\n                        delete oRequest._cached;\r\n    \r\n                        //\r\n                        fSynchronizeValues(oRequest);\r\n    \r\n                        //\r\n                        fReadyStateChange(oRequest);\r\n    \r\n                        // BUGFIX: IE - memory leak in interrupted\r\n                        if (bIE && bAsync)\r\n                        window.detachEvent(\"onunload\", fOnUnload);\r\n                        }\r\n                        };\r\n                        oRequest._object.send(null);\r\n    \r\n                        // Return now - wait until re-sent request is finished\r\n                        return;\r\n                        };\r\n                        */\r\n                        // BUGFIX: IE - memory leak in interrupted\r\n                        if (bIE && bAsync)\r\n                            window.detachEvent(\"onunload\", fOnUnload);\r\n                    }\r\n\r\n                    // BUGFIX: Some browsers (Internet Explorer, Gecko) fire OPEN readystate twice\r\n                    if (nState != oRequest.readyState)\r\n                        fReadyStateChange(oRequest);\r\n\r\n                    nState = oRequest.readyState;\r\n                }\r\n            } else {\r\n                this._object.onload = function () {\r\n                    if (bGecko && !bAsync)\r\n                        return;\r\n                    oRequest.readyState = OpenLayers.Request.XMLHttpRequest.DONE;\r\n                    oRequest._object.status = 200;\r\n                    oRequest._object.statusText = \"OK\";\r\n                    fSynchronizeValues(oRequest);\r\n                    // Free up queue\r\n                    delete oRequest._data;\r\n                    /*                if (bAsync)\r\n                    fQueue_remove(oRequest);*/\r\n                    //\r\n                    // BUGFIX: IE - memory leak in interrupted\r\n                    if (bIE && bAsync)\r\n                        window.detachEvent(\"onunload\", fOnUnload);\r\n                    oRequest.onreadystatechange();\r\n                }\r\n            }\r\n        };\r\n\r\n        OpenLayers.Request.XMLHttpRequest.prototype.setRequestHeader = function (sName, sValue) {\r\n            // BUGFIX: IE - cache issue\r\n            if (!this._headers)\r\n                this._headers = {};\r\n            this._headers[sName] = sValue;\r\n\r\n            if (\"setRequestHeader\" in this._object) {\r\n                return this._object.setRequestHeader(sName, sValue);\r\n            } else if (\"contentType\" in this._object && sName == \"Content-Type\") {    //objeto XDR\r\n                // La propiedad existe pero es de solo lectura, no se puede modificar su contenido y por tanto el content-type de la XDR\r\n                //this._object.contentType = sValue;\r\n                return;\r\n            } else {\r\n                return;\r\n            }\r\n        };\r\n\r\n    })();\r\n\r\n    OpenLayers.Format.KML.prototype._getNodeText = function (node) {\r\n        var result = \"\";\r\n        if (node.textContent !== undefined) {\r\n            result = node.textContent;\r\n        }\r\n        else if (node.innerHTML !== undefined) {\r\n            result = node.innerHTML;\r\n        }\r\n        else if (node.text !== undefined) {\r\n            result = node.text;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    OpenLayers.Format.KML.prototype._getFolderHierarchy = function (node) {\r\n        var ret = [];\r\n        var cur = node;\r\n        if (cur.parentNode) {\r\n            do {\r\n                cur = cur.parentNode;\r\n                if (cur.nodeName.toLowerCase() == \"folder\") {\r\n                    //esto es muy lento en IE\r\n                    //var folderName = this.parseProperty(cur, \"*\", \"name\"); \r\n\r\n                    //el purgatorio del software está lleno de código como lo que sigue:\r\n                    var folderName;\r\n                    if (cur.childNodes && cur.childNodes.length && cur.childNodes.length > 0) {\r\n                        if (cur.childNodes[0].nodeName == \"name\") {\r\n                            folderName = this._getNodeText(cur.childNodes[0]);\r\n                        }\r\n                        else if (cur.childNodes.length > 1) {\r\n                            folderName = this._getNodeText(cur.childNodes[1]);\r\n                        }\r\n                    }\r\n\r\n                    if (folderName) ret.push(folderName);\r\n                }\r\n            }\r\n            while (cur.parentNode !== null && cur.parentNode.nodeName.toLowerCase() !== \"document\");\r\n        }\r\n        ret.reverse();\r\n\r\n        if (!this._folderTree) {\r\n            this._folderTree = { children: [] };\r\n        }\r\n        TC.Util.addArrayToTree(ret, this._folderTree);\r\n\r\n        return ret;\r\n    };\r\n\r\n    OpenLayers.Format.KML.prototype.parserTimeout = 0;\r\n    OpenLayers.Format.KML.prototype.parseFeatures = function (nodes, options) {\r\n        var features = [];\r\n        var t0 = new Date();\r\n        var t1, diff;\r\n        for (var i = 0, len = nodes.length; i < len; i++) {\r\n            if (this.parserTimeout > 0) {\r\n                if (i % 10 === 0 && i > 0) {\r\n                    t1 = new Date();\r\n                    diff = parseInt(t1.getTime() - t0.getTime());\r\n                    if (diff > this.parserTimeout) {\r\n                        throw \"El archivo KML es demasiado complejo para este navegador.\" + diff + \"ms, \" + i + \" features\";\r\n                    }\r\n                    //console.log(i + \" features! - \" + parseInt(t1.getTime() - t0.getTime())+\"ms\");\r\n                }\r\n            }\r\n\r\n            var featureNode = nodes[i];\r\n            var feature = this.parseFeature.apply(this, [featureNode]);\r\n            if (feature) {\r\n\r\n                // Create reference to styleUrl \r\n                if (this.extractStyles && feature.attributes &&\r\n                    feature.attributes.styleUrl) {\r\n                    feature.style = this.getStyle(feature.attributes.styleUrl, options);\r\n                }\r\n\r\n                if (this.extractStyles) {\r\n                    // Make sure that <Style> nodes within a placemark are \r\n                    // processed as well\r\n                    var inlineStyleNode = this.getElementsByTagNameNS(featureNode,\r\n                                                        \"*\",\r\n                                                        \"Style\")[0];\r\n                    if (inlineStyleNode) {\r\n                        var inlineStyle = this.parseStyle(inlineStyleNode);\r\n                        if (inlineStyle) {\r\n                            feature.style = OpenLayers.Util.extend(\r\n                                feature.style, inlineStyle\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                //mvillafranca: parse folder, add it as an attribute\r\n                if (this.parseFolders) {\r\n                    feature._folders = this._getFolderHierarchy(featureNode);\r\n                }\r\n\r\n\r\n                // check if gx:Track elements should be parsed\r\n                if (this.extractTracks) {\r\n                    var tracks = this.getElementsByTagNameNS(\r\n                        featureNode, this.namespaces.gx, \"Track\"\r\n                    );\r\n                    if (tracks && tracks.length > 0) {\r\n                        var track = tracks[0];\r\n                        var container = {\r\n                            features: [],\r\n                            feature: feature\r\n                        };\r\n                        this.readNode(track, container);\r\n                        if (container.features.length > 0) {\r\n                            features.push.apply(features, container.features);\r\n                        }\r\n                    }\r\n                } else {\r\n                    // add feature to list of features\r\n                    features.push(feature);\r\n                }\r\n            } else {\r\n                throw \"Bad Placemark: \" + i;\r\n            }\r\n        }\r\n\r\n        // add new features to existing feature list\r\n        this.features = this.features.concat(features);\r\n    };\r\n\r\n    OpenLayers.Format.KML.prototype._read = OpenLayers.Format.KML.prototype.read;\r\n\r\n    OpenLayers.Format.KML.prototype.read = function (data) {\r\n        var doc = this.getChildEl(data.documentElement, 'Document');\r\n        if (doc) {\r\n            var name = this.getChildEl(doc, 'name');\r\n            if (name) {\r\n                this._documentName = this._getNodeText(name);\r\n            }\r\n        }\r\n        return this._read.call(this, data);\r\n    };\r\n\r\n\r\n    OpenLayers.Popup.Anchored.prototype.calculateRelativePosition = function () {\r\n        return 'tr';\r\n    };\r\n\r\n    OpenLayers.Control.PanZoomBar.prototype._draw = OpenLayers.Control.PanZoomBar.prototype.draw;\r\n\r\n    OpenLayers.Control.PanZoomBar.prototype.draw = function (centered) {\r\n        var self = this;\r\n        var result = OpenLayers.Control.PanZoomBar.prototype._draw.call(self, centered);\r\n        self.div.removeAttribute('style');\r\n        self.div.classList.add('tc-ctl-nav');\r\n        const zoomin = self.buttons[0];\r\n        var height = zoomin.getBoundingClientRect().height;\r\n        zoomin.removeAttribute('style');\r\n        zoomin.classList.add('tc-ctl-nav-btn');\r\n        zoomin.classList.add('tc-ctl-nav-btn-zoomin');\r\n        const zoombarDiv = self.zoombarDiv;\r\n        height = zoombarDiv.style.height;\r\n        zoombarDiv.removeAttribute('style');\r\n        zoombarDiv.classList.add('tc-ctl-nav-bar');\r\n        zoombarDiv.style.height = height;\r\n        const slider = self.slider;\r\n        height = slider.style.height;\r\n        slider.removeAttribute('style');\r\n        slider.classList.add('tc-ctl-nav-slider');\r\n        slider.style.height = height;\r\n        const zoomout = self.buttons[1];\r\n        zoomout.removeAttribute('style');\r\n        zoomout.classList.add('tc-ctl-nav-btn');\r\n        zoomout.classList.add('tc-ctl-nav-btn-zoomout');\r\n        const home = self.buttons[2];\r\n        home.removeAttribute('style');\r\n        home.classList.add('tc-ctl-nav-btn');\r\n        home.classList.add('tc-ctl-nav-btn-home');\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setMap = function () {\r\n        var self = this;\r\n        var options = self.parent.options;\r\n\r\n        if (options.proxy) {\r\n            OpenLayers.ProxyHost = options.proxy;\r\n        }\r\n\r\n        self.map = new OpenLayers.Map(self.parent.div, {\r\n            projection: options.crs,\r\n            extent: options.initialExtent,\r\n            maxExtent: options.maxExtent ? options.maxExtent : null,\r\n            restrictedExtent: options.maxExtent ? options.maxExtent : null,\r\n            controls: [\r\n                    new OpenLayers.Control.Navigation({\r\n                        dragPanOptions: {\r\n                            enableKinetic: true\r\n                        },\r\n                        pinchZoomOptions: {\r\n                            autoActivate: true\r\n                        },\r\n                        zoomWheelEnabled: options.mouseWheelZoom\r\n                    })\r\n            ],\r\n            theme: OpenLayers.CustomTheme\r\n        });\r\n\r\n        self.map.events.register('zoomstart', self.parent, function () {\r\n            self.parent.trigger(TC.Consts.event.BEFOREZOOM);\r\n        });\r\n\r\n        self.map.events.register('zoomend', self.parent, function () {\r\n            self.parent.trigger(TC.Consts.event.ZOOM);\r\n        });\r\n\r\n        self.map.events.register('featureclick', self.parent, function (e) {\r\n            if (e.feature && e.feature._wrap) {\r\n                self.parent.trigger(TC.Consts.event.FEATURECLICK, { feature: e.feature._wrap.parent });\r\n            }\r\n        });\r\n\r\n        self.map.events.register('nofeatureclick', self.parent, function (e) {\r\n            for (var i = 0; i < self.parent.workLayers.length; i++) {\r\n                var layer = self.parent.workLayers[i];\r\n                if (layer.wrap.layer === e.layer) {\r\n                    self.parent.trigger(TC.Consts.event.NOFEATURECLICK, { layer: layer });\r\n                }\r\n            }\r\n        });\r\n\r\n        var resizeTimeout;\r\n        self.parent.div.addEventListener('resize', function () {\r\n            clearTimeout(resizeTimeout);\r\n            resizeTimeout = setTimeout(function () {\r\n                self.map.updateSize();\r\n            }, 200);\r\n        });\r\n\r\n        self._promise = Promise.resolve(self.map);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getMetersPerUnit = function () {\r\n        TC.error('TC.wrap.Map.prototype.getMetersPerUnit no está soportada con OpenLayers 2');\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setProjection = function (options) {\r\n        TC.error('TC.wrap.Map.prototype.setProjection no está soportada con OpenLayers 2');\r\n    };\r\n\r\n    /*\r\n     *  wrap.insertLayer: inserts OpenLayers layer at index\r\n     *  Parameters: OpenLayers.Layer, number\r\n     */\r\n    TC.wrap.Map.prototype.insertLayer = function (olLayer, idx) {\r\n        var self = this;\r\n        var alreadyExists = false;\r\n        for (var i = 0; i < self.map.layers.length; i++) {\r\n            if (self.map.layers[i] === olLayer) {\r\n                alreadyExists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!alreadyExists) {\r\n            self.map.addLayer(olLayer);\r\n        }\r\n        self.map.setLayerIndex(olLayer, idx);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.removeLayer = function (olLayer) {\r\n        this.map.removeLayer(olLayer);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerCount = function () {\r\n        return this.map.getNumLayers();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.indexOfFirstVector = function () {\r\n        var self = this;\r\n        var result = -1;\r\n        for (var i = 0, len = self.map.layers.length; i < len; i++) {\r\n            if (self.map.layers[i] instanceof OpenLayers.Layer.Vector) {\r\n                result = i;\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerIndex = function (olLayer) {\r\n        return this.map.getLayerIndex(olLayer);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setLayerIndex = function (olLayer, index)\r\n    {\r\n        this.map.setLayerIndex(olLayer, index);\r\n    };\r\n\r\n\r\n    TC.wrap.Map.prototype.setBaseLayer = function (olLayer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            self.map.addLayer(olLayer);\r\n            self.map.setBaseLayer(olLayer);\r\n            if (self.parent.baseLayer) {\r\n                self.map.removeLayer(self.parent.baseLayer.wrap.layer);\r\n            }\r\n            resolve();\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setExtent = function (extent) {\r\n        this.map.updateSize();\r\n        this.map.zoomToExtent(extent);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getExtent = function () {\r\n        var result = null;\r\n        var bounds = this.map.getExtent();\r\n        if (bounds) {\r\n            result = [bounds.left, bounds.bottom, bounds.right, bounds.top];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setCenter = function (coords) {\r\n        this.map.panTo(coords);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolution = function () {\r\n        return this.map.getResolution();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setResolution = function (resolution) {\r\n        this.getMap().then(function (olMap) {\r\n            olMap.zoomTo(olMap.getZoomForResolution(resolution));\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolutions = function () {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.map.resolutions) {\r\n            result = self.map.resolutions;\r\n        }\r\n        else {\r\n            if (self.map.baseLayer) {\r\n                result = self.map.baseLayer.resolutions;\r\n            }\r\n            if (!result) {\r\n                for (var i = 0; i < self.map.layers.length && !result; i++) {\r\n                    result = self.map.layers[i].resolutions;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getCoordinateFromPixel = function (xy) {\r\n        var coord = this.map.getLonLatFromPixel({ x: xy[0], y: xy[1] });\r\n        return [coord.lon, coord.lat];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getPixelFromCoordinate = function (coord) {\r\n        var xy = this.map.getPixelFromLonLat({ lon: coord[0], lat: coord[1] });\r\n        return [xy.x, xy.y];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getViewport = function (options) {\r\n        const self = this;\r\n        var opts = options || {};\r\n        if (opts.synchronous) {\r\n            result = self.map.getViewport();\r\n        }\r\n        else {\r\n            result = new Promise(function (resolve, reject) {\r\n            self.getMap().then(function (olMap) {\r\n                result.resolve(olMap.getViewport());\r\n                });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isNative = function (map) {\r\n        return map instanceof OpenLayers.Map;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isGeo = function () {\r\n        var self = this;\r\n        var projection = self.map.getProjectionObject();\r\n        if (projection === null) {\r\n            projection = new OpenLayers.Projection(self.map.projection);\r\n        }\r\n        var units = projection.getUnits();\r\n        return units === 'degrees' || !units;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.addPopup = function (popupCtl) {\r\n        // Cargamos provisionalmente un div para que no se rompan ciertas funciones si se llaman antes de TC.wrap.Map.showPopup\r\n        popupCtl.popupDiv = document.createElement('div');\r\n        return Promise.resolve();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.hidePopup = function (popupCtl) {\r\n        var self = this;\r\n        var map = self.parent;\r\n        if (popupCtl) {\r\n            map.wrap.getMap().then(function (olMap) {\r\n                if (popupCtl.wrap.popup && map.popup === popupCtl) {\r\n                    olMap.removePopup(popupCtl.wrap.popup);\r\n                    popupCtl.wrap.popup.destroy();\r\n                    delete popupCtl.wrap.popup;\r\n                    map.popup = null;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.exportFeatures = function (features, options) {\r\n        TC.error('TC.wrap.Map.prototype.exportFeatures no implementado en OpenLayers 2');\r\n    };\r\n\r\n    TC.wrap.Map.prototype.enableDragAndDrop = function (options) {\r\n        TC.error('TC.wrap.Map.prototype.enableDragAndDrop no implementado en OpenLayers 2');\r\n    };\r\n\r\n    TC.wrap.Map.prototype.loadFiles = function (options) {\r\n        TC.error('TC.wrap.Map.prototype.loadFiles no implementado en OpenLayers 2');\r\n    };\r\n\r\n    /*\r\n     *  getVisibility: gets the OpenLayers layer visibility\r\n     *  Result: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.getVisibility = function () {\r\n        var self = this;\r\n        var result = false;\r\n        if (self.layer) {\r\n            result = self.layer.getVisibility();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /*\r\n     *  setVisibility: Sets the OpenLayers layer visibility\r\n     *  Parameter: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.setVisibility = function (visible) {\r\n        var self = this;\r\n        self.getLayer().then(function (layer) {\r\n            layer.setVisibility(visible);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.isNative = function (layer) {\r\n        return layer instanceof OpenLayers.Layer;\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.setProjection = function (options) {\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.WmsParser = OpenLayers.Format.WMSCapabilities;\r\n\r\n    TC.wrap.Layer.prototype.WmtsParser = OpenLayers.Format.WMTSCapabilities;\r\n\r\n    TC.wrap.Layer.prototype.addCommonEvents = function (layer) {\r\n        var self = this;\r\n        layer.events.register('loadstart', self.parent.map, function () {\r\n            self.parent.state = TC.Layer.state.LOADING;\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, { layer: self.parent });\r\n            }\r\n        });\r\n        layer.events.register('loadend', self.parent.map, function () {\r\n            self.parent.state = TC.Layer.state.IDLE;\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, { layer: self.parent });\r\n            }\r\n        });\r\n        layer.events.register('visibilitychanged', self.parent.map, function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.LAYERVISIBILITY, { layer: self.parent });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getGetMapUrl = function () {\r\n        var result = null;\r\n        var self = this;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                result = self.parent.capabilities.capability.request.getmap.href;\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                result = self.parent.capabilities.operationsMetadata.GetTile.dcp.http.get[0].url\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfoFormats = function () {\r\n        var result = null;\r\n        var c = this.parent.capabilities;\r\n        if (c.capability && c.capability.request.getfeatureinfo) {\r\n            result = c.capability.request.getfeatureinfo.formats;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.infoFormatPreference = [\r\n        'application/vnd.ogc.gml',\r\n        'application/json',\r\n        'application/vnd.esri.wms_featureinfo_xml',\r\n        'application/vnd.esri.wms_raw_xml',\r\n        'application/vnd.ogc.wms_xml',\r\n        'text/xml',\r\n        'text/html',\r\n        'text/plain'\r\n    ];\r\n\r\n    TC.wrap.layer.Raster.prototype.getWMTSLayer = function () {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.contents) {\r\n            for (var i = 0; i < capabilities.contents.layers.length; i++) {\r\n                var layer = capabilities.contents.layers[i];\r\n                for (var j = 0; j < layer.tileMatrixSetLinks.length; j++) {\r\n                    if (self.parent.options.matrixSet === layer.tileMatrixSetLinks[j].tileMatrixSet) {\r\n                        result = layer;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getTileMatrix = function (matrixSet) {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.contents && capabilities.contents.tileMatrixSets[matrixSet]) {\r\n            result = _layer.capabilities.contents.tileMatrixSets[_layer.options.matrixSet].matrixIds;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getScaleDenominators = function (node) {\r\n        var result = [];\r\n        var self = this;\r\n        if (node.scaleDenominator) {\r\n            result = [node.scaleDenominator, node.scaleDenominator];\r\n        }\r\n        else {\r\n            if (node.minScale || node.maxScale) {\r\n                result = [node.minScale, node.maxScale];\r\n            }\r\n        }\r\n        if (!result.length && !self.getName(node)) {\r\n            var children = self.getLayerNodes(node);\r\n            var max = -Infinity, min = Infinity;\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var childDenominators = self.getScaleDenominators(children[i]);\r\n                if (childDenominators[0] > max) {\r\n                    max = childDenominators[0];\r\n                }\r\n                if (childDenominators[1] < min) {\r\n                    min = childDenominators[1];\r\n                }\r\n            }\r\n            if (max > -Infinity && min < Infinity) {\r\n                result = [max, min];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getAttribution = function (capabilities) {\r\n        var result = {};\r\n        if (capabilities) {\r\n            if (capabilities.serviceProvider) {\r\n                result.name = capabilities.serviceProvider.providerName.trim();\r\n                result.site = capabilities.serviceProvider.providerSite;\r\n                if (result.site.href && result.site.href.trim().length > 0) {\r\n                    result.site = result.site.href;\r\n                }\r\n            }\r\n            else if (capabilities.serviceIdentification) {\r\n                result.name = capabilities.serviceIdentification.title.trim();\r\n            }\r\n            else {\r\n                result.name = capabilities.service.title.trim();\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfo = function (name) {\r\n        var result = {};\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities && capabilities.capability) {\r\n            var nameMatch = function (node, name) {\r\n                var fullName = (node.prefix.length && name.indexOf(node.prefix) !== 0) ? node.prefix + ':' + name : name;\r\n                return node.name === fullName;\r\n            };\r\n            for (var i = 0; i < capabilities.capability.layers.length; i++) {\r\n                var l = capabilities.capability.layers[i];\r\n                if (nameMatch(l, name)) {\r\n                    if (l.title) {\r\n                        result.title = l.title;\r\n                    }\r\n                    if (l['abstract']) {\r\n                        result['abstract'] = l['abstract'];\r\n                    }\r\n                    if (l.styles.length) {\r\n                        result.legend = l.styles[0].legend.href;\r\n                    }\r\n                    if (l.metadataURLs.length) {\r\n                        result.metadata = [];\r\n                        for (var j = 0; j < l.metadataURLs.length; j++) {\r\n                            var md = l.metadataURLs[j];\r\n                            result.metadata.push({ format: md.format, type: md.type, url: md.href });\r\n                        }\r\n                    }\r\n                    result.queryable = l.queryable;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceType = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.capability && capabilities.capability.request && capabilities.capability.request.getmap) {\r\n            result = TC.Consts.layerType.WMS;\r\n        }\r\n        else if (capabilities.operationsMetadata && capabilities.operationsMetadata.GetTile) {\r\n            result = TC.Consts.layerType.WMTS;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceTitle = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.capability && capabilities.service) {\r\n            result = capabilities.service.title;\r\n        }\r\n        else if (capabilities.serviceIdentification) {\r\n            result = capabilities.serviceIdentification.title;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getRootLayerNode = function () {\r\n        var self = this;\r\n        var result;\r\n        if (self.getServiceType() === TC.Consts.layerType.WMS) {\r\n            result = self.parent.capabilities.capability.nestedLayers[0];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getName = function (node, ignorePrefix) {\r\n        var result = node.name;\r\n        if (result && ignorePrefix) {\r\n            var idx = result.indexOf(':');\r\n            if (idx >= 0) {\r\n                result = result.substr(idx + 1);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getIdentifier = function (node) {\r\n        return node.identifier;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getLayerNodes = function (node) {\r\n        var result = node.nestedLayers;\r\n        if (!$.isArray(result)) {\r\n            result = [];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    \r\n    TC.wrap.layer.Raster.prototype.normalizeLayerNode = function (node) {        \r\n        node.Layer = node.nestedLayers;\r\n        if (node.Layer)\r\n        {\r\n            for(var i=0; i<node.Layer.length; i++)\r\n            {\r\n                TC.wrap.layer.Raster.prototype.normalizeLayerNode(node.Layer[i]);\r\n            }\r\n        }\r\n        node.Title = node.title;\r\n        node.Abstract = node['abstract'];\r\n\r\n        return node;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.normalizeCapabilities = function (capabilities) {\r\n        return {\r\n            Capability:\r\n                {\r\n                    Exception: cap.capability.exception,\r\n                    Layer: cap.capability.nestedLayers[0]\r\n                },\r\n            Service:cap.service,\r\n            version:cap.version\r\n        };\r\n    };\r\n    \r\n    TC.wrap.layer.Raster.prototype.getAllLayerNodes = function () {\r\n        var self = this;\r\n        var capabilities = this.parent.capabilities;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                return capabilities.capability.layers;\r\n            case TC.Consts.layerType.WMTS:\r\n                return capabilities.contents.layers;\r\n            default:\r\n                return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getLegend = function (node) {\r\n        var result = {};\r\n        var styles = node.styles;\r\n        if (styles && styles.length) {\r\n            var legend = styles[0].legend || {};\r\n            result.src = legend.href;\r\n            // Eliminado porque GeoServer miente con el tamaño de sus imágenes de la leyenda\r\n            //if (legend.width) {\r\n            //    result.width = legend.width;\r\n            //    result.height = legend.height;\r\n            //}\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.isCompatible = function (crs) {\r\n        var self = this;\r\n        var result = false;\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.capability && layer.capabilities.capability.layers) {\r\n                    if (layer.names.length === 0) {\r\n                        result = true;\r\n                    }\r\n                    else {\r\n                        var names = layer.names.slice(0);\r\n                        for (var i = 0; i < layer.capabilities.capability.layers.length; i++) {\r\n                            var lyr = layer.capabilities.capability.layers[i];\r\n                            var idx = $.inArray(self.getName(lyr), names);\r\n                            if (idx >= 0) {\r\n                                names.splice(idx, 1);\r\n                                result = lyr.srs[crs];\r\n                                if (!result || !names.length) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                var supportedCrs = layer.capabilities &&\r\n                    layer.capabilities.contents &&\r\n                    layer.capabilities.contents.tileMatrixSets[layer.options.matrixSet] &&\r\n                    layer.capabilities.contents.tileMatrixSets[layer.options.matrixSet].supportedCRS;\r\n                var crsRegExp = new RegExp('^urn:ogc:def:crs:' + crs.replace(':', ':.*:') + '$', 'g');\r\n                result = supportedCrs && (crsRegExp.test(supportedCrs) || supportedCrs === crs);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleCRS = function () {\r\n        return [];\r\n    }\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleLayers = function (crs) {\r\n        var self = this;\r\n        var result = [];\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.capability && layer.capabilities.capability.layers) {\r\n                    for (var i = 0; i < layer.capabilities.capability.layers.length; i++) {\r\n                        var lyr = layer.capabilities.capability.layers[i];\r\n                        var name = self.getName(lyr);\r\n                        if (lyr.srs[crs] && name) {\r\n                            result[result.length] = name;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                var tileMatrixSets = layer.capabilities &&\r\n                    layer.capabilities.contents &&\r\n                    layer.capabilities.contents.tileMatrixSets;\r\n                if (tileMatrixSets) {\r\n                    var crsRegExp = new RegExp('^urn:ogc:def:crs:' + crs.replace(':', ':.*:') + '$', 'g');\r\n                    for (var key in tileMatrixSets) {\r\n                        var supportedCrs = tileMatrixSets[key].supportedCRS;\r\n                        if (supportedCrs && (crsRegExp.test(supportedCrs) || supportedCrs === crs)) {\r\n                            result[result.length] = key;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMSLayer = function (url, params, options) {\r\n        var self = this;\r\n        var result = new OpenLayers.Layer.WMS(\r\n            (options && options.id) ? options.id : params.LAYERS,\r\n            url,\r\n            params,\r\n            {\r\n                isBaseLayer: (options && options.isBase) == true,\r\n                singleTile: true,\r\n                transitionEffect: 'resize',\r\n                projection: self.parent.crs,\r\n                units: 'm',\r\n                ratio: TC.Cfg.imageRatio\r\n            }\r\n        );\r\n        result._wrap = self;\r\n\r\n        if (!params.LAYERS.length) {\r\n            result.setVisibility(false);\r\n        }\r\n\r\n        self.addCommonEvents(result);\r\n\r\n        result._originalGetURL = result.getURL;\r\n        result._noGetURL = function () { return TC.Consts.BLANK_IMAGE }; // imagen en blanco\r\n        result.getURL = result.params.LAYERS.length > 0 ? result._originalGetURL : result._noGetURL;\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMTSLayer = function (options) {\r\n        var result = new OpenLayers.Format.WMTSCapabilities().createLayer(\r\n                this.parent.capabilities,\r\n                {\r\n                    isBaseLayer: (options && options.isBase) == true,\r\n                    name: (options && options.id) ? options.id : TC.Consts.layerType.WMTS,\r\n                    matrixSet: options.matrixSet,\r\n                    layer: options.layerNames,\r\n                    requestEncoding: options.encoding === TC.Consts.WMTSEncoding.RESTFUL ? 'REST' : 'KVP'\r\n                });\r\n        result._wrap = self;\r\n\r\n        this.addCommonEvents(result);\r\n        return result;\r\n    };\r\n\r\n    /*\r\n     *  getParams: Gets the WMS layer getmap parameters\r\n     *  Returns: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.getParams = function () {\r\n        return this.layer.params;\r\n    };\r\n\r\n    /*\r\n     *  setParams: Sets the WMS layer getmap parameters\r\n     *  Parameter: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.setParams = function (params) {\r\n        var self = this;\r\n        self.layer.getURL = params.LAYERS.length > 0 ? self.layer._originalGetURL : self.layer._noGetURL;\r\n        self.layer.mergeNewParams(params);\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setMatrixSet = function (matrixSet) {\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getResolutions = function () {\r\n        return [];\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleMatrixSets = function () {\r\n        return [];\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setWMTSUrl = function () {\r\n        \r\n    };\r\n\r\n    TC.wrap.Geometry = {\r\n        getNearest: function (point, candidates) {\r\n            var pline = new OpenLayers.Geometry.LineString($.map(candidates, function (coord) {\r\n                return new OpenLayers.Geometry.Point(coord[0], coord[1]);\r\n            }));\r\n            var d = pline.distanceTo(new OpenLayers.Geometry.Point(point[0], point[1]), { details: true });\r\n            return [d.x0, d.y0];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createVectorLayer = function () {\r\n        var self = this;\r\n        var result = null;\r\n        var options = $.extend({}, TC.Cfg, self.parent.options);\r\n\r\n        var defaultStyle = OpenLayers.Feature.Vector.style['default'];\r\n        var getStyle = function (attribute, feature) {\r\n            var geometryType = OpenLayers.Style.prototype.getSymbolizerPrefix(feature.geometry).toLowerCase();\r\n            return (options.styles[geometryType] && options.styles[geometryType][attribute]) || defaultStyle[attribute];\r\n        };\r\n        var customStyle = {\r\n            strokeColor: '${getStrokeColor}',\r\n            strokeWidth: '${getStrokeWidth}',\r\n            strokeOpacity: '${getStrokeOpacity}',\r\n            fillColor: '${getFillColor}',\r\n            fillOpacity: '${getFillOpacity}',\r\n            strokeLinecap: '${getStrokeLinecap}',\r\n            strokeDashstyle: '${getStrokeDashstyle}'\r\n        };\r\n        var context = {\r\n            getStrokeColor: function (feature) {\r\n                return getStyle('strokeColor', feature);\r\n            },\r\n            getStrokeWidth: function (feature) {\r\n                return getStyle('strokeWidth', feature);\r\n            },\r\n            getStrokeOpacity: function (feature) {\r\n                return getStyle('strokeOpacity', feature);\r\n            },\r\n            getStrokeLinecap: function (feature) {\r\n                return getStyle('strokeLinecap', feature);\r\n            },\r\n            getStrokeDashstyle: function (feature) {\r\n                return getStyle('strokeDashstyle', feature);\r\n            },\r\n            getFillColor: function (feature) {\r\n                return getStyle('fillColor', feature);\r\n            },\r\n            getFillOpacity: function (feature) {\r\n                return getStyle('fillOpacity', feature);\r\n            }\r\n        };\r\n        var getValue = function (property) {\r\n            var result = property;\r\n            if ($.isFunction(property)) {\r\n                var functionName = 'f' + TC.getUID();\r\n                context[functionName] = property;\r\n                result = '${' + functionName + '}';\r\n            }\r\n            return result;\r\n        };\r\n\r\n        if (options.styles.point) {\r\n            customStyle.pointRadius = getValue(options.styles.point.radius);\r\n            customStyle.graphic = options.styles.point.graphic;\r\n            customStyle.label = getValue(options.styles.point.label);\r\n            customStyle.fontColor = getValue(options.styles.point.fontColor);\r\n            customStyle.fontSize = getValue(options.styles.point.fontSize);\r\n            customStyle.fontWeight = getValue(options.styles.point.fontWeight);\r\n            customStyle.angle = getValue(options.styles.point.angle);\r\n        }\r\n        var style = new OpenLayers.StyleMap({\r\n            'default': new OpenLayers.Style($.extend({}, defaultStyle, customStyle),\r\n            {\r\n                context: context\r\n            })\r\n        });\r\n\r\n        var vectorOptions = { styleMap: style, projection: TC.Cfg.crs };\r\n\r\n        if (options.isLabeling)\r\n            vectorOptions.renderers = [OpenLayers.Class(OpenLayers.Renderer.SVG, {\r\n                drawText: function (featureId, style, location) {\r\n                    var drawOutline = (!!style.labelOutlineWidth);\r\n                    if (drawOutline) {\r\n                        var outlineStyle = OpenLayers.Util.extend({}, style);\r\n                        outlineStyle.fontColor = getValue(outlineStyle.labelOutlineColor);\r\n                        outlineStyle.fontStrokeColor = getValue(outlineStyle.labelOutlineColor);\r\n                        outlineStyle.fontStrokeWidth = getValue(style.labelOutlineWidth);\r\n                        if (style.labelOutlineOpacity) {\r\n                            outlineStyle.fontOpacity = getValue(style.labelOutlineOpacity);\r\n                        }\r\n                        delete outlineStyle.labelOutlineWidth;\r\n                        this.drawText(featureId, outlineStyle, location);\r\n                    }\r\n\r\n                    var resolution = this.getResolution();\r\n\r\n                    var x = ((location.x - this.featureDx) / resolution + this.left);\r\n                    var y = (location.y / resolution - this.top);\r\n\r\n                    var suffix = (drawOutline) ? this.LABEL_OUTLINE_SUFFIX : this.LABEL_ID_SUFFIX;\r\n                    var label = this.nodeFactory(featureId + suffix, \"text\");\r\n\r\n                    label.setAttributeNS(null, \"x\", x);\r\n                    label.setAttributeNS(null, \"y\", -y);\r\n\r\n                    if (style.angle || style.angle == 0) {\r\n                        var rotate = 'rotate(-' + style.angle + ',' + x + \",\" + -y + ')';\r\n                        label.setAttributeNS(null, \"transform\", rotate);\r\n                    }\r\n\r\n                    if (style.fontColor) {\r\n                        label.setAttributeNS(null, \"fill\", style.fontColor);\r\n                    }\r\n                    if (style.fontStrokeColor) {\r\n                        label.setAttributeNS(null, \"stroke\", style.fontStrokeColor);\r\n                    }\r\n                    if (style.fontStrokeWidth) {\r\n                        label.setAttributeNS(null, \"stroke-width\", style.fontStrokeWidth);\r\n                    }\r\n                    if (style.fontOpacity) {\r\n                        label.setAttributeNS(null, \"opacity\", style.fontOpacity);\r\n                    }\r\n                    if (style.fontFamily) {\r\n                        label.setAttributeNS(null, \"font-family\", style.fontFamily);\r\n                    }\r\n                    if (style.fontSize) {\r\n                        label.setAttributeNS(null, \"font-size\", style.fontSize);\r\n                    }\r\n                    if (style.fontWeight) {\r\n                        label.setAttributeNS(null, \"font-weight\", style.fontWeight);\r\n                    }\r\n                    if (style.fontStyle) {\r\n                        label.setAttributeNS(null, \"font-style\", style.fontStyle);\r\n                    }\r\n                    if (style.labelSelect === true) {\r\n                        label.setAttributeNS(null, \"pointer-events\", \"visible\");\r\n                        label._featureId = featureId;\r\n                    } else {\r\n                        label.setAttributeNS(null, \"pointer-events\", \"none\");\r\n                    }\r\n                    var align = style.labelAlign || OpenLayers.Renderer.defaultSymbolizer.labelAlign;\r\n                    label.setAttributeNS(null, \"text-anchor\",\r\n                        OpenLayers.Renderer.SVG.LABEL_ALIGN[align[0]] || \"middle\");\r\n\r\n                    if (OpenLayers.IS_GECKO === true) {\r\n                        label.setAttributeNS(null, \"dominant-baseline\",\r\n                            OpenLayers.Renderer.SVG.LABEL_ALIGN[align[1]] || \"central\");\r\n                    }\r\n\r\n                    var labelRows = style.label.split('\\n');\r\n                    var numRows = labelRows.length;\r\n                    while (label.childNodes.length > numRows) {\r\n                        label.removeChild(label.lastChild);\r\n                    }\r\n                    for (var i = 0; i < numRows; i++) {\r\n                        var tspan = this.nodeFactory(featureId + suffix + \"_tspan_\" + i, \"tspan\");\r\n                        if (style.labelSelect === true) {\r\n                            tspan._featureId = featureId;\r\n                            tspan._geometry = location;\r\n                            tspan._geometryClass = location.CLASS_NAME;\r\n                        }\r\n                        if (OpenLayers.IS_GECKO === false) {\r\n                            tspan.setAttributeNS(null, \"baseline-shift\",\r\n                                OpenLayers.Renderer.SVG.LABEL_VSHIFT[align[1]] || \"-35%\");\r\n                        }\r\n                        tspan.setAttribute(\"x\", x);\r\n                        if (i == 0) {\r\n                            var vfactor = OpenLayers.Renderer.SVG.LABEL_VFACTOR[align[1]];\r\n                            if (vfactor == null) {\r\n                                vfactor = -.5;\r\n                            }\r\n                            tspan.setAttribute(\"dy\", (vfactor * (numRows - 1)) + \"em\");\r\n                        } else {\r\n                            tspan.setAttribute(\"dy\", \"1em\");\r\n                        }\r\n                        tspan.textContent = (labelRows[i] === '') ? ' ' : labelRows[i];\r\n                        if (!tspan.parentNode) {\r\n                            label.appendChild(tspan);\r\n                        }\r\n                    }\r\n\r\n                    if (!label.parentNode) {\r\n                        this.textRoot.appendChild(label);\r\n                    }\r\n                },\r\n                CLASS_NAME: \"OpenLayers.Control.CustomSVG\"\r\n            })];\r\n\r\n        var fixedStrategy = new OpenLayers.Strategy.Fixed();\r\n        if (self.parent.type === TC.Consts.layerType.KML) {\r\n            vectorOptions.strategies = [fixedStrategy];\r\n            vectorOptions.protocol = new OpenLayers.Protocol.HTTP({\r\n                url: TC.proxify(options.url),\r\n                format: new OpenLayers.Format.KML({\r\n                    extractStyles: true,\r\n                    extractAttributes: true,\r\n                    parseFolders: true,\r\n                    internalProjection: new OpenLayers.Projection(TC.Cfg.crs),\r\n                    externalProjection: new OpenLayers.Projection('EPSG:4326')\r\n                })\r\n            });\r\n        }\r\n        else if (options.type === TC.Consts.layerType.WFS) {\r\n\r\n            var _createFilter = function (object) {\r\n                var result;\r\n                var filters = [];\r\n                for (var key in object) {\r\n                    var property = object[key];\r\n                    var type, value;\r\n                    var filter;\r\n                    if (property.type) {\r\n                        type = property.type;\r\n                        value = property.value;\r\n                        var f = new OpenLayers.Filter.Comparison({\r\n                            type: type,\r\n                            property: key,\r\n                            value: value\r\n                        });\r\n                        if (property.ignoreHyphens) {\r\n                            f = [\r\n                                f,\r\n                                new OpenLayers.Filter.Comparison({\r\n                                    type: type,\r\n                                    property: key,\r\n                                    value: value.replace(/-/g, '')\r\n                                })\r\n                            ];\r\n                            filter = new OpenLayers.Filter.Logical({\r\n                                type: OpenLayers.Filter.Logical.OR,\r\n                                filters: f\r\n                            });\r\n                        }\r\n                        else {\r\n                            filter = f;\r\n                        }\r\n                    }\r\n                    else {\r\n                        type = OpenLayers.Filter.Comparison.EQUAL_TO;\r\n                        value = property;\r\n                        filter = new OpenLayers.Filter.Comparison({\r\n                            type: type,\r\n                            property: key,\r\n                            value: value\r\n                        });\r\n                    }\r\n                    filters.push(filter);\r\n                }\r\n                switch (filters.length) {\r\n                    case 0:\r\n                        result = null;\r\n                        break;\r\n                    case 1:\r\n                        result = filters[0];\r\n                        break;\r\n                    default:\r\n                        result = new OpenLayers.Filter.Logical({\r\n                            type: OpenLayers.Filter.Logical.AND,\r\n                            filters: filters\r\n                        });\r\n                        break;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            var filterObject = {};\r\n            if (options.properties) {\r\n                for (var i = 0; i < options.properties.length; i++) {\r\n                    var property = options.properties[i];\r\n                    if (property.name && property.type) {\r\n                        filterObject[property.name] = { value: property.value || '', type: property.type, ignoreHyphens: property.ignoreHyphens };\r\n                    }\r\n                    else {\r\n                        filterObject[property] = '';\r\n                    }\r\n                }\r\n            }\r\n\r\n            vectorOptions.strategies = [fixedStrategy];\r\n            vectorOptions.protocol = new OpenLayers.Protocol.WFS({\r\n                url: options.url,\r\n                version: options.version,\r\n                featureType: options.featureType,\r\n                geometryName: options.geometryName,\r\n                featurePrefix: options.namespace,\r\n                outputFormat: options.outputFormat,\r\n                srsName: TC.Cfg.crs\r\n            });\r\n            vectorOptions.filter = _createFilter(filterObject);\r\n        }\r\n\r\n        // Si hay clustering se añade una estrategia especial\r\n        if (options.cluster) {\r\n            if (!$.isArray(vectorOptions.strategies)) {\r\n                vectorOptions.strategies = [];\r\n            }\r\n            vectorOptions.strategies.push(new OpenLayers.Strategy.Cluster({\r\n                distance: options.cluster.distance\r\n            }));\r\n        }\r\n        result = new OpenLayers.Layer.Vector('Vectors', vectorOptions);\r\n        result._wrap = self;\r\n\r\n        this.addCommonEvents(result);\r\n\r\n        result.events.register('beforefeaturesadded', null, function () {\r\n            self.parent.map.trigger(TC.Consts.event.BEFOREFEATURESADD, { layer: self.parent });\r\n        });\r\n\r\n        result.events.register('featuresadded', null, function (e) {\r\n            var markers = [];\r\n            var polylines = [];\r\n            var polygons = [];\r\n\r\n            for (var i = 0; i < e.features.length; i++) {\r\n                var olFeat = e.features[i];\r\n                if (!olFeat._wrap) { // Solo actuar si no es una feature añadida desde la API\r\n                    if (olFeat.geometry instanceof OpenLayers.Geometry.Point) {\r\n                        markers[markers.length] = olFeat;\r\n                    }\r\n                    else {\r\n                        if (olFeat.geometry instanceof OpenLayers.Geometry.LineString || olFeat.geometry instanceof OpenLayers.Geometry.MultiLineString) {\r\n                            polylines[polylines.length] = olFeat;\r\n                        }\r\n                        else if (olFeat.geometry instanceof OpenLayers.Geometry.Polygon || olFeat.geometry instanceof OpenLayers.Geometry.MultiPolygon) {\r\n                            polygons[polygons.length] = olFeat;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            var promises = [];\r\n            if (markers.length > 0) {\r\n                promises.push(self.parent.addMarkers(markers));\r\n            }\r\n            if (polylines.length > 0) {\r\n                promises.push(self.parent.addPolylines(polylines));\r\n            }\r\n            if (polygons.length > 0) {\r\n                promises.push(self.parent.addPolygons(polygons));\r\n            }\r\n            Promise.all(promises).then(function () {\r\n                var features = [];\r\n                if (arguments.length) {\r\n                    for (var i = 0; i < arguments[0].length; i++) {\r\n                        var feat = features[i] = arguments[0][i];\r\n                        if ($.isArray(feat.wrap.feature.cluster)) {\r\n                            feat.features = $.map(feat.wrap.feature.cluster, function (elm) {\r\n                                return new feat.constructor(elm);\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                self.parent.map.trigger(TC.Consts.event.FEATURESADD, { layer: self.parent, features: features });\r\n            });\r\n        });\r\n\r\n        result.events.register('featureremoved', null, function (e) {\r\n            var olFeat = e.feature;\r\n            if (olFeat._wrap) {\r\n                var idx = $.inArray(olFeat._wrap.parent, self.parent.features);\r\n                if (idx > -1) {\r\n                    self.parent.features.splice(idx, 1);\r\n                    self.parent.map.trigger(TC.Consts.event.FEATUREREMOVE, { layer: self.parent, feature: olFeat._wrap.parent });\r\n                }\r\n            }\r\n        });\r\n\r\n        result.events.register('featuresadded', null, function () {\r\n            self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, { layer: self.parent });\r\n        });\r\n\r\n        result.events.register('featuresremoved', null, function () {\r\n            self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, { layer: self.parent });\r\n        });\r\n\r\n        // En KML activar después de añadir todos los gestores de eventos. En WFS se activa con getFeature.\r\n        // También definir el título de la capa a partir del nombre del documento o del archivo.\r\n        if (self.parent.type === TC.Consts.layerType.KML) {\r\n            result.events.register('added', null, function () {\r\n                fixedStrategy.activate();\r\n            });\r\n            if (!self.parent.options.title) {\r\n                var updateTitle = function updateTitle() {\r\n                    if (result.protocol.format._documentName) {\r\n                        self.parent.title = result.protocol.format._documentName;\r\n                    }\r\n                    result.events.unregister('loadend', null, updateTitle);\r\n                };\r\n                result.events.register('loadend', null, updateTitle);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getGetFeatureUrl = function () {\r\n        return null;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.import = function (options) {\r\n        TC.error('TC.wrap.layer.Vector.prototype.import no está soportada con OpenLayers 2');\r\n    };\r\n\r\n\r\n    TC.wrap.layer.Vector.prototype.addFeatures = function (features) {\r\n        this.getLayer().then(function (olLayer) {\r\n            olLayer.addFeatures(features);\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatures = function () {\r\n        var olLayer = this.layer;\r\n        if (olLayer instanceof OpenLayers.Layer) {\r\n            if (olLayer.strategies) {\r\n                for (var i = 0; i < olLayer.strategies.length; i++) {\r\n                    var s = olLayer.strategies[i];\r\n                    if (s instanceof OpenLayers.Strategy.Filter) {\r\n                        s.setFilter(s.filter);\r\n                    }\r\n                }\r\n            }\r\n            return olLayer.features;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatureById = function (id) {\r\n        var olLayer = this.layer;\r\n        if (olLayer instanceof OpenLayers.Layer) {\r\n            if (olLayer.strategies) {\r\n                for (var i = 0; i < olLayer.strategies.length; i++) {\r\n                    var s = olLayer.strategies[i];\r\n                    if (s instanceof OpenLayers.Strategy.Filter) {\r\n                        s.setFilter(s.filter);\r\n                    }\r\n                }\r\n            }\r\n            return olLayer.getFeatureById(id);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.removeFeature = function (feature) {\r\n        this.getLayer().then(function (olLayer) {\r\n            olLayer.removeFeatures([feature.wrap.feature]);\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.clearFeatures = function () {\r\n        this.getLayer().then(function (olLayer) {\r\n            olLayer.removeAllFeatures();\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setFeatureVisibility = function (feature, visible) {\r\n        var self = this;\r\n\r\n        var idx = $.inArray(feature, self.parent.features);\r\n        if (idx >= 0) {\r\n            if (visible) {\r\n                delete feature.wrap.feature.style.display;\r\n            }\r\n            else {\r\n                feature.wrap.feature.style.display = 'none';\r\n            }\r\n            // Metemos un timeout para que no se llame a redraw en peticiones masivas hasta que se haya acabado\r\n            if (self._redrawTimeout) {\r\n                clearTimeout(self._redrawTimeout);\r\n            }\r\n            self._redrawTimeout = setTimeout(function () {\r\n                self.getLayer().then(function (olLayer) {\r\n                    olLayer.redraw();\r\n                    self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, { layer: self.parent });\r\n                });\r\n                delete self._redrawTimeout;\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getRGBA = function (color, opacity) {\r\n        var result = [0, 0, 0, 1];\r\n\r\n        if (typeof color === 'string') {\r\n            var componentLength = color.length === 4 ? 1 : 2;\r\n            result[0] = parseInt(color.substr(1, componentLength), 16);\r\n            result[1] = parseInt(color.substr(1 + componentLength, componentLength), 16);\r\n            result[2] = parseInt(color.substr(1 + 2 * componentLength, componentLength), 16);\r\n            if (componentLength === 1) {\r\n                result[0] = result[0] * 17;\r\n                result[1] = result[1] * 17;\r\n                result[2] = result[2] * 17;\r\n            }\r\n            if (opacity !== undefined) {\r\n                result[3] = opacity;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.findFeature = function (values) {\r\n        var self = this;\r\n\r\n        self.getLayer().then(function (olLayer) {\r\n            var filter = olLayer.filter;\r\n            if (filter) {\r\n                if (filter.filters && filter.filters.length <= values.length) {\r\n                    for (var i = 0; i < filter.filters.length; i++) {\r\n                        var subfilter = filter.filters[i];\r\n                        if (subfilter.type === OpenLayers.Filter.Logical.OR) {\r\n                            subfilter.filters[0].value = values[i];\r\n                            subfilter.filters[1].value = values[i].replace('-', '');\r\n                        }\r\n                        else {\r\n                            subfilter.value = values[i];\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    filter.value = values[0];\r\n                }\r\n                olLayer.removeAllFeatures();\r\n                olLayer.setVisibility(true);\r\n                if (!olLayer.strategies[0].active) {\r\n                    olLayer.strategies[0].activate();\r\n                }\r\n                olLayer.refresh();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.sendTransaction = function (inserts, updates, deletes) {\r\n        TC.error('\"sendTransaction\" no está soportado por la versión OpenLayers 2 de la API SITNA');\r\n        return Promise.reject();\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setDraggable = function (draggable, onend, onstart) {\r\n        var self = this;\r\n        Promise.all([self.parent.map.wrap.getMap(), self.getLayer()]).then(function (olObjects) {\r\n            var olMap = olObjects[0];\r\n            var olLayer = olObjects[1];\r\n            if (draggable) {\r\n                if (!self._ctl) {\r\n                    var options = {};\r\n                    if ($.isFunction(onend)) {\r\n                        options.onComplete = function (feature, pixel) {\r\n                            onend.call(this, feature._wrap.parent, [pixel.x, pixel.y]);\r\n                        };\r\n                    }\r\n                    if ($.isFunction(onstart)) {\r\n                        options.onStart = function (feature, pixel) {\r\n                            onstart.call(this, feature._wrap.parent, [pixel.x, pixel.y]);\r\n                        };\r\n                    }\r\n                    self._ctl = new OpenLayers.Control.DragFeature(olLayer, options);\r\n                    olMap.addControl(self._ctl);\r\n                }\r\n                self._ctl.activate();\r\n            }\r\n            else if (self._ctl) {\r\n                self._ctl.deactivate();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.register = function (map) {\r\n        var self = this;\r\n        self._ctl = new OpenLayers.Control();\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n            var trigger = function (e) {\r\n                var lonlat = olMap.getLonLatFromPixel(e.xy);\r\n                self.parent.callback([lonlat.lon, lonlat.lat], [e.xy.x, e.xy.y]);\r\n            };\r\n\r\n            self._ctl.handler = new OpenLayers.Handler.Click(\r\n                    this, {\r\n                        'click': trigger\r\n                    }, {\r\n                        'single': true,\r\n                        'double': false,\r\n                        'pixelTolerance': map.options.pixelTolerance,\r\n                        'stopSingle': false,\r\n                        'stopDouble': false\r\n                    }\r\n                );\r\n\r\n            olMap.addControl(self._ctl);\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.activate = function () {\r\n        var self = this;\r\n        self._ctl.activate();\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.deactivate = function () {\r\n        var self = this;\r\n        self._ctl.deactivate();\r\n    };\r\n\r\n    TC.wrap.control.ScaleBar.prototype.render = function () {\r\n        var self = this;\r\n        if (!self.ctl) {\r\n            self.ctl = new OpenLayers.Control.ScaleLine({ div: self.parent.div, bottomInUnits: '', bottomOutUnits: '' });\r\n        }\r\n        else {\r\n            self.ctl.draw();\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            self.zsCtl = new OpenLayers.Control.PanZoomBar({ panIcons: false, zoomWorldIcon: true });\r\n            olMap.addControl(self.zsCtl);\r\n\r\n            olMap.events.register('changebaselayer', null, function () {\r\n                self.zsCtl.moveZoomBar();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.refresh = function () {\r\n        // TO DO\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.register = function (map) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            map.wrap.getMap().then(function (olMap) {\r\n                var projection = olMap.getProjectionObject();\r\n                if (projection === null) {\r\n                    projection = new OpenLayers.Projection(olMap.projection);\r\n                }\r\n                self.parent.crs = projection.getCode();\r\n                self.parent.units = projection.getUnits();\r\n                self.parent.isGeo = map.wrap.isGeo();\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.onMouseMove = function (e) {\r\n        var self = this;\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            var coords = olMap.getLonLatFromPixel(olMap.events.getMousePosition(e.originalEvent));\r\n            if (coords) {\r\n                if (self.parent.isGeo) {\r\n                    self.parent.latLon = [coords.lat, coords.lon];\r\n                }\r\n                else {\r\n                    self.parent.xy = [coords.lon, coords.lat];\r\n                }\r\n                self.parent.update.apply(self.parent, arguments);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.register = function (map) {\r\n    };\r\n\r\n    TC.wrap.Parser = function () { };\r\n\r\n    TC.wrap.Parser.prototype.read = function (data) {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.parser) {\r\n            if (!TC.Feature) {\r\n                TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n            }\r\n            result = $.map(self.parser.read(data), function (feat) {\r\n                return new TC.Feature(null, { id: feat.fid, data: feat.data });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.parser = {\r\n        WFS: function (options) {\r\n            this.parser = new OpenLayers.Format.GML(options);\r\n        },\r\n        JSON: function (options) {\r\n            this.parser = new OpenLayers.Format.GeoJSON(options);\r\n        }\r\n    };\r\n    TC.inherit(TC.wrap.parser.WFS, TC.wrap.Parser);\r\n    TC.inherit(TC.wrap.parser.JSON, TC.wrap.Parser);\r\n\r\n    TC.wrap.control.Search.prototype.addEvents = function () {\r\n        var self = this;\r\n        self.parent.layer.wrap.getLayer().then(function (olLayer) {\r\n            var map = self.parent.layer.map;\r\n            var radius = map.wrap.isGeo() ? map.options.pointBoundsRadius / TC.Util.getMetersPerDegree(map.getExtent()) : map.options.pointBoundsRadius;\r\n            olLayer.events.register('featuresadded', olLayer, function (e) {\r\n                var bounds = e.features[0].geometry.getBounds();\r\n                for (var i = 1; i < e.features.length; i++) {\r\n                    bounds.extend(e.features[i].geometry.getBounds());\r\n                }\r\n                if (bounds.left === bounds.right) {\r\n                    bounds.left -= radius;\r\n                    bounds.right += radius;\r\n                }\r\n                if (bounds.top === bounds.bottom) {\r\n                    bounds.bottom -= radius;\r\n                    bounds.top += radius;\r\n                }\r\n                self.parent.layer.map.setExtent(bounds);\r\n            });\r\n        });\r\n    };\r\n\r\n    //TC.wrap.control.Measure.prototype.activate = function (mode) {\r\n    //    var self = this;\r\n    //    var handler = mode === TC.Consts.geom.POLYGON ? OpenLayers.Handler.Polygon : OpenLayers.Handler.Path;\r\n    //    if (self.parent.map) {\r\n    //        self.parent.map.wrap.getMap().then(function (olMap) {\r\n    //            if (self.control) {\r\n    //                self.control.deactivate();\r\n    //                olMap.removeControl(self.control);\r\n    //            }\r\n    //            if (mode) {\r\n    //                var measureHandler = function (e) {\r\n    //                    var type = e.type === 'measurepartial' ? TC.Consts.event.MEASUREPARTIAL : TC.Consts.event.MEASURE;\r\n    //                    var data = { units: e.units };\r\n    //                    if (e.order === 1) {\r\n    //                        data.length = e.measure;\r\n    //                    }\r\n    //                    else if (e.order === 2) {\r\n    //                        data.area = e.measure;\r\n    //                        data.perimeter = self.control.getLength(e.geometry, e.units);\r\n    //                    }\r\n    //                    self.parent.trigger(type, data);\r\n    //                };\r\n    //                self.control = new OpenLayers.Control.Measure(handler,\r\n    //                    {\r\n    //                        geodesic: true,\r\n    //                        persist: true,\r\n    //                        immediate: true\r\n    //                    }\r\n    //                );\r\n\r\n    //                self.control.handler.callbacks.point = function (point) {\r\n    //                    self.parent.trigger(TC.Consts.event.POINT, { point: [point.x, point.y] });\r\n    //                };\r\n    //                self.control.events.on({\r\n    //                    \"measure\": measureHandler,\r\n    //                    \"measurepartial\": measureHandler\r\n    //                });\r\n\r\n    //                olMap.addControl(self.control);\r\n    //                self.control.activate();\r\n    //                //self.control.handler._originalLayer = self.control.handler.layer;\r\n    //                //self.control.handler.layer = layer.wrap.layer;\r\n    //            }\r\n    //        });\r\n    //    }\r\n    //};\r\n\r\n    //TC.wrap.control.Measure.prototype.deactivate = function () {\r\n    //    var self = this;\r\n    //    if (self.control) {\r\n    //        //self.control.handler.layer = self.control.handler._originalLayer;\r\n    //        self.control.deactivate();\r\n    //    }\r\n    //};\r\n\r\n    //TC.wrap.control.Measure.prototype.undo = function () {\r\n    //    var self = this;\r\n    //    var result = false;\r\n    //    if (self.control && self.control.handler) {\r\n    //        result = self.control.handler.undo();\r\n    //    }\r\n    //    return result;\r\n    //};\r\n\r\n    //TC.wrap.control.Measure.prototype.redo = function () {\r\n    //    var self = this;\r\n    //    var result = false;\r\n    //    if (self.control && self.control.handler) {\r\n    //        result = self.control.handler.redo();\r\n    //    }\r\n    //    return result;\r\n    //};\r\n\r\n    //TC.wrap.control.Measure.prototype.end = function () {\r\n    //    var self = this;\r\n    //    if (self.control && self.control.handler) {\r\n    //        self.control.handler.finishGeometry();\r\n    //        if (self.control.handler.layer) {\r\n    //            self.control.handler.layer.redraw();\r\n    //        }\r\n    //    }\r\n    //};\r\n\r\n    TC.wrap.control.NavBar.prototype.getInitialExtent = function () {\r\n        return [];\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.setInitialExtent = function (extent) {\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        var getSize = function () {\r\n            const rect = self.parent.div.getBoundingClientRect();\r\n            var result = new OpenLayers.Size(rect.width, rect.height);\r\n            if (result.w === 0) {\r\n                result.w = 100;\r\n            }\r\n            if (result.h === 0) {\r\n                result.h = 100;\r\n            }\r\n            return result;\r\n        };\r\n        var size = getSize();\r\n        self.parent.layer.wrap.getLayer().then(function (olLayer) {\r\n            self.ovMap = new OpenLayers.Control.OverviewMap({\r\n                div: self.parent.div,\r\n                size: size,\r\n                layers: [olLayer],\r\n                minRatio: 24,\r\n                maxRatio: 48,\r\n                autoPan: true,\r\n                theme: OpenLayers.CustomTheme,\r\n                mapOptions: {\r\n                    projection: map.crs,\r\n                    displayProjection: map.crs,\r\n                    baseLayer: olLayer,\r\n                    maxExtent: map.maxExtent,\r\n                    minRatio: 24,\r\n                    maxRatio: 48,\r\n                    minRectSize: 30,\r\n                    theme: OpenLayers.CustomTheme\r\n                },\r\n                maximized: true\r\n            });\r\n\r\n            const load = self.parent.div.querySelector('.' + self.parent.CLASS + '-load');\r\n            olLayer.events.register('loadstart', self.parent.layer, function () {\r\n                load.classList.remove(TC.Consts.classes.HIDDEN);\r\n                load.classList.add(TC.Consts.classes.VISIBLE);\r\n            });\r\n            olLayer.events.register('loadend', self.parent.layer, function () {\r\n                load.classList.remove(TC.Consts.classes.VISIBLE);\r\n                load.classList.add(TC.Consts.classes.HIDDEN);\r\n            });\r\n\r\n            map.wrap.getMap().then(function (olMap) {\r\n                olMap.addControl(self.ovMap);\r\n\r\n                self.parent.isLoaded = true;\r\n                self.parent.trigger(TC.Consts.event.MAPLOAD);\r\n\r\n                olMap.events.register('updatesize', self.parent, function () {\r\n                    var size = getSize();\r\n                    if (self.ovMap.ovmap) {\r\n                        const ovmapDiv = self.ovMap.ovmap.div;\r\n                        ovmapDiv.style.width = self.parent.div.style.width;\r\n                        ovmapDiv.style.height = self.parent.div.style.height;\r\n                        self.ovMap.ovmap.updateSize();\r\n                        self.ovMap.updateRectToMap();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.reset = function () {\r\n        TC.error('TC.wrap.control.OverviewMap.prototype.reset no implementado en OpenLayers 2');\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.get3DCameraLayer = function () {\r\n        TC.error('TC.wrap.control.OverviewMap.prototype.get3DCameraLayer no implementado en OpenLayers 2');\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.draw3DCamera = function (options) {\r\n        TC.error('TC.wrap.control.OverviewMap.prototype.draw3DCamera no implementado en OpenLayers 2');\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.enable = function () {\r\n        var self = this;\r\n        self.ovMap.activate();\r\n        self.ovMap.update();\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.disable = function () {\r\n        this.ovMap.deactivate();\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        self._map = map;\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n\r\n            TC.wrap.control.Click.prototype.register.call(self, map);\r\n\r\n            var layers = [];\r\n\r\n            var isSuitableLayer = function (layer) {\r\n                var result = false;\r\n                if (TC.layer.Raster && layer instanceof TC.layer.Raster && !layer.isBase) {\r\n                    if (layer.wrap.getInfoFormats()) {\r\n                        result = true;\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n            for (var i = 0; i < map.workLayers.length; i++) {\r\n                var layer = map.workLayers[i];\r\n                if (isSuitableLayer(layer)) {\r\n                    layers.push(layer.wrap.layer);\r\n                }\r\n            }\r\n\r\n            self._gfi = new OpenLayers.Control.WMSGetFeatureInfo({\r\n                layers: layers,\r\n                autoActivate: false,\r\n                drillDown: true,\r\n                maxFeatures: 1000,\r\n                queryVisible: true,\r\n                output: 'object',\r\n                formatOptions: {\r\n                    internalProjection: olMap.projection\r\n                }\r\n            });\r\n            if (map.options.pixelTolerance) {\r\n                self._gfi.vendorParams = { radius: map.options.pixelTolerance, buffer: map.options.pixelTolerance };\r\n            }\r\n            olMap.addControl(self._gfi);\r\n\r\n            map.on(TC.Consts.event.LAYERADD, function (e) {\r\n                if (isSuitableLayer(e.layer)) {\r\n                    self._gfi.layers.push(e.layer.wrap.layer);\r\n                }\r\n            }).on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                var idx = $.inArray(e.layer.wrap.layer, self._gfi.layers);\r\n                if (idx >= 0) {\r\n                    self._gfi.layers.splice(idx, 1);\r\n                }\r\n            });\r\n\r\n            var gfiLayers = {};\r\n\r\n            self._gfi.events.register('beforegetfeatureinfo', self.parent, function (e) {\r\n                // Obtenemos las capas implicadas\r\n                for (var i = 0; i < e.object.layers.length; i++) {\r\n                    for (var j = 0; j < map.workLayers.length; j++) {\r\n                        if (map.workLayers[j].wrap.layer === e.object.layers[i]) {\r\n                            gfiLayers[e.object.layers[i].url] = map.workLayers[j];\r\n                        }\r\n                    }\r\n                }\r\n                var lonLat = map.wrap.map.getLonLatFromPixel(e.xy);\r\n                self.parent.beforeRequest({\r\n                    xy: [e.xy.x, e.xy.y]\r\n                });\r\n            });\r\n\r\n            self._gfi.events.register('getfeatureinfo', self.parent, function (e) {\r\n\r\n                var featureCount = 0;\r\n                var featurePromises = [];\r\n                var featureInsertionPoints = [];\r\n\r\n                // Feature parser\r\n                var targetServices = [];\r\n                var targetService;\r\n\r\n                for (var i = 0; i < e.features.length; i++) {\r\n                    var sourceService = e.features[i];\r\n                    targetService = { layers: [], text: e.text, mapLayers: [] };\r\n                    var layer = gfiLayers[sourceService.url];\r\n                    if (layer) {\r\n                        targetService.mapLayers.push(layer);\r\n                        delete gfiLayers[sourceService.url];\r\n                    }\r\n                    for (var j = 0; j < sourceService.features.length; j++) {\r\n                        var sourceFeature = sourceService.features[j];\r\n                        var layerName = sourceFeature.fid ? sourceFeature.fid.substr(0, sourceFeature.fid.lastIndexOf('.')) : sourceFeature.type || '';\r\n                        var layerTitle = targetService.mapLayers.length ? targetService.mapLayers[0].wrap.getInfo(layerName).title || layerName : '[Sin título]';\r\n                        var targetLayer = null;\r\n                        for (var k = 0; k < targetService.layers.length; k++) {\r\n                            if (targetService.layers[k].name === layerName) {\r\n                                targetLayer = targetService.layers[k];\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (!targetLayer) {\r\n                            targetLayer = { name: layerName, title: layerTitle, features: [] };\r\n                            targetService.layers.push(targetLayer);\r\n                        }\r\n                        featurePromises.push(TC.wrap.Feature.createFeature(sourceFeature));\r\n                        featureInsertionPoints.push(targetLayer.features);\r\n                        featureCount = featureCount + 1;\r\n                    }\r\n\r\n                    if (!sourceService.features.length) {\r\n                        contentType = e.request.getResponseHeader('Content-Type');\r\n                        if (contentType.indexOf('text/') === 0) {\r\n                            // No hay features porque no hay respuesta parseable, metemos la respuesta en un iframe.\r\n                            targetLayer = { name: layerName, title: layerTitle, features: [] };\r\n                            targetService.layers.push(targetLayer);\r\n                            //console.log(self._gfi.buildWMSOptions(layer, e.xy));\r\n                            targetLayer.features.push({ rawUrl: e.request._object.responseURL, rawContent: e.text });\r\n                            featureCount = featureCount + 1;\r\n                        }\r\n                    }\r\n\r\n\r\n                    targetServices.push(targetService);\r\n                }\r\n\r\n                Promise.all(featurePromises).then(function (features) {\r\n                    for (var i = 0; i < features.length; i++) {\r\n                        var feat = features[i];\r\n                        feat.attributes = [];\r\n                        for (var key in feat.data) {\r\n                            feat.attributes.push({ name: key, value: feat.data[key] });\r\n                        }\r\n                        featureInsertionPoints[i].push(feat);\r\n                    }\r\n                    var lonLat = map.wrap.map.getLonLatFromPixel(e.xy);\r\n                    self.parent.responseCallback({ coords: [lonLat.lon, lonLat.lat], resolution: self._gfi._resolution, services: targetServices, featureCount: featureCount });\r\n                });\r\n\r\n            });\r\n\r\n            self._gfi.events.register('exception', self.parent, function (e) {\r\n                self.parent.responseError({ status: e.request.status, message: e.request.responseText });\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.getFeatureInfo = function (coords, resolution) {\r\n        var self = this;\r\n\r\n        if (self._map && self._gfi.layers.length > 0) {\r\n            var xy = map.wrap.map.getPixelFromLonLat({ lon: coords[0], lat: coords[1] });\r\n            self._gfi._resolution = resolution;\r\n            self._gfi.getInfoForClick({ xy: { x: xy[0], y: xy[1] } });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype = function()\r\n    {\r\n        this.popup = null;\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype.fitToView = function ()\r\n    {\r\n        var self = this;\r\n        setTimeout(function () {\r\n            self.popup.updateSize();\r\n        }, 100);\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype.setDragged = function (dragged) {\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLegend = function () {\r\n        var self = this;\r\n        var result = {};\r\n        var style = self.feature.style;\r\n        if (style.externalGraphic) {\r\n            result.src = style.externalGraphic;\r\n            result.width = style.graphicWidth;\r\n            result.height = style.graphicHeight;\r\n        }\r\n        else {\r\n            if (style.strokeColor) {\r\n                result.strokeColor = style.strokeColor;\r\n            }\r\n            if (style.strokeWidth) {\r\n                result.strokeWidth = style.strokeWidth;\r\n            }\r\n            if (style.fillColor) {\r\n                result.fillColor = style.fillColor;\r\n            }\r\n            if (style.pointRadius) {\r\n                result.height = result.width = style.pointRadius * 2;\r\n            }\r\n            //var $d = $('<div class=\"tc-ctl-legend-img\">');\r\n            //if (style.strokeColor) {\r\n            //    $d.css('border-style', 'solid');\r\n            //    $d.css('border-color', style.strokeColor);\r\n            //}\r\n            //if (style.strokeWidth) {\r\n            //    $d.css('border-width', style.strokeWidth + 'px');\r\n            //}\r\n            //if (style.fillColor) {\r\n            //    $d.css('background-color', style.fillColor);\r\n            //}\r\n            //$d.appendTo($div);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPoint = function (coords, options) {\r\n        var self = this;\r\n        if ($.isArray(coords)) {\r\n                var styleOptions = {\r\n                    pointRadius: options.radius || (options.height + options.width) / 4\r\n                };\r\n                if (options.fillColor) {\r\n                    styleOptions.fillColor = options.fillColor;\r\n                    styleOptions.fillOpacity = options.fillOpacity;\r\n                }\r\n                else {\r\n                    styleOptions.fill = false;\r\n                }\r\n                if (options.strokeColor) {\r\n                    styleOptions.strokeColor = options.strokeColor;\r\n                    styleOptions.strokeWidth = options.strokeWidth;\r\n                }\r\n                else {\r\n                    styleOptions.stroke = false;\r\n                }\r\n            self.feature = new OpenLayers.Feature.Vector(\r\n                new OpenLayers.Geometry.Point(coords[0], coords[1]),\r\n                null,\r\n                styleOptions\r\n            );\r\n        }\r\n        else if (self.isNative(coords)) {\r\n            self.feature = coords;\r\n            self.parent.geometry = [coords.geometry.x, coords.geometry.y];\r\n            if (coords.style) {\r\n                self.parent.options.radius = coords.style.pointRadius;\r\n                self.parent.options.fillColor = coords.style.fillColor;\r\n                self.parent.options.fillOpacity = coords.style.fillOpacity;\r\n                self.parent.options.strokeColor = coords.style.strokeColor;\r\n            }\r\n        }\r\n        if (options && options.id) {\r\n            self.feature.id = options.id;\r\n        }\r\n        self.feature._wrap = self;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createMarker = function (coords, options) {\r\n        var self = this;\r\n        var iconUrl = TC.Util.getPointIconUrl(options);\r\n        if (iconUrl) {\r\n            if ($.isArray(coords)) {\r\n                var styleOptions = {\r\n                        externalGraphic: TC.Util.getPointIconUrl(options),\r\n                        graphicWidth: options.width,\r\n                        graphicHeight: options.height,\r\n                        graphicXOffset: -Math.round(options.anchor[0] * options.width),\r\n                        graphicYOffset: -Math.round(options.anchor[1] * options.height)\r\n                    };\r\n                self.feature = new OpenLayers.Feature.Vector(\r\n                    new OpenLayers.Geometry.Point(coords[0], coords[1]),\r\n                    null,\r\n                    styleOptions\r\n                );\r\n            }\r\n            else if (self.isNative(coords)) {\r\n                self.feature = coords;\r\n                self.parent.geometry = [coords.geometry.x, coords.geometry.y];\r\n                if (coords.style) {\r\n                    self.parent.options.url = coords.style.externalGraphic;\r\n                    self.parent.options.width = coords.style.graphicWidth;\r\n                    self.parent.options.height = coords.style.graphicHeight;\r\n                    self.parent.options.anchor = [-coords.style.graphicXOffset / coords.style.graphicWidth, -coords.style.graphicYOffset / coords.style.graphicHeight];\r\n                }\r\n            }\r\n            if (options && options.id) {\r\n                self.feature.id = options.id;\r\n            }\r\n            self.feature._wrap = self;\r\n        }\r\n        else {\r\n            self.createPoint(coords, options);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolyline = function (coords, options) {\r\n        var self = this;\r\n\r\n        if ($.isArray(coords)) {\r\n            var points = $.map(coords, function (elm) {\r\n                return new OpenLayers.Geometry.Point(elm[0], elm[1]);\r\n            });\r\n            self.feature = new OpenLayers.Feature.Vector(\r\n                new OpenLayers.Geometry.LineString(points),\r\n                null,\r\n                {\r\n                    stroke: true,\r\n                    strokeColor: options.strokeColor,\r\n                    strokeWidth: options.strokeWidth\r\n                }\r\n            );\r\n        }\r\n        else if (self.isNative(coords)) {\r\n            self.feature = coords;\r\n            var g = self.parent.geometry = coords.geometry.getVertices();\r\n            for (var i = 0; i < g.length; i++) {\r\n                g[i] = [g[i].x, g[i].y];\r\n            }\r\n            if (coords.style) {\r\n                self.parent.options.strokeColor = coords.style.strokeColor;\r\n                self.parent.options.strokeWidth = coords.style.strokeWidth;\r\n            }\r\n        }\r\n        self.feature._wrap = self;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolygon = function (coords, options) {\r\n        var self = this;\r\n\r\n        if ($.isArray(coords)) {\r\n            var _getRing = function (points) {\r\n                return new OpenLayers.Geometry.LinearRing($.map(points, function (elm) {\r\n                    return new OpenLayers.Geometry.Point(elm[0], elm[1]);\r\n                }));\r\n            };\r\n            var rings;\r\n            if (coords.length > 0 && $.isArray(coords[0]) && coords[0].length > 0 && $.isArray(coords[0][0])) {\r\n                // several rings\r\n                rings = new Array(coords.length)\r\n                for (var i = 0, len = coords.length; i < len; i++) {\r\n                    rings[i] = _getRing(coords[i]);\r\n                }\r\n            }\r\n            else {\r\n                rings = [_getRing(coords)];\r\n            }\r\n\r\n            self.feature = new OpenLayers.Feature.Vector(\r\n                new OpenLayers.Geometry.Polygon(rings),\r\n                null,\r\n                {\r\n                    stroke: true,\r\n                    strokeColor: options.strokeColor,\r\n                    strokeWidth: options.strokeWidth,\r\n                    fillColor: options.fillColor,\r\n                    fillOpacity: options.fillOpacity\r\n                }\r\n            );\r\n        }\r\n        else if (self.isNative(coords)) {\r\n            self.feature = coords;\r\n            if (coords.geometry) {\r\n                var g = self.parent.geometry = coords.geometry.getVertices();\r\n                for (var i = 0; i < g.length; i++) {\r\n                    g[i] = [g[i].x, g[i].y];\r\n                }\r\n            }\r\n            if (coords.style) {\r\n                self.parent.options.strokeColor = coords.style.strokeColor;\r\n                self.parent.options.strokeWidth = coords.style.strokeWidth;\r\n                self.parent.options.fillColor = coords.style.fillColor;\r\n                self.parent.options.fillOpacity = coords.style.fillOpacity;\r\n            }\r\n        }\r\n        self.feature._wrap = self;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createCircle = function (coords, options) {\r\n    };\r\n\r\n    TC.wrap.Feature.createFeature = function (olFeat) {\r\n        return new Promise(function (resolve, reject) {\r\n            var constructor;\r\n            var condition;\r\n            var options = {\r\n                id: olFeat.fid,\r\n                data: olFeat.attributes\r\n            };\r\n            if (olFeat.geometry instanceof OpenLayers.Geometry.Point) {\r\n                TC.loadJS(\r\n                    !TC.feature || (TC.feature && !TC.feature.Point),\r\n                    [TC.apiLocation + 'TC/feature/Point'],\r\n                    function () {\r\n                        resolve(new TC.feature.Point(olFeat, options));\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                if (olFeat.geometry instanceof OpenLayers.Geometry.LineString) {\r\n                    TC.loadJS(\r\n                        !TC.feature || (TC.feature && !TC.feature.Polyline),\r\n                        [TC.apiLocation + 'TC/feature/Polyline'],\r\n                        function () {\r\n                            resolve(new TC.feature.Polyline(olFeat, options));\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    if (olFeat.geometry instanceof OpenLayers.Geometry.MultiLineString) {\r\n                        TC.loadJS(\r\n                            !TC.feature || (TC.feature && !TC.feature.MultiPolyline),\r\n                            [TC.apiLocation + 'TC/feature/MultiPolyline'],\r\n                            function () {\r\n                                resolve(new TC.feature.MultiPolyline(olFeat, options));\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        if (olFeat.geometry instanceof OpenLayers.Geometry.Polygon) {\r\n                            TC.loadJS(\r\n                                !TC.feature || (TC.feature && !TC.feature.Polygon),\r\n                                [TC.apiLocation + 'TC/feature/Polygon'],\r\n                                function () {\r\n                                    resolve(new TC.feature.Polygon(olFeat, options));\r\n                                }\r\n                            );\r\n                        }\r\n                        else {\r\n                            if (olFeat.geometry instanceof OpenLayers.Geometry.MultiPolygon) {\r\n                                TC.loadJS(\r\n                                    !TC.feature || (TC.feature && !TC.feature.MultiPolygon),\r\n                                    [TC.apiLocation + 'TC/feature/MultiPolygon'],\r\n                                    function () {\r\n                                        resolve(new TC.feature.MultiPolygon(olFeat, options));\r\n                                    }\r\n                                );\r\n                            }\r\n                            else {\r\n                                TC.loadJS(\r\n                                    !TC.Feature,\r\n                                    [TC.apiLocation + 'TC/Feature'],\r\n                                    function () {\r\n                                        resolve(new TC.Feature(olFeat, options));\r\n                                    }\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.cloneFeature = function () {\r\n        var self = this;\r\n        return new self.feature.constructor(self.feature.geometry.clone(), self.feature.attributes, self.feature.style);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getStyle = function () {\r\n        var style = this.feature.style;\r\n        var result = {};\r\n        if (style.fillColor) {\r\n            result.fillColor = style.fillColor;\r\n            result.fillOpacity = style.fillOpacity;\r\n        }\r\n        if (style.strokeColor) {\r\n            result.strokeColor = style.strokeColor;\r\n            result.strokeWidth = style.strokeWidth;\r\n        }\r\n        if (style.externalGraphic) {\r\n            result.url = style.externalGraphic;\r\n            result.anchor = [style.graphicXOffset / style.graphicWidth, style.graphicYOffset / style.graphicHeight];\r\n        }\r\n        if (style.label) {\r\n            result.label = style.label;\r\n            result.labelOffset = [style.labelXOffset, style.labelYOffset];\r\n            result.fontColor = style.fontColor;\r\n            result.labelOutlineColor = style.labelOutlineColor;\r\n            result.labelOutlineWidth = style.labelOutlineWidth;\r\n            result.fontSize = style.fontSize;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getGeometry = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature && self.feature.geometry) {\r\n            var getPoint = function (olPoint) {\r\n                return [olPoint.x, olPoint.y];\r\n            }\r\n            var getVertices = function (olGeom) {\r\n                var result = olGeom.getVertices();\r\n                for (var i = 0, len = result.length; i < len; i++) {\r\n                    result[i] = getPoint(result[i]);\r\n                }\r\n                return result;\r\n            };\r\n            var getPolygon = function (olPolygon) {\r\n                var result = new Array(olPolygon.components.length);\r\n                for (var i = 0, len = olPolygon.components.length; i < len; i++) {\r\n                    result[i] = getVertices(olPolygon.components[i]);\r\n                }\r\n                return result;\r\n            };\r\n            var geom = self.feature.geometry;\r\n            if (geom instanceof OpenLayers.Geometry.Point) {\r\n                result = getPoint(geom);\r\n            }\r\n            else if (geom instanceof OpenLayers.Geometry.LineString) {\r\n                result = getVertices(geom);\r\n            }\r\n            else if (geom instanceof OpenLayers.Geometry.MultiLineString) {\r\n                result = getVertices(geom.components[0]);\r\n            }\r\n            else if (geom instanceof OpenLayers.Geometry.Polygon) {\r\n                result = getPolygon(geom);\r\n            }\r\n            else if (geom instanceof OpenLayers.Geometry.MultiPolygon) {\r\n                result = getPolygon(geom.components[0]);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setGeometry = function (geometry) {\r\n        var result = false;\r\n        var self = this;\r\n        if (self.feature && self.feature.geometry) {\r\n            var geom = self.feature.geometry;\r\n            if (geom instanceof OpenLayers.Geometry.Point) {\r\n                if ($.isArray(geometry) && typeof geometry[0] === 'number' && typeof geometry[1] === 'number') {\r\n                    geom.move(geometry[0] - geom.x, geometry[1] - geom.y);\r\n                    result = true;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getId = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature) {\r\n            result = self.feature.fid;\r\n        };\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setId = function (id) {\r\n        var self = this;\r\n        if (self.feature) {\r\n            self.feature.fid = id;\r\n        };\r\n    };\r\n\r\n    const mapToOLCoords = function (coords) {\r\n        return coords.map(function (coord) {\r\n            return { x: coord[0], y: coord[1] };\r\n        })\r\n    };\r\n\r\n    const mapToArrayCoords = function (coords) {\r\n        return coords.map(function (vertex) {\r\n            return [vertex.x, vertex.y];\r\n        })\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLength = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const geom = self.feature.geometry;\r\n        var coordinates;\r\n        if (geom instanceof OpenLayers.Geometry.Polygon) {\r\n            coordinates = mapToArrayCoords(geom.getVertices());\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.map.crs, options.crs);\r\n            }\r\n            const ring = new OpenLayers.Geometry.LinearRing(mapToOLCoords(coordinates));\r\n            return ring.getLength();\r\n        }\r\n        else if (geom instanceof OpenLayers.Geometry.LineString) {\r\n            coordinates = mapToArrayCoords(geom.getVertices());\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.map.crs, options.crs);\r\n            }\r\n            const line = new OpenLayers.Geometry.LineString(mapToOLCoords(coordinates));\r\n            return line.getLength();\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getArea = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const geom = self.feature.geometry;\r\n        var coordinates;\r\n        if (geom instanceof OpenLayers.Geometry.Polygon) {\r\n            coordinates = mapToArrayCoords(geom.getVertices());\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.map.crs, options.crs);\r\n            }\r\n            const polygon = new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing(mapToOLCoords(coordinates))]);\r\n            return polygon.getArea();\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setStyle = function (options) {\r\n        var self = this;\r\n\r\n        var style = self.feature.style || new OpenLayers.Style();\r\n\r\n        if (!(options instanceof OpenLayers.Style))\r\n            options = new OpenLayers.Style(options);\r\n\r\n        var options = options.createLiterals(OpenLayers.Util.extend({},\r\n            options.defaultStyle), self.feature);\r\n\r\n        if (self.feature.geometry instanceof OpenLayers.Geometry.Point) {\r\n            style.externalGraphic = options.url;\r\n            style.graphicWidth = options.width;\r\n            style.graphicHeight = options.height;\r\n\r\n            if (options.anchor && options.width)\r\n                style.graphicXOffset = -Math.round(options.anchor[0] * options.width);\r\n\r\n            if (options.anchor && options.height)\r\n                style.graphicYOffset = -Math.round(options.anchor[1] * options.height);\r\n\r\n            style.graphic = options.graphic;\r\n\r\n            if (options.label)\r\n                style.label = options.label.toCamelCase();\r\n\r\n            if (options.angle)\r\n                style.angle = options.angle;\r\n\r\n            style.fontColor = options.fontColor;\r\n            style.labelOutlineColor = options.labelOutlineColor;\r\n            style.labelOutlineWidth = options.labelOutlineWidth;\r\n        }\r\n        else if (self.feature.geometry.components && self.feature.geometry.components instanceof Array\r\n                        && self.feature.geometry.components[0].CLASS_NAME == (new OpenLayers.Geometry.LineString).CLASS_NAME ||\r\n                 !self.feature.geometry.components && self.feature.geometry instanceof new OpenLayers.Geometry.LineString) {\r\n            style.stroke = true;\r\n            style.strokeColor = options.strokeColor;\r\n            style.strokeWidth = options.strokeWidth;\r\n        }\r\n        else if (self.feature.geometry.components && self.feature.geometry.components instanceof Array\r\n                        && self.feature.geometry.components[0].CLASS_NAME == (new OpenLayers.Geometry.Polygon).CLASS_NAME ||\r\n                 !self.feature.geometry.components && self.feature.geometry instanceof new OpenLayers.Geometry.Polygon) {\r\n            style.stroke = true;\r\n            style.strokeColor = options.strokeColor;\r\n            style.strokeWidth = options.strokeWidth;\r\n            style.fillColor = options.fillColor;\r\n            style.fillOpacity = options.fillOpacity;\r\n        }\r\n        if (self.feature.layer) {\r\n            self.feature.layer.drawFeature(self.feature, style);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.toggleSelectedStyle = function (condition) {\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getInnerPoint = function (options) {\r\n        var feature = this.feature;\r\n        var point = feature.geometry.getCentroid(true);\r\n        if (!result.intersects(feature.geometry)) {\r\n            var closest = feature.geometry.distanceTo(result, { details: true });\r\n            point = new OpenLayers.Geometry.Point(closest.x0, closest.y0);\r\n        }\r\n        return [point.x, point.y];\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.showPopup = function (popupCtl) {\r\n        var self = this;\r\n        var feature = self.feature;\r\n\r\n        // Para IE8: FramedCloud sin modificar\r\n        if (Modernizr.canvas && OpenLayers.Popup.Anchored.prototype.displayClass.indexOf(TC.control.Popup.prototype.CLASS) === -1) {\r\n            OpenLayers.Popup.Anchored.prototype.displayClass = OpenLayers.Popup.Anchored.prototype.displayClass + ' ' + TC.control.Popup.prototype.CLASS + ' ' + TC.Consts.classes.VISIBLE;\r\n        }\r\n        var PopupClass = Modernizr.canvas ? OpenLayers.Popup.Anchored : OpenLayers.Popup.FramedCloud;\r\n        if (!self._innerCentroid) {\r\n            self._innerCentroid = self.getInnerPoint();\r\n        }\r\n\r\n        popupCtl.currentFeature = self.parent;\r\n        var map = popupCtl.map;\r\n        if (map) {\r\n            map.wrap.getMap().then(function (olMap) {\r\n                if (map.popup) {\r\n                    olMap.removePopup(map.popup.wrap.popup);\r\n                    map.popup.wrap.popup.destroy();\r\n                    delete map.popup.wrap.popup;\r\n                    map.popup = null;\r\n                }\r\n                var html = self.parent.getInfo();\r\n                if (html) {\r\n                    var markerOptions = self.parent.options;\r\n                    var anchor = null;\r\n                    if (Modernizr.canvas && markerOptions.anchor && markerOptions.height) {\r\n                        anchor = {\r\n                            size: new OpenLayers.Size(0, markerOptions.height),\r\n                            offset: new OpenLayers.Pixel(0, -markerOptions.height * markerOptions.anchor[1])\r\n                        };\r\n                    }\r\n\r\n                    var popup = new PopupClass(null,\r\n                                    new OpenLayers.LonLat(self._innerCentroid[0], self._innerCentroid[1]),\r\n                                    null,\r\n                                    html,\r\n                                    anchor,\r\n                                    popupCtl.options.closeButton,\r\n                                    function (e) {\r\n                                        this.hide();\r\n                                        OpenLayers.Event.stop(e);\r\n                                        map.trigger(TC.Consts.event.POPUPHIDE, { control: popupCtl });\r\n                                    });\r\n                    popup.autoSize = true;\r\n                    popup.panMapIfOutOfView = true;\r\n                    popup.keepInMap = true;\r\n                    popup.maxSize = new OpenLayers.Size(olMap.size.w / 2, olMap.size.h / 2);\r\n\r\n                    popupCtl.popupDiv = popup.div;\r\n                    popupCtl.wrap.popup = popup;\r\n                    map.popup = popupCtl;\r\n                    olMap.addPopup(popup);\r\n                    popupCtl.trigger(TC.Consts.event.CONTROLRENDER);\r\n\r\n                    // Para IE8: FramedCloud sin modificar\r\n                    if (Modernizr.canvas) {\r\n                        popupCtl.popupDiv.style.overflow = '';\r\n                        popupCtl.popupDiv.style.border = '';\r\n                        popupCtl.popupDiv.style.width = '';\r\n                        popupCtl.popupDiv.style.height = '';\r\n                        // Eliminar bug de visualización de Chrome, quitando position:relative.\r\n                        const content = popup.contentDiv;\r\n                        content.style.position = '';\r\n                        // En OL2 los featureInfo en versión \"baraja de cartas\" salen sin tamaño.\r\n                        // Para evitar esto, la clase tc-ctl-finfo tiene ancho y alto establecidos.\r\n                        // Pero eso hace que en el popup salgan barras de scroll, porque contentDiv se crea demasiado pequeño.\r\n                        // Rehacemos el tamaño del popup para eliminarlas.\r\n                        popup.updateSize();\r\n                        content.style.width = '';\r\n\r\n                        const closeBtn = popup.groupDiv.querySelector('.olPopupCloseBox');\r\n                        if (closeBtn) {\r\n                            closeBtn.removeAttribute('style');\r\n                            closeBtn.classList.add(popupCtl.CLASS + '-close');\r\n                            closeBtn.setAttribute('title', popupCtl.getLocaleString('close'));\r\n                            content.style.marginRight = closeBtn.getBoundingClientRect().width + 'px';\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.isNative = function (feature) {\r\n        return feature instanceof OpenLayers.Feature;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getPath = function () {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.feature && self.feature._folders) {\r\n            result = self.feature._folders;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getBounds = function () {\r\n        var result = null;\r\n        var self = this;\r\n        if (self.feature && self.feature.geometry) {\r\n            var bounds = self.feature.geometry.getBounds();\r\n            result = [bounds.left, bounds.bottom, bounds.right, bounds.top];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getTemplate = function () {\r\n        var result = null;\r\n        var self = this;\r\n        if (self.feature.style) {\r\n            result = self.feature.style.balloonStyle;\r\n            if (result) {\r\n                result = result.replace(/\\$\\{(\\w+)\\}/g, '$$[$1]');\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getData = function () {\r\n        var result = $.extend({}, this.feature.attributes);\r\n        for (var key in result) {\r\n            if (result[key].value) {\r\n                result[key] = result[key].value;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setData = function (data) {\r\n        const attributes = this.feature.attributes;\r\n        for (var key in data) {\r\n            if (attributes[key].value) {\r\n                attributes[key].value = data[key];\r\n            }\r\n            else {\r\n                attributes[key] = data[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.clearData = function () {\r\n        this.feature.attributes = {};\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.activate = function (mode) {\r\n        var self = this;\r\n        var handler = mode === TC.Consts.geom.POLYGON ? OpenLayers.Handler.Polygon : OpenLayers.Handler.Path;\r\n        if (self.parent.map) {\r\n            self.parent.map.wrap.getMap().then(function (olMap) {\r\n                if (self.control) {\r\n                    self.control.deactivate();\r\n                    olMap.removeControl(self.control);\r\n                }\r\n                if (mode) {\r\n                    var measureHandler = function (e) {\r\n                        var type = e.type === 'measurepartial' ? TC.Consts.event.MEASUREPARTIAL : TC.Consts.event.MEASURE;\r\n                        var data = { units: e.units };\r\n                        if (e.order === 1) {\r\n                            data.length = e.measure;\r\n                        }\r\n                        else if (e.order === 2) {\r\n                            data.area = e.measure;\r\n                            data.perimeter = self.control.getLength(e.geometry, e.units);\r\n                        }\r\n                        if (self.parent.measure) {\r\n                            self.parent.trigger(type, data);\r\n                        }\r\n                        self.parent.trigger(TC.Consts.event.DRAWEND, { feature: new TC.feature.Polygon(e.geometry.components) });\r\n\r\n                    };\r\n                    self.control = new OpenLayers.Control.Measure(handler,\r\n                        {\r\n                            geodesic: true,\r\n                            persist: true,\r\n                            immediate: true\r\n                        }\r\n                    );\r\n\r\n                    self.control.handler.callbacks.point = function (point) {\r\n                        self.parent.trigger(TC.Consts.event.POINT, { point: [point.x, point.y] });\r\n                    };\r\n                    if (self.parent.measure)\r\n                        self.control.events.on({\r\n                            \"measure\": measureHandler,\r\n                            \"measurepartial\": measureHandler\r\n                        });\r\n                    else\r\n                        self.control.events.on({\r\n                            \"measure\": measureHandler\r\n                        });\r\n                    olMap.addControl(self.control);\r\n                    self.control.activate();\r\n                    //self.control.handler._originalLayer = self.control.handler.layer;\r\n                    //self.control.handler.layer = layer.wrap.layer;\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.deactivate = function () {\r\n        var self = this;\r\n        if (self.control) {\r\n            //self.control.handler.layer = self.control.handler._originalLayer;\r\n            self.control.deactivate();\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.undo = function () {\r\n        var self = this;\r\n        var result = false;\r\n        if (self.control && self.control.handler) {\r\n            result = self.control.handler.undo();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.redo = function () {\r\n        var self = this;\r\n        var result = false;\r\n        if (self.control && self.control.handler) {\r\n            result = self.control.handler.redo();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.end = function () {\r\n        var self = this;\r\n        if (self.control && self.control.handler) {\r\n            self.control.handler.finishGeometry();\r\n            if (self.control.handler.layer) {\r\n                self.control.handler.layer.redraw();\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.setStyle = function () {\r\n        TC.error('TC.wrap.control.Draw.prototype.setStyle no implementado en OpenLayers 2');\r\n    };\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getRequestSchema = function (extent) {\r\n        return {};\r\n    }\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getGetTilePattern = function (layer) {\r\n        return \"\";\r\n    }\r\n})();"],"file":"../../ol/ol2.min.js"}