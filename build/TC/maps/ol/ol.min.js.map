{"version":3,"sources":["ol/ol.js"],"names":["root","factory","define","amd","exports","module","require","ol","this","Math","hypot","y","length","arguments","i","Infinity","sqrt","lastTime","vendors","x","window","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","max","id","setTimeout","clearTimeout","RESIZE","events","EventType","DRAGENTER","DRAGOVER","DROP","CHANGE","SINGLECLICK","MapBrowserEventType","POINTERMOVE","MOVEEND","MapEventType","POSTRENDER","POSTCOMPOSE","render","ADDFEATURE","source","VectorEventType","REMOVEFEATURE","CLEAR","TILELOADSTART","TileEventType","TILELOADEND","TILELOADERROR","hitTolerance","TC","Util","detectMouse","cssUrl","url","substr","lastIndexOf","format","KMLCustom","syncLoadJS","apiLocation","GPXCustom","JSZip","Promise","resolve","reject","loadJS","then","err","error","View","prototype","getValueForResolutionFunction","opt_power","power","maxResolution","maxResolution_","minResolution","minResolution_","log","resolution","value","min","detectMobile","Overlay","updateRenderedPosition","pixel","mapSize","style","offset","getOffset","positioning","getPositioning","setVisible","offsetX","offsetY","OverlayPositioning","BOTTOM_RIGHT","CENTER_RIGHT","TOP_RIGHT","rendered","left_","left","right","round","devicePixelRatio","right_","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","offsetWidth","BOTTOM_LEFT","top_","top","bottom","bottom_","CENTER_LEFT","offsetHeight","control","OverviewMap","_validateExtent_","validateExtent_","_wrap","parent","options","alwaysCentered","recenter_","_resetExtent_","resetExtent_","call","wrap","is3D","ovview","ovmap_","getView","extent","calculateExtent","feature","get3DCameraLayer","getSource","getFeatures","coordinates","getGeometry","getCoordinates","coord1","coord2","containsCoordinate","buffer","fit","GML3CRS84","GML3","srsName","inherit","GML2CRS84","GML2","gmlNamespace","gml32Namespace","GMLBase","MULTIPOINT_PARSERS_","MULTILINESTRING_PARSERS_","MULTIPOLYGON_PARSERS_","POINTMEMBER_PARSERS_","LINESTRINGMEMBER_PARSERS_","POLYGONMEMBER_PARSERS_","RING_PARSERS","GEOMETRY_FLAT_COORDINATES_PARSERS","FLAT_LINEAR_RINGS_PARSERS","GEOMETRY_PARSERS","MULTICURVE_PARSERS_","MULTISURFACE_PARSERS_","CURVEMEMBER_PARSERS_","SURFACEMEMBER_PARSERS_","SURFACE_PARSERS_","CURVE_PARSERS_","ENVELOPE_PARSERS_","PATCHES_PARSERS_","SEGMENTS_PARSERS_","readFeaturesInternal","node","objectStack","localName","features","gmlnsCollectionParser","FEATURE_COLLECTION_PARSERS","namespace","xml","makeArrayPusher","namespaceURI","pushParseAndPop","context","featureType","featureNS","prefix","defaultPrefix","childNodes","ii","child","nodeType","ft","nodeName","split","pop","indexOf","key","count","uri","candidate","push","ns","parsersNS","featureTypes","Array","isArray","p","parsers","readFeatureElement","makeReplacer","undefined","proj","proj4","register","get","metersPerUnit_","EPSG4326","METERS_PER_UNIT","oldGet","projectionLike","trim","loadProjDef","crs","sync","readGeometryElement","firstElementChild","getAttribute","Error","dataProjection","geometry","Feature","transformWithOptions","ONLY_WHITESPACE_RE","readFeatureElementInternal","asFeature","geometryName","values","n","nextElementSibling","firstChild","getAllTextContent","test","len","attributes","_content_","attName","name","setGeometryName","fid","getAttributeNS","setId","getRGBA","color","opacity","result","asArray","slice","getResolutionOptions","mapWrap","layer","view","map","prevRes","getResolution","pms","projection","getProjection","center","getCenter","enableRotation","maxExtent","layerForResolutions","type","Consts","layerType","VECTOR","getBaseLayer","maxRes","minRes","res","getResolutions","minResIx","maxResIx","resolutions","Map","setMap","self","initialExtent","proj4Obj","crsCode","projOptions","units","oProj","global","equivalentProjections","code","Projection","addEquivalentProjections","axisOrientation","interactions","interaction","defaults","constrainResolution","viewOptions","extentForResolution","rect","div","getBoundingClientRect","dx","dy","width","height","target","controls","pixelRatio","getEventPixel","event","viewportPosition","viewport_","eventPosition","changedTouches","clientX","pointerEvent","clientY","_promise","manageSize","updateSize","addEventListener","one","MAPLOAD","on","e","PRINTING","workLayers","forEach","wl","_noFeatureClicked","featuresInLayers","forEachFeatureAtPixel","showsPopup","trigger","FEATURECLICK","NOFEATURECLICK","addMoveEndListener","ZOOM","hasListener","once","BEFOREZOOM","onChangeView","un","limitZoomLevels","getZoom","setView","BASELAYERCHANGE","on3DView","olMapViewport","getViewport","MOUSEMOVE","hit","activeControl","isExclusive","selectable","FEATUREOVER","cursor","getMetersPerUnit","extentInDegrees","getUnits","Units","DEGREES","getMetersPerDegree","getExtent","getUnitRatio","defaultCrs","Cfg","defaultProj","newProj","normalizeProjection","units_","setProjection","baseLayer","transformExtent","unitRatio","oldView","minZoom","getMinZoom","maxZoom","getMaxZoom","getMinResolution","getMaxResolution","transformFactor","Number","POSITIVE_INFINITY","transform","newView","nearest","insertLayer","olLayer","idx","layers","getLayers","alreadyExists","getLength","item","remove","insertAt","Tile","setMaxResolution","setMinResolution","loadingTileCount","beforeTileLoadHandler","state","Layer","LOADING","BEFORELAYERUPDATE","_loadingTileCount","isRaster","$events","BEFORETILELOAD","TILELOAD","IDLE","LAYERUPDATE","removeLayer","getLayerCount","getLayerGroup","indexOfFirstVector","l","Vector","getLayerIndex","elm","setLayerIndex","index","ix","getArray","setBaseLayer","setLayer","curBl","Image","WMTS","layerProjectionOptions","oldCrs","getCode","getControls","ctl","ZoomSlider","initSlider_","currentResolution","newRes","sort","a","b","reduce","prev","abs","maxResolutionError","isLoaded","animate","duration","ZOOM_ANIMATION_DURATION","bind","setResolution","setExtent","applyExtent","getResolutionForExtent","constrainedResolution","EXTENT_TOLERANCE","setCenter","_setExtentPromise","finally","_timeout","getSize","getLayer","apply","factor","getWidth","getHeight","setPromise","coords","opts","getMap","olMap","setRotation","rotation","getRotation","getCoordinateFromPixel","xy","getPixelFromCoordinate","coord","synchronous","isNative","isGeo","addPopup","popupCtl","draggable","Draggabilly","DRAGGABILLY","popupDiv","getDiv","$","$popupDiv","classList","add","Popup","CLASS","contentDiv","appendChild","menuDiv","popup","addOverlay","container","parentElement","classes","DRAGGABLE","matches","stopPropagation","drag","handleEvent","not","pointer","bcr","clientWidth","pageX","clientHeight","pageY","_pointerCancel","setDragging","_currentOffset","_previousContainerPosition","setPosition","setOffset","coordDelta","position","getPosition","containerRect","mouseMoveHandler","viewport","removeEventListener","hidePopup","currentFeature","VISIBLE","bounding","canvas","idealWidth","idealHeight","isInteger","newSize","setSize","getFormatFromName","KML","mimeType","KMZ","showPointNames","GPX","GEOJSON","JSON","GeoJSON","GML32","GML","TOPOJSON","TopoJSON","WKT","exportFeatures","nativeStyle","createNativeStyle","styles","olFeatures","clone","getStyle","setStyle","text","getNativeFeatureStyle","getText","setProperties","geom","Point","shape","getImage","RegularShape","diameter","getRadius","getStroke","document","createElement","vectorContext","toContext","getContext","size","setText","drawGeometry","newFeature","getProperties","Style","image","Icon","src","toDataURL","pointsToAdd","point","LineString","getCoordinateAt","Polygon","getInteriorPoint","MultiLineString","lineStrings","getLineStrings","maxLength","line","cur","MultiPolygon","polygons","getPolygons","maxArea","polygon","getArea","crossOrigin","concat","hasZ","getGeometryStride","f","values_","keysToChange","newKey","replace","featuresNode","writeFeaturesNode","featureProjection","featureCollectionNode","createElementNS","setAttributeNS","schemaLocation","removeAttribute","setGeometry","writeFeatures","isFileDrag","dataTransfer","types","handleDragEnter","preventDefault","handleDragExit","enableDragAndDrop","ddOptions","formatConstructors","splitCollection","dropTarget","ddInteraction","DragAndDrop","featurePromises","getId","getUID","createFeature","all","li","getLoadingIndicator","removeWait","_featureImportWaitId","some","FEATURESIMPORT","fileName","file","FEATURESIMPORTERROR","map_","addInteraction","dropArea","processZipFile","originalFnc","handleResult_","evt","zipContent","loadAsync","async","zip","data","newFile","File","reader","FileReader","onload","readAsText","handleDrop","addWait","dropListenKeys_","listen","body","buttons","ddEnabled","loadFiles","files","getInteractions","currentTarget","undoTarget","off","LOAD","getVisibility","getVisible","setVisibility","visible","r","METERS","metersPerDegree","Raster","WmsParser","WMSCapabilities","WmtsParser","WMTSCapabilities","addCommonEvents","LAYERVISIBILITY","getGetMapUrl","getServiceType","WMS","dcpType","capabilities","Capability","Request","GetMap","DCPType","HTTP","Get","OnlineResource","OperationsMetadata","GetTile","DCP","href","fragment","createDocumentFragment","textarea","innerHTML","textContent","getInfoFormats","c","GetFeatureInfo","Format","infoFormatPreference","getWMTSLayer","Contents","j","TileMatrixSetLink","matrixSet","TileMatrixSet","getTileMatrix","tms","Identifier","TileMatrix","getScaleDenominators","ScaleDenominator","MinScaleDenominator","MaxScaleDenominator","getName","children","getLayerNodes","childDenominators","getAttribution","ServiceProvider","ProviderName","site","ProviderSite","ServiceIdentification","Title","Service","getInfo","layerNodes","getAllLayerNodes","compareNames","title","Abstract","legend","_traverse","o","func","getLegend","MetadataURL","metadata","md","queryable","getServiceTitle","getRootLayerNode","ignorePrefix","Name","getIdentifier","_layerList","getNodeArray","normalizeLayerNode","normalizeCapabilities","LegendURL","isCompatible","names","_isCompatible","nodes","inCrs","itemCRS","CRS","SRS","crsList","isIn","CRSCodesEqual","SupportedCRS","getCompatibleCRS","crsLists","getNodePath","otherCrsLists","filter","every","layerNames","tileMatrixSets","tmsl","getCompatibleLayers","_fnrecursive","crsToCheck","tmsList","tmsIdentifier","layerList","jj","tmsLinkList","k","kk","getCompatibleMatrixSets","tmsLink","setWMTSUrl","urls","getUrls","urlPattern","createWMSLayer","params","ImageWMS","ratio","imageRatio","imageLoadFunction","getImageLoad","tile","layerOptions","LAYERS","method","createWmtsSource","sourceOptions","optionsFromCapabilities","requestEncoding","encoding","location","protocol","setTileLoadFunction","prevFn","matrix","getLimitedMatrixSet","matrixIndex","createWMTSLayer","getParams","setParams","updateParams","setMatrixSet","newSource","extend","newResolutions","newMaxResolution","newMinResolution","setSource","ts","setResolutions","resolutions_","tileGrid","reloadSource","refresh","Geometry","getNearest","candidates","getClosestPoint","setScaleFunction","imageStyle","iconWidth","olFeat","setScaleForWidth","imgWidth","markerWidth","setScale","imageSize","img","naturalWidth","getSrc","getStyleValue","property","match","m","isFunction","isPoint","isLine","isPolygon","nativeStyleOptions","getType","getData","styleOptions","cluster","stroke","Stroke","strokeColor","strokeWidth","lineDash","fill","Fill","fillColor","fillOpacity","circleOptions","radius","isNaN","Circle","label","createNativeTextStyle","marker","anchor","anchorXUnits","anchorYUnits","styleObj","textOptions","fontSize","font","angle","PI","fontColor","labelOutlineColor","labelOutlineWidth","labelOffset","Text","toHexString","number","toString","getHexColorFromArray","colorArray","getStyleFromNative","olStyle","olGeomType","GeometryType","POINT","MULTI_POINT","setImage","getColor","getFill","getAnchor","getLineDash","createVectorSource","createStyles","WFS","listenerKey","getState","Observable","unByKey","addFeatures","import","oldFeatures","vectorOptions","internalLoader","usesGenericLoader","proxify","toLowerCase","getMimeTypeFromUrl","loader","featureloader","xhr","getFormat","fs","readFeatures","newData","LAYERERROR","reason","message","outputFormat","gmlFormat","sOrigin","serviceUrl","manageResponse","response","feats","triggerLayerUpdate","onFeaturesAdd","FEATURESADD","makeAjaxCall","onlyHits","ajaxOptions","version","properties","URL_MAX_LENGTH","WFSQueryBuilder","maxFeatures","service","request","typename","featurePrefix","srsname","Object","assign","resultType","Bbox","BBOX","responseType","XML","contentType","ajax","getCapabilitiesPromise","_capabilities","numMaxFeatures","Operations","GetFeature","CountDefault","DefaultValue","firstNode","tagName","querySelector","numOfFeaturesFounded","parseInt","WFSErrors","MAX_NUM_FEATURES","limit","founded","_requestUrl","_tcLayer","markerStyle","Cluster","distance","start","now","pCoords","cCoords","step","fromCoords","toCoords","fraction","getCurrentCoordinates","CLUSTER_ANIMATION_DURATION","clusterCache","splice","elmCoords","cElm","s","addFeatureToLayer","feat","addFn","addPoint","Polyline","addPolyline","addPolygon","addMultiPolygon","MultiPolyline","addMultiPolyline","addFeature","constructor","FEATUREREMOVE","VECTORUPDATE","FEATURESCLEAR","dynamicStyle","styleFunction","isDynamicStyle","obj","prop","setStyles","createVectorLayer","declutter","commit","getFeatureById","removeFeature","clearFeatures","clear","setFeatureVisibility","fillOptions","strokeOptions","displayNoneStyle","_originalStyle","findFeature","getGetFeatureUrl","sendTransaction","inserts","updates","deletes","getNativeFeature","olInserts","olUpdates","olDeletes","transaction","writeTransaction","outerHTML","er","getElementsByTagNameNS","errorObj","texts","transactionResponse","readTransactionResponse","catch","setDraggable","onend","onstart","olObjects","interactionOptions","Collection","Translate","removeInteraction","detectIE","_handlerDraggablePointerMove","getFeaturesInExtent","tolerance","featuresInExtent","leftCorner","rightCorner","coordinate","ex","Click","_trigger","featureCount","CLICK","activate","deactivate","ScaleBar","updateElement_","ScaleLine","renderedHTML_","NavBar","zCtl","Zoom","zsCtl","frameState","viewState","requestSliderSize","setTarget","addControl","querySelectorAll","button","display","setAttribute","getLocaleString","zoomSlider","renderPromise","sliderInitialized_","setThumbPosition_","NavBarHome","z2eCtl","ZoomToExtent","tipLabel","homeBtn","setInitialExtent","Coordinates","_coordsTrigger","coordsToClick","view3D","onMouseMove","getEventCoordinate","latLon","reverse","update","Geolocation","_snapTrigger","dragging","initSnap","_postcomposeTrigger","duringTrackSnap","getTrackingLine","layerTracking","hasCoordinates","showElevationMarker","d","ResultsPanel","layerTrack","elevationChartData","hideElevationMarker","addWaypoint","waypoint","ele","time","addPosition","heading","speed","accuracy","altitudeAccuracy","altitude","last","appendCoordinate","lx","ly","storage","setSessionLocalValue","Const","LocalStorageKey","TRACKINGTEMP","formattedToStorage","Event","STATEUPDATED","moving","positionChangehandler","geoposition","setTracking","layerGPS","position_","longitude","latitude","projectedPosition","reproject","deltaMean","POSITIONCHANGE","pd","radToDeg","addCircle","accuracyCircle","geopositionTracking","firstPosition","trackCenterButton","zoomToFeatures","track","infoPanel","isVisible","doVisible","isMinimized","maximize","controlContainer","getControlsByClass","addElement","POSITION","LEFT","htmlElement","HIDDEN","tracking","nativeTrackingFeature","sessionwaypoint","sessionTracking","parser","storageCRS","tcFeature","currentPositionWaiting","currentPositionTrk","getCurrentPositionInterval","getCurrentPositionRequest","errorTimeout","toast","enableHighAccuracy","timeout","setInterval","getCurrentPosition","errorCallback","navigator","geolocation","clearInterval","watchPosition","onGeolocateError","TIMEOUT","maximumAge","msgType","WARNING","activateButton","deactivateButton","watch","clearWatch","activateSnapping","deactivateSnapping","snapInfo","removeOverlay","snapInfoElement","snapLine","attachedDTD","setFillStrokeStyle","endSnap","eventPixel","closestFeature","getClosestFeatureToCoordinate","closestPoint","pow","snappingTolerance","setCoordinates","getElementsByClassName","getKeys","locale","toLocaleString","minimumFractionDigits","getZ","getM","getLayout","GeometryLayout","XYZM","z","XYZ","XYM","getRenderedHtml","html","drawTrackingData","layout","formattedFromStorage","storageData","removeTrackingProperty","notReproject","unset","export","getTrackingData","geoJSON","idRequestAnimationFrame","bufferElm","segmentsUnion","mergedIndex","ls","lineString","nextLineIndex","getLastCoordinate","nls","first","getFirstCoordinate","processImportedFeatures","importedFileName","toAdd","toRemove","maybeRemove","segments","hasOwnProperty","featureToAdd","promises","ta","array","indices","sameName","saveTrack","trackName","importedIndex","processAdd","IMPORTEDTRACK","wait","alert","vectorSource","simulateTrackEnd","chartProgressClear","simulateMarker","simulateTrack","setCoords","animationFrameFraction","hasTime","toLength","utmCrs","arCoordinates","done","walkingSpeed","trackFilm","timestamp","parse","stringify","loopAtFraction","simulate_paused","getCoordinateAtM","getDoneAtM","getSelectedTrack","uiSimulate","hasElevation","chartSetProgress","_getTime","from","getCoords","to","atan2","simulate_speed","delta","d3","D3C3","headingChangehandler","infoOnMap","iomStyle","overFlowY","backgroundColor","getHeading","orientationChangehandler","beta","getBeta","gamma","getGamma","constrainCenter","pulsate","circle","pulsated","elapsed","setRadius","drawCircleGeometry","elevationMarker","stopEvent","getOpacity","getElement","coordsActivate","coordsDeactivate","Parser","read","ovMap","collapsed","collapsible","className","getOverviewMap","pixelRatio_","boxOverlay_","box","boxSizing","_boxElm","ovmMap","positionDrag","newTransform","dragPoint","idxStart","idxEnd","substring","dragged","cloneNode","ACTIVE","insertAdjacentElement","bottomLeft","topRight","insertBefore","containment","removeChild","moveVector","_delta","centerPixel","newCenter","halfWidth","halfHeight","reset","load","olView","OVERVIEWBASELAYERCHANGE","oldLayer","newLayer","originalLayer","getFallbackLayer","defaultLayer","loadProjections","orderBy","projList","fovStyle","setColor","addLayer","draw3DCamera","camLayer","fov","enable","resizeEvent","createEvent","initEvent","dispatchEvent","disable","FeatureInfo","_clickTrigger","beforeRequest","NOFEATUREINFO","getElementText","esriXmlParser","dom","DOMParser","parseFromString","documentElement","fiCollections","getElementsByTagName","fic","layerName","fInfos","lenj","fields","lenk","field","addLayerToService","path","getPath","getFeatureInfo","targetServices","auxInfo","requestPromises","requestDataArray","services","elem","getGetFeatureInfoUrl","targetService","mapLayers","disgregatedNames","getDisgregatedLayerNames","consoleRegister","params_","join","gfiURL","QUERY_LAYERS","INFO_FORMAT","FEATURE_COUNT","pixelTolerance","expUrl","requestData","requestedFormat","expandUrl","mapLayer","toolProxification","fetch","cacheHost","getAction","cache","originalUrl","action","responses","someSuccess","featureInsertionPoints","featureInfo","responseText","iFormat","WMSGetFeatureInfo","isParentOrSame","na","nb","pa","pb","fakeLayers","found","lName","featureId","fakeLayer","compoundLayer","rawUrl","rawContent","rawFormat","responseError","status","ERROR","finfoPromises","defaultFeature","getMapLocale","isInside","responseCallback","INFO","BEFOREFEATUREINFO","GeometryFeatureInfo","hasSuitableLayers","hasLayers","_isSearching","_isDrawing","ret","beginDraw","geometryType","semaforo","drawCtrl","setActive","startDrawing_","olGeometryType","POLYLINE","LINE_STRING","POLYGON","Draw","setShowsPopup","_wrapPromise","points","sketchCoords_","sketchFeature_","addToDrawing_","_drawToken","cancelDraw","source_","magicFunction","availableLayers","describeFeatureType","returnObject","_filter","geometryFields","isGeometry","nillable","minOccurs","recursive","geomName","LogicalNary","conditions","condition","Spatial","geomNames","or","acc","curr","getTagName","WFSGetFeatureBuilder","download","arrPromises","_getServiceTitle","tree","getCRS","SRSDOWNLOAD_GEOJSON_KML","_postOrDownload","urlData","XMLDocument","exception","errors","INDETERMINATE","errorThrown","_makePostCall","availableNames","serviceObj","getWFSCapabilities","_numMaxFeatures","FeatureTypes","titles","LAYERS_NOT_AVAILABLE","serviceTitle","QueryExpressions","QUERY_NOT_AVAILABLE","Post","onlineResource","numMaxfeatures","fetchXML","featFounds","NO_FEATURES","NO_VALID_LAYERS","GETFEATURE_NOT_AVAILABLE","GETCAPABILITIES","readFeaturesFromResponse","featureToServiceDistributor","id_","getFeaturesByGeometry","filterFeature","filterLayer","olGeometry","stride","flatCoordinates","getFlatCoordinates","bestPoint","arrRequests","intersects","responseObj","errorMsg","errorType","descripcion","serviceName","msgErrorMode","CONSOLE","featuresFound","PANANIMATIONSTART","PANANIMATIONEND","fitToView","popupBoundingRect","mapBoundingRect","topLeft","bottomRight","west","north","east","popupExt","mapExt","containsExtent","overflows","newPos","newPixelPos","_oldUpdatePixelPosition","updatePixelPosition","ct","easing","percent","setDragged","_newHandleOffsetChanged","unlisten","getChangeEventType","handleOffsetChanged","containerStyle","setProperty","scale","getScale","canvas_","asString","createNativeFeature","createPoint","hasStyleOptions","setData","createMarker","iconUrl","getPointIconUrl","createPolyline","createPolygon","createMultiPolyline","createMultiPolygon","createCircle","_featurePromise","geomStr","olStyles","cloneFeature","getFont","getOffsetX","getOffsetY","ctor","ringsOrPolylines","isMultiPolygon","isPolygonOrMultiLineString","isLineString","XY","setCenterAndRadius","getPolygonLength","getLinearRings","ring","newRing","getLinearRing","flat","linearRingLength","getLineStringLength","readonly","extendedStyle","currentStyle","fill_","image_","stroke_","text_","layerStyle","newStyle","MultiPoint","cssClass","iconOptions","getBackgroundUrlFromCss","imgAnchor","layerStroke","setWidth","strokeChanged","setLineDash","setStroke","setFill","changed","toggleSelectedStyle","setSelectedStyle","removeSelectedStyle","getInnerPoint","clipCoord","clipBox","MULTI_POLYGON","area","curArea","isInsideRing","xi","yi","xj","yj","rings","MULTI_LINE_STRING","curLength","centroid","clipPolyline","showPopup","currentExtent","_innerCentroid","closeButton","btn","hide","finfo","isEmptyObject","CLASSNAME","fStyle","getImageSize","_folders","getBounds","getTemplate","_balloon","getGeometryName","unsetData","clearData","sketch","MEASUREPARTIAL","getMeasureData","mouseOverHandler","hoverCoordinate","pushCoordinate","clickHandler","_mdPx","squaredClickTolerance_","mousedownHandler","perimeter","formatArea","formatLength","mode","MULTIPOLYGON","MULTIPOINT","MULTIPOLYLINE","objects","_mousedownHandler","_clickHandler","_mouseMoveHandler","_mouseOverHandler","snapInteraction","measure","drawOptions","snapTolerance","shiftKeyOnly","hole","parentStyles","RECTANGLE","maxPoints","geometryFunction","end","newCoords","DRAWSTART","overlayStyle","overlay_","MEASURE","DRAWEND","_projectionChangeHandler","oldProj","oldValue","sketchPoint_","sketchCoords","getMode","deflateCoordinates","getTransform","transformFn","inflateCoordinates","drawProjectionChangeHandler","snapping","snapOptions","Snap","redoStack","persistent","popCoordinate","puntos","flyingPointContained","flyingPoint","sketchLine_","undo","redo","finishDrawing","CacheBuilder","getRequestSchemas","schema","layerId","olSource","getTileGrid","matrixIds","getMatrixIds","getLayerNodeByName","tmsLimits","llen","TileMatrixSetLimits","tileMatrixLimits","rlen","origin","getOrigin","tileSize","getTileSize","unitsPerTile","tml","mId","tSize","cl","floor","cr","rt","rb","tmsLimit","MinTileCol","MaxTileCol","MinTileRow","MaxTileRow","getGetTilePattern","WMTSEncoding","RESTFUL","encodeURIComponent","createHaloStroke1","createHaloStroke2","addHaloToStyle","mainStyle","haloPart1","unshift","haloPart2","updateSelectedStyle","style_","originalStyle","createSelectedStyle","styleFunction_","createStyleFunction","Modify","selectInteraction","select","Select","getWrapperFeature","selected","FEATURESSELECT","ctrl","deselected","FEATURESUNSELECT","modifyInteraction","modify","FEATUREMODIFY","_onMouseMove","getSelectedFeatures","setSelectedFeatures","featureOverlay_","unselectFeatures","selectedFeatures","unselectedFeatures","olFeature","Edit","cancel","cancelTxt","histPoints","deleteFeatures","toGML","writeGeometryNode","poligons","XMLSerializer","serializeToString","str","pos","toGeoJSON","writeGeometry","write"],"mappings":"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","sourcesContent":["; (function (root, factory) {\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['../../lib/ol/build/ol-sitna'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('../../lib/ol/build/ol-sitna'));\r\n    } else {\r\n        root.ol = factory(root.ol);\r\n    }\r\n\r\n})(this, function (ol) {\r\n    Math.hypot = Math.hypot || function () {\r\n        var y = 0;\r\n        var length = arguments.length;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            if (arguments[i] === Infinity || arguments[i] === -Infinity) {\r\n                return Infinity;\r\n            }\r\n            y += arguments[i] * arguments[i];\r\n        }\r\n        return Math.sqrt(y);\r\n    };\r\n\r\n    // requestAnimationFrame polyfill\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\r\n            || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n\r\n    if (!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = window.setTimeout(function () { callback(currTime + timeToCall); },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n\r\n    if (!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n\r\n    // Nombres de tipos de eventos\r\n    const MOUSEMOVE = 'mousemove';\r\n    const MOUSEOVER = 'mouseover';\r\n    const RESIZE = ol.events.EventType.RESIZE;\r\n    const DRAGENTER = ol.events.EventType.DRAGENTER;\r\n    const DRAGOVER = ol.events.EventType.DRAGOVER;\r\n    const DROP = ol.events.EventType.DROP;\r\n    const CHANGE = ol.events.EventType.CHANGE;\r\n    const SINGLECLICK = ol.MapBrowserEventType.SINGLECLICK;\r\n    const POINTERMOVE = ol.MapBrowserEventType.POINTERMOVE;\r\n    const MOVEEND = ol.MapEventType.MOVEEND;\r\n    const POSTRENDER = ol.MapEventType.POSTRENDER;\r\n    const POSTCOMPOSE = ol.render.EventType.POSTCOMPOSE;\r\n    const ADDFEATURE = ol.source.VectorEventType.ADDFEATURE;\r\n    const REMOVEFEATURE = ol.source.VectorEventType.REMOVEFEATURE;\r\n    const CLEAR = ol.source.VectorEventType.CLEAR;\r\n    const TILELOADSTART = ol.source.TileEventType.TILELOADSTART;\r\n    const TILELOADEND = ol.source.TileEventType.TILELOADEND;\r\n    const TILELOADERROR = ol.source.TileEventType.TILELOADERROR;\r\n\r\n    const hitTolerance = TC.Util.detectMouse() ? 3 : 10;\r\n\r\n    var cssUrl = TC.url.ol.substr(0, TC.url.ol.lastIndexOf('/'));\r\n    cssUrl = cssUrl.substr(0, cssUrl.lastIndexOf('/') + 1) + 'css/ol.css';\r\n    //TC.loadCSS(cssUrl);\r\n\r\n\r\n    /////////////////////////// ol patches\r\n\r\n    if (!ol.format.KMLCustom) {\r\n        TC.syncLoadJS(TC.apiLocation + 'TC/ol/format/KMLCustom');\r\n    }\r\n\r\n    if (!ol.format.GPXCustom) {\r\n        TC.syncLoadJS(TC.apiLocation + 'TC/ol/format/GPXCustom');\r\n    }\r\n    if (!window.JSZip) {\r\n        window.JSZip = new Promise(function (resolve, reject) {\r\n            TC.loadJS(!window.JSZip, TC.apiLocation + 'lib/jszip/jszip', function () {\r\n                resolve();\r\n            })\r\n        })\r\n        window.JSZip.then(null, function (err) {\r\n            TC.error(err);\r\n            window.JSZip = false;\r\n        })\r\n    }\r\n    // Parche para evitar el error AssertionError: Assertion failed: calculated value (1.020636810790192) ouside allowed range (0-1)\r\n    ol.View.prototype.getValueForResolutionFunction = function (opt_power) {\r\n        const power = opt_power || 2;\r\n        const maxResolution = this.maxResolution_;\r\n        const minResolution = this.minResolution_;\r\n        const max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n        return (\r\n            /**\r\n                 * @param {number} resolution Resolution.\r\n                 * @return {number} Value.\r\n             */\r\n            function (resolution) {\r\n                var value =\r\n                    (Math.log(maxResolution / resolution) / Math.log(power)) / max;\r\n                value = Math.max(Math.min(1, value), 0);\r\n                return value;\r\n            });\r\n    };\r\n\r\n    if (!TC.Util.detectMobile()) {\r\n        // Parche para situar el ancla del popup cuando tenemos zoom in/out de navegador o pantalla\r\n        ol.Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\r\n            const style = this.element.style;\r\n            const offset = this.getOffset();\r\n\r\n            const positioning = this.getPositioning();\r\n\r\n            this.setVisible(true);\r\n\r\n            var offsetX = offset[0];\r\n            var offsetY = offset[1];\r\n            if (positioning == ol.OverlayPositioning.BOTTOM_RIGHT ||\r\n                positioning == ol.OverlayPositioning.CENTER_RIGHT ||\r\n                positioning == ol.OverlayPositioning.TOP_RIGHT) {\r\n                if (this.rendered.left_ !== '') {\r\n                    this.rendered.left_ = style.left = '';\r\n                }\r\n                const right = Math.round(mapSize[0] - pixel[0] - offsetX) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.right_ != right) {\r\n                    this.rendered.right_ = style.right = right;\r\n                }\r\n            } else {\r\n                if (this.rendered.right_ !== '') {\r\n                    this.rendered.right_ = style.right = '';\r\n                }\r\n                if (positioning == ol.OverlayPositioning.BOTTOM_CENTER ||\r\n                    positioning == ol.OverlayPositioning.CENTER_CENTER ||\r\n                    positioning == ol.OverlayPositioning.TOP_CENTER) {\r\n                    offsetX -= this.element.offsetWidth / 2;\r\n                }\r\n                const left = Math.round(pixel[0] + offsetX) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.left_ != left) {\r\n                    this.rendered.left_ = style.left = left;\r\n                }\r\n            }\r\n            if (positioning == ol.OverlayPositioning.BOTTOM_LEFT ||\r\n                positioning == ol.OverlayPositioning.BOTTOM_CENTER ||\r\n                positioning == ol.OverlayPositioning.BOTTOM_RIGHT) {\r\n                if (this.rendered.top_ !== '') {\r\n                    this.rendered.top_ = style.top = '';\r\n                }\r\n                const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.bottom_ != bottom) {\r\n                    this.rendered.bottom_ = style.bottom = bottom;\r\n                }\r\n            } else {\r\n                if (this.rendered.bottom_ !== '') {\r\n                    this.rendered.bottom_ = style.bottom = '';\r\n                }\r\n                if (positioning == ol.OverlayPositioning.CENTER_LEFT ||\r\n                    positioning == ol.OverlayPositioning.CENTER_CENTER ||\r\n                    positioning == ol.OverlayPositioning.CENTER_RIGHT) {\r\n                    offsetY -= this.element.offsetHeight / 2;\r\n                }\r\n                const top = Math.round(pixel[1] + offsetY) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.top_ != top) {\r\n                    this.rendered.top_ = style.top = top;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // Modificación para cambiar el comportamiento de ol.control.OverviewMap:\r\n    // Mantener la caja del extent siempre centrada.\r\n    ol.control.OverviewMap.prototype._validateExtent_ = ol.control.OverviewMap.prototype.validateExtent_;\r\n    ol.control.OverviewMap.prototype.validateExtent_ = function () {\r\n        var self = this;\r\n        self._validateExtent_();\r\n        if (self._wrap && self._wrap.parent.options.alwaysCentered) {\r\n            self.recenter_();\r\n        }\r\n    };\r\n\r\n    // En modo 3D, cambiar la lógica de la escala para que siempre muestre área de visión.\r\n    ol.control.OverviewMap.prototype._resetExtent_ = ol.control.OverviewMap.prototype.resetExtent_;\r\n    ol.control.OverviewMap.prototype.resetExtent_ = function () {\r\n        var self = this;\r\n        self._resetExtent_.call(self);\r\n        var wrap = self._wrap;\r\n        if (wrap.is3D) {\r\n            var ovmap = self.ovmap_;\r\n            var ovview = ovmap.getView();\r\n            var extent = ovview.calculateExtent();\r\n            var feature = wrap.get3DCameraLayer().getSource().getFeatures()[0];\r\n            if (feature) {\r\n                coordinates = feature.getGeometry().getCoordinates();\r\n                var coord1 = coordinates[0][0];\r\n                var coord2 = coordinates[0][1];\r\n                if (!ol.extent.containsCoordinate(extent, coord1) || !ol.extent.containsCoordinate(extent, coord2)) {\r\n                    var buffer = Math.max(\r\n                        extent[0] - coord1[0],\r\n                        extent[1] - coord1[1],\r\n                        coord1[0] - extent[2],\r\n                        coord1[1] - extent[3],\r\n                        extent[0] - coord2[0],\r\n                        extent[1] - coord2[1],\r\n                        coord2[0] - extent[2],\r\n                        coord2[1] - extent[3]\r\n                    );\r\n                    ovview.fit(ol.extent.buffer(extent, buffer));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ol.format.GML3CRS84 = function () {\r\n        ol.format.GML3.call(this, {\r\n            srsName: 'CRS:84'\r\n        });\r\n    };\r\n    TC.inherit(ol.format.GML3CRS84, ol.format.GML3);\r\n\r\n    ol.format.GML2CRS84 = function () {\r\n        ol.format.GML2.call(this, {\r\n            srsName: 'CRS:84'\r\n        });\r\n    };\r\n    TC.inherit(ol.format.GML2CRS84, ol.format.GML2);\r\n\r\n    // Añadido el espacio de nombres de GML 3.2 al parser\r\n    const gmlNamespace = 'http://www.opengis.net/gml';\r\n    const gml32Namespace = 'http://www.opengis.net/gml/3.2';\r\n    ol.format.GMLBase.prototype.MULTIPOINT_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTIPOINT_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.MULTILINESTRING_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTILINESTRING_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.MULTIPOLYGON_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTIPOLYGON_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.POINTMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.POINTMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.LINESTRINGMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.LINESTRINGMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.POLYGONMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.POLYGONMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.RING_PARSERS[gml32Namespace] = ol.format.GMLBase.prototype.RING_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS[gml32Namespace] = ol.format.GML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.FLAT_LINEAR_RINGS_PARSERS[gml32Namespace] = ol.format.GML3.prototype.FLAT_LINEAR_RINGS_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.GEOMETRY_PARSERS[gml32Namespace] = ol.format.GML3.prototype.GEOMETRY_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.MULTICURVE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.MULTICURVE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.MULTISURFACE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.MULTISURFACE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.CURVEMEMBER_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.CURVEMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SURFACEMEMBER_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SURFACEMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SURFACE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SURFACE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.CURVE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.CURVE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.ENVELOPE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.ENVELOPE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.PATCHES_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.PATCHES_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SEGMENTS_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SEGMENTS_PARSERS_[gmlNamespace];\r\n\r\n    // Bug de OpenLayers hasta 5.3.0 como mínimo:\r\n    // El parser de GML2 no lee las siguientes features del GML si tienen un featureType distinto del primero.\r\n    // Esto pasa porque genera el objeto de featureTypes con la primera y en las siguientes iteraciones si el objeto existe no se regenera.\r\n    // Entre comentarios /* */ se elimina lo que sobra.\r\n    //\r\n    // Más: se añade para FeatureCollection un parser por cada namespaceURI del nodo. \r\n    // Esto es porque QGIS genera GML cuyo nodo FeatureCollection tiene namespace = http://ogr.maptools.org/.\r\n    ol.format.GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\r\n        const localName = node.localName;\r\n        let features = null;\r\n        if (localName == 'FeatureCollection') {\r\n            // Ñapa para leer GML de https://catastro.navarra.es/ref_catastral/gml.ashx?C=217&PO=5&PA=626\r\n            // y demás GMLs obtenidos de un WFS de GeoServer.\r\n            var gmlnsCollectionParser = this.FEATURE_COLLECTION_PARSERS[ol.format.GMLBase.prototype.namespace];\r\n            if (!gmlnsCollectionParser['member']) {\r\n                gmlnsCollectionParser['member'] = ol.xml.makeArrayPusher(\r\n                    ol.format.GMLBase.prototype.readFeaturesInternal);\r\n            };\r\n            //////\r\n            // Sustituimos la siguienta instrucción por la siguiente condición :\r\n            //features = pushParseAndPop([],\r\n            //    this.FEATURE_COLLECTION_PARSERS, node,\r\n            //    objectStack, this);\r\n            if (node.namespaceURI === 'http://www.opengis.net/wfs') {\r\n                features = ol.xml.pushParseAndPop([],\r\n                    this.FEATURE_COLLECTION_PARSERS, node,\r\n                    objectStack, this);\r\n            } else {\r\n                this.FEATURE_COLLECTION_PARSERS[node.namespaceURI] =\r\n                    this.FEATURE_COLLECTION_PARSERS[node.namespaceURI] || this.FEATURE_COLLECTION_PARSERS[ol.format.GMLBase.prototype.namespace];\r\n                features = ol.xml.pushParseAndPop(/*null*/[], // Cambiado null por [] porque si no, no crea el array de features\r\n                    this.FEATURE_COLLECTION_PARSERS, node,\r\n                    objectStack, this);\r\n            }\r\n            //////\r\n        } else if (localName == 'featureMembers' || localName == 'featureMember' || localName == 'member') {\r\n            const context = objectStack[0];\r\n            let featureType = context['featureType'];\r\n            let featureNS = context['featureNS'];\r\n            const prefix = 'p';\r\n            const defaultPrefix = 'p0';\r\n            if (/*!featureType && */node.childNodes) {\r\n                featureType = [], featureNS = {};\r\n                for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\r\n                    const child = node.childNodes[i];\r\n                    if (child.nodeType === 1) {\r\n                        const ft = child.nodeName.split(':').pop();\r\n                        if (featureType.indexOf(ft) === -1) {\r\n                            let key = '';\r\n                            let count = 0;\r\n                            const uri = child.namespaceURI;\r\n                            for (let candidate in featureNS) {\r\n                                if (featureNS[candidate] === uri) {\r\n                                    key = candidate;\r\n                                    break;\r\n                                }\r\n                                ++count;\r\n                            }\r\n                            if (!key) {\r\n                                key = prefix + count;\r\n                                featureNS[key] = uri;\r\n                            }\r\n                            featureType.push(key + ':' + ft);\r\n                        }\r\n                    }\r\n                }\r\n                if (localName != 'featureMember') {\r\n                    // recheck featureType for each featureMember\r\n                    context['featureType'] = featureType;\r\n                    context['featureNS'] = featureNS;\r\n                }\r\n            }\r\n            if (typeof featureNS === 'string') {\r\n                const ns = featureNS;\r\n                featureNS = {};\r\n                featureNS[defaultPrefix] = ns;\r\n            }\r\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\r\n            const parsersNS = {};\r\n            const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\r\n            for (let p in featureNS) {\r\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n                const parsers = {};\r\n                for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\r\n                    const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\r\n                        defaultPrefix : featureTypes[i].split(':')[0];\r\n                    if (featurePrefix === p) {\r\n                        parsers[featureTypes[i].split(':').pop()] =\r\n                            (localName == 'featureMembers') ?\r\n                                ol.xml.makeArrayPusher(this.readFeatureElement, this) :\r\n                                ol.xml.makeReplacer(this.readFeatureElement, this);\r\n                    }\r\n                }\r\n                parsersNS[featureNS[p]] = parsers;\r\n            }\r\n            if (localName == 'featureMember') {\r\n                features = ol.xml.pushParseAndPop(undefined, parsersNS, node, objectStack);\r\n            } else {\r\n                features = ol.xml.pushParseAndPop([], parsersNS, node, objectStack);\r\n            }\r\n        }\r\n        if (features === null) {\r\n            features = [];\r\n        }\r\n        return features;\r\n    };\r\n\r\n    ol.proj.proj4.register(proj4);\r\n    // OpenLayers usa para las proyecciones geográficas un valor ol.proj.METERS_PER_UNIT[ol.proj.Units.DEGREES], calculado con una esfera, salvo\r\n    // EPSG:4326, en la que usa ol.proj.EPSG4326.METERS_PER_UNIT, calculado con el geoide. Esto hace que las proyecciones en EPSG:4258 salgan desplazadas,\r\n    // pese a que para todos los efectos son iguales a las EPSG:4326. Para evitar eso, introducimos en las 4258 el valor ol.proj.EPSG4326.METERS_PER_UNIT.\r\n    ol.proj.get('EPSG:4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n    ol.proj.get('urn:ogc:def:crs:EPSG::4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n    ol.proj.get('http://www.opengis.net/gml/srs/epsg.xml#4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n\r\n    // Reescribimos la obtención de proyección para que soporte códigos tipo EPSG:X, urn:ogc:def:crs:EPSG::X y http://www.opengis.net/gml/srs/epsg.xml#X\r\n    ol.proj.oldGet = ol.proj.get;\r\n    ol.proj.get = function (projectionLike) {\r\n        if (typeof projectionLike === 'string') {\r\n            projectionLike = projectionLike.trim();\r\n            TC.loadProjDef({ crs: projectionLike, sync: true });\r\n        }\r\n        return ol.proj.oldGet.call(this, projectionLike);\r\n    };\r\n\r\n    // Reescritura de código para transformar las geometrías de getFeatureInfo que están en un CRS distinto\r\n    ol.format.GMLBase.prototype.readGeometryElement = function (node, objectStack) {\r\n        var context = /** @type {Object} */ (objectStack[0]);\r\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\r\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\r\n        /** @type {ol.geom.Geometry} */\r\n\r\n        // Parche para poder leer coordenadas en EPSG:4326 con orden incorrecto (las crea QGIS, por ejemplo)\r\n        if (this instanceof ol.format.GML2CRS84 || this instanceof ol.format.GML3CRS84) {\r\n            if (context.srsName !== 'EPSG:4326' || !context.srsName) {\r\n                throw new Error(\"Conflicto de CRS\");\r\n            }\r\n        }\r\n        if (!context.srsName) {\r\n            context.srsName = this.srsName;\r\n        }\r\n        context.dataProjection = ol.proj.get(context.srsName);\r\n        const geometry = ol.xml.pushParseAndPop(null,\r\n            this.GEOMETRY_PARSERS, node, objectStack, this);\r\n        if (geometry) {\r\n            return /** @type {ol.geom.Geometry} */ (\r\n                ol.format.Feature.transformWithOptions(geometry, false, context));\r\n        } else {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n    const ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\r\n\r\n    // Reescritura de código para hacerlo compatible con GML generado por inspire:\r\n    // No se puede considerar geometría cualquier cosa que tenga elementos anidados.\r\n    ol.format.GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\r\n        let geometryName;\r\n        const values = {};\r\n        for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            let value;\r\n            const localName = n.localName;\r\n            // first, check if it is simple attribute\r\n            if (n.childNodes.length === 0\r\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\r\n                value = ol.xml.getAllTextContent(n, false);\r\n                if (ONLY_WHITESPACE_RE.test(value)) {\r\n                    value = undefined;\r\n                }\r\n            } else {\r\n                if (asFeature) {\r\n                    //if feature, try it as a geometry\r\n                    value = this.readGeometryElement(n, objectStack);\r\n                }\r\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\r\n                    value = this.readFeatureElementInternal(n, objectStack, false);\r\n                } else if (localName !== 'boundedBy' && localName !== 'referencePoint') {\r\n                    // boundedBy is an extent and must not be considered as a geometry\r\n                    // flacunza: Tampoco referencePoint\r\n                    geometryName = localName;\r\n                }\r\n            }\r\n\r\n            if (values[localName]) {\r\n                if (!(values[localName] instanceof Array)) {\r\n                    values[localName] = [values[localName]];\r\n                }\r\n                values[localName].push(value);\r\n            } else {\r\n                values[localName] = value;\r\n            }\r\n\r\n            const len = n.attributes.length;\r\n            if (len > 0) {\r\n                values[localName] = { _content_: values[localName] };\r\n                for (let i = 0; i < len; i++) {\r\n                    const attName = n.attributes[i].name;\r\n                    values[localName][attName] = n.attributes[i].value;\r\n                }\r\n            }\r\n        }\r\n        if (!asFeature) {\r\n            return values;\r\n        } else {\r\n            const feature = new ol.Feature(values);\r\n            if (geometryName) {\r\n                feature.setGeometryName(geometryName);\r\n            }\r\n            const fid = node.getAttribute('fid') ||\r\n                node.getAttributeNS(this.namespace, 'id');\r\n            if (fid) {\r\n                feature.setId(fid);\r\n            }\r\n            return feature;\r\n        }\r\n    };\r\n\r\n    //////////////////////// end ol patches\r\n\r\n    const getRGBA = function (color, opacity) {\r\n        var result;\r\n        if (color) {\r\n            result = ol.color.asArray(color);\r\n            result = result.slice();\r\n            if (opacity !== undefined) {\r\n                result[3] = opacity;\r\n            }\r\n        }\r\n        else {\r\n            result = [0, 0, 0, 1];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Obtiene el objeto de opciones de una vista que restringe los niveles de zoom activos sobre el mapa dependiendo de las opciones definidas sobre\r\n     * el mapa base activo.\r\n     */\r\n    var getResolutionOptions = function (mapWrap, layer) {\r\n        var view = mapWrap.map.getView();\r\n        var prevRes = view.getResolution();\r\n\r\n        var pms = {\r\n            projection: view.getProjection(),\r\n            center: view.getCenter(),\r\n            resolution: prevRes,\r\n            enableRotation: false\r\n        };\r\n\r\n        if (mapWrap.parent.maxExtent) {\r\n            pms.extent = mapWrap.parent.maxExtent;\r\n        }\r\n\r\n        // GLS 06/03/2019 Corregimos bug 24832, si el mapa de fondo es el mapa en blanco, asignamos las resoluciones del mapa de fondo actual\r\n        var layerForResolutions = layer;\r\n        if (layer.type === TC.Consts.layerType.VECTOR && mapWrap.parent.getBaseLayer()) {\r\n            layerForResolutions = mapWrap.parent.getBaseLayer();\r\n        }\r\n\r\n        var res = layerForResolutions.getResolutions ? layerForResolutions.getResolutions() : [];\r\n        var maxRes;\r\n        var minRes;\r\n\r\n        if (res && res.length) {\r\n            maxRes = layerForResolutions.maxResolution || res[0];\r\n            minRes = layerForResolutions.minResolution || res[res.length - 1];\r\n\r\n            var minResIx = res.indexOf(minRes);\r\n            var maxResIx = res.indexOf(maxRes);\r\n\r\n            pms.resolutions = res.slice(maxResIx, minResIx + 1);\r\n        }\r\n        else {\r\n            maxRes = layerForResolutions.maxResolution;\r\n            minRes = layerForResolutions.minResolution;\r\n        }\r\n        if (minRes) {\r\n            pms.minResolution = minRes;\r\n            if (prevRes < minRes) {\r\n                pms.resolution = minRes;\r\n            }\r\n        }\r\n        if (maxRes) {\r\n            pms.maxResolution = maxRes;\r\n            if (prevRes > maxRes) {\r\n                pms.resolution = maxRes;\r\n            }\r\n        }\r\n\r\n        return pms;\r\n    };\r\n\r\n\r\n    TC.wrap.Map.prototype.setMap = function () {\r\n        var self = this;\r\n        var center = [\r\n            (self.parent.initialExtent[0] + self.parent.initialExtent[2]) / 2,\r\n            (self.parent.initialExtent[1] + self.parent.initialExtent[3]) / 2\r\n        ];\r\n\r\n        var proj4Obj = proj4(self.parent.crs);\r\n        var addEquivalentProjections = function () {\r\n            // Añadimos proyecciones equivalentes y transformaciones necesarias.\r\n            var crsCode = self.parent.crs.substr(self.parent.crs.lastIndexOf(':') + 1);\r\n\r\n            var projOptions = {\r\n                units: proj4Obj.oProj.units,\r\n                global: true\r\n            };\r\n\r\n            var equivalentProjections = [];\r\n            if (crsCode !== '4326') { // Este código ya está metido, no lo machacamos\r\n                projOptions.code = 'EPSG:' + crsCode;\r\n                equivalentProjections.push(new ol.proj.Projection(projOptions));\r\n                projOptions.code = 'urn:ogc:def:crs:EPSG::' + crsCode;\r\n                equivalentProjections.push(new ol.proj.Projection(projOptions));\r\n\r\n                ol.proj.addEquivalentProjections(equivalentProjections);\r\n            }\r\n            //var doTransform = function (fn, input, opt_output, opt_dimension) {\r\n            //    var result = [];\r\n            //    var dimension = opt_dimension || 2;\r\n            //    for (var i = 0; i < input.length; i += dimension) {\r\n            //        var transformed = Array.prototype.slice.call(fn(input.slice(i, i + dimension)));\r\n            //        if (dimension === 3 || dimension === 4) {\r\n            //            transformed = transformed.slice(0, 2).concat(input.slice(i + 2, (i + 2) + (dimension - 2)));\r\n            //        }\r\n\r\n            //        result = result.concat(transformed);\r\n            //    }\r\n            //    if (Array.isArray(opt_output)) {\r\n            //        opt_output.length = 0;\r\n            //        for (var i = 0; i < result.length; i++) {\r\n            //            opt_output[i] = result[i];\r\n            //        }\r\n            //        result = opt_output;\r\n            //    }\r\n            //    return result;\r\n            //};\r\n            //var fromEPSG4326 = function (input, opt_output, opt_dimension) {\r\n            //    return doTransform(proj4Obj.forward, input, opt_output, opt_dimension);\r\n            //};\r\n            //var toEPSG4326 = function (input, opt_output, opt_dimension) {\r\n            //    return doTransform(proj4Obj.inverse, input, opt_output, opt_dimension);\r\n            //};\r\n\r\n            ol.proj.proj4.register(proj4);\r\n\r\n            //ol.proj.addEquivalentTransforms(\r\n            //    ol.proj.EPSG4326.PROJECTIONS,\r\n            //    equivalentProjections,\r\n            //    fromEPSG4326,\r\n            //    toEPSG4326);\r\n        };\r\n\r\n        addEquivalentProjections();\r\n\r\n        var projOptions = {\r\n            code: self.parent.crs,\r\n            units: proj4Obj.oProj.units\r\n        };\r\n        if (self.parent.crs === 'EPSG:4326') {\r\n            projOptions.axisOrientation = 'neu';\r\n        }\r\n        var projection = new ol.proj.Projection(projOptions);\r\n\r\n        var interactions = ol.interaction.defaults({ constrainResolution: true });\r\n\r\n        var viewOptions = {\r\n            projection: projection,\r\n            center: center,\r\n            enableRotation: false\r\n        };\r\n        const extentForResolution = self.parent.maxExtent || self.parent.initialExtent;\r\n        viewOptions.extent = extentForResolution;\r\n        var rect = self.parent.div.getBoundingClientRect();\r\n        var dx = extentForResolution[2] - extentForResolution[0];\r\n        var dy = extentForResolution[3] - extentForResolution[1];\r\n        if (rect.width / rect.height > dx / dy) {\r\n            viewOptions.resolution = dx / rect.width;\r\n        }\r\n        else {\r\n            viewOptions.resolution = dy / rect.height;\r\n        }\r\n\r\n        self.map = new ol.Map({\r\n            target: self.parent.div,\r\n            view: new ol.View(viewOptions),\r\n            controls: [],\r\n            interactions: interactions,\r\n            pixelRatio: 1 /* 08/02/2019 GLS: \r\n            Establecemos el pixelRatio siempre a uno, porque OL sólo atiende al valor al principio, \r\n            si después se hace zoom in/out del navegador, OL no atiende el cambio lo que provoca que el mapa se vea borroso,\r\n            click se sitúa mal, popup se sitúa entre otros efectos.\r\n            Lo gestionamos nosotros hasta que lo soporten del todo. Relacionado con las tareas/bugs:\r\n                Bug 25976:Mapa situación en blanco\r\n                Bug 25954:Canvas en blanco con zoom mayor al 100%\r\n                Bug 23855:Mapa de situación se muestra en blanco\r\n            */\r\n        });\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            // Parche para corregir https://github.com/openlayers/openlayers/issues/2904\r\n            // saben que tienen un bug cuando se trabaja sobre un mapa con zoom\r\n            self.map.getEventPixel = function (event) {\r\n                var viewportPosition = this.viewport_.getBoundingClientRect();\r\n                var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\r\n                eventPosition = eventPosition.clientX ? eventPosition : (eventPosition.pointerEvent ? eventPosition.pointerEvent : eventPosition);\r\n                return [\r\n                    (eventPosition.clientX - viewportPosition.left) * window.devicePixelRatio,\r\n                    (eventPosition.clientY - viewportPosition.top) * window.devicePixelRatio\r\n                ];\r\n            };\r\n        }\r\n\r\n        self.map._wrap = self;\r\n        self._promise = Promise.resolve(self.map);\r\n\r\n        // mantenemos el ancho y alto del canvas en números enteros\r\n        self.manageSize.call(self.map);\r\n\r\n        // Para evitar estiramientos en canvas\r\n        var updateSize = function () {\r\n            self.map.updateSize();\r\n        };\r\n        self.parent.div.addEventListener(RESIZE, updateSize);\r\n        self.parent.one(TC.Consts.event.MAPLOAD, updateSize);\r\n\r\n        self.map.on(SINGLECLICK, function (e) {\r\n\r\n            if (self.parent.view === TC.Consts.view.PRINTING) {\r\n                return;\r\n            }\r\n\r\n            self.parent.workLayers.forEach(function (wl) {\r\n                delete wl._noFeatureClicked;\r\n            });\r\n            var featuresInLayers = self.parent.workLayers.map(function () {\r\n                return false;\r\n            });\r\n            self.map.forEachFeatureAtPixel(e.pixel,\r\n                function (feature, layer) {\r\n                    if (feature._wrap && feature._wrap.parent.showsPopup) {\r\n                        for (var i = 0; i < self.parent.workLayers.length; i++) {\r\n                            var wl = self.parent.workLayers[i];\r\n                            if (wl.wrap.layer === layer) {\r\n                                featuresInLayers[i] = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        self.parent.trigger(TC.Consts.event.FEATURECLICK, { feature: feature._wrap.parent });\r\n                        return feature;\r\n                    }\r\n                },\r\n                {\r\n                    hitTolerance: hitTolerance\r\n                });\r\n            for (var i = 0; i < featuresInLayers.length; i++) {\r\n                if (!featuresInLayers[i]) {\r\n                    self.parent.trigger(TC.Consts.event.NOFEATURECLICK, { layer: self.parent.workLayers[i] });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // GLS: 13/02/2019 cambiamos el orden de las suscripciones a eventos de cambio de resolución y moveend\r\n        // para gestionar el borrado del estado inicial. Si no lo hacemos el cambio al extent inicial se registra como evento de usuario\r\n        // porque la carga inicial del mapa con promesas nativas es más rápido que antes.\r\n        // Bug:26001 Borrar estado inicial al entrar\r\n        const addMoveEndListener = function () {\r\n            self.map.on(MOVEEND, function () {\r\n                self.parent.trigger(TC.Consts.event.ZOOM);\r\n            });\r\n        };\r\n        var olView = self.map.getView();\r\n        olView.on('change:resolution', function () {\r\n            if (!self.map.hasListener(MOVEEND)) {\r\n                self.map.once(MOVEEND, function () {\r\n                    addMoveEndListener();\r\n                });\r\n            }\r\n\r\n            self.parent.trigger(TC.Consts.event.BEFOREZOOM);\r\n        }, self.parent);\r\n\r\n        const onChangeView = function () {\r\n            if (!self.map.hasListener(MOVEEND)) {\r\n                self.map.un('change:view', onChangeView);\r\n                addMoveEndListener();\r\n            }\r\n        };\r\n        self.map.on('change:view', onChangeView);\r\n\r\n        /**\r\n         * Restringe los niveles de zoom activos sobre el mapa dependiendo de las opciones definidas sobre\r\n         * el mapa base activo.\r\n         */\r\n        var limitZoomLevels = function (layer) {\r\n            var prevRes = self.map.getView().getResolution();\r\n            var prevZoom = self.map.getView().getZoom();\r\n\r\n            var pms = getResolutionOptions(self, layer);\r\n\r\n            var view = new ol.View(pms);\r\n            self.map.setView(view);\r\n            self.map.render();\r\n        };\r\n\r\n        self.parent.on(TC.Consts.event.BASELAYERCHANGE, function (e) {\r\n            // Solo se limitan las resoluciones cuando estamos en un CRS por defecto, donde no se repixelan teselas\r\n            if (self.parent.crs === self.parent.options.crs && !self.parent.on3DView && e.layer.type !== TC.Consts.layerType.VECTOR) {\r\n                limitZoomLevels(e.layer);\r\n            }\r\n        });\r\n        self.parent.on(TC.Consts.event.MAPLOAD, function (e) {\r\n            limitZoomLevels(self.parent.getBaseLayer());\r\n        });\r\n\r\n        const olMapViewport = self.map.getViewport();\r\n\r\n        olMapViewport.addEventListener(TC.Consts.event.MOUSEMOVE, function (e) {\r\n            var hit = false;\r\n\r\n            if (!self.parent.activeControl || !self.parent.activeControl.isExclusive()) {\r\n\r\n                if (self.parent.view === TC.Consts.view.PRINTING) {\r\n                    return;\r\n                }\r\n\r\n                var pixel = self.map.getEventPixel(e);\r\n                hit = self.map.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                    var result = true;\r\n                    if (feature._wrap && !feature._wrap.parent.showsPopup && !feature._wrap.parent.options.selectable) {\r\n                        result = false;\r\n                    }\r\n\r\n                    if (result && feature._wrap) {\r\n                        self.parent.trigger(TC.Consts.event.FEATUREOVER, {\r\n                            feature: feature._wrap.parent\r\n                        });\r\n                    }\r\n\r\n                    return result;\r\n                }, { hitTolerance: hitTolerance });\r\n            }\r\n\r\n            if (hit) {\r\n                olMapViewport.style.cursor = 'pointer';\r\n            } else {\r\n                olMapViewport.style.cursor = '';\r\n                //self.parent.trigger(TC.Consts.event.FEATUREOUT);\r\n            }\r\n        });\r\n    };\r\n\r\n    var getMetersPerUnit = function (proj, extentInDegrees) {\r\n        var units = proj.getUnits();\r\n        if (!units || units === ol.proj.Units.DEGREES) {\r\n            return TC.Util.getMetersPerDegree(extentInDegrees);\r\n        }\r\n        return ol.proj.METERS_PER_UNIT[units];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getMetersPerUnit = function () {\r\n        var self = this;\r\n        return getMetersPerUnit(ol.proj.get(self.parent.crs), self.getExtent());\r\n    };\r\n\r\n    var getUnitRatio = function (options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var defaultCrs = self.parent.options.crs || TC.Cfg.crs;\r\n        var defaultProj = ol.proj.get(defaultCrs);\r\n        var newProj = ol.proj.get(options.crs);\r\n        return getMetersPerUnit(newProj, options.extentInDegrees) / getMetersPerUnit(defaultProj, options.extentInDegrees);\r\n    };\r\n\r\n    var normalizeProjection = function (options) {\r\n        var result;\r\n        if (options.axisOrientation) {\r\n            result = new ol.proj.Projection({\r\n                code: options.crs,\r\n                axisOrientation: options.axisOrientation\r\n            });\r\n        }\r\n        else {\r\n            result = ol.proj.get(options.crs);\r\n        }\r\n        if (!result.getUnits()) {\r\n            result.units_ = ol.proj.Units.DEGREES;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const baseLayer = options.baseLayer || self.parent.baseLayer;\r\n        var extent;\r\n        if (options.extent) {\r\n            extent = options.extent;\r\n        }\r\n        else {\r\n            extent = ol.proj.transformExtent(self.getExtent(), self.parent.crs, options.crs);\r\n        }\r\n        const extentInDegrees = ol.proj.transformExtent(extent, options.crs, 'EPSG:4326');\r\n        const unitRatio = getUnitRatio.call(self, {\r\n            crs: options.crs,\r\n            extentInDegrees: extentInDegrees\r\n        });\r\n        const projection = normalizeProjection(options);\r\n        const oldView = self.map.getView();\r\n        const viewOptions = {\r\n            projection: projection,\r\n            enableRotation: false\r\n        };\r\n        const resolutions = baseLayer.getResolutions();\r\n\r\n        if (resolutions && resolutions.length) {\r\n            viewOptions.resolutions = resolutions;\r\n        }\r\n        else {\r\n            viewOptions.minZoom = oldView.getMinZoom();\r\n            viewOptions.maxZoom = oldView.getMaxZoom();\r\n            const minResolution = baseLayer.wrap.layer.getMinResolution();\r\n            const maxResolution = baseLayer.wrap.layer.getMaxResolution();\r\n            var transformFactor = 1;\r\n            if (minResolution === 0 || maxResolution === Number.POSITIVE_INFINITY) {\r\n                const oldUnitRatio = getUnitRatio.call(self, {\r\n                    crs: self.parent.crs,\r\n                    extentInDegrees: extentInDegrees\r\n                });\r\n                transformFactor = oldUnitRatio / unitRatio;\r\n            }\r\n            if (minResolution === 0) {\r\n                viewOptions.minResolution = oldView.getMinResolution() * transformFactor;\r\n            }\r\n            else {\r\n                viewOptions.minResolution = minResolution;\r\n            }\r\n            if (maxResolution === Number.POSITIVE_INFINITY) {\r\n                viewOptions.maxResolution = oldView.getMaxResolution() * transformFactor;\r\n            }\r\n            else {\r\n                viewOptions.maxResolution = maxResolution;\r\n            }\r\n        }\r\n\r\n        // GLS: transformamos también el centro     \r\n        viewOptions.center = ol.proj.transform(self.getCenter(), self.parent.crs, options.crs);\r\n\r\n        var newView = new ol.View(viewOptions);\r\n        self.map.setView(newView);\r\n        self.parent.initialExtent = unitRatio !== 1 ? ol.proj.transformExtent(self.parent.initialExtent, self.parent.crs, options.crs) : self.parent.options.initialExtent;\r\n        if (self.parent.options.maxExtent) {\r\n            self.parent.options.maxExtent = self.parent.maxExtent = unitRatio !== 1 ? ol.proj.transformExtent(self.parent.maxExtent, self.parent.crs, options.crs) : self.parent.options.maxExtent;\r\n        }\r\n        newView.fit(extent, { nearest: true });\r\n    };\r\n\r\n    /*\r\n     *  insertLayer: inserts OpenLayers layer at index\r\n     *  Parameters: OpenLayers.Layer, number\r\n     */\r\n    TC.wrap.Map.prototype.insertLayer = function (olLayer, idx) {\r\n        var self = this;\r\n        var layers = self.map.getLayers();\r\n        var alreadyExists = false;\r\n        for (var i = 0; i < layers.getLength(); i++) {\r\n            if (layers.item(i) === olLayer) {\r\n                alreadyExists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (alreadyExists) {\r\n            layers.remove(olLayer);\r\n            layers.insertAt(idx, olLayer);\r\n        }\r\n        else {\r\n            if (idx < 0) {\r\n                layers.push(olLayer);\r\n            }\r\n            else {\r\n                layers.insertAt(idx, olLayer);\r\n            }\r\n            // Solo se limitan las resoluciones cuando estamos en un CRS por defecto, donde no se repixelan teselas\r\n            var view = self.map.getView();\r\n            if (self.parent.crs === self.parent.options.crs) {\r\n                if (olLayer instanceof ol.layer.Tile) {\r\n                    var resolutions = olLayer.getSource().getResolutions();\r\n                    view.maxResolution_ = resolutions[0];\r\n                    view.minResolution_ = resolutions[resolutions.length - 1];\r\n                }\r\n            }\r\n            else {\r\n                // Cambiamos los límites de resolución de la capa a los de la vista. Esto lo hacemos porque su resolución está en otro CRS.\r\n                if (olLayer instanceof ol.layer.Tile) {\r\n                    olLayer.setMaxResolution(view.getMaxResolution());\r\n                    olLayer.setMinResolution(view.getMinResolution());\r\n                }\r\n            }\r\n\r\n            var wrap = olLayer._wrap;\r\n            var loadingTileCount = 0;\r\n\r\n            var beforeTileLoadHandler = function (e) {\r\n                wrap.parent.state = TC.Layer.state.LOADING;\r\n                if (loadingTileCount <= 0) {\r\n                    loadingTileCount = 0;\r\n                    self.parent.trigger(TC.Consts.event.BEFORELAYERUPDATE, { layer: wrap.parent });\r\n                }\r\n                olLayer._loadingTileCount = olLayer._loadingTileCount + 1;\r\n            };\r\n            if (wrap.parent.state === TC.Layer.state.LOADING && wrap.parent.isRaster()) {\r\n                beforeTileLoadHandler();\r\n            }\r\n            wrap.$events.on(TC.Consts.event.BEFORETILELOAD, beforeTileLoadHandler);\r\n\r\n            wrap.$events.on(TC.Consts.event.TILELOAD, function (e) {\r\n                loadingTileCount = loadingTileCount - 1;\r\n                if (loadingTileCount <= 0) {\r\n                    loadingTileCount = 0;\r\n                    wrap.parent.state = TC.Layer.state.IDLE;\r\n                    self.parent.trigger(TC.Consts.event.LAYERUPDATE, { layer: wrap.parent });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.removeLayer = function (olLayer) {\r\n        this.map.removeLayer(olLayer);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerCount = function () {\r\n        return this.map.getLayerGroup().getLayers().getLength();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.indexOfFirstVector = function () {\r\n        var result = -1;\r\n        this.map.getLayerGroup().getLayers().forEach(function (l, i) {\r\n            if (l instanceof ol.layer.Vector && result === -1) {\r\n                result = i;\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerIndex = function (olLayer) {\r\n        var result = -1;\r\n        this.map.getLayerGroup().getLayers().forEach(function (elm, idx) {\r\n            if (elm === olLayer) {\r\n                result = idx;\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setLayerIndex = function (olLayer, index) {\r\n        var layers = this.map.getLayers();\r\n        var list = layers.getArray();\r\n        var ix = list.indexOf(olLayer);\r\n\r\n        if (ix > -1 && ix != index) {\r\n            this.map.removeLayer(olLayer);\r\n            this.insertLayer(olLayer, index);\r\n            //layers.setAt(index, olLayer);\r\n        }\r\n        else {\r\n            //no está el layer, así que no hago nada\r\n        }\r\n\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setBaseLayer = function (olLayer) {\r\n        var self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var setLayer = function (curBl) {\r\n                // GLS: si se llega después de una animación el valor de self.parent.getBaseLayer() ya es el definitivo y no el actual lo que provoca efectos indeseados. \r\n                // ir a línea 1313: paso como parámetro el baseLayer actual en el caso de animación.\r\n                var curBl = curBl || self.parent.getBaseLayer();\r\n                if (curBl) {\r\n                    self.map.removeLayer(curBl.wrap.layer);\r\n                    if (olLayer instanceof ol.layer.Image) { // Si es imagen no teselada\r\n                        olLayer._wrap.setProjection({\r\n                            crs: self.parent.crs\r\n                        });\r\n                    }\r\n\r\n                    if (olLayer._wrap.parent.type === TC.Consts.layerType.WMTS) {\r\n                        var layerProjectionOptions = { crs: self.parent.crs, oldCrs: olLayer.getSource().getProjection().getCode() };\r\n\r\n                        if (layerProjectionOptions.oldCrs !== layerProjectionOptions.crs) {\r\n                            olLayer._wrap.parent.setProjection(layerProjectionOptions);\r\n                        }\r\n                    }\r\n\r\n                    //if (olLayer instanceof ol.layer.Tile) { // Si es imagen teselada\r\n                    //    const view = self.map.getView();\r\n                    //    const resolutions = olLayer.getSource().getResolutions();\r\n                    //    if (resolutions) {\r\n                    //        view.options_.resolutions = resolutions;\r\n                    //        view.applyOptions_(view.options_);\r\n                    //    }\r\n                    //}\r\n                }\r\n                self.insertLayer(olLayer, 0);\r\n                self.map.getControls().forEach(function (ctl) {\r\n                    if (ctl instanceof ol.control.ZoomSlider) {\r\n                        ctl.initSlider_();\r\n                    }\r\n                });\r\n                resolve();\r\n            };\r\n\r\n            // Toda esta lógica antes de llamar a setLayer() es para hacer un zoom a la nueva resolución\r\n            // cuando la nueva capa no llega a la resolución actual\r\n            var viewOptions = getResolutionOptions(self, olLayer._wrap.parent);\r\n            var view = self.map.getView();\r\n            var currentResolution = view.getResolution();\r\n            if (viewOptions.resolutions) {\r\n                //buscamos la nueva resolución: o una que sea similar a la actual dentro de los márgenes admitidos, o la inmediata superior\r\n                var newRes = viewOptions.resolutions\r\n                    .sort(function (a, b) { return a - b })\r\n                    .reduce(function (prev, elm) {\r\n                        if (prev === 0 &&\r\n                            (elm > currentResolution || Math.abs(1 - (currentResolution / elm)) < self.parent.options.maxResolutionError)) {\r\n                            return elm;\r\n                        }\r\n                        return prev;\r\n                    }, 0);\r\n                if (newRes !== currentResolution) {\r\n                    if (self.parent.isLoaded) {\r\n                        view.animate({ resolution: newRes, duration: TC.Consts.ZOOM_ANIMATION_DURATION }, setLayer.bind(self, self.parent.getBaseLayer()));\r\n                    }\r\n                    else { // Primera carga, no animamos\r\n                        view.setResolution(newRes);\r\n                        setLayer();\r\n                    }\r\n                }\r\n                else {\r\n                    setLayer();\r\n                }\r\n            }\r\n            else {\r\n                setLayer();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setExtent = function (extent, options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const applyExtent = function (view, mapSize, resolve, reject) {\r\n            var res = view.getResolutionForExtent(extent, mapSize);\r\n            // URI: Esta logica está fusilada de la función fit de un objeto view de OL3\r\n            if (view.constrainResolution) {\r\n                var constrainedResolution = view.constrainResolution(res, 0, 0);\r\n                if (constrainedResolution < res) {\r\n                    if (constrainedResolution / res < TC.Consts.EXTENT_TOLERANCE) {\r\n                        constrainedResolution = view.constrainResolution(\r\n                            constrainedResolution, -1, 0);\r\n                    }\r\n                }\r\n                res = constrainedResolution;\r\n            }\r\n\r\n            // flacunza: No animamos si la duración va a ser 0, porque a veces el zoom no se completa\r\n            // GLS: antes de resolver la promesa validamos si existe animación\r\n            // URI: si la animacion no existe ponemos duracion 0\r\n            // flacunza: en caso de que animate=undefined, se anima\r\n            const center = [((extent[0] + extent[2]) / 2), ((extent[1] + extent[3]) / 2)];\r\n            if (options.animate === void (0) || options.animate) {\r\n                view.animate({\r\n                    resolution: res,\r\n                    center: center,\r\n                    duration: TC.Consts.ZOOM_ANIMATION_DURATION\r\n                }, resolve);\r\n            }\r\n            else {\r\n                view.setCenter(center);\r\n                view.setResolution(res);\r\n                resolve();\r\n            }\r\n        };\r\n\r\n        const setPromise = function (extent) {\r\n            self._setExtentPromise = new Promise(function (resolve, reject) {\r\n                // Timeout porque OL3 no tiene evento featuresadded, por tanto cuando se activa map.options.zoomToMarkers\r\n                // se lanza un setExtent por marcador. El timeout evita ejecuciones a lo tonto.\r\n                clearTimeout(self._timeout);\r\n                self._timeout = setTimeout(function () {\r\n                    var mapSize = self.map.getSize();\r\n                    var view = self.map.getView();\r\n\r\n                    if (self.parent.baseLayer) {\r\n                        self.parent.baseLayer.wrap.getLayer().then(function (olLayer) {\r\n                            // Todo esto para evitar que haga más zoom que el admisible por la capa base\r\n                            const res = view.getResolutionForExtent(extent, mapSize);\r\n                            const resolutions = self.getResolutions();\r\n                            const maxZoom = view.getMaxZoom();\r\n                            if (maxZoom < resolutions.length - 1) {\r\n                                resolutions.length = maxZoom + 1;\r\n                            }\r\n\r\n                            if (resolutions.length > 0) {\r\n                                var minRes = Math.min.apply(self, resolutions);\r\n                                if (minRes > res) {\r\n                                    var factor = 0.5 * (minRes / res - 1);\r\n                                    var dx = ol.extent.getWidth(extent) * factor;\r\n                                    var dy = ol.extent.getHeight(extent) * factor;\r\n                                    extent = extent.slice(0);\r\n                                    extent[0] = extent[0] - dx;\r\n                                    extent[1] = extent[1] - dy;\r\n                                    extent[2] = extent[2] + dx;\r\n                                    extent[3] = extent[3] + dy;\r\n                                }\r\n                            }\r\n\r\n                            applyExtent(view, mapSize, resolve, reject);\r\n\r\n                        });\r\n                    }\r\n                    else {\r\n                        applyExtent(view, mapSize, resolve, reject);\r\n                    }\r\n                }, 50);\r\n            });\r\n        };\r\n        Promise.resolve(self._setExtentPromise).finally(function () {\r\n            setPromise(extent);\r\n        });\r\n\r\n        return self._setExtentPromise;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getExtent = function () {\r\n        return this.map.getView().calculateExtent(this.map.getSize());\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setCenter = function (coords, options) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const callback = function () {\r\n                resolve();\r\n            };\r\n\r\n            const opts = options || {};\r\n            const view = self.map.getView();\r\n\r\n            if (opts.animate) {\r\n                view.animate({\r\n                    center: coords, duration: TC.Consts.ZOOM_ANIMATION_DURATION\r\n                }, callback);\r\n            }\r\n            else {\r\n                view.setCenter(coords);\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getCenter = function () {\r\n        return this.map.getView().getCenter();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolution = function () {\r\n        return this.map.getView().getResolution();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setResolution = function (resolution) {\r\n        this.getMap().then(function (olMap) {\r\n            olMap.getView().setResolution(resolution);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setRotation = function (rotation) {\r\n        this.getMap().then(function (olMap) {\r\n            olMap.getView().setRotation(rotation);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getRotation = function () {\r\n        return this.map.getView().getRotation();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolutions = function () {\r\n        return this.map.getView().getResolutions() || [];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getCoordinateFromPixel = function (xy) {\r\n        return this.map.getCoordinateFromPixel(xy);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getPixelFromCoordinate = function (coord) {\r\n        return this.map.getPixelFromCoordinate(coord);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getViewport = function (options) {\r\n        const self = this;\r\n        var result;\r\n        var opts = options || {\r\n        };\r\n        if (opts.synchronous) {\r\n            result = self.map.getViewport();\r\n        }\r\n        else {\r\n            result = new Promise(function (resolve, reject) {\r\n                self.getMap().then(function (olMap) {\r\n                    resolve(olMap.getViewport());\r\n                });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isNative = function (map) {\r\n        return map instanceof ol.Map;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isGeo = function () {\r\n        var units = this.map.getView().getProjection().getUnits();\r\n        return !units || units === ol.proj.Units.DEGREES;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.addPopup = function (popupCtl) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var draggable = popupCtl.options.draggable === undefined || popupCtl.options.draggable;\r\n            TC.loadJS(\r\n                draggable && !window.Draggabilly,\r\n                [TC.apiLocation + TC.Consts.url.DRAGGABILLY],\r\n                function () {\r\n                    self.getMap().then(function (olMap) {\r\n                        if (!popupCtl.popupDiv) {\r\n                            // No popups yet\r\n                            const popupDiv = TC.Util.getDiv();\r\n                            popupCtl.popupDiv = popupDiv;\r\n                            if (window.$) {\r\n                                popupCtl.$popupDiv = $(popupDiv);\r\n                            }\r\n                            popupDiv.classList.add(TC.control.Popup.prototype.CLASS);\r\n                            popupCtl.contentDiv = TC.Util.getDiv();\r\n                            popupCtl.contentDiv.classList.add(TC.control.Popup.prototype.CLASS + '-content');\r\n                            popupCtl.popupDiv.appendChild(popupCtl.contentDiv);\r\n                            popupCtl.menuDiv = TC.Util.getDiv();\r\n                            popupCtl.menuDiv.classList.add(TC.control.Popup.prototype.CLASS + '-menu');\r\n                            popupCtl.popupDiv.appendChild(popupCtl.menuDiv);\r\n                            self.parent.div.appendChild(popupDiv);\r\n\r\n                            var popup = new ol.Overlay({\r\n                                element: popupDiv,\r\n                                positioning: ol.OverlayPositioning.BOTTOM_LEFT\r\n                            });\r\n                            olMap.addOverlay(popup);\r\n                            popupCtl.wrap.popup = popup;\r\n\r\n                            //popupCtl._firstRender.resolve();\r\n                            //popupCtl.trigger(TC.Consts.event.CONTROLRENDER);\r\n                            const olMapViewport = olMap.getViewport();\r\n\r\n                            if (draggable) {\r\n                                const container = popupCtl.popupDiv.parentElement;\r\n                                popupCtl.popupDiv.classList.add(TC.Consts.classes.DRAGGABLE);\r\n\r\n\r\n                                container.addEventListener('touchmove', function (e) {\r\n                                    var parent = e.target;\r\n                                    do {\r\n                                        if (parent.matches('.tc-ctl-finfo-layer-content')) {\r\n                                            e.stopPropagation();\r\n                                            break;\r\n                                        }\r\n                                        parent = parent.parentElement;\r\n                                    }\r\n                                    while (parent);\r\n                                });\r\n\r\n                                // Tuneamos Draggabilly para que acepte excepciones a los asideros del elemento.\r\n                                const drag = new Draggabilly(container, {\r\n                                    //not: 'th,td, td *,input,select,.tc-ctl-finfo-coords'\r\n                                });\r\n                                drag.handleEvent = function (event) {\r\n                                    if (this.options.not && event.target.matches(this.options.not)) {\r\n                                        return;\r\n                                    }\r\n                                    Draggabilly.prototype.handleEvent.call(this, event);\r\n                                };\r\n                                drag.on('pointerDown', function (e, pointer) {\r\n                                    var bcr = e.target.getBoundingClientRect();\r\n                                    // Si estamos pulsando sobre una barra de scroll abortamos drag\r\n                                    if (bcr.left + e.target.clientWidth < pointer.pageX || bcr.top + e.target.clientHeight < pointer.pageY) {\r\n                                        drag._pointerCancel(e, pointer);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n                                drag.on('dragStart', function (e, pointer) {\r\n                                    popupCtl.setDragging(true);\r\n                                    popupCtl._currentOffset = popup.getOffset();\r\n                                    if (popupCtl._previousContainerPosition) {\r\n                                        var mapSize = olMap.getSize();\r\n                                        popup.setPosition(olMap.getCoordinateFromPixel([popupCtl._previousContainerPosition[0], mapSize[1] - popupCtl._previousContainerPosition[1]]));\r\n                                        popupCtl._currentOffset = [0, 0];\r\n                                        popup.setOffset(popupCtl._currentOffset);\r\n                                        delete popupCtl._previousContainerPosition;\r\n                                    }\r\n                                    else {\r\n                                        popupCtl._currentOffset = popup.getOffset();\r\n                                    }\r\n                                });\r\n                                drag.on('dragEnd', function (e) {\r\n                                    popupCtl.setDragging(false);\r\n                                    var coord1 = olMap.getCoordinateFromPixel([0, 0]);\r\n                                    var coord2 = olMap.getCoordinateFromPixel(popup.getOffset());\r\n                                    var coordDelta = [coord2[0] - coord1[0], coord2[1] - coord1[1]];\r\n                                    var position = popup.getPosition();\r\n                                    popup.setPosition([position[0] + coordDelta[0], position[1] + coordDelta[1]]);\r\n                                    popup.setOffset([0, 0]);\r\n                                    popupCtl._currentOffset = [0, 0];\r\n\r\n                                    const containerRect = container.getBoundingClientRect();\r\n                                    popupCtl._previousContainerPosition = [containerRect.left, containerRect.bottom];\r\n                                });\r\n                                //drag.on('dragMove', function (e, pointer, moveVector) {\r\n                                //popup.setOffset([popupCtl._currentOffset[0] + moveVector.x, popupCtl._currentOffset[1] + moveVector.y]);\r\n                                //});\r\n                                //.drag(function (ev, dd) {\r\n                                //    if (!ev.buttons && !Modernizr.touch) { // Evitamos que se mantenga el drag si no hay botón pulsado (p.e. en IE pulsando una scrollbar)\r\n                                //        return false;\r\n                                //    }\r\n                                //    popup.setOffset([popupCtl._currentOffset[0] + dd.deltaX, popupCtl._currentOffset[1] + dd.deltaY]);\r\n                                //}, {\r\n                                //    not: 'th,td, td *,input,select,.tc-ctl-finfo-coords'\r\n                                //    })                                \r\n                            }\r\n\r\n                            const mouseMoveHandler = function (e) {\r\n                                const viewport = olMap.getViewport();\r\n                                var hit = false;\r\n                                if (!self.parent.activeControl || !self.parent.activeControl.isExclusive()) {\r\n                                    var pixel = olMap.getEventPixel(e);\r\n                                    hit = olMap.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                                        var result = true;\r\n                                        if (feature._wrap && !feature._wrap.parent.showsPopup) {\r\n                                            result = false;\r\n                                        }\r\n                                        return result;\r\n                                    },\r\n                                        {\r\n                                            hitTolerance: hitTolerance\r\n                                        });\r\n                                }\r\n                                if (hit) {\r\n                                    viewport.style.cursor = 'pointer';\r\n                                } else {\r\n                                    viewport.style.cursor = '';\r\n                                }\r\n                            };\r\n\r\n                            // change mouse cursor when over marker\r\n                            olMapViewport.removeEventListener(MOUSEMOVE, mouseMoveHandler);\r\n                            olMapViewport.addEventListener(MOUSEMOVE, mouseMoveHandler);\r\n                        }\r\n                    });\r\n                    resolve();\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.hidePopup = function (popupCtl) {\r\n        var self = this;\r\n        self.parent.currentFeature = null;\r\n        if (popupCtl.popupDiv) {\r\n            popupCtl.popupDiv.classList.remove(TC.Consts.classes.VISIBLE);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.manageSize = function () {\r\n        const self = this;\r\n\r\n        // Para controlar que el mapa no se vea borroso porque no encajan el width y height con los width y height de CSS\r\n        const manageSize = function (event) {\r\n            var pixelRatio = window.devicePixelRatio || 1;\r\n            var canvas = event.context.canvas;\r\n            var bounding = canvas.getBoundingClientRect();\r\n\r\n            var idealWidth = pixelRatio * bounding.width;\r\n            var idealHeight = pixelRatio * bounding.height;\r\n\r\n            if (idealWidth !== bounding.width || !Number.isInteger(idealWidth)) {\r\n                idealWidth = Math.round(idealWidth);\r\n            }\r\n\r\n            if (idealHeight !== bounding.height || !Number.isInteger(idealHeight)) {\r\n                idealHeight = Math.round(idealHeight);\r\n            }\r\n\r\n            if (idealWidth !== bounding.width || idealHeight !== bounding.height) {\r\n                var newSize = [idealWidth, idealHeight];\r\n                event.target.setSize(newSize);\r\n            }\r\n        };\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            self.on(POSTCOMPOSE, manageSize);\r\n        }\r\n    };\r\n\r\n    var getFormatFromName = function (name) {\r\n        switch (name) {\r\n            case TC.Consts.layerType.KML:\r\n            case TC.Consts.mimeType.KML:\r\n            case TC.Consts.format.KMZ:\r\n                return new ol.format.KMLCustom({\r\n                    showPointNames: false\r\n                });\r\n            case TC.Consts.layerType.GPX:\r\n            case TC.Consts.mimeType.GPX:\r\n                return new ol.format.GPXCustom();\r\n            case TC.Consts.layerType.GEOJSON:\r\n            case TC.Consts.mimeType.GEOJSON:\r\n            case TC.Consts.mimeType.JSON:\r\n            case TC.Consts.format.JSON:\r\n                return new ol.format.GeoJSON();\r\n            case TC.Consts.format.GML2:\r\n                return new ol.format.GML2();\r\n            case TC.Consts.format.GML3:\r\n                return new ol.format.GML3();\r\n            case TC.Consts.format.GML32:\r\n                return new ol.format.GML32();\r\n            case TC.Consts.mimeType.GML:\r\n            case TC.Consts.format.GML:\r\n                return new ol.format.GML();\r\n            case TC.Consts.format.TOPOJSON:\r\n                return new ol.format.TopoJSON();\r\n            case TC.Consts.format.WKT:\r\n                return new ol.format.WKT();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.exportFeatures = function (features, options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var nativeStyle = createNativeStyle({\r\n            styles: self.parent.options.styles\r\n        });\r\n        var olFeatures = features.map(function (elm) {\r\n            var result = elm.wrap.feature.clone();\r\n            // Si la feature no tiene estilo propio le ponemos el definido por la API\r\n            if (!result.getStyle()) {\r\n                result.setStyle(nativeStyle);\r\n            }\r\n            // Miramos si tiene texto, en cuyo caso la features se clona para no contaminar la feature orignal \r\n            // y al clon se le añade el texto como atributo (necesario para exportar etiquetas en KML y GPX)\r\n            const text = getNativeFeatureStyle(result).getText();\r\n            if (text) {\r\n                result.setProperties({\r\n                    name: text.getText()\r\n                });\r\n            }\r\n            return result;\r\n        });\r\n        var format = getFormatFromName(options.format);\r\n\r\n        if (format instanceof ol.format.KML) {\r\n            // KML no tiene estilo para puntos aparte del de icono. Para puntos sin icono creamos uno en SVG.\r\n            olFeatures = olFeatures\r\n                .map(function (feature) {\r\n                    const geom = feature.getGeometry();\r\n                    if (geom instanceof ol.geom.Point) {\r\n                        // Si el punto no tiene icono, creamos uno nuevo con un icono generado como data URI a partir del estilo\r\n                        var style = getNativeFeatureStyle(feature);\r\n                        const shape = style.getImage();\r\n                        if (shape instanceof ol.style.RegularShape) {\r\n                            const radius = shape.getRadius();\r\n                            const stroke = shape.getStroke();\r\n                            const strokeWidth = stroke.getWidth();\r\n                            const diameter = (2 * radius) + strokeWidth + 1;\r\n                            const position = diameter / 2;\r\n                            const canvas = document.createElement('canvas');\r\n                            canvas.width = diameter;\r\n                            canvas.height = diameter;\r\n                            const vectorContext = ol.render.toContext(canvas.getContext('2d'), {\r\n                                size: [diameter, diameter]\r\n                            });\r\n                            const text = style.getText();\r\n                            style = style.clone();\r\n                            style.setText(); // Quitamos el texto para que no salga en el canvas\r\n                            vectorContext.setStyle(style);\r\n                            vectorContext.drawGeometry(new ol.geom.Point([position, position]));\r\n                            const newFeature = new ol.Feature(geom);\r\n                            newFeature.setProperties(feature.getProperties());\r\n                            newFeature.setStyle(new ol.style.Style({\r\n                                image: new ol.style.Icon({\r\n                                    src: canvas.toDataURL('image/png')\r\n                                }),\r\n                                text: text\r\n                            }));\r\n                            return newFeature;\r\n                        }\r\n                    }\r\n                    return feature;\r\n                });\r\n            // KML no pone etiquetas a líneas y polígonos. En esos casos ponemos un punto con la etiqueta.\r\n            const pointsToAdd = [];\r\n            olFeatures.forEach(function (feature) {\r\n                var style = getNativeFeatureStyle(feature);\r\n                const geometry = feature.getGeometry();\r\n                const text = style.getText();\r\n                var point;\r\n                if (text) {\r\n                    switch (true) {\r\n                        case geometry instanceof ol.geom.LineString:\r\n                            point = new ol.geom.Point(geometry.getCoordinateAt(0.5));\r\n                            break;\r\n                        case geometry instanceof ol.geom.Polygon:\r\n                            point = geometry.getInteriorPoint();\r\n                            break;\r\n                        case geometry instanceof ol.geom.MultiLineString:\r\n                            // Seleccionamos la línea más larga\r\n                            const lineStrings = geometry.getLineStrings();\r\n                            var maxLength = -1;\r\n                            point = new ol.geom.Point(lineStrings[lineStrings\r\n                                .map(function (line) {\r\n                                    return line.getLength();\r\n                                })\r\n                                .reduce(function (prev, cur, idx) {\r\n                                    if (cur > maxLength) {\r\n                                        maxLength = cur;\r\n                                        return idx;\r\n                                    }\r\n                                    return prev;\r\n                                }, -1)].getCoordinateAt(0.5));\r\n                            break;\r\n                        case geometry instanceof ol.geom.MultiPolygon:\r\n                            // Seleccionamos el polígono más grande\r\n                            const polygons = geometry.getPolygons();\r\n                            var maxArea = -1;\r\n                            point = polygons[polygons\r\n                                .map(function (polygon) {\r\n                                    return polygon.getArea();\r\n                                })\r\n                                .reduce(function (prev, cur, idx) {\r\n                                    if (cur > maxArea) {\r\n                                        maxArea = cur;\r\n                                        return idx;\r\n                                    }\r\n                                    return prev;\r\n                                }, -1)].getInteriorPoint();\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (point) {\r\n                        const newFeature = new ol.Feature(point);\r\n                        newFeature.setStyle(new ol.style.Style({\r\n                            text: text.clone(),\r\n                            image: new ol.style.Icon({\r\n                                crossOrigin: 'anonymous',\r\n                                src: TC.apiLocation + 'TC/css/img/transparent.gif'\r\n                            })\r\n                        }));\r\n                        pointsToAdd.push(newFeature);\r\n                    }\r\n                }\r\n            });\r\n            if (pointsToAdd.length) {\r\n                olFeatures = olFeatures.concat(pointsToAdd);\r\n            }\r\n        }\r\n\r\n        if (format instanceof ol.format.GMLBase) {\r\n            format.hasZ = features[0].getGeometryStride() >= 3;\r\n            // Quitamos los espacios en blanco de los nombres de atributo en las features: no son válidos en GML.\r\n            olFeatures = olFeatures.map(function (f) {\r\n                return f.clone();\r\n            });\r\n            olFeatures.forEach(function (f) {\r\n                const values = f.values_\r\n                const keysToChange = [];\r\n                for (var key in values) {\r\n                    if (key.indexOf(' ') >= 0) {\r\n                        keysToChange.push(key);\r\n                    }\r\n                }\r\n                keysToChange.forEach(function (key) {\r\n                    // Quitamos espacios en blanco y evitamos que empiece por un número\r\n                    var newKey = key.replace(/ /g, '_');\r\n                    if (/^\\d/.test(newKey)) {\r\n                        newKey = '_' + newKey;\r\n                    }\r\n                    if (key !== newKey) {\r\n                        while (values[newKey] !== undefined) {\r\n                            newKey += '_';\r\n                        }\r\n                    }\r\n                    values[newKey] = values[key];\r\n                    delete values[key];\r\n                });\r\n            });\r\n\r\n            //Apañamos para que el GML sea válido. Si no lo hacemos, con IE, en ol-debug.js:36514 da un error porque node.localName no existe.\r\n            format.featureNS = \"sitna\";\r\n            format.featureType = \"feature\";\r\n            var featuresNode = format.writeFeaturesNode(olFeatures, {\r\n                featureProjection: self.parent.crs\r\n            });\r\n\r\n            var featureCollectionNode = ol.xml.createElementNS('http://www.opengis.net/gml',\r\n                'FeatureCollection');\r\n            featureCollectionNode.setAttributeNS('http://www.w3.org/2001/XMLSchema-instance',\r\n                'xsi:schemaLocation', format.schemaLocation);\r\n            featuresNode.removeAttribute('xmlns:xsi');\r\n            featuresNode.removeAttribute('xsi:schemaLocation');\r\n            featureCollectionNode.appendChild(featuresNode);\r\n            //ol.xml.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\r\n            //    'xsi:schemaLocation', this.schemaLocation);\r\n            //return featureCollectionNode.outerHTML;\r\n        }\r\n\r\n        if (format instanceof ol.format.GPX) {\r\n            // Queremos exportar tracks en vez de routes. OpenLayers exporta LineStrings como routes y MultiLineStrings como tracks.\r\n            olFeatures = olFeatures.map(function (f) {\r\n                const geom = f.getGeometry();\r\n                if (geom instanceof ol.geom.LineString) {\r\n                    f = f.clone();\r\n                    f.setGeometry(new ol.geom.MultiLineString([geom.getCoordinates()]));\r\n                }\r\n                return f;\r\n            });\r\n        }\r\n\r\n        var result = format.writeFeatures(olFeatures, {\r\n            dataProjection: 'EPSG:4326',\r\n            featureProjection: self.parent.crs\r\n        });\r\n        if (format instanceof ol.format.GPX) {\r\n            // Este formato no procesa bien las elevaciones cuando son nulas. Hemos hecho un preproceso para transformarlas en NaN y ahora hay que eliminarlas.\r\n            result = result.replace(/<ele>NaN<\\/ele>/g, '');\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var isFileDrag = function (e) {\r\n        for (var i = 0, len = e.dataTransfer.types.length; i < len; i++) {\r\n            if (e.dataTransfer.types[i] === 'Files') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var handleDragEnter = function (e) {\r\n        var self = this;\r\n        if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n            self.getMap()._wrap.parent.div.classList.add(TC.Consts.classes.DROP);\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n\r\n    var handleDragExit = function (e) {\r\n        var self = this;\r\n        if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n            var map = self.getMap()._wrap.parent;\r\n            if (e.target === self.target) {\r\n                map.div.classList.remove(TC.Consts.classes.DROP);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.enableDragAndDrop = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        var ddOptions = {\r\n            formatConstructors: [\r\n                ol.format.KMLCustom,\r\n                ol.format.GPXCustom,\r\n                ol.format.GML3CRS84,\r\n                ol.format.GML2CRS84,\r\n                ol.format.GML3,\r\n                ol.format.GML2,\r\n                ol.format.GeoJSON,\r\n                function () {\r\n                    return new ol.format.WKT({\r\n                        splitCollection: true\r\n                    });\r\n                },\r\n                ol.format.TopoJSON\r\n            ]\r\n        };\r\n        if (opts.dropTarget) {\r\n            ddOptions.target = TC.getDiv(opts.dropTarget);\r\n        }\r\n        else {\r\n            ddOptions.target = self.parent.div;\r\n        }\r\n        var ddInteraction = new ol.interaction.DragAndDrop(ddOptions);\r\n        ddInteraction.on('addfeatures', function (e) {\r\n            var featurePromises = e.features ? e.features.map(function (elm) {\r\n                if (!elm.getId()) {\r\n                    elm.setId(TC.getUID());\r\n                }\r\n                return TC.wrap.Feature.createFeature(elm);\r\n            }) : [];\r\n            Promise.all(featurePromises).then(function (features) {\r\n                var li = self.parent.getLoadingIndicator();\r\n                if (li) {\r\n                    li.removeWait(self._featureImportWaitId);\r\n                }\r\n                if (features.length && !(features.some(function (feature) {\r\n                    return !feature.geometry\r\n                }))) {\r\n                    self.parent.trigger(TC.Consts.event.FEATURESIMPORT, {\r\n                        features: features, fileName: e.file.name, dropTarget: e.target.target\r\n                    });\r\n                }\r\n                else {\r\n                    self.parent.trigger(TC.Consts.event.FEATURESIMPORTERROR, {\r\n                        file: e.file\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        if (opts.once) {\r\n            ddInteraction.map_ = self.map;\r\n        }\r\n        else {\r\n            self.map.addInteraction(ddInteraction);\r\n            var dropArea = ddInteraction.target ? ddInteraction.target : self.map.getViewport();\r\n\r\n            //URI: SI existe el objeto JSZIP modificio el metodo handleResult_ que es el maneja el drop de un fichero en el mapa\r\n            if (window.JSZip) {\r\n                var processZipFile = function () {\r\n                    //URI: Me guardo la función original y defino la mía\r\n                    const originalFnc = ddInteraction.handleResult_;\r\n\r\n                    ddInteraction.handleResult_ = function (file, evt) {\r\n                        var self = this;\r\n                        //URI: si el fichero es ZIP o KMZ lo proceso sino llamo a la función original con los datos originales\r\n                        if (file.type === \"application/x-zip-compressed\" || file.type === \"application/vnd.google-earth.kmz\") {\r\n                            (async function (file) {\r\n                                try {\r\n                                    var zipContent = await JSZip.loadAsync(file);\r\n                                }\r\n                                catch (err) {\r\n                                    throw err;\r\n                                }\r\n                                //URI:Leo el contenido del zip e itero por cada fichero\r\n                                zipContent.forEach(async function (fileName, zip) {\r\n                                    //TODO: Desestimar fichro no geográficos\r\n                                    zip.async(\"blob\").then(function (data) {\r\n                                        //URI: Me creo un fichero vacío con el nombre solo. El contenido lo manejoa a contunuación\r\n                                        var newFile = new File([], fileName);\r\n                                        //URI: El contenid del fichero lo manejo con un filereader que es lo que usa internamente la función original para leer las features \r\n                                        var reader = new FileReader();\r\n                                        reader.onload = function (evt) {\r\n                                            //URI: una vez que he cargado los datos nuevos en el filereader llamo a la función original pasando el nuevo File y el nuevo FileReader\r\n                                            originalFnc.apply(self, [newFile, evt]);\r\n                                        };\r\n                                        reader.readAsText(data);\r\n                                    });\r\n                                });\r\n                            })(file);\r\n                        }\r\n                        else {\r\n                            originalFnc.apply(self, [file, evt]);\r\n                        }\r\n                    }\r\n                }\r\n                if (window.JSZip instanceof Promise)\r\n                    window.JSZip.then(processZipFile);\r\n                else\r\n                    processZipFile();\r\n            }\r\n\r\n            // Añadidos gestores de eventos para mostrar el indicador visual de drop.\r\n            var handleDrop = function (e) {\r\n                if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n                    var map = self.parent;\r\n                    if (ddInteraction.target === e.target) {\r\n                        var li = map.getLoadingIndicator();\r\n                        if (li) {\r\n                            self._featureImportWaitId = li.addWait();\r\n                        }\r\n                        e.stopPropagation();\r\n                    }\r\n                    else {\r\n                        e.preventDefault();\r\n                    }\r\n                    map.div.classList.remove(TC.Consts.classes.DROP);\r\n                }\r\n            };\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DRAGENTER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DRAGENTER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DRAGOVER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DRAGOVER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DROP,\r\n                    handleDrop, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DROP,\r\n                    handleDrop, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragleave',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragend',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragexit',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            document.addEventListener('mouseenter', function (e) {\r\n                if (!e.buttons) {\r\n                    self.parent.div.classList.remove(TC.Consts.classes.DROP);\r\n                }\r\n            }, false);\r\n            self.ddEnabled = true;\r\n        }\r\n        return ddInteraction;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.loadFiles = function (files, options) {\r\n        var self = this;\r\n        var ddInteraction;\r\n        if (self.ddEnabled) {\r\n            self.map.getInteractions().forEach(function (elm) {\r\n                if (elm instanceof ol.interaction.DragAndDrop) {\r\n                    ddInteraction = elm;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            ddInteraction = self.enableDragAndDrop({\r\n                once: true\r\n            });\r\n        }\r\n\r\n        if (ddInteraction && options) {\r\n            var currentTarget = ddInteraction.target;\r\n            ddInteraction.target = options.control;\r\n            const undoTarget = function (e) {\r\n                ddInteraction.target = currentTarget;\r\n\r\n                self.parent.off(TC.Consts.event.FEATURESIMPORT, undoTarget);\r\n            };\r\n            self.parent.on(TC.Consts.event.FEATURESIMPORT, undoTarget);\r\n        }\r\n\r\n        var li = self.parent.getLoadingIndicator();\r\n        if (li) {\r\n            self._featureImportWaitId = li.addWait();\r\n        }\r\n        for (let i = 0, ii = files.length; i < ii; ++i) {\r\n            const file = files.item(i);\r\n            const reader = new FileReader();\r\n            reader.addEventListener(ol.events.EventType.LOAD, ddInteraction.handleResult_.bind(ddInteraction, file));\r\n            reader.readAsText(file);\r\n        }\r\n    };\r\n\r\n    /*\r\n     *  getVisibility: gets the OpenLayers layer visibility\r\n     *  Result: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.getVisibility = function () {\r\n        const self = this;\r\n        var result = false;\r\n        if (self.layer) {\r\n            result = self.layer.getVisible();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /*\r\n     *  setVisibility: Sets the OpenLayers layer visibility\r\n     *  Parameter: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.setVisibility = function (visible) {\r\n        const self = this;\r\n        self.getLayer().then(function (layer) {\r\n            layer.setVisible(visible);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.isNative = function (layer) {\r\n        return layer instanceof ol.layer.Layer;\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const layer = self.parent;\r\n        if (layer.map) {\r\n            const unitRatio = getUnitRatio.call(self, {\r\n                crs: options.crs,\r\n                extentInDegrees: ol.proj.transformExtent(layer.map.getExtent(), layer.map.crs, 'EPSG:4326')\r\n            });\r\n\r\n            var resolutions = layer.getResolutions();\r\n            if (resolutions && resolutions.length) {\r\n                resolutions = resolutions.map(function (r) {\r\n                    return r / unitRatio;\r\n                });\r\n                layer.wrap.layer.setMaxResolution(resolutions[0]);\r\n                layer.wrap.layer.setMinResolution(resolutions[resolutions.length - 1]);\r\n            }\r\n            else {\r\n                // de metros a grados\r\n                if (options.oldCrs && ol.proj.get(options.oldCrs).getUnits() === ol.proj.Units.METERS && (!ol.proj.get(options.crs).getUnits() || ol.proj.get(options.crs).getUnits() === ol.proj.Units.DEGREES)) {\r\n\r\n                    if (layer.minResolution) {\r\n                        layer.minResolution = layer.minResolution / unitRatio;\r\n                        self.layer.setMinResolution(layer.minResolution);\r\n                    }\r\n\r\n                    if (layer.maxResolution) {\r\n                        layer.maxResolution = layer.maxResolution / unitRatio;\r\n                        self.layer.setMaxResolution(layer.maxResolution);\r\n                    }\r\n\r\n                    // de grados a metros\r\n                } else if (options.oldCrs && ol.proj.get(options.oldCrs).getUnits() === ol.proj.Units.DEGREES && ol.proj.get(options.crs).getUnits() === ol.proj.Units.METERS) {\r\n                    var metersPerDegree = TC.Util.getMetersPerDegree(ol.proj.transformExtent(layer.map.getExtent(), layer.map.crs, 'EPSG:4326'));\r\n\r\n                    if (layer.minResolution) {\r\n                        layer.minResolution = layer.minResolution * metersPerDegree;\r\n                        self.layer.setMinResolution(layer.minResolution);\r\n                    }\r\n\r\n                    if (layer.maxResolution) {\r\n                        layer.maxResolution = layer.maxResolution * metersPerDegree;\r\n                        self.layer.setMaxResolution(layer.maxResolution);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.WmsParser = ol.format.WMSCapabilities;\r\n\r\n    TC.wrap.layer.Raster.prototype.WmtsParser = ol.format.WMTSCapabilities;\r\n\r\n    TC.wrap.Layer.prototype.addCommonEvents = function (layer) {\r\n        var self = this;\r\n        layer.on('change:visible', function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.LAYERVISIBILITY, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        }, self.parent.map);\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getGetMapUrl = function () {\r\n        var result = null;\r\n        var self = this;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                var dcpType = self.parent.capabilities.Capability.Request.GetMap.DCPType;\r\n                for (var i = 0; i < dcpType.length; i++) {\r\n                    if (dcpType[i].HTTP && dcpType[i].HTTP.Get) {\r\n                        result = dcpType[i].HTTP.Get.OnlineResource;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                result = self.parent.capabilities.OperationsMetadata.GetTile.DCP.HTTP.Get[0].href;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const fragment = document.createDocumentFragment();\r\n        const textarea = document.createElement('textarea');\r\n        fragment.appendChild(textarea);\r\n        textarea.innerHTML = result;\r\n        result = textarea.textContent;\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfoFormats = function () {\r\n        var result = null;\r\n        var c = this.parent.capabilities;\r\n        if (c.Capability && c.Capability.Request.GetFeatureInfo) {\r\n            result = c.Capability.Request.GetFeatureInfo.Format;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.infoFormatPreference = [\r\n        'application/json',\r\n        'application/vnd.ogc.gml/3.1.1',\r\n        'application/vnd.ogc.gml',\r\n        'application/vnd.esri.wms_featureinfo_xml',\r\n        'text/html',\r\n        'text/plain',\r\n        'text/xml'\r\n    ];\r\n\r\n    TC.wrap.layer.Raster.prototype.getWMTSLayer = function () {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Contents) {\r\n            for (var i = 0; i < capabilities.Contents.Layer.length; i++) {\r\n                var layer = capabilities.Contents.Layer[i];\r\n                for (var j = 0; j < layer.TileMatrixSetLink.length; j++) {\r\n                    if (self.parent.options.matrixSet === layer.TileMatrixSetLink[j].TileMatrixSet) {\r\n                        result = layer;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getTileMatrix = function (matrixSet) {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Contents && capabilities.Contents.TileMatrixSet) {\r\n            for (var i = 0; i < capabilities.Contents.TileMatrixSet.length; i++) {\r\n                var tms = capabilities.Contents.TileMatrixSet[i];\r\n                if (tms.Identifier === matrixSet) {\r\n                    result = tms.TileMatrix;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getScaleDenominators = function (node) {\r\n        var result = [];\r\n        var self = this;\r\n        if (node.ScaleDenominator) {\r\n            result = [node.ScaleDenominator, node.ScaleDenominator];\r\n        }\r\n        else {\r\n            if (node.MinScaleDenominator || node.MaxScaleDenominator) {\r\n                result = [node.MaxScaleDenominator, node.MinScaleDenominator];\r\n            }\r\n        }\r\n        // Contemplamos el caso de una capa sin nombre: sus escalas válidas serán las de sus hijas.\r\n        if (!result.length && !self.getName(node)) {\r\n            var children = self.getLayerNodes(node);\r\n            var max = -Infinity, min = Infinity;\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var childDenominators = self.getScaleDenominators(children[i]);\r\n                if (childDenominators[0] > max) {\r\n                    max = childDenominators[0];\r\n                }\r\n                if (childDenominators[1] < min) {\r\n                    min = childDenominators[1];\r\n                }\r\n            }\r\n            if (max > -Infinity && min < Infinity) {\r\n                result = [max, min];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getAttribution = function () {\r\n        const self = this;\r\n        const result = {};\r\n        const capabilities = TC.capabilities[self.parent.url];\r\n\r\n        if (capabilities) {\r\n            if (capabilities.ServiceProvider) {\r\n                result.name = capabilities.ServiceProvider.ProviderName.trim();\r\n                result.site = capabilities.ServiceProvider.ProviderSite;\r\n                if (result.site.href && result.site.href.trim().length > 0) {\r\n                    result.site = result.site.href;\r\n                }\r\n            }\r\n            else if (capabilities.ServiceIdentification) {\r\n                result.name = capabilities.ServiceIdentification.Title.trim();\r\n            }\r\n            else {\r\n                result.name = capabilities.Service.Title.trim();\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfo = function (name) {\r\n        var self = this;\r\n        var result = {};\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Capability) {\r\n            var layerNodes = self.getAllLayerNodes();\r\n            for (var i = 0; i < layerNodes.length; i++) {\r\n                var l = layerNodes[i];\r\n                if (self.parent.compareNames(self.getName(l), name)) {\r\n                    if (l.Title) {\r\n                        result.title = l.Title;\r\n                    }\r\n                    if (l.Abstract) {\r\n                        result['abstract'] = l.Abstract;\r\n                    }\r\n                    result.legend = [];\r\n\r\n                    var _process = function (value) {\r\n                        var legend = this.getLegend(value);\r\n\r\n                        if (legend.src)\r\n                            result.legend.push({\r\n                                src: legend.src, title: value.Title\r\n                            });\r\n                    };\r\n\r\n                    var _traverse = function (o, func) {\r\n                        if (o.Layer && o.Layer.length > 0) {\r\n                            for (var i in o.Layer) {\r\n                                //bajar un nivel en el árbol\r\n                                _traverse(o.Layer[i], func);\r\n                            }\r\n                        } else {\r\n                            func.apply(self, [o]);\r\n                        }\r\n                    };\r\n\r\n                    //Obtenemos todas las leyendas de la capa o grupo de capas\r\n                    _traverse(l, _process);\r\n\r\n                    if (l.MetadataURL && l.MetadataURL.length) {\r\n                        result.metadata = [];\r\n                        for (var j = 0; j < l.MetadataURL.length; j++) {\r\n                            var md = l.MetadataURL[j];\r\n                            result.metadata.push({\r\n                                format: md.Format, type: md.type, url: md.OnlineResource\r\n                            });\r\n                        }\r\n                    }\r\n                    result.queryable = l.queryable;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceType = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.Capability && capabilities.Capability.Request && capabilities.Capability.Request.GetMap) {\r\n            result = TC.Consts.layerType.WMS;\r\n        }\r\n        else if (capabilities.OperationsMetadata && capabilities.OperationsMetadata.GetTile) {\r\n            result = TC.Consts.layerType.WMTS;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceTitle = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.Capability && capabilities.Service) {\r\n            result = capabilities.Service.Title;\r\n        }\r\n        else if (capabilities.ServiceIdentification) {\r\n            result = capabilities.ServiceIdentification.Title;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getRootLayerNode = function () {\r\n        var self = this;\r\n        var result;\r\n        if (self.getServiceType() === TC.Consts.layerType.WMS) {\r\n            result = self.parent.capabilities.Capability.Layer;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getName = function (node, ignorePrefix) {\r\n        var result = node.Name;\r\n        if (result && ignorePrefix) {\r\n            var idx = result.indexOf(':');\r\n            if (idx >= 0) {\r\n                result = result.substr(idx + 1);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getIdentifier = function (node) {\r\n        return node.Identifier;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getLayerNodes = function (node) {\r\n        var result = node.Layer;\r\n        if (!Array.isArray(result)) {\r\n            if (result) {\r\n                result = [result];\r\n            }\r\n            else {\r\n                result = [];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getAllLayerNodes = function () {\r\n        var self = this;\r\n        if (!self._layerList) {\r\n            switch (self.getServiceType()) {\r\n                case TC.Consts.layerType.WMS:\r\n                    var getNodeArray = function getNodeArray(node) {\r\n                        var r = [node];\r\n                        var children = self.getLayerNodes(node);\r\n                        for (var i = 0; i < children.length; i++) {\r\n                            r = r.concat(getNodeArray(children[i]));\r\n                        }\r\n                        return r;\r\n                    };\r\n                    var root = self.getRootLayerNode();\r\n                    self._layerList = root ? getNodeArray(root) : [];\r\n                    break;\r\n                case TC.Consts.layerType.WMTS:\r\n                    self._layerList = self.parent.capabilities.Contents.Layer.slice();\r\n                    break;\r\n                default:\r\n                    self._layerList = [];\r\n                    break;\r\n            }\r\n        }\r\n        return self._layerList;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.normalizeLayerNode = function (node) {\r\n        return node;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.normalizeCapabilities = function (capabilities) {\r\n        return capabilities;\r\n    };\r\n\r\n\r\n    TC.wrap.layer.Raster.prototype.getLegend = function (node) {\r\n        var result = {};\r\n        var styles = node.Style;\r\n        if (styles && styles.length) {\r\n            if (styles.length && styles[0].LegendURL && styles[0].LegendURL.length) {\r\n                var legend = styles[0].LegendURL[0];\r\n\r\n                const fragment = document.createDocumentFragment();\r\n                const textarea = document.createElement('textarea');\r\n                fragment.appendChild(textarea);\r\n                textarea.innerHTML = legend.OnlineResource;\r\n                result.src = textarea.textContent;\r\n                // Eliminado porque GeoServer miente con el tamaño de sus imágenes de la leyenda\r\n                //if (legend.size) {\r\n                //    result.width = legend.size[0];\r\n                //    result.height = legend.size[1];\r\n                //}\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.isCompatible = function (crs) {\r\n        var self = this;\r\n        var result = true;\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    if (layer.names.length > 0) {\r\n                        var names = layer.names.slice(0);\r\n                        var _isCompatible = function _isCompatible(nodes, name, inCrs) {\r\n                            var r = false;\r\n                            if (nodes) {\r\n                                for (var i = 0; i < nodes.length; i++) {\r\n                                    var n = nodes[i];\r\n                                    const itemCRS = n.CRS || n.SRS;\r\n                                    const crsList = Array.isArray(itemCRS) ? itemCRS : [itemCRS];\r\n                                    var isIn = inCrs || crsList.indexOf(crs) >= 0;\r\n                                    if (layer.compareNames(self.getName(n), name)) {\r\n                                        if (isIn) {\r\n                                            r = true;\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    else if (_isCompatible(n.Layer, name, isIn)) {\r\n                                        r = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return r;\r\n                        };\r\n                        while (names.length > 0) {\r\n                            if (!_isCompatible([layer.capabilities.Capability.Layer], names.pop())) {\r\n                                result = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                result = false;\r\n                if (layer.capabilities && layer.capabilities.Contents && layer.capabilities.Contents.TileMatrixSet) {\r\n                    var tms = layer.capabilities.Contents.TileMatrixSet;\r\n                    for (var i = 0; i < tms.length; i++) {\r\n                        if (tms[i].Identifier === layer.options.matrixSet) {\r\n                            result = TC.Util.CRSCodesEqual(crs, tms[i].SupportedCRS);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleCRS = function () {\r\n        var self = this;\r\n        var result = [];\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    if (layer.names.length > 0) {\r\n                        const crsLists = layer.names\r\n                            .map(function (name) {\r\n                                return layer\r\n                                    .getNodePath(name) // array de nodos\r\n                                    .map(function (node) {\r\n                                        const itemCRS = node.CRS || node.SRS || [];\r\n                                        const crsList = Array.isArray(itemCRS) ? itemCRS : [itemCRS];\r\n                                        return Array.isArray(crsList) ? crsList : [crsList];\r\n                                    }) // array de arrays de crs\r\n                                    .reduce(function (prev, cur) {\r\n                                        if (prev.length === 0) {\r\n                                            return cur;\r\n                                        }\r\n                                        cur.forEach(function (elm) {\r\n                                            if (prev.indexOf(elm) < 0) {\r\n                                                prev[prev.length - 1] = elm;\r\n                                            }\r\n                                        });// array con todos los crs\r\n                                        return prev;\r\n                                    }, []);\r\n                            });\r\n\r\n                        if (crsLists.length === 1) {\r\n                            result = crsLists[0];\r\n                        } else {\r\n                            const otherCrsLists = crsLists.slice(1);\r\n                            result = crsLists[0].filter(function (elm) {\r\n                                return otherCrsLists.every(function (crsList) {\r\n                                    return crsList.indexOf(elm) >= 0;\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                if (layer.capabilities && layer.capabilities.Contents) {\r\n                    layer.capabilities.Contents.Layer\r\n                        .filter(function (l) {\r\n                            return l.Identifier === layer.layerNames;\r\n                        })  // La capa de interés\r\n                        .forEach(function (l) {\r\n                            const tileMatrixSets = l.TileMatrixSetLink\r\n                                .map(function (tmsl) {\r\n                                    return tmsl.TileMatrixSet;\r\n                                });\r\n                            result = layer.capabilities.Contents.TileMatrixSet\r\n                                .filter(function (tms) {\r\n                                    return tileMatrixSets.indexOf(tms.Identifier) >= 0;\r\n                                }) // TileMatrixSets asociados a la capa de interés\r\n                                .map(function (tms) {\r\n                                    return tms.SupportedCRS;\r\n                                });\r\n                        });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleLayers = function (crs) {\r\n        var self = this;\r\n        var result = [];\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    var _fnrecursive = function (item, crs, inCrs) {\r\n                        var crsToCheck = item.CRS || item.SRS;\r\n                        var itemCRS = Array.isArray(crsToCheck) ? crsToCheck : [crsToCheck];\r\n                        var isIn = inCrs || itemCRS.indexOf(crs) >= 0;\r\n                        if (isIn && item.Name) result[result.length] = item.Name;\r\n                        if (item.Layer) {\r\n                            for (var i = 0; i < item.Layer.length; i++) {\r\n                                _fnrecursive(item.Layer[i], crs, isIn);\r\n                            }\r\n                        }\r\n                    }\r\n                    _fnrecursive(layer.capabilities.Capability.Layer, crs);\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                if (layer.capabilities && layer.capabilities.Contents && layer.capabilities.Contents.TileMatrixSet) {\r\n                    var tmsList = layer.capabilities.Contents.TileMatrixSet;\r\n                    for (var i = 0, ii = tmsList.length; i < ii; i++) {\r\n                        var tms = tmsList[i];\r\n                        if (TC.Util.CRSCodesEqual(crs, tms.SupportedCRS)) {\r\n                            var tmsIdentifier = tms.Identifier;\r\n                            var layerList = layer.capabilities.Contents.Layer;\r\n                            for (var j = 0, jj = layerList.length; j < jj; j++) {\r\n                                var tmsLinkList = layerList[j].TileMatrixSetLink;\r\n                                for (var k = 0, kk = tmsLinkList.length; k < kk; k++) {\r\n                                    if (tmsLinkList[k].TileMatrixSet === tmsIdentifier) {\r\n                                        result[result.length] = layerList[j].Identifier;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleMatrixSets = function (crs) {\r\n        var self = this;\r\n        var result = [];\r\n        normalizeProjection({\r\n            crs: crs\r\n        });\r\n        var layer = self.parent;\r\n        if (self.getServiceType() === TC.Consts.layerType.WMTS) {\r\n            var layerList = layer.capabilities.Contents.Layer;\r\n            var tmsList = layer.capabilities.Contents.TileMatrixSet;\r\n            for (var i = 0, ii = layerList.length; i < ii; i++) {\r\n                if (layer.layerNames === layerList[i].Identifier) {\r\n                    var tmsLinkList = layerList[i].TileMatrixSetLink;\r\n                    for (var j = 0, jj = tmsLinkList.length; j < jj; j++) {\r\n                        var tmsLink = tmsLinkList[j];\r\n                        for (var k = 0, kk = tmsList.length; k < kk; k++) {\r\n                            var tms = tmsList[k];\r\n                            if (tms.Identifier === tmsLink.TileMatrixSet) {\r\n                                if (TC.Util.CRSCodesEqual(crs, tms.SupportedCRS)) {\r\n                                    result[result.length] = tms.Identifier;\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setWMTSUrl = function () {\r\n        var self = this;\r\n\r\n        self.getLayer().then(function (l) {\r\n            self.parent.options = self.parent.options || {};\r\n            var urls = l.getSource().getUrls();\r\n            self.parent.options.urlPattern = urls[urls.length - 1];\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMSLayer = function (url, params, options) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var source = new ol.source.ImageWMS({\r\n            url: url,\r\n            crossOrigin: options.map ? options.map.options.crossOrigin : undefined,\r\n            params: params,\r\n            extent: TC.Cfg.initialExtent,\r\n            ratio: TC.Cfg.imageRatio,\r\n            imageLoadFunction: self.parent.getImageLoad.bind(self.parent)\r\n        });\r\n\r\n        source.on('imageloadstart', function (e) {\r\n            self.trigger(TC.Consts.event.BEFORETILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n        source.on('imageloadend', function (e) {\r\n            self.trigger(TC.Consts.event.TILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n        source.on('imageloaderror', function (e) {\r\n            self.trigger(TC.Consts.event.TILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n\r\n\r\n        var layerOptions = {\r\n            visible: !!params.LAYERS.length || (options && options.method && options.method === 'POST'), //Las capas de temáticos cargadas por POST no tienen el atributo LAYERS\r\n            source: source\r\n        };\r\n\r\n        if (options.minResolution) {\r\n            layerOptions.minResolution = options.minResolution;\r\n        }\r\n        if (options.maxResolution) {\r\n            layerOptions.maxResolution = options.maxResolution;\r\n        }\r\n        result = new ol.layer.Image(layerOptions);\r\n\r\n        result._wrap = self;\r\n\r\n        self.addCommonEvents(result);\r\n\r\n        return result;\r\n    };\r\n\r\n    var createWmtsSource = function (options) {\r\n        var self = this;\r\n        var result = null;\r\n        var sourceOptions = ol.source.WMTS.optionsFromCapabilities(self.parent.capabilities, {\r\n            layer: options.layerNames,\r\n            matrixSet: options.matrixSet,\r\n            crossOrigin: options.map ? options.map.options.crossOrigin : undefined,\r\n            requestEncoding: options.encoding,\r\n            format: options.format,\r\n        });\r\n        var https = 'https:';\r\n\r\n        if (sourceOptions) {\r\n            if (location.protocol === https) {\r\n                sourceOptions.urls = sourceOptions.urls.map(function (elm) {\r\n                    return elm.replace('http:', https);\r\n                });\r\n            }\r\n\r\n            sourceOptions.crossOrigin = options.map ? options.map.options.crossOrigin : undefined;\r\n\r\n            result = new ol.source.WMTS(sourceOptions);\r\n            result.setTileLoadFunction(self.parent.getImageLoad.bind(self.parent));\r\n\r\n            result.on(TILELOADSTART, function (e) {\r\n                self.trigger(TC.Consts.event.BEFORETILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n            result.on(TILELOADEND, function (e) {\r\n                self.trigger(TC.Consts.event.TILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n            result.on(TILELOADERROR, function (e) {\r\n                self.trigger(TC.Consts.event.TILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n\r\n            var prevFn = result.getResolutions.bind(result);\r\n            result.getResolutions = function () {\r\n                var resolutions = prevFn();\r\n                var matrix = self.parent.getLimitedMatrixSet();\r\n                //esto está mal, porque matrix podría empezar más abajo (tener recortado por ambos lados)\r\n                if (matrix && matrix.length) {\r\n                    var ix = matrix[0].matrixIndex;\r\n                    resolutions = resolutions.slice(ix, matrix.length + ix);\r\n                }\r\n\r\n                return resolutions;\r\n            };\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMTSLayer = function (options) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var source = createWmtsSource.call(self, options);\r\n\r\n        if (source) {\r\n            var layerOptions = {\r\n                source: source\r\n            };\r\n            if (options.minResolution) {\r\n                layerOptions.minResolution = options.minResolution;\r\n            }\r\n            if (options.maxResolution) {\r\n                layerOptions.maxResolution = options.maxResolution;\r\n            }\r\n            result = new ol.layer.Tile(layerOptions);\r\n            result._wrap = self;\r\n\r\n            self.addCommonEvents(result);\r\n\r\n            var resolutions = source.getResolutions();\r\n            //Este +1 tan chungo es porque, en el caso en que la resolución del mapa es igual a la máxima del layer, openLayers lo oculta\r\n            result.setMaxResolution(resolutions[0] + 1);\r\n            result.setMinResolution(resolutions[resolutions.length - 1]);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n    /*\r\n     *  getParams: Gets the WMS layer getmap parameters\r\n     *  Returns: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.getParams = function () {\r\n        return this.layer.getSource().getParams();\r\n    };\r\n\r\n    /*\r\n     *  setParams: Sets the WMS layer getmap parameters\r\n     *  Parameter: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.setParams = function (params) {\r\n        this.layer.getSource().updateParams(params);\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setMatrixSet = function (matrixSet) {\r\n        const self = this;\r\n        const oldResolutions = self.layer.getSource().getResolutions();\r\n        if (self.parent.type === TC.Consts.layerType.WMTS) {\r\n            const newSource = createWmtsSource.call(self, TC.Util.extend({}, self.parent.options, { matrixSet: matrixSet }));\r\n            const newResolutions = newSource.getResolutions();\r\n            const newMaxResolution = newResolutions[0]\r\n            const newMinResolution = newResolutions[newResolutions.length - 1];\r\n            self.layer.setMaxResolution(newMaxResolution);\r\n            self.layer.setMinResolution(newMinResolution);\r\n            if (self.parent.minResolution) {\r\n                self.parent.minResolution = newMinResolution;\r\n            }\r\n            if (self.parent.maxResolution) {\r\n                self.parent.maxResolution = newMaxResolution;\r\n            }\r\n            self.layer.setSource(newSource);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getResolutions = function () {\r\n        if (this.layer.getSource) {\r\n            var ts = this.layer.getSource();\r\n            if (ts.getResolutions) return ts.getResolutions();\r\n            else return [];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setResolutions = function (resolutions) {\r\n        if (this.layer.getSource) {\r\n            var ts = this.layer.getSource();\r\n            if (ts.resolutions_) {\r\n                ts.resolutions_ = resolutions;\r\n            }\r\n            else if (ts.tileGrid) {\r\n                ts.tileGrid.resolutions_ = resolutions;\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.reloadSource = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.layer.getSource) {\r\n                self.layer.getSource().refresh();\r\n                resolve();\r\n            }\r\n            else {\r\n                reject();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Geometry = {\r\n        getNearest: function (point, candidates) {\r\n            var pline = new ol.geom.LineString(candidates);\r\n            return pline.getClosestPoint(point);\r\n        }\r\n    };\r\n\r\n    // En OL3 la imagen tiene el tamaño original. Escalamos si hace falta.\r\n    var setScaleFunction = function (imageStyle, iconWidth, olFeat) {\r\n        if (imageStyle) {\r\n            var setScaleForWidth = function (imgWidth) {\r\n                var markerWidth = (olFeat && olFeat._wrap ? olFeat._wrap.parent.options.width : null) || iconWidth;\r\n                if (markerWidth < imgWidth) {\r\n                    var factor = markerWidth / imgWidth;\r\n                    imageStyle.setScale(factor);\r\n                }\r\n            };\r\n            var imageSize = imageStyle.getSize();\r\n            if (imageSize) {\r\n                setScaleForWidth(imageSize[0]);\r\n            }\r\n            else {\r\n                var img = imageStyle.getImage();\r\n                if (img.naturalWidth) {\r\n                    setScaleForWidth(img.naturalWidth);\r\n                }\r\n                else {\r\n                    const fragment = document.createDocumentFragment();\r\n                    const img = document.createElement('img');\r\n                    img.src = imageStyle.getSrc();\r\n                    img.addEventListener('load', function () {\r\n                        setScaleForWidth(this.naturalWidth);\r\n                    });\r\n                    fragment.appendChild(img);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var getStyleValue = function (property, feature) {\r\n        var result = property;\r\n        var olFeat = feature && feature.wrap && feature.wrap.feature;\r\n        if (typeof property === 'string') {\r\n            var match = property.match(/^\\$\\{(.+)\\}$/);\r\n            if (match && olFeat) {\r\n                // Permitimos el formato ${prop.subprop.subsubprop}\r\n                var m = match[1].split('.');\r\n                var r = olFeat.getProperties();\r\n                for (var i = 0; i < m.length && r !== undefined; i++) {\r\n                    r = r[m[i]];\r\n                }\r\n                if (r === undefined) {\r\n                    r = feature.data;\r\n                    for (var i = 0; i < m.length && r !== undefined; i++) {\r\n                        r = r[m[i]];\r\n                    }\r\n                }\r\n                result = r;\r\n            }\r\n        }\r\n        else if (TC.Util.isFunction(property)) {\r\n            result = property(feature);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // Transformación de opciones de estilo en un estilo nativo OL3.\r\n    var createNativeStyle = function (options, olFeat) {\r\n        var nativeStyleOptions = {\r\n        };\r\n\r\n        var feature;\r\n        var isPoint, isLine, isPolygon;\r\n        if (olFeat) {\r\n            switch (olFeat.getGeometry().getType()) {\r\n                case 'Point':\r\n                case 'MultiPoint':\r\n                    isPoint = true;\r\n                    break;\r\n                case 'LineString':\r\n                case 'MultiLineString':\r\n                    isLine = true;\r\n                    break;\r\n                case 'Polygon':\r\n                case 'MultiPolygon':\r\n                    isPolygon = true;\r\n                    break;\r\n            }\r\n            if (olFeat._wrap) {\r\n                feature = olFeat._wrap.parent;\r\n            }\r\n            else {\r\n                // Si la API SITNA no ha completado su feature, creamos un mock-up para que no fallen las funciones de estilo\r\n                feature = {\r\n                    id: TC.wrap.Feature.prototype.getId.call({\r\n                        feature: olFeat\r\n                    }), // GLS añado el id de la feature para poder filtrar por la capa a la cual pertenece                    \r\n                    features: olFeat.get('features'),\r\n                    getData: function () {\r\n                        return TC.wrap.Feature.prototype.getData.call({\r\n                            feature: olFeat\r\n                        });\r\n                    }\r\n                };\r\n\r\n\r\n            }\r\n        }\r\n        var isCluster = feature && Array.isArray(feature.features) && feature.features.length > 1 && options.cluster;\r\n        var styles;\r\n        if (isCluster) {\r\n            styles = TC.Util.extend(true, {}, TC.Cfg.styles.cluster, options.cluster.styles);\r\n        }\r\n        else {\r\n            styles = options.styles || TC.Cfg.styles;\r\n        }\r\n\r\n        var styleOptions = {};\r\n        if (styles.line && (isLine || !olFeat)) {\r\n            styleOptions = styles.line;\r\n            nativeStyleOptions.stroke = new ol.style.Stroke({\r\n                color: getStyleValue(styles.line.strokeColor, feature),\r\n                width: getStyleValue(styles.line.strokeWidth, feature),\r\n                lineDash: styles.line.lineDash\r\n            });\r\n        }\r\n\r\n        if (styles.polygon && (isPolygon || !olFeat)) {\r\n            styleOptions = styles.polygon;\r\n            nativeStyleOptions.fill = new ol.style.Fill({\r\n                color: getRGBA(getStyleValue(styles.polygon.fillColor, feature), getStyleValue(styles.polygon.fillOpacity, feature))\r\n            });\r\n            nativeStyleOptions.stroke = new ol.style.Stroke({\r\n                color: getStyleValue(styles.polygon.strokeColor, feature),\r\n                width: getStyleValue(styles.polygon.strokeWidth, feature),\r\n                lineDash: styles.polygon.lineDash\r\n            });\r\n        }\r\n\r\n        if (styles.point && (isPoint || !olFeat)) {\r\n            styleOptions = styles.point;\r\n            var circleOptions = {\r\n                radius: getStyleValue(styleOptions.radius, feature) ||\r\n                (getStyleValue(styleOptions.height, feature) + getStyleValue(styleOptions.width, feature)) / 4\r\n            };\r\n            if (styleOptions.fillColor) {\r\n                circleOptions.fill = new ol.style.Fill({\r\n                    color: getRGBA(getStyleValue(styleOptions.fillColor, feature), getStyleValue(styleOptions.fillOpacity, feature))\r\n                });\r\n            }\r\n            if (styleOptions.strokeColor) {\r\n                circleOptions.stroke = new ol.style.Stroke({\r\n                    color: getStyleValue(styleOptions.strokeColor, feature),\r\n                    width: getStyleValue(styleOptions.strokeWidth, feature),\r\n                    lineDash: styleOptions.lineDash\r\n                });\r\n            }\r\n\r\n            if (!isNaN(circleOptions.radius))\r\n                nativeStyleOptions.image = new ol.style.Circle(circleOptions);\r\n        }\r\n\r\n        if (styleOptions.label) {\r\n            nativeStyleOptions.text = createNativeTextStyle(styleOptions, feature);\r\n        }\r\n\r\n        if (styles.marker && (isPoint || !olFeat)) {\r\n            styleOptions = styles.marker;\r\n            var ANCHOR_DEFAULT_UNITS = 'fraction';\r\n            if (styleOptions.url) {\r\n                nativeStyleOptions.image = new ol.style.Icon({\r\n                    crossOrigin: 'anonymous',\r\n                    anchor: styleOptions.anchor,\r\n                    anchorXUnits: styleOptions.anchorXUnits || ANCHOR_DEFAULT_UNITS,\r\n                    anchorYUnits: styleOptions.anchorYUnits || ANCHOR_DEFAULT_UNITS,\r\n                    src: styleOptions.url\r\n                });\r\n                nativeStyleOptions.text = createNativeTextStyle(styleOptions, feature);\r\n            }\r\n        }\r\n\r\n        return [new ol.style.Style(nativeStyleOptions)];\r\n    };\r\n\r\n    const createNativeTextStyle = function (styleObj, feature) {\r\n        if (!styleObj || !styleObj.label) {\r\n            return;\r\n        }\r\n\r\n        const textOptions = {\r\n            text: '' + getStyleValue(styleObj.label, feature),\r\n        };\r\n        //const olGeom = feature.wrap.feature.getGeometry();\r\n        //if (olGeom instanceof ol.geom.LineString || olGeom instanceof ol.geom.MultiLineString) {\r\n        //    textOptions.placement = ol.style.TextPlacement.LINE;\r\n        //}\r\n        if (styleObj.fontSize) {\r\n            textOptions.font = getStyleValue(styleObj.fontSize, feature) + 'pt sans-serif';\r\n        }\r\n        if (styleObj.angle) {\r\n            textOptions.rotation = -Math.PI * getStyleValue(styleObj.angle, feature) / 180;\r\n        }\r\n        if (styleObj.fontColor) {\r\n            textOptions.fill = new ol.style.Fill({\r\n                color: getRGBA(getStyleValue(styleObj.fontColor, feature), 1)\r\n            });\r\n        }\r\n        if (styleObj.labelOutlineColor) {\r\n            textOptions.stroke = new ol.style.Stroke({\r\n                color: getRGBA(getStyleValue(styleObj.labelOutlineColor, feature), 1),\r\n                width: getStyleValue(styleObj.labelOutlineWidth, feature)\r\n            });\r\n        }\r\n        if (styleObj.labelOffset) {\r\n            textOptions.offsetX = styleObj.labelOffset[0];\r\n            textOptions.offsetY = styleObj.labelOffset[1];\r\n        }\r\n        return new ol.style.Text(textOptions);\r\n    };\r\n\r\n    var toHexString = function (number) {\r\n        var result = number.toString(16);\r\n        if (result.length === 1) {\r\n            result = '0' + result;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var getHexColorFromArray = function (colorArray) {\r\n        return '#' + toHexString(colorArray[0]) + toHexString(colorArray[1]) + toHexString(colorArray[2])\r\n    };\r\n\r\n    var getStyleFromNative = function (olStyle, olFeat) {\r\n        var result = {\r\n        };\r\n        if (TC.Util.isFunction(olStyle)) {\r\n            if (olFeat) {\r\n                olStyle = olStyle(olFeat);\r\n            }\r\n        }\r\n        if (Array.isArray(olStyle)) {\r\n            olStyle = olStyle[0];\r\n        }\r\n        if (!TC.Util.isFunction(olStyle)) {\r\n            var color;\r\n            var stroke;\r\n            var fill;\r\n            if (olFeat) {\r\n                const olGeom = olFeat.getGeometry();\r\n                const olGeomType = olGeom.getType();\r\n                // Si la geometría no aplica, no poner ol.style.Image\r\n                // Esto es porque el parser de KML genera estilos \"totum revolutum\" a partir de las URL de estilos (bug 27470)\r\n                if (olGeomType !== ol.geom.GeometryType.POINT && olGeomType !== ol.geom.GeometryType.MULTI_POINT) {\r\n                    olStyle.setImage(null);\r\n                }\r\n            }\r\n            var image = olStyle.getImage();\r\n            if (image) {\r\n                if (image instanceof ol.style.RegularShape) {\r\n                    stroke = image.getStroke();\r\n                    color = stroke.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.strokeColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.strokeWidth = stroke.getWidth();\r\n                    fill = image.getFill();\r\n                    if (fill) {\r\n                        color = fill.getColor();\r\n                        if (color) {\r\n                            color = ol.color.asArray(color);\r\n                            result.fillColor = getHexColorFromArray(color);\r\n                        }\r\n                        result.fillOpacity = color[3];\r\n                    }\r\n                }\r\n                else {\r\n                    result.url = image.getSrc();\r\n                    var size = image.getSize();\r\n                    if (size) {\r\n                        result.width = size[0];\r\n                        result.height = size[1];\r\n                        result.anchor = image.getAnchor();\r\n                        if (result.anchor) {\r\n                            result.anchor[0] = result.anchor[0] / result.width;\r\n                            result.anchor[1] = result.anchor[1] / result.height;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                stroke = olStyle.getStroke();\r\n                if (stroke) {\r\n                    color = stroke.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.strokeColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.strokeWidth = stroke.getWidth();\r\n                    result.lineDash = stroke.getLineDash();\r\n                }\r\n                fill = olStyle.getFill();\r\n                if (fill) {\r\n                    color = fill.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.fillColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.fillOpacity = color[3];\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getStyle = function () {\r\n        return getStyleFromNative(this.layer.getStyle());\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.reloadSource = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const layerOptions = self.createVectorSource(self.parent, self.createStyles(self.parent));\r\n\r\n            if (self.parent.type === TC.Consts.layerType.WFS) {\r\n                var listenerKey = layerOptions.source.on('change', function (e) {\r\n                    if (layerOptions.source.getState() == 'ready') {\r\n                        ol.Observable.unByKey(listenerKey);\r\n\r\n                        resolve();\r\n                    }\r\n                });\r\n            }\r\n\r\n            var features = self.layer.getSource().getFeatures();\r\n            self.layer.setSource(layerOptions.source);\r\n\r\n            if (layerOptions.style)\r\n                self.layer.setStyle(layerOptions.style);\r\n\r\n            if (self.parent.type != TC.Consts.layerType.WFS) {\r\n                layerOptions.source.addFeatures(features);\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.import = function (options) {\r\n        var self = this;\r\n        var opts = TC.Util.extend({\r\n        }, options);\r\n        opts.type = options.format;\r\n\r\n        var oldFeatures = self.layer.getSource().getFeatures();\r\n        var layerOptions = self.createVectorSource(opts, self.createStyles(self.parent));\r\n        self.layer.setSource(layerOptions.source);\r\n        if (layerOptions.style) {\r\n            self.layer.setStyle(layerOptions.style);\r\n        }\r\n\r\n        layerOptions.source.addFeatures(oldFeatures);\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createVectorSource = function (options, nativeStyle) {\r\n        const self = this;\r\n\r\n        var createGenericLoader = function (url, format) {\r\n            var internalLoader = ol.featureloader.xhr(url, format);\r\n            return function (extent, resolution, projection) {\r\n                self.parent.state = TC.Layer.state.LOADING;\r\n                if (self.parent.map) {\r\n                    self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                        layer: self.parent\r\n                    });\r\n                }\r\n                internalLoader.call(this, extent, resolution, projection);\r\n            };\r\n        };\r\n        var usesGenericLoader = false;\r\n\r\n        var source;\r\n        var vectorOptions;\r\n\r\n        var getMimeTypeFromUrl = function (url) {\r\n            var idx = url.indexOf('?');\r\n            if (idx >= 0) {\r\n                url = url.substr(0, idx);\r\n            }\r\n            else {\r\n                idx = url.indexOf('#');\r\n                if (idx >= 0) {\r\n                    url = url.substr(0, idx);\r\n                }\r\n            }\r\n            switch (url.substr(url.lastIndexOf('.') + 1).toLowerCase()) {\r\n                case 'kml':\r\n                    return TC.Consts.mimeType.KML;\r\n                case 'json':\r\n                case 'geojson':\r\n                    return TC.Consts.mimeType.GEOJSON;\r\n                case 'gml':\r\n                    return TC.Consts.mimeType.GML;\r\n                case 'gpx':\r\n                    return TC.Consts.mimeType.GPX;\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n\r\n        if (Array.isArray(options.url) || options.urls) {\r\n            var urls = options.urls || options.url;\r\n            urls = urls.map(function (elm, idx) {\r\n                return TC.proxify(elm);\r\n            });\r\n            vectorOptions = {\r\n                url: urls,\r\n                format: new ol.format.KMLCustom({\r\n                    showPointNames: false\r\n                }),\r\n                projection: options.crs\r\n            };\r\n        }\r\n        else if (options.url && options.type !== TC.Consts.layerType.WFS) {\r\n            vectorOptions = {\r\n                url: TC.proxify(options.url),\r\n                projection: options.crs\r\n            };\r\n            vectorOptions.format = getFormatFromName(options.format) || getFormatFromName(getMimeTypeFromUrl(options.url)) || getFormatFromName(options.type);\r\n            vectorOptions.loader = createGenericLoader(vectorOptions.url, vectorOptions.format);\r\n            usesGenericLoader = true;\r\n        }\r\n        else if (options.data) {\r\n            vectorOptions = {\r\n                projection: options.crs,\r\n                loader: function (extent, resolution, projection) {\r\n                    self.parent.state = TC.Layer.state.LOADING;\r\n                    if (self.parent.map) {\r\n                        self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                            layer: self.parent\r\n                        });\r\n                    }\r\n                    var format = this.getFormat();\r\n                    try {\r\n                        var fs = format.readFeatures(options.data, {\r\n                            featureProjection: projection\r\n                        });\r\n                        this.addFeatures(fs);\r\n                        self.parent.state = TC.Layer.state.IDLE;\r\n                        if (self.parent.map) {\r\n                            self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                                layer: self.parent, newData: data\r\n                            });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        self.parent.state = TC.Layer.state.IDLE;\r\n                        if (self.parent.map) {\r\n                            self.parent.map.trigger(TC.Consts.event.LAYERERROR, {\r\n                                layer: self.parent, reason: e.message\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            vectorOptions.format = getFormatFromName(options.format) || getFormatFromName(options.type);\r\n        }\r\n        else if (options.type == TC.Consts.layerType.WFS) {\r\n            var outputFormat;\r\n            var mimeType;\r\n            switch (options.outputFormat) {\r\n                case TC.Consts.format.JSON:\r\n                    outputFormat = new ol.format.GeoJSON({\r\n                        geometryName: options.geometryName\r\n                    });\r\n                    mimeType = 'json';\r\n                    break;\r\n                case TC.Consts.format.GML3:\r\n                    outputFormat = new ol.format.WFS({ gmlFormat: new ol.format.GML3() });\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n                case TC.Consts.format.GML32:\r\n                    outputFormat = new ol.format.WFS({ gmlFormat: new ol.format.GML32() });\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n                default:\r\n                    outputFormat = new ol.format.WFS({ gmlFormat: new ol.format.GML2() });\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n            }\r\n            vectorOptions = {\r\n                format: outputFormat,\r\n                loader: function (extent, resolution, projection) {\r\n                    var sOrigin = this;\r\n                    var serviceUrl = options.url;\r\n                    if (serviceUrl) {\r\n                        self.parent.state = TC.Layer.state.LOADING;\r\n                        self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                            layer: self.parent\r\n                        });\r\n\r\n                        const manageResponse = (response) => {\r\n                            const data = response.data;\r\n                            let feats;\r\n                            try {\r\n                                feats = outputFormat.readFeatures(data);\r\n                            }\r\n                            catch (e) {\r\n                                self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: e.message })\r\n                            }\r\n                            const triggerLayerUpdate = function () {\r\n                                self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                                    layer: self.parent, newData: data\r\n                                });\r\n                            };\r\n                            const onFeaturesAdd = function (e) {\r\n                                if (e.layer === self.parent) {\r\n                                    self.parent.map.off(TC.Consts.event.FEATURESADD, onFeaturesAdd);\r\n                                    triggerLayerUpdate();\r\n                                }\r\n                            };\r\n                            if (feats && feats.length) {\r\n                                sOrigin.addFeatures(feats);\r\n                                self.parent.map.on(TC.Consts.event.FEATURESADD, onFeaturesAdd);\r\n                            }\r\n                            else {\r\n                                triggerLayerUpdate();\r\n                            }\r\n                            self.parent.state = TC.Layer.state.IDLE;\r\n                        }\r\n\r\n                        const makeAjaxCall = (onlyHits, capabilities) => {\r\n                            var ajaxOptions = {};\r\n                            var crs = projection.getCode();\r\n                            var version = options.version || capabilities.version || '1.1.0';\r\n                            capabilities.version = version;\r\n                            var url = serviceUrl;\r\n                            var featureType = Array.isArray(options.featureType) ? options.featureType : [options.featureType];\r\n                            if (options.properties && options.properties.getText(capabilities.version).length > TC.Consts.URL_MAX_LENGTH) {\r\n                                ajaxOptions.method = 'POST';\r\n                                ajaxOptions.url = url;\r\n                                ajaxOptions.data = TC.Util.WFSQueryBuilder(featureType, options.properties, capabilities, onlyHits ? null : options.outputFormat, onlyHits, crs, options.maxFeatures)\r\n                            }\r\n                            else {\r\n                                ajaxOptions.method = 'GET';\r\n                                ajaxOptions.url = url;\r\n                                ajaxOptions.data = {\r\n                                    service: \"WFS\",\r\n                                    request: \"GetFeature\",\r\n                                    version: version,\r\n                                    typename: (options.featurePrefix ? options.featurePrefix + \":\" : \"\") + options.featureType,\r\n                                    outputFormat: options.outputFormat,\r\n                                    srsname: crs\r\n                                }\r\n                                if (onlyHits)\r\n                                    ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                        resultType: \"hits\"\r\n                                    });\r\n                                if (options.properties) {\r\n                                    if (options.properties instanceof TC.filter.Bbox)\r\n                                        ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                            BBOX: '{0},{1},{2},{3},{4}'.format(options.properties.extent.concat([crs]))\r\n                                        });\r\n                                    else\r\n                                        ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                            filter: options.properties.getText()\r\n                                        });\r\n                                }\r\n                                if (options.maxFeatures)\r\n                                    ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                        maxFeatures: options.maxFeatures\r\n                                    });\r\n                            }\r\n                            switch (onlyHits ? \"\" : mimeType) {\r\n                                case 'json':\r\n                                    ajaxOptions.responseType = TC.Consts.mimeType.JSON;\r\n                                    break;\r\n                                default:\r\n                                    ajaxOptions.responseType = TC.Consts.mimeType.XML;\r\n                                    break;\r\n                            }\r\n                            ajaxOptions.contentType = TC.Consts.mimeType.XML;\r\n\r\n                            return TC.ajax(ajaxOptions);\r\n                        };\r\n\r\n                        self.parent.getCapabilitiesPromise().then((_capabilities) => {\r\n                            const capabilities = _capabilities;\r\n                            //obtenos del capabilities nummax de features\r\n                            let numMaxFeatures = null;\r\n                            try {\r\n                                numMaxFeatures = capabilities.Operations.GetFeature.CountDefault.DefaultValue;\r\n                            }\r\n                            catch (e) {\r\n                            }\r\n                            if (numMaxFeatures) {\r\n                                if (!options.maxFeatures) options.maxFeatures = numMaxFeatures;\r\n                                makeAjaxCall(true, capabilities).then((response) => {\r\n                                    var firstNode = response.data.children[0];\r\n                                    if (firstNode.tagName.toLowerCase().indexOf(\"exception\") >= 0) {\r\n                                        self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: firstNode.querySelector(\"ExceptionText\").innerHTML })\r\n                                    }\r\n                                    else if (firstNode.tagName.toLowerCase().indexOf(\"featurecollection\") >= 0) {\r\n                                        let numOfFeaturesFounded = parseInt((firstNode.attributes[\"numberMatched\"] || firstNode.attributes[\"numberOfFeatures\"]).value, 10);\r\n                                        if (isNaN(numOfFeaturesFounded) || numOfFeaturesFounded >= parseInt(numMaxFeatures, 10)) {\r\n                                            self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: TC.Consts.WFSErrors.MAX_NUM_FEATURES, data: { limit: parseInt(numMaxFeatures, 10), founded: numOfFeaturesFounded } });\r\n                                            return;\r\n                                        }\r\n                                        else if (!isNaN(numOfFeaturesFounded) && numOfFeaturesFounded === 0) {\r\n                                            //si no encuentra nada. LLamo a la función para \r\n                                            manageResponse({\r\n                                                data: outputFormat.writeFeatures([])\r\n                                            });\r\n                                            return;\r\n                                        }\r\n                                        makeAjaxCall(false, capabilities).then(manageResponse);\r\n                                    }\r\n                                })\r\n                            }\r\n                            else {\r\n                                makeAjaxCall(false, capabilities).then(manageResponse);\r\n                            }\r\n                        });\r\n                        self._requestUrl = serviceUrl;\r\n                    }\r\n                },\r\n                //strategy: ol.loadingstrategy.all(),\r\n                projection: options.crs\r\n            };\r\n        }\r\n\r\n        source = new ol.source.Vector(vectorOptions);\r\n\r\n        if (usesGenericLoader) {\r\n            source.on(CHANGE, function (e) {\r\n                if (self.parent.map) {\r\n                    self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                        layer: self.parent\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        source._tcLayer = self.parent;\r\n\r\n        var markerStyle = options.style && options.style.marker ? options.style.marker : TC.Cfg.styles.marker;\r\n        if (!options.style || !options.style.marker) {\r\n            markerStyle = TC.Util.extend({}, markerStyle, {\r\n                anchor: TC.Cfg.styles.point.anchor\r\n            });\r\n        }\r\n\r\n        // Si habilitamos el clustering la fuente es especial\r\n        if (options.cluster) {\r\n            source = new ol.source.Cluster({\r\n                projection: options.crs,\r\n                distance: options.cluster.distance,\r\n                source: source\r\n            });\r\n\r\n            // Animación\r\n            if (options.cluster.animate) {\r\n                var getCurrentCoordinates = function (fromCoords, toCoords, duration, start) {\r\n                    var fraction = Math.min((Date.now() - start) / duration, 1);\r\n                    var dx = (toCoords[0] - fromCoords[0]) * fraction;\r\n                    var dy = (toCoords[1] - fromCoords[1]) * fraction;\r\n                    return [fromCoords[0] + dx, fromCoords[1] + dy];\r\n                };\r\n                var animate = function (parent, child) {\r\n                    var start = Date.now();\r\n                    var pCoords = parent.getGeometry().getCoordinates();\r\n                    var cCoords = child.getGeometry().getCoordinates();\r\n                    child.setGeometry(new ol.geom.Point(pCoords));\r\n                    var step = function step() {\r\n                        var coords = getCurrentCoordinates(pCoords, cCoords, TC.Consts.CLUSTER_ANIMATION_DURATION, start);\r\n                        child.setGeometry(new ol.geom.Point(coords));\r\n                        if (coords[0] !== cCoords[0] && coords[1] !== cCoords[1]) {\r\n                            requestAnimationFrame(step);\r\n                        }\r\n                        else {\r\n                            clusterCache.splice(clusterCache.indexOf(parent), 1);\r\n                        }\r\n                    };\r\n                    requestAnimationFrame(step);\r\n                };\r\n                var clusterCache = [];\r\n                source.addEventListener(REMOVEFEATURE, function (e) {\r\n                    var features = e.feature.get('features');\r\n                    if (features && features.length > 1) {\r\n                        clusterCache.push(e.feature);\r\n                    }\r\n                });\r\n                source.addEventListener(ADDFEATURE, function (e) {\r\n                    var features = e.feature.get('features');\r\n                    if (features) {\r\n                        var coords = features[0].getGeometry().getCoordinates();\r\n                        if (features.length > 1) {\r\n                            var match = clusterCache.filter(function (elm) {\r\n                                var elmCoords = elm.getGeometry().getCoordinates();\r\n                                return elmCoords[0] === coords[0] && elmCoords[1] === coords[1];\r\n                            });\r\n                            if (match.length) {\r\n                                clusterCache.splice(clusterCache.indexOf(match[0]), 1);\r\n                            }\r\n                        }\r\n                        var parent = clusterCache.filter(function (elm) {\r\n                            var children = elm.get('features');\r\n                            if (children && children.length > 0) {\r\n                                var child = children.filter(function (cElm) {\r\n                                    var cCoords = cElm.getGeometry().getCoordinates();\r\n                                    return cCoords[0] === coords[0] && cCoords[1] === coords[1];\r\n                                });\r\n                                return child.length > 0;\r\n                            }\r\n                        });\r\n                        if (parent.length) {\r\n                            animate(parent[parent.length - 1], e.feature);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var s = source;\r\n        do {\r\n            s.addEventListener(ADDFEATURE, function (e) {\r\n                var olFeat = e.feature;\r\n                // OL3 dibuja el tamaño original del icono del marcador, lo escalamos si es necesario:\r\n                var style = getNativeFeatureStyle(olFeat, true);\r\n                if (style) {\r\n                    setScaleFunction(style.getImage(), markerStyle.width, olFeat);\r\n                }\r\n            });\r\n            if (TC.Util.isFunction(s.getSource)) {\r\n                s = s.getSource();\r\n            }\r\n            else {\r\n                s = null;\r\n            }\r\n        }\r\n        while (s);\r\n\r\n        source.addEventListener(ADDFEATURE, function (e) {\r\n            const olFeat = e.feature;\r\n\r\n            const addFeatureToLayer = function (feat) {\r\n                var addFn;\r\n                switch (true) {\r\n                    case TC.feature.Point && feat instanceof TC.feature.Point:\r\n                        addFn = self.parent.addPoint;\r\n                        break;\r\n                    case TC.feature.Polyline && feat instanceof TC.feature.Polyline:\r\n                        addFn = self.parent.addPolyline;\r\n                        break;\r\n                    case TC.feature.Polygon && feat instanceof TC.feature.Polygon:\r\n                        addFn = self.parent.addPolygon;\r\n                        break;\r\n                    case TC.feature.MultiPolygon && feat instanceof TC.feature.MultiPolygon:\r\n                        addFn = self.parent.addMultiPolygon;\r\n                        break;\r\n                    case TC.feature.MultiPolyline && feat instanceof TC.feature.MultiPolyline:\r\n                        addFn = self.parent.addMultiPolyline;\r\n                        break;\r\n                    default:\r\n                        addFn = self.parent.addFeature;\r\n                        break;\r\n                }\r\n                if (addFn) {\r\n                    var _timeout;\r\n                    addFn.call(self.parent, olFeat).then(function (f) {\r\n                        var features = olFeat.get('features');\r\n                        if (Array.isArray(features)) {\r\n                            // Es una feature de fuente ol.source.Cluster\r\n                            f.features = features.map(function (elm) {\r\n                                return new feat.constructor(elm);\r\n                            });\r\n                        }\r\n\r\n                        // Timeout porque OL3 no tiene evento featuresadded. El timeout evita ejecuciones a lo tonto.\r\n                        clearTimeout(_timeout);\r\n                        _timeout = setTimeout(function () {\r\n                            self.parent.map.trigger(TC.Consts.event.FEATURESADD, {\r\n                                layer: self.parent, features: [f]\r\n                            });\r\n                        }, 50);\r\n                    });\r\n                }\r\n            };\r\n\r\n            if (!olFeat._wrap || !olFeat._wrap.parent.layer) { // Solo actuar si no es una feature añadida desde la API\r\n                TC.wrap.Feature.createFeature(olFeat).then(addFeatureToLayer);\r\n            }\r\n        });\r\n\r\n        source.addEventListener(REMOVEFEATURE, function (e) {\r\n            var olFeat = e.feature;\r\n            if (olFeat._wrap) {\r\n                var idx = self.parent.features.indexOf(olFeat._wrap.parent);\r\n                if (idx > -1) {\r\n                    self.parent.features.splice(idx, 1);\r\n                    self.parent.map.trigger(TC.Consts.event.FEATUREREMOVE, {\r\n                        layer: self.parent, feature: olFeat._wrap.parent\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        source.addEventListener(ADDFEATURE, function (e) {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        source.addEventListener(REMOVEFEATURE, function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        source.addEventListener(CLEAR, function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.FEATURESCLEAR, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        var layerOptions = {\r\n            source: source\r\n        };\r\n\r\n        if (options.minResolution) {\r\n            layerOptions.minResolution = options.minResolution;\r\n        }\r\n        if (options.maxResolution) {\r\n            layerOptions.maxResolution = options.maxResolution;\r\n        }\r\n\r\n        // En KML conservamos el estilo que viene con el archivo, así que no entramos aquí.\r\n        // A no ser que tenga clusters, porque OL no soporta por defecto la combinación de estilo KML con clusters.\r\n        if (!(vectorOptions && vectorOptions.format instanceof ol.format.KML) || options.cluster) {\r\n            layerOptions.style = nativeStyle || options.styles;\r\n        }\r\n\r\n        return layerOptions;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createStyles = function (options) {\r\n        var self = this;\r\n\r\n        var dynamicStyle = false;\r\n\r\n        if (TC.Util.isFunction(options)) {\r\n            dynamicStyle = true;\r\n            self.styleFunction = function (olFeat) {\r\n                return createNativeStyle(options(olFeat));\r\n            }\r\n        }\r\n        else {\r\n            options = TC.Util.extend({}, options);\r\n            options.crs = options.crs || TC.Cfg.crs;\r\n            options.styles = options.styles || TC.Cfg.styles;\r\n            var isDynamicStyle = function isDynamicStyle(obj) {\r\n                for (var key in obj) {\r\n                    var prop = obj[key];\r\n                    switch (typeof prop) {\r\n                        case 'string':\r\n                            if (/^\\$\\{(.+)\\}$/.test(prop)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case 'object':\r\n                            if (isDynamicStyle(prop)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case 'function':\r\n                            return true;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n\r\n            dynamicStyle = !!(options.cluster && options.cluster.styles) || isDynamicStyle(options.styles);\r\n            self.styleFunction = function (olFeat) {\r\n                return createNativeStyle({ styles: self.parent.styles }, olFeat);\r\n            };\r\n        }\r\n\r\n        var nativeStyle = dynamicStyle ? self.styleFunction : self.styleFunction();\r\n\r\n        return nativeStyle;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setStyles = function (options) {\r\n        const self = this;\r\n        self.getLayer().then(function (olLayer) {\r\n            olLayer.setStyle(self.createStyles({ styles: options }));\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createVectorLayer = function () {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var options = self.parent.options;\r\n\r\n        var layerOptions = self.createVectorSource(options, self.createStyles(options));\r\n        layerOptions.declutter = self.parent.options.declutter || false;\r\n        result = new ol.layer.Vector(layerOptions);\r\n        result._wrap = self;\r\n\r\n        self.addCommonEvents(result);\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.addFeatures = function (features) {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            var source = l;\r\n            while (TC.Util.isFunction(source.getSource)) {\r\n                source = source.getSource();\r\n            }\r\n            source.addFeatures(features);\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatures = function () {\r\n        var olLayer = this.getLayer();\r\n        if (olLayer instanceof ol.layer.Layer) {\r\n            return olLayer.getSource().getFeatures();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatureById = function (id) {\r\n        var olLayer = this.layer;\r\n        if (olLayer instanceof ol.layer.Layer) {\r\n            return olLayer.getSource().getFeatureById(id);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.removeFeature = function (feature) {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            if (feature.wrap.feature) {\r\n                var source = l.getSource();\r\n                source.removeFeature(feature.wrap.feature);\r\n            }\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.clearFeatures = function () {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            var source = l.getSource();\r\n            if (source.clearFeatures) {\r\n                source.clearFeatures();\r\n            }\r\n            else {\r\n                source.clear();\r\n            }\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setFeatureVisibility = function (feature, visible) {\r\n        var self = this;\r\n\r\n        var fillOptions = {\r\n            color: 'rgba(0, 0, 0, 0)'\r\n        };\r\n        var strokeOptions = {\r\n            color: 'rgba(0, 0, 0, 0)'\r\n        };\r\n        var displayNoneStyle = new ol.style.Style({\r\n            image: new ol.style.Circle({\r\n                radius: 0,\r\n                fill: new ol.style.Fill(fillOptions),\r\n                stroke: new ol.style.Stroke(strokeOptions)\r\n            }),\r\n            fill: new ol.style.Fill(fillOptions),\r\n            stroke: new ol.style.Stroke(strokeOptions)\r\n        });\r\n        var idx = self.parent.features.indexOf(feature);\r\n        if (idx >= 0) {\r\n            var olFeat = feature.wrap.feature;\r\n            self.getLayer().then(function (olLayer) {\r\n                if (visible && olFeat._originalStyle) {\r\n                    olFeat.setStyle(olFeat._originalStyle);\r\n                }\r\n                else {\r\n                    olFeat._originalStyle = olFeat.getStyle() || olLayer.getStyle();\r\n                    olFeat.setStyle(displayNoneStyle);\r\n                }\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getRGBA = function (color, opacity) {\r\n        return getRGBA(color, opacity);\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.findFeature = function (values) {\r\n        // TODO: añadir ol.animation.zoom\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getGetFeatureUrl = function () {\r\n        return this._requestUrl;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.sendTransaction = function (inserts, updates, deletes) {\r\n        const self = this;\r\n        const getNativeFeature = function (feat) {\r\n            return feat.wrap.feature;\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            const olInserts = inserts.map(getNativeFeature);\r\n            const olUpdates = updates.map(getNativeFeature);\r\n            const olDeletes = deletes.map(getNativeFeature);\r\n            if (inserts.length || updates.length || deletes.length) {\r\n                self.getLayer().then(function (olLayer) {\r\n                    var format = new ol.format.WFS();\r\n                    var options = self.parent.options;\r\n                    var transaction = format.writeTransaction(olInserts, olUpdates, olDeletes, {\r\n                        featurePrefix: options.featurePrefix,\r\n                        featureNS: options.featureNS,\r\n                        featureType: options.featureType[0]\r\n                    });\r\n                    var ajaxOptions = {\r\n                        url: self.parent.url,\r\n                        method: 'POST',\r\n                        contentType: TC.Consts.mimeType.XML,\r\n                        responseType: TC.Consts.mimeType.XML,\r\n                        data: transaction.outerHTML\r\n                    };\r\n                    TC.ajax(ajaxOptions)\r\n                        .then(function (response) {\r\n                            const data = response.data;\r\n                            const ns = 'http://www.opengis.net/ows';\r\n                            var er = data.getElementsByTagNameNS(ns, 'ExceptionReport')[0];\r\n                            var errorObj = {\r\n                                reason: ''\r\n                            };\r\n                            if (er) {\r\n                                var e = er.getElementsByTagNameNS(ns, 'Exception')[0];\r\n                                if (e) {\r\n                                    errorObj.code = e.getAttribute('exceptionCode');\r\n                                    var texts = e.getElementsByTagNameNS(ns, 'ExceptionText');\r\n                                    for (var i = 0, len = texts.length; i < len; i++) {\r\n                                        errorObj.reason += '\\n' + texts[i].innerHTML;\r\n                                    }\r\n                                }\r\n                                reject(errorObj);\r\n                            }\r\n                            else {\r\n                                var transactionResponse = format.readTransactionResponse(data);\r\n                                resolve(transactionResponse);\r\n                            }\r\n                        })\r\n                        .catch(function () {\r\n                            reject({\r\n                                code: '', reason: 'unknown'\r\n                            });\r\n                        });\r\n                });\r\n            }\r\n            else {\r\n                resolve(self.parent);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setDraggable = function (draggable, onend, onstart) {\r\n        var self = this;\r\n\r\n        //tiene que estar a nivel de control para poder retirarla después\r\n        //var interaction;\r\n        Promise.all([self.parent.map.wrap.getMap(), self.getLayer()]).then(function (olObjects) {\r\n            const olMap = olObjects[0];\r\n            const olLayer = olObjects[1];\r\n            if (draggable) {\r\n                var interactionOptions = {\r\n                    layers: [olLayer],\r\n                    features: new ol.Collection(olLayer.getSource().getFeatures())\r\n                };\r\n                self.interaction = new ol.interaction.Translate(interactionOptions);\r\n                if (TC.Util.isFunction(onend)) {\r\n                    self.interaction.on('translateend', function (e) {\r\n                        if (e.features.getLength()) {\r\n                            onend(e.features.item(0)._wrap.parent);\r\n                        }\r\n                    });\r\n                }\r\n                if (TC.Util.isFunction(onstart)) {\r\n                    self.interaction.on('translatestart', function (e) {\r\n                        if (e.features.getLength()) {\r\n                            onstart(e.features.item(0)._wrap.parent);\r\n                        }\r\n                    });\r\n                }\r\n                olMap.addInteraction(self.interaction);\r\n            }\r\n            else if (self.interaction) {\r\n                olMap.removeInteraction(self.interaction);\r\n\r\n                // GLS: En IE no muestra la manita en el over sobre marcadores trasladables.\r\n                if (TC.Util.detectIE() && self._handlerDraggablePointerMove && TC.Util.isFunction(self._handlerDraggablePointerMove)) {\r\n                    olMap.un('pointermove', self._handlerDraggablePointerMove);\r\n                    delete self._handlerDraggablePointerMove;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeaturesInExtent = function (extent, tolerance) {\r\n        var self = this;\r\n        var features = this.layer.getSource().getFeatures();\r\n        var featuresInExtent = [];\r\n\r\n        if (tolerance) {\r\n            var leftCorner = self.parent.map.getPixelFromCoordinate([extent[0], extent[1]]);\r\n            var rightCorner = self.parent.map.getPixelFromCoordinate([extent[2], extent[3]]);\r\n            leftCorner[0] -= tolerance[0] / 2;\r\n            leftCorner[1] += tolerance[1];\r\n            rightCorner[0] += tolerance[0] / 2;\r\n            extent = self.parent.map.getCoordinateFromPixel(leftCorner).concat(self.parent.map.getCoordinateFromPixel(rightCorner));\r\n        }\r\n\r\n        for (var i = 0; i < features.length; i++) {\r\n            var feat = features[i];\r\n\r\n            var geometry = feat.getGeometry();\r\n            var coordinate = geometry.getCoordinates();\r\n\r\n            if (ol.extent.containsCoordinate(extent, coordinate)) {\r\n                featuresInExtent.push(feat._wrap.parent);\r\n            }\r\n        }\r\n\r\n        return featuresInExtent;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getAttribution = function () {\r\n        return null;\r\n    };\r\n    TC.wrap.layer.Vector.prototype.getGetMapUrl = function () {\r\n        var result = null;\r\n        var self = this;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WFS:\r\n                try {\r\n                    result = self.parent.capabilities.Operations.GetFeature.DCP.HTTP.Get.href;\r\n                }\r\n                catch (ex) {\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const fragment = document.createDocumentFragment();\r\n        const textarea = document.createElement('textarea');\r\n        fragment.appendChild(textarea);\r\n        textarea.innerHTML = result;\r\n        result = textarea.textContent;\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getServiceType = function () {\r\n        var result = null;\r\n        //URI: Si se tiene capabilities se supone que es un servicio WFS\r\n        if (this.parent.capabilities) {\r\n            result = TC.Consts.layerType.WFS;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        self._trigger = function (e) {\r\n            if (map.view === TC.Consts.view.PRINTING) {\r\n                return;\r\n            }\r\n            var featureCount = 0;\r\n            map.wrap.map.forEachFeatureAtPixel(e.pixel,\r\n                function (feature, layer) {\r\n                    if (feature._wrap && feature._wrap.parent.showsPopup) {\r\n                        featureCount++;\r\n                    }\r\n                },\r\n                {\r\n                    hitTolerance: hitTolerance\r\n                });\r\n            if (!featureCount) {\r\n                // GLS: lanzo el evento click, para que los controles que no pueden heredar de click y definir un callback pueda suscribirse al evento\r\n                self.parent.map.trigger(TC.Consts.event.CLICK, {\r\n                    coordinate: e.coordinate, pixel: e.pixel\r\n                });\r\n                self.parent.callback(e.coordinate, e.pixel);\r\n            }\r\n            // Seguimos adelante si no se han pinchado featuers\r\n            return featureCount === 0;\r\n        };\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.activate = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            olMap.on(SINGLECLICK, self._trigger);\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.deactivate = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            olMap.un(SINGLECLICK, self._trigger);\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ScaleBar.prototype.render = function () {\r\n        var self = this;\r\n        if (!self.ctl) {\r\n            self.ctl = new ol.control.ScaleLine({\r\n                target: self.parent.div\r\n            });\r\n        }\r\n        else {\r\n            self.ctl.updateElement_();\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.ScaleBar.prototype.getText = function () {\r\n        var self = this;\r\n        if (self.ctl) {\r\n            return self.ctl.renderedHTML_;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            const div = self.parent.div;\r\n            self.zCtl = new ol.control.Zoom({\r\n                target: div\r\n            });\r\n            // Ponemos para render una función modificada, para evitar que en los pinch zoom haya errores de este tipo:\r\n            // AssertionError: Assertion failed: calculated value (1.002067782531452) ouside allowed range (0-1)\r\n\r\n            self.zsCtl = new ol.control.ZoomSlider({\r\n                render: function (e) {\r\n                    if (!e.frameState || !e.frameState.viewState || olMap.getView().getMinResolution() <= e.frameState.viewState.resolution) {\r\n                        // GLS: para evitar que el slider se configure en horizontal\r\n                        var render = function () {\r\n                            if (this.element.offsetWidth > this.element.offsetHeight) {\r\n                                if (!self.requestSliderSize) {\r\n                                    self.requestSliderSize = window.requestAnimationFrame(render.bind(this));\r\n                                }\r\n\r\n                                window.requestAnimationFrame(render.bind(this));\r\n                            } else if (this.element.offsetWidth < this.element.offsetHeight) {\r\n                                if (self.requestSliderSize) {\r\n                                    window.cancelAnimationFrame(self.requestSliderSize);\r\n                                    delete self.requestSliderSize;\r\n                                }\r\n                                ol.control.ZoomSlider.render.call(this, e);\r\n                            }\r\n                        };\r\n                        render.call(this);\r\n                    }\r\n                }\r\n            });\r\n            self.zsCtl.setTarget(div);\r\n\r\n            olMap.addControl(self.zsCtl);\r\n            olMap.addControl(self.zCtl);\r\n\r\n            div.querySelectorAll('button').forEach(function (button) {\r\n                button.classList.add('tc-ctl-btn', self.parent.CLASS + '-btn');\r\n                button.style.display = 'block';\r\n                button.innerHTML = '';\r\n                if (button.matches('.ol-zoom-in')) {\r\n                    button.classList.add(self.parent.CLASS + '-btn-zoomin');\r\n                    button.setAttribute('title', self.parent.getLocaleString('zoomIn'));\r\n                }\r\n                if (button.matches('.ol-zoom-out')) {\r\n                    button.classList.add(self.parent.CLASS + '-btn-zoomout');\r\n                    button.setAttribute('title', self.parent.getLocaleString('zoomOut'));\r\n                }\r\n            });\r\n\r\n            const zoomSlider = div.querySelector('.ol-zoomslider');\r\n            zoomSlider.classList.add(self.parent.CLASS + '-bar');\r\n            zoomSlider.querySelector('.ol-zoomslider-thumb').classList.add(self.parent.CLASS + '-slider');\r\n\r\n            map.on(TC.Consts.event.BASELAYERCHANGE, self.refresh.bind(self));\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.refresh = function () {\r\n        /*\r\n        var map = this.parent.map;\r\n        var olMap = map.wrap.map;\r\n\r\n        olMap.removeControl(self.zsCtl);\r\n        var res = map.getResolutions();\r\n        self.zsCtl = new ol.control.ZoomSlider(\r\n            {\r\n                target: this.parent.div,\r\n                \"maxResolution\": res[0],\r\n                \"minResolution\": res[res.length - 1]\r\n            });\r\n\r\n        olMap.addControl(self.zsCtl);\r\n        $(map.div).find('.ol-zoomslider').addClass(self.parent.CLASS + '-bar').find('.ol-zoomslider-thumb').addClass(self.parent.CLASS + '-slider');\r\n        */\r\n        var self = this;\r\n        var map = self.parent.map.wrap.map;\r\n        // Puede ser que se llame a refresh antes de que esté inicializado ol.control.ZoomSlider. En ese caso llamamos a render que lo inicializa.\r\n        // Como render necesita un ol.MapEvent, esperamos al evento POSTRENDER.\r\n\r\n        self.parent.renderPromise().then(function () {\r\n            if (self.zsCtl.sliderInitialized_) {\r\n                var res = map.getView().getResolution();\r\n                self.zsCtl.setThumbPosition_(res);\r\n            }\r\n            else {\r\n                map.once(POSTRENDER, function (e) {\r\n                    self.zsCtl.render(e);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBarHome.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            const div = self.parent.div;\r\n\r\n            self.z2eCtl = new ol.control.ZoomToExtent({\r\n                target: div, extent: map.initialExtent, tipLabel: ''\r\n            });\r\n\r\n            olMap.addControl(self.z2eCtl);\r\n\r\n            div.querySelectorAll('button').forEach(function (button) {\r\n                button.style.display = 'block';\r\n                button.innerHTML = '';\r\n            });\r\n            const homeBtn = div.querySelector('.ol-zoom-extent button');\r\n            homeBtn.classList.add('tc-ctl-btn', self.parent.CLASS + '-btn');\r\n            homeBtn.setAttribute('title', self.parent.getLocaleString('zoomToInitialExtent'));\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBarHome.prototype.setInitialExtent = function (extent) {\r\n        this.z2eCtl.extent = extent;\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.register = function (map) {\r\n        const self = this;\r\n        self.map = map;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            self._coordsTrigger = function (e) {\r\n                self.parent.coordsToClick(e);\r\n            };\r\n\r\n            map.wrap.getMap().then(function (olMap) {\r\n                self.olMap = olMap;\r\n\r\n                if (!self.parent.map.on3DView) {\r\n                    var projection = olMap.getView().getProjection();\r\n                    self.parent.crs = projection.getCode();\r\n                    self.parent.units = projection.getUnits();\r\n                } else {\r\n                    self.parent.crs = self.parent.map.view3D.crs;\r\n                    self.parent.units = TC.Consts.units.DEGREES;\r\n                }\r\n\r\n                self.parent.isGeo = self.parent.units === ol.proj.Units.DEGREES;\r\n\r\n                //$(olMap.getViewport()).add(self.parent.div);\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.onMouseMove = function (e) {\r\n        var self = this;\r\n        if (self.map.wrap.map) {\r\n            var coords = self.map.wrap.map.getEventCoordinate(e);\r\n            if (coords) {\r\n                if (self.parent.isGeo) {\r\n                    self.parent.latLon = coords.reverse();\r\n                } else {\r\n                    self.parent.xy = coords;\r\n                }\r\n\r\n                self.parent.update.apply(self.parent, arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.register = function (map) {\r\n        var self = this;\r\n        self.map = map;\r\n\r\n        self._snapTrigger = function (e) {\r\n            if (e.dragging)\r\n                return;\r\n\r\n            self.initSnap(self.olMap.getEventCoordinate(e), e.pixel);\r\n        };\r\n\r\n        self._postcomposeTrigger = function (e) {\r\n            self.duringTrackSnap(e);\r\n        };\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n            self.olMap = olMap;\r\n        });\r\n    };\r\n\r\n    var getTrackingLine = function () {\r\n        var self = this;\r\n\r\n        return self.parent.layerTracking.features.filter(function (f) {\r\n            return f instanceof TC.feature.Polyline;\r\n        })[0];\r\n    }\r\n\r\n    TC.wrap.control.Geolocation.prototype.hasCoordinates = function () {\r\n        var self = this;\r\n\r\n        return self.parent.layerTracking.features.length > 0 && self.parent.layerTracking.features[0].geometry.length >= 1;\r\n    };\r\n\r\n    var getTime = function (timeFrom, timeTo) {\r\n        var diff = timeTo - timeFrom;\r\n        var d = {\r\n            s: Math.floor((diff / 1000) % 60),\r\n            m: Math.floor(((diff / (1000 * 60)) % 60)),\r\n            h: Math.floor(((diff / (1000 * 60 * 60)) % 24))\r\n        };\r\n\r\n        return TC.Util.extend({}, d, { toString: (\"00000\" + d.h).slice(-2) + ':' + (\"00000\" + d.m).slice(-2) + ':' + (\"00000\" + d.s).slice(-2) });\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.showElevationMarker = function (d) {\r\n        var self = this;\r\n\r\n        TC.wrap.control.ResultsPanel.prototype.showElevationMarker.call(self, {\r\n            data: d,\r\n            layer: self.parent.layerTrack,\r\n            coords: self.parent.elevationChartData.coords\r\n        })\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.hideElevationMarker = function () {\r\n        TC.wrap.control.ResultsPanel.prototype.hideElevationMarker.call(this);\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.addWaypoint = function (position, properties) {\r\n        var self = this;\r\n\r\n        var waypoint = new ol.Feature({\r\n            geometry: new ol.geom.Point([position[0], position[1], properties.ele, properties.time], ('XYZM'))\r\n        });\r\n        waypoint.setProperties(properties);\r\n\r\n        self.parent.layerTracking.wrap.layer.getSource().addFeature(waypoint);\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.addPosition = function (position, heading, m, speed, accuracy, altitudeAccuracy, altitude) {\r\n        var self = this;\r\n\r\n        var x = Math.round(position[0]);\r\n        var y = Math.round(position[1]);\r\n\r\n        var line = getTrackingLine.call(this);\r\n        if (self.parent.layerTracking.features && line) {\r\n            var last = line.geometry.length > 0 && line.geometry[line.geometry.length - 1];\r\n            if (last && last.length == 0) {\r\n                self.parent.layerTracking.features[0].geometry.push([x, y, altitude, m]);\r\n                line.wrap.feature.getGeometry().appendCoordinate([x, y, altitude, m]);\r\n            }\r\n            else {\r\n                var lx = Math.round(last[0]);\r\n                var ly = Math.round(last[1]);\r\n\r\n                if (x != lx || y != ly) {\r\n                    self.parent.layerTracking.features[0].geometry.push([x, y, altitude, m]);\r\n                    line.wrap.feature.getGeometry().appendCoordinate([x, y, altitude, m]);\r\n                }\r\n            }\r\n\r\n            TC.Util.storage.setSessionLocalValue(self.parent.Const.LocalStorageKey.TRACKINGTEMP, self.formattedToStorage(self.parent.layerTracking).features);\r\n        }\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && speed != undefined && speed > 0 && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.positionChangehandler = function (geoposition) {\r\n        const self = this;\r\n        var accuracy, heading, speed, altitude, altitudeAccuracy;\r\n\r\n        if (!getTrackingLine.call(this)) {\r\n            self.parent.setTracking(false);\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            if (geoposition && geoposition.coords) {\r\n                self.parent.layerGPS.clearFeatures();\r\n\r\n                accuracy = (geoposition.coords.accuracy / self.parent.map.getMetersPerUnit()) || 0;\r\n                heading = geoposition.coords.heading || geoposition[2] || 0;\r\n                speed = geoposition.coords.speed ? geoposition.coords.speed * 3.6 : 0;\r\n                altitude = geoposition.coords.altitude || 0;\r\n                altitudeAccuracy = geoposition.coords.altitudeAccuracy || 0;\r\n\r\n                if (self.parent.layerTracking) {\r\n                    var position_ = [geoposition.coords && geoposition.coords.longitude || geoposition[0], geoposition.coords && geoposition.coords.latitude || geoposition[1]];\r\n                    var projectedPosition = TC.Util.reproject(position_, 'EPSG:4326', self.parent.map.crs);\r\n\r\n                    self.addPosition(projectedPosition, heading, new Date().getTime(), speed, accuracy, altitudeAccuracy, altitude);\r\n\r\n                    var coords = getTrackingLine.call(self).geometry;\r\n                    var len = coords.length;\r\n                    if (len >= 2) {\r\n                        self.parent.deltaMean = (coords[len - 1][3] - coords[0][3]) / (len - 1);\r\n                    }\r\n\r\n                    self.parent.trigger(self.parent.Const.Event.POSITIONCHANGE, {\r\n                        pd: {\r\n                            \"position\": projectedPosition,\r\n                            \"altitude\": altitude,\r\n                            \"accuracy\": accuracy,\r\n                            \"heading\": TC.Util.radToDeg(heading),\r\n                            \"speed\": speed\r\n                        }\r\n                    });\r\n\r\n                    Promise.all([self.parent.layerGPS.addPoint(projectedPosition, {\r\n                        radius: 4,\r\n                        fillColor: '#00CED1',\r\n                        fillOpacity: 1,\r\n                        strokeColor: '#ffffff',\r\n                        strokeWidth: 2,\r\n                        showsPopup: false\r\n                    }), self.parent.layerGPS.addCircle([projectedPosition, accuracy], {\r\n                        strokeColor: '#00CED1',\r\n                        strokeWidth: 0.4,\r\n                        fillColor: '#ffffff',\r\n                        fillOpacity: 0.2,\r\n                        showsPopup: false\r\n                    })]).then(function (features) {\r\n                        const marker = features[0];\r\n                        const accuracyCircle = features[1];\r\n                        self.parent.geopositionTracking = true;\r\n\r\n                        if (self.parent.firstPosition == false) {\r\n                            self.parent.firstPosition = true;\r\n\r\n                            if (!self.parent.trackCenterButton) {\r\n                                self.parent.trackCenterButton = self.parent.div.querySelector('.' + self.parent.CLASS + '-track-center');\r\n                                self.parent.trackCenterButton.querySelector('button').addEventListener('click', function () {\r\n                                    self.parent.layerGPS.map.zoomToFeatures(self.parent.layerGPS.features);\r\n\r\n                                    if (!self.parent.track.infoPanel.isVisible()) {\r\n                                        self.parent.track.infoPanel.doVisible();\r\n                                    }\r\n\r\n                                    if (self.parent.track.infoPanel.isMinimized()) {\r\n                                        self.parent.track.infoPanel.maximize();\r\n                                    }\r\n                                });\r\n\r\n                                var controlContainer = self.parent.map.getControlsByClass('TC.control.ControlContainer')[0];\r\n                                if (controlContainer) {\r\n                                    self.parent.trackCenterButton = controlContainer.addElement({ position: controlContainer.POSITION.LEFT, htmlElement: self.parent.trackCenterButton });\r\n                                } else {\r\n                                    self.parent.map.div.appendChild(self.parent.trackCenterButton);\r\n                                }\r\n\r\n                            }\r\n                            self.parent.trackCenterButton.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n                            self.parent.layerGPS.map.zoomToFeatures(self.parent.layerGPS.features);\r\n                        }\r\n\r\n                        resolve({\r\n                            marker: marker, accuracy: accuracyCircle\r\n                        });\r\n                    });\r\n\r\n                } else { resolve(null); }\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.setTracking = function (tracking) {\r\n        var self = this;\r\n\r\n        if (tracking) {\r\n            self.parent.firstPosition = false;\r\n            var sessionwaypoint = [];\r\n\r\n            var nativeTrackingFeature;\r\n\r\n            if (self.parent.sessionTracking) {\r\n\r\n                var JSONParser = new TC.wrap.parser.JSON();\r\n                var features = JSONParser.parser.readFeatures(self.parent.sessionTracking);\r\n                if (features && self.parent.storageCRS !== self.parent.map.crs) {\r\n                    features = features.map(function (feature) {\r\n                        var clone = feature.clone();\r\n                        clone.getGeometry().transform(self.parent.storageCRS, self.parent.map.crs);\r\n                        return clone;\r\n                    });\r\n                }\r\n\r\n                var coordinates = features.filter(function (feature) {\r\n                    var type = feature.getGeometry().getType().toLowerCase();\r\n                    if (type === 'point') { sessionwaypoint.push(feature); }\r\n                    return type === 'linestring' || type === 'multilinestring';\r\n                })[0].getGeometry().getCoordinates();\r\n\r\n                nativeTrackingFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString(coordinates, ('XYZM')),\r\n                    tracking: true\r\n                });\r\n\r\n            } else {\r\n                nativeTrackingFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString([], ('XYZM')),\r\n                    tracking: true\r\n                });\r\n            }\r\n\r\n            if (nativeTrackingFeature) {\r\n\r\n                TC.wrap.Feature.createFeature(nativeTrackingFeature).then(function (tcFeature) {\r\n                    self.parent.layerTracking.addFeature(tcFeature);\r\n\r\n                    if (tcFeature.geometry.length > 1) {\r\n                        self.parent.map.zoomToFeatures(self.parent.layerTracking.features);\r\n                    }\r\n\r\n                    if (sessionwaypoint.length > 0) {\r\n                        Promise.all(sessionwaypoint.map(function (waypoint) {\r\n                            return TC.wrap.Feature.createFeature(waypoint);\r\n                        })).then(function (features) {\r\n                            if (features) {\r\n                                features.forEach(function (feature) {\r\n                                    self.parent.layerTracking.addFeature(feature);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    self.parent.currentPositionWaiting = self.parent.getLoadingIndicator().addWait();\r\n\r\n                    if (!self.currentPositionTrk) {\r\n                        self.currentPositionTrk = [];\r\n                    }\r\n\r\n                    var getCurrentPositionInterval;\r\n                    var getCurrentPositionRequest = 0;\r\n                    var errorTimeout = 0;\r\n                    var toast = false;\r\n                    var options = {\r\n                        enableHighAccuracy: true, timeout: 600000\r\n                    };\r\n\r\n                    function getCurrentPosition(errorCallback) {\r\n                        var id = getCurrentPositionRequest++;\r\n                        navigator.geolocation.getCurrentPosition(\r\n                            function (data) {\r\n                                clearInterval(getCurrentPositionInterval);\r\n                                self.parent.getLoadingIndicator().removeWait(self.parent.currentPositionWaiting);\r\n                                self.positionChangehandler(data).then(function (obj) {\r\n                                    if (self.parent.geopositionTracking == true && obj && obj.marker && obj.accuracy) {\r\n                                        self.currentPositionTrk.push(navigator.geolocation.watchPosition(self.positionChangehandler.bind(self), self.parent.onGeolocateError.bind(self.parent), options));\r\n                                    }\r\n                                });\r\n                            },\r\n                            errorCallback ? errorCallback :\r\n                                function (error) {\r\n                                    switch (error.code) {\r\n                                        case error.TIMEOUT:\r\n                                            if (errorTimeout > 10) {\r\n                                                clearInterval(getCurrentPositionInterval);\r\n                                                self.parent.onGeolocateError.call(self.parent, error);\r\n                                            } else {\r\n                                                errorTimeout++;\r\n                                                getCurrentPosition(function () {\r\n                                                    clearInterval(getCurrentPositionInterval);\r\n                                                    if (!toast) {\r\n                                                        toast = true;\r\n                                                        self.parent.onGeolocateError.call(self.parent, error);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                            break;\r\n                                        default:\r\n                                            clearInterval(getCurrentPositionInterval);\r\n                                            self.parent.onGeolocateError.call(self.parent, error);\r\n                                    }\r\n                                }, {\r\n                                timeout: 5000 + id,\r\n                                maximumAge: 10,\r\n                                enableHighAccuracy: true\r\n                            }\r\n                        );\r\n                    }\r\n                    getCurrentPositionInterval = setInterval(getCurrentPosition, 1000);\r\n\r\n                    setTimeout(function () {\r\n                        if (self.parent.layerTracking && self.parent.layerTracking.features && self.parent.layerTracking.features.length > 0 && self.parent.layerTracking.features[0].geometry.length == 0) {\r\n                            clearInterval(getCurrentPositionInterval);\r\n\r\n                            self.parent.getLoadingIndicator().removeWait(self.parent.currentPositionWaiting);\r\n                            self.map.toast(self.parent.getLocaleString(\"geo.error.permission_denied\"), {\r\n                                type: TC.Consts.msgType.WARNING\r\n                            });\r\n                            self.parent.track.activateButton.classList.remove(TC.Consts.classes.HIDDEN);\r\n                            self.parent.track.deactivateButton.classList.add(TC.Consts.classes.HIDDEN);\r\n                        }\r\n                    }, options.timeout + 1000); // Wait extra second\r\n\r\n                });\r\n            }\r\n        } else {\r\n            self.parent.firstPosition = false;\r\n\r\n            if (self.currentPositionTrk) {\r\n                self.currentPositionTrk = self.currentPositionTrk instanceof Array ? self.currentPositionTrk : [self.currentPositionTrk];\r\n\r\n                self.currentPositionTrk.forEach(function (watch) {\r\n                    navigator.geolocation.clearWatch(watch);\r\n                });\r\n\r\n                self.currentPositionTrk = [];\r\n            }\r\n\r\n            if (self.parent.trackCenterButton)\r\n                self.parent.trackCenterButton.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.activateSnapping = function () {\r\n        var self = this;\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            self.olMap.on([POINTERMOVE, SINGLECLICK], self._snapTrigger);\r\n            self.olMap.on(POSTCOMPOSE, self._postcomposeTrigger);\r\n        }\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.deactivateSnapping = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            if (!TC.Util.detectMobile()) {\r\n                olMap.un([POINTERMOVE, SINGLECLICK], self._snapTrigger);\r\n                olMap.un(POSTCOMPOSE, self._postcomposeTrigger);\r\n            }\r\n\r\n            if (self.snapInfo) {\r\n                olMap.removeOverlay(self.snapInfo);\r\n            }\r\n\r\n            if (self.snapInfoElement) {\r\n                self.snapInfoElement.style.display = 'none';\r\n            }\r\n\r\n            if (self.snapLine) {\r\n                delete self.snapLine;\r\n                olMap.render();\r\n            }\r\n        });\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.clear = function (layer) {\r\n        var self = this;\r\n\r\n        if (layer) {\r\n            layer.clearFeatures();\r\n        }\r\n\r\n        attachedDTD = false;\r\n\r\n        self.deactivateSnapping.call(self);\r\n    };\r\n    var vectorCtx;\r\n    TC.wrap.control.Geolocation.prototype.duringTrackSnap = function (e) {\r\n        var self = this;\r\n\r\n        var vectorContext = vectorCtx = e.vectorContext;\r\n\r\n        if (vectorContext && self.snapLine) {\r\n            if (typeof (vectorContext.setFillStrokeStyle) === 'function')\r\n                vectorContext.setFillStrokeStyle(null, new ol.style.Stroke({\r\n                    color: 'rgba(197, 39, 55, 1)',\r\n                    width: 1\r\n                }));\r\n\r\n            if (typeof (vectorContext.drawGeometry) === 'function')\r\n                vectorContext.drawGeometry(self.snapLine.wrap.feature.getGeometry());\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.endSnap = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            /* cartel */\r\n            if (self.snapInfo) {\r\n                olMap.removeOverlay(self.snapInfo);\r\n            }\r\n            if (self.snapInfoElement) {\r\n                self.snapInfoElement.style.display = 'none';\r\n            }\r\n            /* línea */\r\n            if (self.snapLine) {\r\n                delete self.snapLine;\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.initSnap = function (coordinate, eventPixel) {\r\n        var self = this;\r\n\r\n        if (self.parent.layerTrack) {\r\n            var vectorSource = self.parent.layerTrack.wrap.layer.getSource();\r\n            var closestFeature = vectorSource.getClosestFeatureToCoordinate(coordinate);\r\n\r\n            if (closestFeature !== null) {\r\n                var geometry = closestFeature.getGeometry();\r\n                var closestPoint = geometry.getClosestPoint(coordinate);\r\n\r\n                const pixel = self.parent.map.getPixelFromCoordinate(closestPoint);\r\n                const distance = Math.sqrt(\r\n                    Math.pow(eventPixel[0] - pixel[0], 2) +\r\n                    Math.pow(eventPixel[1] - pixel[1], 2));\r\n\r\n                if (distance > self.parent.snappingTolerance) {\r\n                    self.endSnap();\r\n                } else {\r\n                    var coordinates = [coordinate, [closestPoint[0], closestPoint[1]]];\r\n\r\n                    if (!self.snapLine) self.snapLine = new TC.feature.Polyline(coordinates, {});\r\n                    else self.snapLine.wrap.feature.getGeometry().setCoordinates(coordinates);\r\n\r\n                    // información del punto\r\n                    if (!self.snapInfoElement)\r\n                        self.snapInfoElement = document.getElementsByClassName('tc-ctl-geolocation-track-snap-info')[0];\r\n\r\n                    self.snapInfoElement.style.display = 'block';\r\n\r\n                    if (!self.snapInfo) {\r\n                        self.snapInfo = new ol.Overlay({\r\n                            element: self.snapInfoElement,\r\n                            offset: [5, 18]\r\n                        });\r\n\r\n                        self.olMap.addOverlay(self.snapInfo);\r\n                    }\r\n\r\n                    if (self.snapInfo.getMap() == undefined)\r\n                        self.snapInfo.setMap(self.olMap);\r\n\r\n                    self.snapInfo.setPosition(coordinate);\r\n\r\n                    var data = {};\r\n                    if (closestFeature.getGeometry().getType() != \"LineString\") {\r\n                        if (closestFeature.getKeys().indexOf('name') > -1)\r\n                            data.n = closestFeature.get('name');\r\n                    }\r\n\r\n                    var locale = self.parent.map.options.locale && self.parent.map.options.locale.replace('_', '-') || undefined;\r\n                    data.x = self.map.wrap.isGeo() ? closestPoint[0].toLocaleString(locale, { minimumFractionDigits: 5 }) : Math.round(closestPoint[0]).toLocaleString(locale);\r\n                    data.y = self.map.wrap.isGeo() ? closestPoint[1].toLocaleString(locale, { minimumFractionDigits: 5 }) : Math.round(closestPoint[1]).toLocaleString(locale);\r\n\r\n                    if (self.map.wrap.isGeo()) {\r\n                        data.isGeo = true;\r\n                    }\r\n\r\n                    var getZ = function (position) {\r\n                        return closestPoint[position] ? (Math.round(closestPoint[position] * 100) / 100).toLocaleString(locale) : undefined;\r\n                    };\r\n                    var getM = function (position) {\r\n                        return closestPoint[position] > 0 ? new Date(closestPoint[position]).toLocaleString(locale) : undefined;\r\n                    };\r\n\r\n                    if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYZM) {\r\n                        data.z = getZ(2);\r\n                        data.m = getM(3);\r\n                    } else if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYZ) {\r\n                        data.z = getZ(2);\r\n                    } else if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYM) {\r\n                        data.m = getM(2);\r\n                    }\r\n\r\n                    if (data) {\r\n                        self.parent.getRenderedHtml(self.parent.CLASS + '-track-snapping-node', data, function (html) {\r\n                            self.snapInfoElement.innerHTML = html;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        self.olMap.render();\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.drawTrackingData = function (track) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            const featurePromises = [];\r\n\r\n            const JSONParser = new TC.wrap.parser.JSON();\r\n            const features = JSONParser.parser.readFeatures(track.data);\r\n\r\n            features.filter(function (feature) {\r\n                return feature.getGeometry().getType().toLowerCase() === 'linestring' || feature.getGeometry().getType().toLowerCase() === 'multilinestring';\r\n            }).forEach(function (feature) {\r\n                feature.getGeometry().setCoordinates(feature.getGeometry().getCoordinates(), track.layout);\r\n            });\r\n\r\n            self.activateSnapping.call(self);\r\n\r\n            for (var i = 0, len = features.length; i < len; i++) {\r\n                featurePromises.push(TC.wrap.Feature.createFeature(features[i]));\r\n            }\r\n\r\n            Promise.all(featurePromises).then(function (feats) {\r\n                feats.forEach(function (feat) {\r\n                    if (feat) {\r\n                        self.parent.layerTrack.addFeature(feat);\r\n                    }\r\n                });\r\n                self.parent.map.zoomToFeatures(self.parent.layerTrack.features);\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.formattedFromStorage = function (storageData) {\r\n        const self = this;\r\n\r\n        if (self.parent.storageCRS !== self.parent.map.crs) {\r\n            var features = new ol.format.GeoJSON().readFeatures(storageData);\r\n            if (features) {\r\n                features = features.map(function (feature) {\r\n                    var clone = feature.clone();\r\n                    clone.getGeometry().transform(self.parent.storageCRS, self.parent.map.crs);\r\n                    return clone;\r\n                });\r\n\r\n                return new ol.format.GeoJSON().writeFeatures(features);\r\n            }\r\n        }\r\n\r\n        return storageData;\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.formattedToStorage = function (layer, removeTrackingProperty, notReproject) {\r\n        var self = this;\r\n\r\n        var parser = new TC.wrap.parser.JSON();\r\n        parser = parser.parser;\r\n\r\n        var features = layer.wrap.layer.getSource().getFeatures();\r\n        var layout;\r\n\r\n        features = features.map(function (feature) {\r\n            if (feature.getGeometry() instanceof ol.geom.LineString) {\r\n                layout = feature.getGeometry().getLayout();\r\n            }\r\n\r\n            if (removeTrackingProperty && feature.getProperties().tracking) {\r\n                feature.unset(\"tracking\");\r\n            }\r\n\r\n            if (!notReproject && self.parent.map.crs !== self.parent.storageCRS) {\r\n                var clone = feature.clone();\r\n                clone.getGeometry().transform(self.parent.map.crs, self.parent.storageCRS);\r\n\r\n                return clone;\r\n            }\r\n\r\n            return feature;\r\n        }).sort(function (a, b) {\r\n\r\n            if (a.getGeometry() instanceof ol.geom.Point &&\r\n                !(b.getGeometry() instanceof ol.geom.Point)) {\r\n                return -1;\r\n            }\r\n\r\n            if (b.getGeometry() instanceof ol.geom.Point &&\r\n                !(a.getGeometry() instanceof ol.geom.Point)) {\r\n                return 2;\r\n            }\r\n\r\n            if (a.getProperties().name < b.getProperties().name) { return -1; }\r\n            if (a.getProperties().name > b.getProperties().name) { return 1; }\r\n\r\n            return 0;\r\n        });\r\n\r\n        return {\r\n            features: parser.writeFeatures(features), layout: layout\r\n        };\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.export = function (li) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            self.parent.getTrackingData(li).then(function (data) {\r\n                if (data) {\r\n\r\n                    var olFeatures = new ol.format.GeoJSON().readFeatures(data.data);\r\n\r\n                    if (olFeatures.length === 0) {\r\n                        var geoJSON = self.parent.getTrackingData(li);\r\n                        olFeatures = new ol.format.GeoJSON().readFeatures(geoJSON);\r\n                    }\r\n\r\n                    Promise.all(olFeatures.map(function (feature) {\r\n                        return TC.wrap.Feature.createFeature(feature);\r\n                    })).then((features) => {\r\n                        resolve(features);\r\n                    });\r\n                } else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    var segmentsUnion = function (lineStrings) {\r\n        var mergedIndex = [];\r\n        var coords = [];\r\n        if (lineStrings.length > 1) {\r\n\r\n            if (lineStrings[0].length == 4) {\r\n                lineStrings = lineStrings.sort(function (a, b) {\r\n                    if (a[0][3] == b[0][3])\r\n                        return 0;\r\n                    else if (a[0][3] < b[0][3])\r\n                        return -1;\r\n                    else return 1;\r\n                });\r\n            }\r\n\r\n            for (var ls = 0; ls < lineStrings.length; ls++) {\r\n                var lineString = lineStrings[ls];\r\n                var nextLineIndex = -1;\r\n                var distance = Infinity;\r\n\r\n                var last = lineString.getLastCoordinate();\r\n                for (var nls = ls + 1; nls < lineStrings.length; nls++) {\r\n                    var first = lineStrings[nls].getFirstCoordinate();\r\n                    var d = Math.hypot(last[0] - first[0], last[1] - first[1]);\r\n                    if (d < distance) {\r\n                        nextLineIndex = nls;\r\n                        distance = d;\r\n                    }\r\n                }\r\n\r\n                if (mergedIndex.length < lineStrings.length) {\r\n                    if (mergedIndex.indexOf(ls) == -1) {\r\n                        mergedIndex.push(ls);\r\n                        coords = coords.concat(lineString.getCoordinates());\r\n                    }\r\n                    if (mergedIndex.indexOf(nextLineIndex) == -1) {\r\n                        mergedIndex.push(nextLineIndex);\r\n                        coords = coords.concat(lineStrings[nextLineIndex].getCoordinates());\r\n                    }\r\n                }\r\n            }\r\n\r\n            //self.map.toast(self.parent.getLocaleString(\"geo.trk.simulateWarning\"), { type: TC.Consts.msgType.WARNING });\r\n\r\n            return coords;\r\n        }\r\n\r\n        return lineStrings[0].getCoordinates();\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.processImportedFeatures = function (options) {\r\n        var self = this;\r\n\r\n        var source = self.parent.layerTrack.wrap.layer.getSource();\r\n        var fileName = self.parent.importedFileName;\r\n        var names = [];\r\n        var toAdd = [];\r\n        var toRemove = [];\r\n        var maybeRemove = [];\r\n        var features = source.getFeatures();\r\n\r\n        var segments = [];\r\n        var coord = [];\r\n\r\n        var getName = function (feature) {\r\n            if (feature.getProperties().hasOwnProperty(\"name\")) {\r\n                if (feature.getProperties().name.trim().length > 0)\r\n                    names.push(feature.getProperties().name);\r\n                else names.push(fileName);\r\n            }\r\n            else names.push(fileName);\r\n        };\r\n\r\n        for (var f = 0; f < features.length; f++) {\r\n            var feature = features[f];\r\n\r\n            if (feature instanceof TC.Feature)\r\n                feature = features[f].wrap.feature;\r\n\r\n            if (feature.getGeometry() instanceof ol.geom.Point) {\r\n                coord.push(feature.getGeometry().getCoordinates());\r\n                maybeRemove.push(feature);\r\n            }\r\n            else if (feature.getGeometry() instanceof ol.geom.LineString) {\r\n                // GLS: 31/01/2018 Routes (<rte>) are converted into LineString geometries, and tracks (<trk>) into MultiLineString, por tanto, las líneas las cargamos como N Rutas, no las unimos como hasta ahora: // segments.push(feature.getGeometry());                \r\n                getName(feature);\r\n                toAdd.push(new ol.Feature({\r\n                    geometry: new ol.geom.LineString(feature.getGeometry().getCoordinates(), feature.getGeometry().getLayout())\r\n                }));\r\n                toRemove.push(feature);\r\n            }\r\n            else if (feature.getGeometry() instanceof ol.geom.MultiLineString) {\r\n                var clone = feature.clone();\r\n                getName(clone);\r\n\r\n                var ls = clone.getGeometry().getLineStrings();\r\n\r\n                var coords = segmentsUnion(ls);\r\n                toAdd.push(new ol.Feature({\r\n                    geometry: new ol.geom.LineString(coords, feature.getGeometry().getLayout())\r\n                }));\r\n                toRemove.push(feature);\r\n            }\r\n        }\r\n\r\n        if (segments.length > 0) {\r\n            var coords = segmentsUnion(segments);\r\n            toAdd.push(new ol.Feature({\r\n                geometry: new ol.geom.LineString(coords)\r\n            }));\r\n        }\r\n\r\n        if (coord.length > 0 && maybeRemove.length == features.length) {\r\n            toAdd.push(new ol.Feature({\r\n                geometry: new ol.geom.LineString(coord)\r\n            }));\r\n        }\r\n\r\n        if (toRemove.length > 0) {\r\n            for (var i = 0; i < toRemove.length; i++) {\r\n                source.removeFeature(toRemove[i]);\r\n            }\r\n        }\r\n\r\n        if (toAdd.length > 0) {\r\n            var sameName = function (array, element) {\r\n                var indices = [];\r\n                var idx = array.indexOf(element);\r\n                while (idx != -1) {\r\n                    indices.push(idx);\r\n                    idx = array.indexOf(element, idx + 1);\r\n\r\n                    if (indices.length > 1)\r\n                        return true;\r\n                }\r\n\r\n                return indices.length > 1 ? true : false;\r\n            };\r\n\r\n            var featureToAdd;\r\n            var index = 0;\r\n            var processAdd = function () {\r\n                const promises = toAdd.map(function (ta, idx) {\r\n                    return new Promise(function (resolve, reject) {\r\n                        if (featureToAdd) {\r\n                            source.removeFeature(featureToAdd);\r\n                        }\r\n\r\n                        var name;\r\n                        if (names.length > idx) {\r\n                            var name = names[idx];\r\n                            if (sameName(names, name))\r\n                                name = '[' + (idx + 1) + ']' + ' ' + name;\r\n                        }\r\n\r\n                        self.parent.importedFileName = name ? name : fileName;\r\n\r\n                        featureToAdd = toAdd[idx];\r\n                        source.addFeature(featureToAdd);\r\n\r\n                        self.parent.saveTrack({\r\n                            message: self.parent.getLocaleString('geo.trk.upload.ok', { trackName: name ? name : fileName }),\r\n                            importedFileName: name ? name : fileName,\r\n                            notReproject: options.notReproject\r\n                        }).then(function (importedIndex) {\r\n                            if (idx == 0) {\r\n                                index = importedIndex;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                    });\r\n                });\r\n                return Promise.all(promises);\r\n            };\r\n            processAdd().then(function () {\r\n\r\n                self.parent.layerTrack.setVisibility(false);\r\n                self.parent.layerTrack.clearFeatures();\r\n\r\n                self.parent.trigger(self.parent.Const.Event.IMPORTEDTRACK, { index: index });\r\n\r\n                delete self.parent.importedFileName;\r\n                self.parent.getLoadingIndicator().removeWait(options.wait);\r\n            });\r\n        } else {\r\n\r\n            if (self.parent.layerTrack) {\r\n                self.parent.map.removeLayer(self.parent.layerTrack);\r\n                self.parent.layerTrack = undefined;\r\n            }\r\n\r\n            delete self.parent.importedFileName;\r\n            self.parent.getLoadingIndicator().removeWait(options.wait);\r\n            TC.alert(self.parent.getLocaleString(\"geo.trk.upload.error4\"));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.import = function (wait, data, type) {\r\n        var self = this;\r\n        var vectorSource;\r\n        var listenerKey;\r\n\r\n        if (data && data.text) {\r\n\r\n            var layerOptions = self.parent.layerTrack.wrap.createVectorSource({\r\n                data: data.text,\r\n                type: type\r\n            });\r\n            vectorSource = layerOptions.source;\r\n\r\n            listenerKey = vectorSource.on('change', function (e) {\r\n                if (vectorSource.getState() == 'ready') {\r\n                    ol.Observable.unByKey(listenerKey);\r\n                    self.processImportedFeatures(wait);\r\n                }\r\n            });\r\n\r\n            var olLayer = self.parent.layerTrack.wrap.layer;\r\n            olLayer.setSource(vectorSource);\r\n\r\n        } else {\r\n\r\n            if (self.parent.layerTrack) {\r\n                self.parent.map.removeLayer(self.parent.layerTrack);\r\n                self.parent.layerTrack = undefined;\r\n            }\r\n\r\n            delete self.parent.importedFileName;\r\n            self.parent.getLoadingIndicator().removeWait(wait);\r\n            TC.alert(self.parent.getLocaleString(\"geo.trk.upload.error4\"));\r\n        }\r\n    };\r\n\r\n    var idRequestAnimationFrame;\r\n    TC.wrap.control.Geolocation.prototype.simulateTrackEnd = function () {\r\n        var self = this;\r\n\r\n        self.parent.chartProgressClear();\r\n\r\n        if (self.simulateMarker) {\r\n            window.cancelAnimationFrame(idRequestAnimationFrame);\r\n            if (self.simulateMarker.layer.wrap.layer.getSource().getFeatures().length > 0)\r\n                self.simulateMarker.layer.removeFeature(self.simulateMarker);\r\n\r\n            delete self.simulateMarker;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.simulateTrack = function () {\r\n        var self = this;\r\n\r\n        var coordinates;\r\n        var features = self.parent.layerTrack.wrap.layer.getSource().getFeatures();\r\n        for (var ls = 0; ls < features.length; ls++) {\r\n            if (features[ls].getGeometry() instanceof ol.geom.LineString) {\r\n                coordinates = features[ls].getGeometry().getCoordinates();\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (coordinates && coordinates.length > 0) {\r\n            var first = coordinates[0];\r\n\r\n            var setSimulateMarker = function () {\r\n                return new Promise(function (resolve, reject) {\r\n                    if (!self.simulateMarker) {\r\n                        self.parent.layerTrack.addPoint(first.slice(0, 2), {\r\n                            radius: 7,\r\n                            fillColor: '#ff0000',\r\n                            fillOpacity: 0.5,\r\n                            strokeColor: '#ffffff',\r\n                            strokeWidth: 2\r\n                        }).then(function (f) {\r\n                            resolve(f);\r\n                        });\r\n                    } else {\r\n                        self.simulateMarker.setCoords(first.slice(0, 2));\r\n                        resolve(self.simulateMarker);\r\n                    }\r\n                });\r\n            };\r\n            setSimulateMarker().then(function (f) {\r\n                self.simulateMarker = f;\r\n\r\n                var animationFrameFraction = function () {\r\n                    var trackLength = coordinates.length;\r\n                    var start, finish;\r\n                    var duration;\r\n                    var fraction;\r\n                    var hasTime = false;\r\n\r\n                    const toLength = function (coords) {\r\n                        if (self.parent.map.crs !== self.parent.map.options.utmCrs) {\r\n                            return TC.Util.reproject(coords, self.parent.map.crs, self.parent.map.options.utmCrs);\r\n                        }\r\n\r\n                        return coords;\r\n                    };\r\n\r\n                    var arCoordinates = coordinates;\r\n                    if (arCoordinates[0].length == 4 && arCoordinates[0][3] > 0) {\r\n                        start = arCoordinates[0][3];\r\n                        finish = arCoordinates[arCoordinates.length - 1][3];\r\n                        hasTime = true;\r\n                    } else {\r\n                        arCoordinates[0][3] = Date.now();\r\n\r\n                        for (var i = 1; i < arCoordinates.length; i++) {\r\n                            var done;\r\n                            arCoordinates[i][3] = 0;\r\n\r\n                            if (i + 1 < arCoordinates.length) {\r\n                                done = new ol.geom.LineString(toLength(arCoordinates.slice(i - 1, i + 1))).getLength();\r\n                            } else {\r\n                                done = new ol.geom.LineString(toLength(arCoordinates.slice(i - 1))).getLength();\r\n                            }\r\n\r\n                            arCoordinates[i][3] = arCoordinates[i - 1][3] + (3600000 * done / self.parent.walkingSpeed);\r\n                        }\r\n\r\n                        start = arCoordinates[0][3];\r\n                        finish = arCoordinates[arCoordinates.length - 1][3];\r\n                    }\r\n\r\n                    var trackFilm = new ol.geom.LineString(arCoordinates);\r\n                    var timestamp = start;\r\n                    var distance = 0;\r\n\r\n                    if (self.parent.map.crs !== self.parent.map.options.utmCrs) {\r\n                        distance = new ol.geom.LineString(toLength(JSON.parse(JSON.stringify(arCoordinates)))).getLength();\r\n                    } else {\r\n                        distance = trackFilm.getLength();\r\n                    }\r\n\r\n                    var done = 0;\r\n                    var getDoneAtM = function (m) {\r\n                        for (var i = 0; i < arCoordinates.length; i++) {\r\n                            if (arCoordinates[i][3] > m)\r\n                                return {\r\n                                    d: new ol.geom.LineString(toLength(arCoordinates.slice(0, i))).getLength(),\r\n                                    p: arCoordinates[i - 1].slice(0, 2)\r\n                                };\r\n                        }\r\n                    };\r\n\r\n                    var loopAtFraction = function () {\r\n\r\n                        if (!self.parent.simulate_paused) {\r\n                            var position = trackFilm.getCoordinateAtM(timestamp);\r\n                            var d = getDoneAtM(timestamp);\r\n\r\n                            if (fraction >= 1 || !position || !d) {\r\n                                var li = self.parent.getSelectedTrack();\r\n                                if (li)\r\n                                    self.parent.uiSimulate(false, li);\r\n\r\n                                if (self.parent.hasElevation) {\r\n                                    self.parent.chartProgressClear();\r\n                                }\r\n\r\n                                self.simulateTrackEnd();\r\n\r\n                                return;\r\n                            } else {\r\n\r\n                                if (self.parent.hasElevation) {\r\n                                    self.parent.chartSetProgress(d, position, distance, (hasTime ? self.parent._getTime(arCoordinates[0][3], position[3]) : false));\r\n                                }\r\n\r\n                                if (self.simulateMarker) {\r\n                                    var from = self.simulateMarker.getCoords();\r\n                                    var to = position;\r\n                                    var rotation = Math.atan2(to[1] - from[1], to[0] - from[0]) * 180 / Math.PI;\r\n\r\n                                    self.simulateMarker.setCoords(position);\r\n                                    //self.simulateMarker.setStyle({ angle: rotation });\r\n                                }\r\n\r\n                                if (self.parent.simulate_speed !== 1)\r\n                                    timestamp = timestamp + (self.parent.delta * self.parent.simulate_speed);\r\n                                else\r\n                                    timestamp = timestamp + self.parent.delta;\r\n                            }\r\n                        }\r\n\r\n                        idRequestAnimationFrame = requestAnimationFrame(loopAtFraction);\r\n                    };\r\n                    idRequestAnimationFrame = requestAnimationFrame(loopAtFraction);\r\n\r\n                };\r\n\r\n                const hasD3 = new Promise(function (resolve, reject) {\r\n                    if (window.d3) {\r\n                        resolve();\r\n                    }\r\n                    else {\r\n                        TC.loadJS(!window.d3, [TC.Consts.url.D3C3], function () {\r\n                            resolve();\r\n                        });\r\n                    }\r\n                });\r\n                hasD3.then(function () {\r\n                    idRequestAnimationFrame = requestAnimationFrame(animationFrameFraction);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.headingChangehandler = function (evt) {\r\n        var self = this;\r\n        if (!self.parent.track.infoOnMap) {\r\n            self.parent.track.infoOnMap = document.createElement('div');\r\n            const iomStyle = self.parent.track.infoOnMap.style;\r\n            iomStyle.overFlowY = 'scroll';\r\n            iomStyle.height = '200px';\r\n            iomStyle.width = '200px';\r\n            iomStyle.top = '0';\r\n            iomStyle.left = '100px';\r\n            iomStyle.backgroundColor = 'fuchsia';\r\n            iomStyle.position = 'absolute';\r\n            self.parent.map.div.appendChild(self.parent.track.infoOnMap);\r\n        }\r\n\r\n        self.parent.track.infoOnMap.style.display = '';\r\n\r\n        self.heading = evt.target.getHeading();\r\n\r\n        self.parent.track.infoOnMap.innerHTML = self.parent.track.infoOnMap.innerHTML +\r\n            '<br> <p> salta headingChangehandler </p> <br> <p> evt.target.getHeading(): ' + self.heading + ' </p>';\r\n\r\n\r\n\r\n        self.map.wrap.getMap().then(function (map) {\r\n            map.getView().setRotation(-self.heading);\r\n        });\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.orientationChangehandler = function (event) {\r\n        var self = this;\r\n\r\n        var view = self.map.wrap.map.getView();\r\n        var center = view.getCenter();\r\n        var resolution = view.getResolution();\r\n        var beta = event.target.getBeta() || 0;\r\n        var gamma = event.target.getGamma() || 0;\r\n\r\n        center[0] -= resolution * gamma * 25;\r\n        center[1] += resolution * beta * 25;\r\n\r\n        view.setCenter(view.constrainCenter(center));\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.pulsate = function (circle) {\r\n        var self = this;\r\n\r\n        self.pulsated = true;\r\n\r\n        var radius = circle.wrap.feature.getGeometry().getRadius();\r\n        var start = new Date().getTime();\r\n\r\n        var duration = 500;\r\n        var listenerKey;\r\n\r\n        var getRadius = function (elapsed) {\r\n            switch (true) {\r\n                case elapsed <= 50:\r\n                    return radius;\r\n                case elapsed > 50 && elapsed <= 100:\r\n                    return radius * 1.02;\r\n                case elapsed > 100 && elapsed <= 150:\r\n                    return radius * 1.05;\r\n                case elapsed > 150 && elapsed <= 200:\r\n                    return radius * 1.02;\r\n                case elapsed > 200 && elapsed <= 300:\r\n                    return radius;\r\n                case elapsed > 300 && elapsed <= 350:\r\n                    return radius * 1.02;\r\n                case elapsed > 350 && elapsed <= 400:\r\n                    return radius * 1.05;\r\n                case elapsed > 400 && elapsed <= 450:\r\n                    return radius * 1.02;\r\n                case elapsed > 450 && elapsed <= 500:\r\n                    return radius * 1;\r\n                default:\r\n                    return radius;\r\n            }\r\n        };\r\n        listenerKey = self.olMap.on(POSTCOMPOSE, function (event) {\r\n            var vectorContext = event.vectorContext;\r\n            var frameState = event.frameState;\r\n\r\n            var elapsed = frameState.time - start;\r\n\r\n            var f = circle.wrap.feature.getGeometry().clone();\r\n            var r = getRadius(elapsed);\r\n            f.setRadius(r);\r\n\r\n            vectorContext.setFillStrokeStyle(\r\n                new ol.style.Fill({\r\n                    color: 'rgba(0, 0, 0, 0.1)'\r\n                }),\r\n                new ol.style.Stroke({\r\n                    color: 'rgba(255, 0, 0, .8)', width: 1\r\n                })\r\n            );\r\n            vectorContext.drawCircleGeometry(f);\r\n\r\n            if (elapsed > duration) {\r\n                ol.Observable.unByKey(listenerKey);\r\n                return;\r\n            }\r\n\r\n            frameState.animate = true;\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.register = function (map) {\r\n        const self = this;\r\n        self.map = map;\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n            self.olMap = olMap;\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.showElevationMarker = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const data = options.data;\r\n        const layer = options.layer;\r\n        const coords = options.coords;\r\n\r\n        if (!self.elevationMarker) {\r\n            const elm = document.createElement('div');\r\n            elm.style.display = 'none';\r\n            elm.classList.add('tc-ctl-geolocation-trackMarker', 'elevation');\r\n            self.elevationMarker = new ol.Overlay({\r\n                element: elm,\r\n                offset: [0, -11],\r\n                positioning: ol.OverlayPositioning.CENTER_CENTER,\r\n                stopEvent: false\r\n            });\r\n        }\r\n\r\n        // GLS: si la capa del track está visible mostramos marcamos punto del gráfico en el mapa\r\n        if (layer.getVisibility() && layer.getOpacity() > 0) {\r\n            self.elevationMarker.getElement().style.display = '';\r\n            self.olMap.addOverlay(self.elevationMarker);\r\n            self.elevationMarker.setPosition(coords[data[0].index]);\r\n        }\r\n\r\n        // No centrar en el marker\r\n        //var extent = self.map.getExtent();\r\n        //var p = coords[data[0].index];\r\n        //if (p[0] >= extent[0] && p[0] <= extent[2] && p[1] >= extent[1] && p[1] <= extent[3]) { }\r\n        //else {\r\n        //    self.map.setCenter(p.slice(0, 2), { animate: true });\r\n        //}\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.hideElevationMarker = function () {\r\n        if (this.elevationMarker) {\r\n            this.elevationMarker.getElement().style.display = 'none';\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.coordsActivate = function () {\r\n        var self = this;\r\n\r\n        self.olMap.on(SINGLECLICK, self._coordsTrigger);\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.coordsDeactivate = function () {\r\n        var self = this;\r\n\r\n        self.olMap.un(SINGLECLICK, self._coordsTrigger);\r\n    };\r\n\r\n    TC.wrap.Parser = function () {\r\n    };\r\n\r\n    TC.wrap.Parser.prototype.read = function (data) {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.parser) {\r\n            if (!TC.Feature) {\r\n                TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n            }\r\n            result = self.parser.readFeatures(data).map(function (feat) {\r\n                return new TC.Feature(null, {\r\n                    id: feat.getId(), data: feat.getProperties()\r\n                });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.parser = {\r\n        WFS: function (options) {\r\n            this.parser = new ol.format.WFS(options);\r\n        },\r\n        JSON: function (options) {\r\n            this.parser = new ol.format.GeoJSON(options);\r\n        }\r\n    };\r\n    TC.inherit(TC.wrap.parser.WFS, TC.wrap.Parser);\r\n    TC.inherit(TC.wrap.parser.JSON, TC.wrap.Parser);\r\n\r\n    TC.wrap.control.OverviewMap.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        self.parent.layer.wrap.getLayer().then(function (olLayer) {\r\n            self.ovMap = new ol.control.OverviewMap({\r\n                target: self.parent.div,\r\n                collapsed: false,\r\n                collapsible: false,\r\n                className: self.parent.CLASS + ' ol-overviewmap',\r\n                layers: [olLayer]\r\n            });\r\n            self.ovMap._wrap = self;\r\n\r\n            /* 08/02/2019 GLS: \r\n                Establecemos el pixelRatio siempre a uno (aunque el control instancie un olMap internamente no admite el paso de la opción pixelRatio,\r\n                imposible de entender, por eso lo hago directamente), porque OL sólo atiende al valor al principio,\r\n                si después se hace zoom in/out del navegador, OL no atiende el cambio lo que provoca que el mapa se vea borroso, click se sitúa mal,\r\n                popup se sitúa entre otros efectos.\r\n                Lo gestionamos nosotros hasta que lo soporten del todo. Relacionado con las tareas/bugs:\r\n                    Bug 25976:Mapa situación en blanco\r\n                    Bug 25954:Canvas en blanco con zoom mayor al 100%\r\n                    Bug 23855:Mapa de situación se muestra en blanco\r\n            */\r\n            self.ovMap.getOverviewMap().pixelRatio_ = 1;\r\n\r\n            // Quitamos el drag&drop añadido en OL 4.1.0 machacando el overlay\r\n            self.ovMap.ovmap_.removeOverlay(self.ovMap.boxOverlay_);\r\n            var box = document.createElement('DIV');\r\n            box.className = 'ol-overviewmap-box';\r\n            box.style.boxSizing = 'border-box';\r\n            self.ovMap.boxOverlay_ = new ol.Overlay({\r\n                position: [0, 0],\r\n                positioning: ol.OverlayPositioning.BOTTOM_LEFT,\r\n                element: box\r\n            });\r\n            self.ovMap.ovmap_.addOverlay(self.ovMap.boxOverlay_);\r\n\r\n            // mantenemos el ancho y alto del canvas en números enteros\r\n            self.manageSize.call(self.ovMap.ovmap_);\r\n\r\n            self._boxElm = self.ovMap.boxOverlay_.getElement();\r\n\r\n            TC.loadJS(\r\n                !window.Draggabilly,\r\n                [TC.apiLocation + TC.Consts.url.DRAGGABILLY],\r\n                function () {\r\n                    var ovmMap = self.ovMap.ovmap_;\r\n                    const drag = new Draggabilly(self._boxElm);\r\n                    // Parcheamos Draggabilly para que respete las otras transformaciones, por ejemplo rotación.\r\n                    drag.positionDrag = function () {\r\n                        const style = this.element.style;\r\n                        const newTransform = 'translate3d( ' + this.dragPoint.x +\r\n                            'px, ' + this.dragPoint.y + 'px, 0)';\r\n                        if (style.transform.length) {\r\n                            const idxStart = style.transform.indexOf('translate3d');\r\n                            if (idxStart >= 0) {\r\n                                const idxEnd = style.transform.indexOf(')', idxStart);\r\n                                style.transform = style.transform.replace(style.transform.substring(idxStart, idxEnd + 1), newTransform);\r\n                            }\r\n                            else {\r\n                                style.transform = newTransform + ' ' + style.transform;\r\n                            }\r\n                        }\r\n                        else {\r\n                            style.transform = newTransform;\r\n                        }\r\n                    };\r\n                    drag.on('pointerDown', function (e) {\r\n                        drag.dragged = self._boxElm.cloneNode();\r\n                        drag.dragged.classList.add(TC.Consts.classes.ACTIVE);\r\n                        drag.dragged.style.position = 'absolute';\r\n                        self._boxElm.insertAdjacentElement('beforebegin', drag.dragged);\r\n                        if (map.maxExtent) {\r\n                            var bottomLeft = ovmMap.getPixelFromCoordinate([map.maxExtent[0], map.maxExtent[1]]);\r\n                            var topRight = ovmMap.getPixelFromCoordinate([map.maxExtent[2], map.maxExtent[3]]);\r\n                            var mapSize = ovmMap.getSize();\r\n                            const container = document.createElement('div');\r\n                            container.style.position = 'absolute';\r\n                            container.style.bottom = Math.round(mapSize[1] - bottomLeft[1]) + 'px';\r\n                            container.style.left = Math.round(bottomLeft[0]) + 'px';\r\n                            container.style.top = Math.round(topRight[1]) + 'px';\r\n                            container.style.right = Math.round(mapSize[0] - topRight[0]) + 'px';\r\n                            const viewport = ovmMap.getViewport();\r\n                            viewport.insertBefore(container, viewport.firstElementChild);\r\n                            drag.options.containment = container;\r\n                        }\r\n                    });\r\n                    drag.on('pointerUp', function (e) {\r\n                        drag.dragged.parentElement.removeChild(drag.dragged);\r\n                        if (map.maxExtent) {\r\n                            ovmMap.getViewport().removeChild(drag.options.containment);\r\n                            drag.options.containment = null;\r\n                        }\r\n                    });\r\n                    drag.on('dragMove', function (e, pointer, moveVector) {\r\n                        drag._delta = moveVector;\r\n                    });\r\n                    drag.on('dragEnd', function (e, pointer) {\r\n                        var olMap = self.ovMap.getMap();\r\n                        var view = olMap.getView();\r\n                        var centerPixel = ovmMap.getPixelFromCoordinate(view.getCenter());\r\n                        var newCenter = ovmMap.getCoordinateFromPixel([centerPixel[0] + drag._delta.x, centerPixel[1] + drag._delta.y]);\r\n                        var extent = map.getExtent();\r\n                        var halfWidth = (extent[2] - extent[0]) / 2;\r\n                        var halfHeight = (extent[3] - extent[1]) / 2;\r\n\r\n                        if (newCenter[0] + halfWidth > map.maxExtent[2]) {\r\n                            newCenter[0] = map.maxExtent[2] - halfWidth;\r\n                        }\r\n                        else if (newCenter[0] - halfWidth < map.maxExtent[0]) {\r\n                            newCenter[0] = map.maxExtent[0] + halfWidth;\r\n                        }\r\n                        if (newCenter[1] + halfHeight > map.maxExtent[3]) {\r\n                            newCenter[1] = map.maxExtent[3] - halfHeight;\r\n                        }\r\n                        else if (newCenter[1] - halfHeight < map.maxExtent[1]) {\r\n                            newCenter[1] = map.maxExtent[1] + halfHeight;\r\n                        }\r\n\r\n                        drag.setPosition(0, 0);\r\n                        delete drag._delta;\r\n                        map.setCenter(newCenter, { animate: true });\r\n                    });\r\n                });\r\n\r\n            map.wrap.getMap().then(function (olMap) {\r\n\r\n                // Modificamos mapa para que tenga la proyección correcta\r\n                self.reset();\r\n\r\n                const load = self.parent.div.querySelector('.' + self.parent.CLASS + '-load');\r\n                olLayer._wrap.$events.on(TC.Consts.event.BEFORETILELOAD, function () {\r\n                    load.classList.remove(TC.Consts.classes.HIDDEN);\r\n                    load.classList.add(TC.Consts.classes.VISIBLE);\r\n                });\r\n                olLayer._wrap.$events.on(TC.Consts.event.TILELOAD, function () {\r\n                    load.classList.remove(TC.Consts.classes.VISIBLE);\r\n                    load.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n\r\n                olMap.addControl(self.ovMap);\r\n\r\n                self.parent.isLoaded = true;\r\n                self.parent.trigger(TC.Consts.event.MAPLOAD);\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.reset = function (options) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const setLayer = function (layer, crs) {\r\n                if (layer.type === TC.Consts.layerType.WMTS) {\r\n                    var layerProjectionOptions = { crs: crs || self.parent.map.crs, oldCrs: layer.wrap.layer.getSource().getProjection().getCode() }; // , allowFallbackLayer: true\r\n\r\n                    if (layerProjectionOptions.oldCrs !== layerProjectionOptions.crs) {\r\n                        layer.setProjection(layerProjectionOptions);\r\n                    }\r\n                }\r\n\r\n                layer.wrap.getLayer().then(function (olLayer) {\r\n\r\n                    var olView = new ol.View(getResolutionOptions(self.parent.map.wrap, olLayer._wrap.parent));\r\n\r\n                    if (olView.getResolutions()) {\r\n                        olView.setResolution(olView.getResolutions().filter(function (res) {\r\n                            return res > olView.getResolutionForExtent(self.parent.map.getExtent(), olMap.getSize())\r\n                        }).reverse()[0]);\r\n\r\n                        olMap.setView(olView);\r\n                    } else if (olView.getProjection().getCode() !== olMap.getView().getProjection().getCode()) {\r\n                        olMap.setView(olView);\r\n                    }\r\n\r\n                    // para controlar el mapa en blanco en IE en la carga inicial\r\n                    olLayer._wrap.$events.one(TC.Consts.event.TILELOAD, function () {\r\n                        olMap.getLayers().getArray()[0].getSource().refresh();\r\n                    });\r\n\r\n                    if (layer !== self.parent.layer || olMap.getLayers().getArray().indexOf(layer) === -1) {\r\n\r\n                        self.parent.map.trigger(TC.Consts.event.OVERVIEWBASELAYERCHANGE, { oldLayer: layer !== self.parent.layer ? self.parent.layer : null, newLayer: layer });\r\n                        olMap.getLayers().forEach(function (l) {\r\n                            if (l instanceof ol.layer.Image || l instanceof ol.layer.Tile) {\r\n                                olMap.removeLayer(l);\r\n                            }\r\n                        });\r\n\r\n                        const load = self.parent.div.querySelector('.' + self.parent.CLASS + '-load');\r\n                        olLayer._wrap.$events.on(TC.Consts.event.BEFORETILELOAD, function () {\r\n                            load.classList.remove(TC.Consts.classes.HIDDEN);\r\n                            load.classList.add(TC.Consts.classes.VISIBLE);\r\n                        });\r\n                        olLayer._wrap.$events.on(TC.Consts.event.TILELOAD, function () {\r\n                            load.classList.remove(TC.Consts.classes.VISIBLE);\r\n                            load.classList.add(TC.Consts.classes.HIDDEN);\r\n                        });\r\n\r\n                        olMap.getLayers().insertAt(0, olLayer); // GLS: no usamos .addLayer(olLayer) para asegurar que la capa a añadir quede como fondo.\r\n                    }\r\n\r\n                    resolve(layer);\r\n                });\r\n            };\r\n\r\n            options = options || {};\r\n            var layer = options.layer || self.parent.layer;\r\n            if (self.parent.map && layer && self.ovMap) {\r\n                var olMap = self.ovMap.ovmap_;\r\n\r\n                layer.getCapabilitiesPromise().then(function () {\r\n\r\n                    var originalLayer = layer;\r\n\r\n                    if (!layer.isCompatible(self.parent.map.crs) && layer.wrap.getCompatibleMatrixSets(self.parent.map.crs).length === 0) {\r\n                        layer = layer.getFallbackLayer() || self.parent.defaultLayer;\r\n\r\n                        layer.getCapabilitiesPromise().then(function () {\r\n                            if (self.parent.map.on3DView && !layer.isCompatible(self.parent.map.crs)) {\r\n                                self.parent.map.loadProjections({\r\n                                    crsList: originalLayer.getCompatibleCRS(),\r\n                                    orderBy: 'name'\r\n                                }).then(function (projList) {\r\n                                    setLayer(originalLayer, projList[0].code);\r\n                                });\r\n                            } else if (layer.isCompatible(self.parent.map.crs)) {\r\n                                setLayer(layer);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        setLayer(layer);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.get3DCameraLayer = function () {\r\n        var self = this;\r\n        var result = null;\r\n        var camLayerId = '3DCamera';\r\n        var ovMap;\r\n\r\n        if (self.ovMap) {\r\n            ovMap = self.ovMap.getOverviewMap();\r\n            ovMap.getLayers().forEach(function (elm) {\r\n                if (elm.get('id') === camLayerId) {\r\n                    result = elm;\r\n                }\r\n            });\r\n\r\n            if (!result) {\r\n                var ovMap = self.ovMap.getOverviewMap();\r\n                var fovStyle = createNativeStyle({});\r\n                // Ponemos los cuadriláteros de fov sin relleno (por legibilidad)\r\n                fovStyle[0].getFill().setColor([0, 0, 0, 0]);\r\n                result = new ol.layer.Vector({\r\n                    id: camLayerId,\r\n                    source: new ol.source.Vector(),\r\n                    style: fovStyle\r\n                });\r\n                ovMap.addLayer(result);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.draw3DCamera = function (options) {\r\n        var self = this;\r\n\r\n        if (this.parent.map.isLoaded) {\r\n            self.is3D = !!options;\r\n            var camLayer = self.get3DCameraLayer();\r\n            if (camLayer) {\r\n                var feature;\r\n                options = options || {\r\n                };\r\n                var fov = options.fov;\r\n                var source = camLayer.getSource();\r\n                if (!fov || !fov.length) { // no vemos terreno o no estamos en vista 3D\r\n                    source.clear();\r\n                }\r\n                else {\r\n                    var features = source.getFeatures();\r\n                    if (!features.length) {\r\n                        feature = new ol.Feature();\r\n                        source.addFeature(feature);\r\n                    }\r\n                    else {\r\n                        feature = features[0];\r\n                    }\r\n                    feature.setGeometry(new ol.geom.Polygon([fov]));\r\n                }\r\n                var heading = (typeof options.heading === 'number') ? options.heading : 0;\r\n                self._boxElm.style.transform = 'rotate(' + heading + 'rad)';\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.enable = function () {\r\n        var self = this;\r\n        if (self.parent.layer && self.parent.layer.setVisibility) {\r\n            self.parent.layer.setVisibility(true);\r\n\r\n            /* GLS: bug 23855: mapa de situación se muestra en blanco\r\n                En el resize se valida el alto y el ancho y como el div padre (id = \"ovmap\") tiene display: none, \r\n                el ancho y el alto devuelven cero y por ello se muestra en blanco. \r\n                No vale con lanzar .trigger('resize') porque no utiliza los valores actuales del div, \r\n                sino los almacenados, por eso llamamos a updateSize que actualiza dichos valores.\r\n                https://tfsapp.tracasa.es:8088/tfs/web/wi.aspx?pcguid=4819cc6e-400e-4f70-ba7c-c18a830405aa&id=23855                \r\n            */\r\n            self.parent.wrap.ovMap.ovmap_.updateSize();\r\n\r\n            // Lo siguiente es para actualizar mapa de situación\r\n            const resizeEvent = document.createEvent('HTMLEvents');\r\n            resizeEvent.initEvent('resize', false, false);\r\n            self.parent.map.div.dispatchEvent(resizeEvent);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.disable = function () {\r\n        var self = this;\r\n        if (self.parent.layer && self.parent.layer.setVisibility) {\r\n            self.parent.layer.setVisibility(false);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.manageSize = function () {\r\n        const self = this;\r\n\r\n        TC.wrap.Map.prototype.manageSize.call(self);\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            TC.wrap.control.Click.prototype.register.call(self, map);\r\n            var _clickTrigger = self._trigger;\r\n            self._trigger = function (e) {\r\n                var result = _clickTrigger.call(self, e);\r\n                if (result) {\r\n                    self.parent.beforeRequest({ xy: e.pixel });\r\n                }\r\n                else {\r\n                    map.trigger(TC.Consts.event.NOFEATUREINFO, { control: self.parent });\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    };\r\n\r\n    var bufferElm;\r\n    var getElementText = function (elm) {\r\n        var text = elm.innerHTML || elm.textContent;\r\n        bufferElm = bufferElm || document.createElement(\"textarea\");\r\n        bufferElm.innerHTML = text;\r\n        return bufferElm.value;\r\n    };\r\n\r\n    var esriXmlParser = {\r\n        readFeatures: function (text) {\r\n            var result = [];\r\n            var dom = (new DOMParser()).parseFromString(text, 'text/xml');\r\n            if (dom.documentElement.tagName === 'FeatureInfoResponse') {\r\n                var fiCollections = dom.documentElement.getElementsByTagName('FeatureInfoCollection');\r\n                for (var i = 0, len = fiCollections.length; i < len; i++) {\r\n                    var fic = fiCollections[i];\r\n                    var layerName = fic.getAttribute('layername');\r\n                    var fInfos = fic.getElementsByTagName('FeatureInfo');\r\n                    for (var j = 0, lenj = fInfos.length; j < lenj; j++) {\r\n                        var fields = fInfos[j].getElementsByTagName('Field');\r\n                        var attributes = {\r\n                        };\r\n                        for (var k = 0, lenk = fields.length; k < lenk; k++) {\r\n                            var field = fields[k];\r\n                            attributes[getElementText(field.getElementsByTagName('FieldName')[0])] = getElementText(field.getElementsByTagName('FieldValue')[0]);\r\n                        }\r\n                        var feature = new ol.Feature(attributes);\r\n                        feature.setId(layerName + '.' + TC.getUID());\r\n                        result[result.length] = feature;\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n\r\n    var addLayerToService = function (service, layer, name) {\r\n        var path = layer.getPath(name);\r\n        service.layers.push({\r\n            name: name,\r\n            title: path[path.length - 1],\r\n            path: path.slice(1),\r\n            features: []\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.getFeatureInfo = function (coords, resolution, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        var map = self.parent.map;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            var targetServices = {};\r\n            var auxInfo = {};\r\n            const requestPromises = [];\r\n            const requestDataArray = [];\r\n            var featurePromises = [];\r\n            var services = [];\r\n\r\n            //var infoFormats = [];\r\n            var layers = olMap.getLayers().getArray();\r\n\r\n            // GLS: filtro el array de capas para quedarnos con las capas que son raster y visibles.\r\n            layers = layers.filter(function (elem) { return elem instanceof ol.layer.Image && elem.getVisible(); });\r\n\r\n            for (var j = 0; j < layers.length; j++) {\r\n                var olLayer = layers[j];\r\n                var layer = olLayer._wrap.parent;\r\n                var source = olLayer.getSource();\r\n\r\n                //console.log(\"Source: \" + layer.layerNames.join(\",\"));\r\n                //Por qué en workLayers están el vectorial de medición, y cosas así?\r\n                if (source.getGetFeatureInfoUrl && map.workLayers.indexOf(layer) >= 0 && layer.names.length > 0\r\n                    && (!opts.serviceUrl || opts.serviceUrl === layer.url)) { // Mirar si en las opciones pone que solo busque en un servicio\r\n\r\n                    //\r\n                    var targetService;\r\n                    if (!targetServices[layer.url]) {\r\n                        targetService = {\r\n                            url: layer.url,\r\n                            layers: [],\r\n                            mapLayers: [],\r\n                            title: layer.title,\r\n                            request: null\r\n                        };\r\n                        targetServices[layer.url] = targetService;\r\n                        auxInfo[layer.url] = {\r\n                            source: TC.Util.extend(true, {}, source),\r\n                            layers: []\r\n                        };\r\n                    }\r\n                    else {\r\n                        targetService = targetServices[layer.url];\r\n                        auxInfo[layer.url].source.updateParams(TC.Util.extend(auxInfo[layer.url].source.getParams(), source.getParams()));\r\n                    }\r\n                    targetService.mapLayers.push(layer);\r\n\r\n                    //var targetService = {\r\n                    //    layers: [], mapLayers: [layer]\r\n                    //};\r\n                    var disgregatedNames = layer.getDisgregatedLayerNames();\r\n                    if (opts.layerName) { // Mirar si en las opciones pone que solo busque en una capa\r\n                        if (disgregatedNames.indexOf(opts.layerName) >= 0 && olLayer._wrap.getInfo(opts.layerName).queryable) {\r\n                            addLayerToService(targetService, layer, opts.layerName);\r\n                            auxInfo[layer.url].layers.push(opts.layerName);\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0; i < disgregatedNames.length; i++) {\r\n                            var name = disgregatedNames[i];\r\n                            if (olLayer._wrap.getInfo(name).queryable) {\r\n                                addLayerToService(targetService, layer, name);\r\n                            }\r\n                            else {\r\n                                TC.Util.consoleRegister('Capa \"' + disgregatedNames[i] + '\" no queryable, la eliminamos de la petición GFI');\r\n                                disgregatedNames.splice(i, 1);\r\n                                i = i - 1;\r\n                            }\r\n                        }\r\n\r\n                        // GLS: validamos si nos queda alguna capa a la cual consultar\r\n                        if (disgregatedNames.length > 0) {\r\n                            auxInfo[layer.url].layers = auxInfo[layer.url].layers.concat(disgregatedNames);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var serviceUrl in targetServices) {\r\n                services.push(targetServices[serviceUrl]);\r\n                var targetService = targetServices[serviceUrl];\r\n                var source = auxInfo[serviceUrl].source;\r\n                var layers = auxInfo[serviceUrl].layers;\r\n\r\n                // GLS: validamos si hay capas a las cuales consultar, si no hay continuamos con el siguiente servicio\r\n                if (!layers || (layers && layers.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                var params = source.getParams();\r\n                source.params_.LAYERS = layers.join(',');\r\n                var gfiURL = source.getGetFeatureInfoUrl(coords, resolution, map.crs, {\r\n                    'QUERY_LAYERS': layers.join(','),\r\n                    'INFO_FORMAT': params.INFO_FORMAT,\r\n                    'FEATURE_COUNT': 1000,\r\n                    'radius': map.options.pixelTolerance,\r\n                    'buffer': map.options.pixelTolerance\r\n                });\r\n\r\n                gfiURL = gfiURL.replace(/sld_body=[a-zA-Z%0-9._]*/); // Quitamos el parámetro sld_body\r\n\r\n\r\n                var expUrl = gfiURL;\r\n                const requestData = {\r\n                    serviceUrl: serviceUrl,\r\n                    requestedFormat: params.INFO_FORMAT,\r\n                    expandUrl: expUrl\r\n                };\r\n                requestDataArray.push(requestData);\r\n                requestPromises.push(new Promise(function (resolve, reject) {\r\n                    const mapLayer = targetService.mapLayers[0];\r\n                    mapLayer.toolProxification.fetch(gfiURL)\r\n                        .then(function (data) {\r\n                            mapLayer.toolProxification.cacheHost.getAction(requestData.expandUrl).then(function (cache) {\r\n                                requestData.originalUrl = cache.action.call(mapLayer.toolProxification, requestData.expandUrl);\r\n                                resolve(TC.Util.extend({}, data, requestData));\r\n                            });\r\n                        })\r\n                        .catch(function (error) {\r\n                            reject(Error(error));\r\n                        });\r\n                }));\r\n                TC.Util.consoleRegister(\"Lanzamos GFI\");\r\n            }\r\n\r\n            if (requestPromises.length > 0) {\r\n                Promise.all(requestPromises).then(function (responses) {\r\n                    var someSuccess = false;\r\n                    var featureCount = 0;\r\n                    var featureInsertionPoints = [];\r\n                    for (var i = 0; i < responses.length; i++) {\r\n                        var featureInfo = responses[i];\r\n                        var service = targetServices[requestDataArray[i].serviceUrl];\r\n                        someSuccess = true;\r\n                        service.text = featureInfo.responseText;\r\n                        var format;\r\n                        var iFormat = featureInfo.contentType;\r\n                        if (iFormat && iFormat.indexOf(\";\") > -1)\r\n                            iFormat = iFormat.substr(0, iFormat.indexOf(\";\")).trim();\r\n\r\n                        if (!iFormat) iFormat = featureInfo.requestedFormat;\r\n\r\n                        if (iFormat === featureInfo.requestedFormat) {\r\n                            switch (iFormat) {\r\n                                case 'application/json':\r\n                                    format = new ol.format.GeoJSON();\r\n                                    break;\r\n                                case 'application/vnd.ogc.gml':\r\n                                    if (featureInfo.responseText.indexOf(\"FeatureCollection\") > -1) {\r\n                                        format = new ol.format.WFS({\r\n                                            gmlFormat: new ol.format.GML2({\r\n                                                srsName: map.crs\r\n                                            })\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        format = new ol.format.WMSGetFeatureInfo();\r\n                                    }\r\n                                    break;\r\n                                case 'application/vnd.ogc.gml/3.1.1':\r\n                                    format = new ol.format.GML3({\r\n                                        srsName: map.crs\r\n                                    });\r\n                                    break;\r\n                                case 'application/vnd.esri.wms_featureinfo_xml':\r\n                                    format = esriXmlParser;\r\n                                    break;\r\n                                default:\r\n                                    format = null;\r\n                                    break;\r\n                            }\r\n\r\n                            if (format) {\r\n                                var features;\r\n                                try {\r\n                                    features = format.readFeatures(featureInfo.responseText, {\r\n                                        featureProjection: ol.proj.get(map.crs)\r\n                                    });\r\n                                }\r\n                                catch (e) {\r\n                                    TC.error(self.parent.getLocaleString('featureInfo.error.badResponse', { url: featureInfo.serviceUrl }) + ': ' + e.message);\r\n                                    features = [];\r\n                                    continue;\r\n                                };\r\n                                featureCount = featureCount + features.length;\r\n                                var isParentOrSame = function (layer, na, nb) {\r\n                                    var result = false;\r\n                                    if (na === nb) {\r\n                                        result = true;\r\n                                    }\r\n                                    else {\r\n                                        var pa = layer.getNodePath(na);\r\n                                        var pb = layer.getNodePath(nb);\r\n                                        if (pa.length > 0 && pb.length >= pa.length) {\r\n                                            result = true;\r\n                                            for (var i = 0; i < pa.length; i++) {\r\n                                                if (layer.wrap.getName(pa[i]) !== layer.wrap.getName(pb[i])) {\r\n                                                    result = false;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    return result;\r\n                                };\r\n\r\n                                var fakeLayers = {\r\n                                };\r\n\r\n                                for (var j = 0; j < features.length; j++) {\r\n                                    var feature = features[j];\r\n                                    if (feature instanceof ol.Feature) {\r\n                                        var fid = feature.getId() || TC.getUID();\r\n                                        var found = false;\r\n                                        var layerName = fid.substr(0, fid.lastIndexOf('.'));\r\n                                        for (var k = 0; k < service.layers.length; k++) {\r\n                                            var l = service.layers[k];\r\n                                            var lName = l.name.substr(l.name.indexOf(':') + 1);\r\n                                            if (service.mapLayers.some(function (mapLayer) { return isParentOrSame(mapLayer, lName, layerName) })) {\r\n                                                found = true;\r\n                                                if (!opts.featureId || feature.getId() === opts.featureId) { // Mirar si en las opciones pone que solo busque una feature\r\n                                                    featurePromises.push(TC.wrap.Feature.createFeature(feature, { showsPopup: false }));\r\n                                                    featureInsertionPoints.push(l.features);\r\n                                                }\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        //si llegamos aquí y no he encontrado su layer, es que no cuadraba el prefijo del fid con el id del layer\r\n                                        //esto pasa, p.ej, en cartociudad\r\n                                        if (!found) {\r\n                                            //así que creo un layer de palo para la respuesta del featInfo\r\n                                            var fakeLayer;\r\n                                            if (fakeLayers[layerName]) fakeLayer = fakeLayers[layerName];\r\n                                            else {\r\n                                                fakeLayer = {\r\n                                                    name: layerName, title: layerName, path: [layerName], features: []\r\n                                                };\r\n                                                fakeLayers[layerName] = fakeLayer;\r\n                                                service.layers.push(fakeLayer);\r\n                                            }\r\n\r\n                                            if (!opts.featureId || feature.getId() === opts.featureId) { // Mirar si en las opciones pone que solo busque una feature\r\n                                                featurePromises.push(TC.wrap.Feature.createFeature(feature, { showsPopup: false }));\r\n                                                featureInsertionPoints.push(fakeLayer.features);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }//iteración sobre las features de esta respuesta\r\n\r\n\r\n                            }\r\n                            else {\r\n                                //si no hay formato reconocido y parseable, metemos un iframe con la respuesta\r\n                                //y prau\r\n                                //para eso, creo una falsa entrada de tipo feature, con un campo especial rawUrl o rawContent\r\n\r\n                                var compoundLayer = {\r\n                                    name: 'layer' + TC.getUID(), title: 'Datos en el punto', features: []\r\n                                };\r\n\r\n                                service.layers[service.layers.length] = compoundLayer;\r\n                                compoundLayer.features[0] = {\r\n                                    rawUrl: featureInfo.originalUrl, expandUrl: featureInfo.expandUrl, rawContent: featureInfo.responseText, rawFormat: iFormat\r\n                                };\r\n                                featureCount = featureCount + 1;\r\n                            }\r\n                        }\r\n                        else { // iFormat !== featureInfo.requestedFormat\r\n\r\n                            // GLS:\r\n                            TC.Util.consoleRegister(\"Respuesta GFI: lo más probable es que el servidor esté devolviendo una excepción\");\r\n                            TC.Util.consoleRegister(\"Lanzamos los eventos que corresponde y mostramos tostada\");\r\n\r\n                            // En este caso lo más probable es que el servidor esté devolviendo una excepción\r\n                            self.parent.responseError({\r\n                                message: featureInfo.responseText,\r\n                                status: featureInfo.status\r\n                            });\r\n                            // GLS: misma gestión de error que en ol.js - > function (a, b, c) { // error...\r\n                            map.toast(self.parent.getLocaleString('featureInfo.error'), {\r\n                                type: TC.Consts.msgType.ERROR\r\n                            });\r\n                        }\r\n\r\n                    }\r\n                    if (someSuccess) {\r\n                        var finfoPromises = featurePromises;\r\n                        if (featurePromises.length) {\r\n                            finfoPromises = finfoPromises.concat(new Promise(function (resolve, reject) {\r\n                                // Si hay features cargamos el módulo de geometria para encontrar una que se interseque con el punto\r\n                                TC.loadJS(\r\n                                    !TC.Geometry,\r\n                                    TC.apiLocation + 'TC/Geometry',\r\n                                    function () {\r\n                                        resolve();\r\n                                    }\r\n                                );\r\n                            }));\r\n                        }\r\n                        Promise.all(finfoPromises).then(function (features) {\r\n                            var defaultFeature;\r\n                            features.forEach(function (feat, idx) {\r\n                                if (feat) {\r\n                                    feat.attributes = [];\r\n                                    for (var key in feat.data) {\r\n                                        var value = feat.data[key];\r\n                                        if (typeof value !== 'object') {\r\n                                            feat.attributes.push({\r\n                                                name: key,\r\n                                                value: typeof (value) == \"number\" ? value.toLocaleString(TC.Util.getMapLocale(self.parent.map)) : value\r\n                                            });\r\n                                        }\r\n                                        else {\r\n                                            feat.attributes.push({\r\n                                                name: key,\r\n                                                value: value//\"objeto complejo\"\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    if (!defaultFeature && TC.Geometry.isInside(coords, feat.geometry)) {\r\n                                        defaultFeature = feat;\r\n                                    }\r\n                                    featureInsertionPoints[idx].push(feat);\r\n                                }\r\n                            });\r\n\r\n                            var services = [];\r\n                            for (var serviceUrl in targetServices) {\r\n                                if (targetServices.hasOwnProperty(serviceUrl)) {\r\n                                    services.push(targetServices[serviceUrl]);\r\n                                }\r\n                            }\r\n\r\n                            self.parent.responseCallback({\r\n                                coords: coords,\r\n                                resolution: resolution,\r\n                                services: services,\r\n                                featureCount: featureCount,\r\n                                defaultFeature: defaultFeature\r\n                            });\r\n                        });\r\n                    }\r\n                },\r\n                    function (a, b, c) { // error\r\n                        if (services && services.length == 0) {\r\n                            for (var serviceUrl in targetServices) {\r\n                                services.push(targetServices[serviceUrl]);\r\n                            }\r\n                        }\r\n\r\n                        self.parent.responseCallback({\r\n                            coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                        });\r\n                        map.toast(self.parent.getLocaleString('featureInfo.error'), {\r\n                            type: TC.Consts.msgType.ERROR\r\n                        });\r\n                    });\r\n            }\r\n            else {\r\n\r\n                if (map.workLayers.filter(function (layer) {\r\n                    return layer instanceof TC.layer.Raster;\r\n                }).length > 0) {\r\n                    map.toast(self.parent.getLocaleString('featureInfo.notQueryableLayers'), {\r\n                        type: TC.Consts.msgType.INFO\r\n                    });\r\n                }\r\n\r\n                if (services && services.length == 0) {\r\n                    for (var serviceUrl in targetServices) {\r\n                        services.push(targetServices[serviceUrl]);\r\n                    }\r\n                }\r\n\r\n                // GLS: nos suscribimos TC.Consts.event.BEFOREFEATUREINFO y lanzamos el mismo evento de zero resultados ya que puede darse que la resolución se lance antes del before.\r\n                map.on(TC.Consts.event.BEFOREFEATUREINFO, function () {\r\n                    self.parent.responseCallback({\r\n                        coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                    });\r\n                });\r\n\r\n                self.parent.responseCallback({\r\n                    coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            TC.wrap.control.Click.prototype.register.call(self, map);\r\n            var _clickTrigger = self._trigger;\r\n            self._trigger = function (e) {\r\n                self.hasSuitableLayers().then(function (hasLayers) {\r\n                    if (hasLayers) {\r\n                        if (!self.parent._isSearching) {\r\n                            if (e.type == SINGLECLICK && !self.parent._isDrawing && !self.parent._isSearching) {\r\n                                _clickTrigger.call(self, e);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.hasSuitableLayers = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const map = self.parent.map;\r\n            var ret = false;\r\n            map.wrap.getMap().then(function (olMap) {\r\n                olMap.getLayers().forEach(function (olLayer) {\r\n                    var layer = olLayer._wrap.parent;\r\n                    var source = olLayer.getSource();\r\n                    //Por qué en workLayers están el vectorial de medición, y cosas así?\r\n                    if (source.getGetFeatureInfoUrl && map.workLayers.indexOf(layer) >= 0) {\r\n                        ret = true;\r\n                        return false;   //break del foreach\r\n                    }\r\n                });\r\n                resolve(ret);\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.beginDraw = function (options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var xy = options.xy;\r\n        var layer = options.layer;\r\n        var callback = options.callback;\r\n        var geometryType = options.geometryType;\r\n        var semaforo = false;\r\n        if (!self.drawCtrl) {\r\n            layer.wrap.getLayer().then(function (olLayer) {\r\n                var olGeometryType;\r\n                switch (geometryType) {\r\n                    case TC.Consts.geom.POLYLINE:\r\n                        olGeometryType = ol.geom.GeometryType.LINE_STRING;\r\n                        break;\r\n                    default:\r\n                        olGeometryType = ol.geom.GeometryType.POLYGON;\r\n                        break;\r\n                }\r\n                self.drawCtrl = new ol.interaction.Draw({\r\n                    source: olLayer.getSource(),\r\n                    type: olGeometryType\r\n                    , style: olLayer.getStyle()\r\n                });\r\n                var setShowsPopup = function (wrap) {\r\n                    wrap.parent.showsPopup = false;\r\n                };\r\n                olLayer.getSource().on(ADDFEATURE, function (event) {\r\n                    if (event.feature._wrap) {\r\n                        setShowsPopup(event.feature._wrap);\r\n                    }\r\n                    else {\r\n                        event.feature._wrapPromise.then(setShowsPopup);\r\n                    }\r\n                });\r\n                self.drawCtrl.handleEvent = function (event) {\r\n                    //esta ñapa para solucionar cuando haces un primer punto y acontinuación otro muy rápido\r\n                    if (event.type == SINGLECLICK) {\r\n                        var points = olGeometryType === ol.geom.GeometryType.POLYGON ? this.sketchCoords_[0] : this.sketchCoords_;\r\n                        if (semaforo && points.length == 2 && this.sketchFeature_ !== null) {// GLS: Añado la misma validación (this.sketchFeature_ !== null) que tiene el código de OL antes de invocar addToDrawing_ \r\n                            this.addToDrawing_(event);\r\n                        }\r\n                        else {\r\n                            semaforo = true;\r\n                        }\r\n                    }\r\n                    return ol.interaction.Draw.prototype.handleEvent.call(this, event);\r\n                }\r\n                const map = self.parent.map;\r\n                const olMap = map.wrap.map;\r\n                olMap.addInteraction(self.drawCtrl);\r\n                self.drawCtrl.on('drawstart', function (event) {\r\n                    self.parent._isDrawing = true;\r\n                    olMap.getInteractions().forEach(function (item, i) {\r\n                        if (item instanceof (ol.interaction.DoubleClickZoom))\r\n                            item.setActive(false);\r\n                    });\r\n                });\r\n                self.drawCtrl.startDrawing_({\r\n                    coordinate: xy\r\n                });\r\n                self.drawCtrl.on('drawend', function (event) {\r\n                    self.parent._isDrawing = false;\r\n                    olMap.getInteractions().forEach(function (item, i) {\r\n                        if (item instanceof (ol.interaction.DoubleClickZoom))\r\n                            item.setActive(false);\r\n                    });\r\n                    olMap.removeInteraction(self.drawCtrl);\r\n                    this.setActive(false);\r\n                    self.drawCtrl = null;\r\n                    olLayer.getSource().clear();\r\n                    self.parent._drawToken = true;\r\n                    setTimeout(function () {\r\n                        self.parent._drawToken = false;\r\n                    }, 500);\r\n                    if (callback) {\r\n                        TC.wrap.Feature.createFeature(event.feature, { showsPopup: false }).then(function (feat) {\r\n                            callback(feat);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n        else {\r\n            self.drawCtrl.setActive(true);\r\n            self.drawCtrl.startDrawing_({\r\n                coordinate: xy\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.cancelDraw = function (xy, layer, callback) {\r\n        var self = this;\r\n        if (self.drawCtrl && self.parent._isDrawing) {\r\n            self.parent._isDrawing = false;\r\n            self.drawCtrl.setActive(false);\r\n            self.drawCtrl.source_.clear();\r\n\r\n        }\r\n    };\r\n\r\n    const _checkMaxFeatures = function (numMaxfeatures, urlData, data) {\r\n        return new Promise(function (resolve) {\r\n            urlData.mapLayer.toolProxification.fetchXML(urlData.url, {\r\n                data: data,\r\n                contentType: 'application/xml',\r\n                type: 'POST'\r\n            }).then(function (response) {\r\n                if (response instanceof XMLDocument) {\r\n                    const exception = response.querySelector(\"ExceptionReport Exception\")\r\n                    if (exception) {\r\n                        resolve({\r\n                            errors: [{\r\n                                key: TC.Consts.WFSErrors.INDETERMINATE,\r\n                                params: {\r\n                                    err: exception.getAttribute(\"exceptionCode\"), errorThrown: exception.querySelector(\"ExceptionText\").textContent\r\n                                }\r\n                            }]\r\n                        })\r\n                        return;\r\n                    }\r\n                }\r\n                var featFounds = parseInt(response.querySelector(\"FeatureCollection\").getAttribute(\"numberMatched\") || response.querySelector(\"FeatureCollection\").getAttribute(\"numberOfFeatures\"), 10);\r\n                if (isNaN(featFounds) || featFounds > parseInt(numMaxfeatures, 10)) {\r\n                    resolve({\r\n                        errors: [{\r\n                            key: TC.Consts.WFSErrors.MAX_NUM_FEATURES\r\n                        }]\r\n                    });\r\n                    return;\r\n                }\r\n                else if (featFounds === 0) {\r\n                    resolve({\r\n                        errors: [{\r\n                            key: TC.Consts.WFSErrors.NO_FEATURES\r\n                        }]\r\n                    });\r\n                    return;\r\n                }\r\n                else\r\n                    resolve(featFounds);\r\n\r\n            }).catch(function (e) {\r\n                //return Promise.reject(error);\r\n\r\n                resolve({\r\n                    errors: [{\r\n                        key: TC.Consts.WFSErrors.INDETERMINATE,\r\n                        params: { err: e.name, errorThrown: e.message }\r\n                    }]\r\n                });\r\n                return;\r\n            });\r\n\r\n            //TC.ajax({\r\n            //    url: url,\r\n            //    data: data,\r\n            //    contentType: 'application/xml',\r\n            //    responseType: 'application/xml',\r\n            //    method: 'POST'\r\n            //}).then(function (response) {\r\n            //    const responseData = response.data;\r\n            //    if (responseData instanceof XMLDocument) {\r\n            //        const exception = responseData.querySelector(\"ExceptionReport Exception\")\r\n            //        if (exception) {\r\n            //            resolve({\r\n            //                errors: [{\r\n            //                    key: TC.Consts.WFSErrors.INDETERMINATE,\r\n            //                    params: {\r\n            //                        err: exception.getAttribute(\"exceptionCode\"), errorThrown: exception.querySelector(\"ExceptionText\").textContent\r\n            //                    }\r\n            //                }]\r\n            //            })\r\n            //            return;\r\n            //        }\r\n            //    }\r\n            //    var featFounds = parseInt(responseData.querySelector(\"FeatureCollection\").getAttribute(\"numberMatched\") || responseData.querySelector(\"FeatureCollection\").getAttribute(\"numberOfFeatures\"), 10);                \r\n            //    if (isNaN(featFounds) || featFounds > parseInt(numMaxfeatures, 10)) {\r\n            //        resolve({\r\n            //            errors: [{\r\n            //                key: TC.Consts.WFSErrors.MAX_NUM_FEATURES\r\n            //            }]\r\n            //        });\r\n            //        return;\r\n            //    }\r\n            //    else if (featFounds === 0) {\r\n            //        resolve({\r\n            //            errors: [{\r\n            //                key: TC.Consts.WFSErrors.NO_FEATURES\r\n            //            }]\r\n            //        });\r\n            //        return;\r\n            //    }\r\n            //    else\r\n            //        resolve(featFounds);\r\n\r\n            //}, function (e) {\r\n            //    resolve({\r\n            //        errors: [{\r\n            //            key: TC.Consts.WFSErrors.INDETERMINATE,\r\n            //            params: { err: e.name, errorThrown: e.message }\r\n            //        }]\r\n            //    });\r\n            //    return;\r\n            //});\r\n        });\r\n    }\r\n\r\n    const _makePostCall = function (urlData, data) {\r\n        return new Promise(function (resolve) {\r\n            urlData.mapLayer.toolProxification.fetch(urlData.url, {\r\n                data: data,\r\n                contentType: 'application/xml',\r\n                type: 'POST'\r\n            }).then(function (response) {\r\n                if (response instanceof XMLDocument) {\r\n                    const exception = response.querySelector(\"ExceptionReport Exception\")\r\n                    if (exception) {\r\n                        resolve({\r\n                            errors: [{\r\n                                key: TC.Consts.WFSErrors.INDETERMINATE,\r\n                                params: {\r\n                                    err: exception.getAttribute(\"exceptionCode\"), errorThrown: exception.querySelector(\"ExceptionText\").textContent\r\n                                }\r\n                            }]\r\n                        })\r\n                        return;\r\n                    }\r\n                }\r\n                resolve({ response: response });\r\n            }).catch(function (e) {\r\n                resolve({\r\n                    errors: [{\r\n                        key: TC.Consts.WFSErrors.INDETERMINATE,\r\n                        params: { err: e.name, errorThrown: e.message }\r\n                    }]\r\n                });\r\n                return;\r\n            });\r\n        });\r\n    };\r\n\r\n    const magicFunction = function (layer, availableLayers, filter) {\r\n        //obtenemos el describe featuretype de cada capa\r\n        return new Promise(async function (resolve, reject) {\r\n            try {\r\n                var response = await layer.describeFeatureType(availableLayers);\r\n            }\r\n            catch (error) {\r\n                reject(error);\r\n                return;\r\n            }\r\n            var returnObject = {};\r\n            if (availableLayers.length === 1) {\r\n                var obj = {};\r\n                obj[availableLayers[0]] = response;\r\n                response = obj;\r\n            }\r\n            //buscamos las geometrías por cada respuesta\r\n            for (var layerName in response) {\r\n                let _filter;\r\n                var geometryFields = [];\r\n                for (var k in response[layerName]) {\r\n                    if (TC.Util.isGeometry(response[layerName][k].type) && !response[layerName][k].nillable && !response[layerName][k].minOccurs) {\r\n                        //if (/^gml:\\w+PropertyType$/.test(response[layerName][k].type) && !response[layerName][k].nillable && !response[layerName][k].minOccurs) {\r\n                        geometryFields.push(k)\r\n                    }\r\n                }\r\n                //Si solo hay un campo de tipo geometría bsucamos recursivamente entre en los filtros logicos And y or a la caza de filtros espaciales\r\n                //para poner el nombre de la geometría\r\n                if (geometryFields.length <= 1) {\r\n                    var recursive = (filter, geomName) => {\r\n                        if (filter instanceof TC.filter.LogicalNary)\r\n                            filter.conditions.forEach((condition) => {\r\n                                recursive(condition, geomName)\r\n                            })\r\n                        else if (filter instanceof TC.filter.Spatial) {\r\n                            filter.geometryName = geomName;\r\n                            return filter;\r\n                        }\r\n                    };\r\n                    _filter = Object.assign(new filter.constructor, recursive(filter, geometryFields.length === 0 ? null : geometryFields[0]))\r\n                }\r\n                //Si has mas de un campo de tipo geometría bsucamos recursivamente entre en los filtros logicos And y or a la caza de filtros espaciales\r\n                //para duplicar el filtro con los nombres de las geometrias y los emvolvemos en un filtro OR\r\n                else if (geometryFields.length > 1) {\r\n                    var recursive = (filter, geomNames) => {\r\n                        if (filter instanceof TC.filter.LogicalNary)\r\n                            filter.conditions.forEach((condition) => {\r\n                                recursive(condition, geomNames);\r\n                            })\r\n                        else if (filter instanceof TC.filter.Spatial) {\r\n                            return TC.filter.or.apply(null, geomNames.reduce((acc, curr) => { acc.push(new TC.filter[filter.getTagName()](curr, filter.geometry, filter.srsName)); return acc }, []))\r\n                        }\r\n                    };\r\n                    _filter = Object.assign(new filter.constructor, recursive(filter, geometryFields));\r\n                }\r\n                //ahora construimos el objeto que de vuelta\r\n                returnObject[layerName] = _filter;\r\n            }\r\n            resolve(returnObject);\r\n\r\n        });\r\n    };\r\n\r\n    var WFSGetFeatureBuilder = function (map, filter, outputFormat, download) {\r\n        const arrPromises = [];\r\n\r\n        var services = {};\r\n\r\n        const _getServiceTitle = function (service) {\r\n            const mapLayer = service.mapLayers[0];\r\n            return service.title || service.mapLayers.reduce(function (prev, cur) {\r\n                return prev || cur.title;\r\n            }, '') || (mapLayer.tree && mapLayer.tree.title) || mapLayer.capabilities.Service.Title;\r\n        };\r\n\r\n\r\n        const olMap = map.wrap.map;\r\n        const getCRS = function () {\r\n            if (download && (outputFormat === TC.Consts.mimeType.JSON || outputFormat === TC.Consts.mimeType.KML))\r\n                return TC.Consts.SRSDOWNLOAD_GEOJSON_KML;\r\n            return map.getCRS();\r\n        };\r\n        const _postOrDownload = function (url, data) {\r\n            return new Promise(function (resolve) {\r\n                if (!download) {\r\n                    _makePostCall(url, data).then(function (response) {\r\n                        if (response.errors && response.errors.length > 0) {\r\n                            response.errors[0].params[\"serviceTitle\"] = service.mapLayers.reduce(function (prev, cur) {\r\n                                return prev || cur.title;\r\n                            }, '') || _getServiceTitle(service);\r\n                            resolve(response);\r\n                        }\r\n                        else {\r\n                            resolve(response);\r\n                        }\r\n                    })\r\n                }\r\n                else\r\n                    resolve({\r\n                        url: url.url,\r\n                        data: data\r\n                    });\r\n            });\r\n        };\r\n        olMap.getLayers().forEach(function (olLayer) {\r\n            var layer = olLayer._wrap.parent;\r\n            if (!olLayer.getVisible() || map.workLayers.indexOf(layer) < 0 || layer.type !== TC.Consts.layerType.WMS)\r\n                return;\r\n            var availableLayers = layer.getDisgregatedLayerNames() || layer.availableNames;\r\n            const url = layer.url.toLowerCase();\r\n            var serviceObj = services[url];\r\n            if (!serviceObj) {\r\n                serviceObj = services[url] = {\r\n                    url: url,\r\n                    layers: [],\r\n                    mapLayers: [layer],\r\n                    layerNames: []\r\n                };\r\n            }\r\n            for (var i = 0; i < availableLayers.length; i++) {\r\n                var name = availableLayers[i];\r\n                //URI:se quita la exclusion de capas no visibles por escala\r\n                /*if (!layer.isVisibleByScale(name) && !download)\r\n                    continue;*/\r\n                if (!layer.wrap.getInfo(name).queryable)\r\n                    continue;\r\n                serviceObj.layerNames.push(name);\r\n                var path = layer.getPath(name);\r\n                serviceObj.layers.push({\r\n                    name: name,\r\n                    title: path[path.length - 1],\r\n                    path: path.slice(1),\r\n                    features: []\r\n                });\r\n            }\r\n            if (serviceObj.layerNames.length == 0)\r\n                return;\r\n            if (typeof (serviceObj.request) !== \"undefined\") {\r\n                return;\r\n            }\r\n            serviceObj.request = serviceObj.request || layer.getWFSCapabilities(); //WFSCapabilities.Promises(url);\r\n            arrPromises.push(new Promise(function (resolve, reject) {\r\n                serviceObj.request.then(function (capabilities) {\r\n                    var service = null;\r\n                    var errors = [];\r\n                    for (var url in services)\r\n                        if (services[url].request && services[url].request == serviceObj.request) {\r\n                            service = services[url];\r\n                        }\r\n                    var _numMaxFeatures = null;\r\n                    var layerList = service.layerNames;\r\n                    if (!(layerList instanceof Array) || !layerList.length) return;//condici\\u00f3n de salida\r\n                    //comprobamos que tiene el getfeature habilitado\r\n                    if (typeof (capabilities.Operations.GetFeature) === \"undefined\") {\r\n                        errors.push({ key: TC.Consts.WFSErrors.GETFEATURE_NOT_AVAILABLE, params: { serviceTitle: _getServiceTitle(service) } })\r\n                        resolve({ \"errors\": errors });\r\n                        return;\r\n                    }\r\n                    var availableLayers = [];\r\n                    for (var i = 0; i < layerList.length; i++) {\r\n                        //Comprbamos si la capa en el WMS tiene el mimso nombre que en el WFS\r\n                        var layer = layerList[i];\r\n                        //quitamos los ultimos caracteres que sean \"_\" , cosas de Idena\r\n                        while (layer[layer.length - 1] === \"_\") {\r\n                            layer = layer.substring(0, layer.lastIndexOf(\"_\"));\r\n                        }\r\n                        if (!capabilities.FeatureTypes.hasOwnProperty(layer.substring(layerList[i].indexOf(\":\") + 1))) {\r\n                            var titles = service.mapLayers[0].getPath(layer.substring(layerList[i].indexOf(\":\") + 1));\r\n                            errors.push({ key: TC.Consts.WFSErrors.LAYERS_NOT_AVAILABLE, params: { serviceTitle: _getServiceTitle(service), \"layerName\": titles[titles.length - 1] } });\r\n                            continue;\r\n                        }\r\n                        if (availableLayers.indexOf(layer) < 0)\r\n                            availableLayers.push(layer);\r\n                    }\r\n                    if (availableLayers.length == 0) {\r\n                        errors.push({ key: TC.Consts.WFSErrors.NO_VALID_LAYERS, params: { serviceTitle: _getServiceTitle(service) } });\r\n                        resolve({ \"errors\": errors });\r\n                        return;\r\n                    }\r\n                    if (capabilities.Operations.GetFeature.CountDefault)\r\n                        _numMaxFeatures = capabilities.Operations.GetFeature.CountDefault.DefaultValue;\r\n                    //comprobamos si soporta querys    \r\n                    if (\r\n                        (capabilities.version === \"1.0.0\" && !capabilities.Operations.GetFeature.Operations.hasOwnProperty(\"Query\"))\r\n                        ||\r\n                        ((capabilities.version === \"2.0.0\" || capabilities.version === \"1.1.0\") && capabilities.Operations.QueryExpressions.indexOf(\"wfs:Query\") < 0)\r\n                    ) {\r\n                        errors.push({ key: TC.Consts.WFSErrors.QUERY_NOT_AVAILABLE, params: { serviceTitle: _getServiceTitle(service) } });\r\n                        resolve({ \"errors\": errors });\r\n                        return;\r\n                    }\r\n                    var url = (capabilities.Operations.GetFeature.DCPType ? capabilities.Operations.GetFeature.DCPType[1].HTTP.Post.onlineResource : capabilities.Operations.GetFeature.DCP.HTTP.Post[\"href\"]);\r\n\r\n                    Promise.all([\r\n                        magicFunction(service.mapLayers[0], availableLayers, filter)//clonar filtro\r\n                    ]).then(function (response) {\r\n                        var filter = response[0]; //1\r\n                        if (_numMaxFeatures) {\r\n                            _checkMaxFeatures(_numMaxFeatures, { url: url, mapLayer: service.mapLayers[0] }, TC.Util.WFSQueryBuilder(filter, null, capabilities, outputFormat, true, getCRS())).then(function (response) {\r\n                                if (response.errors && response.errors.length > 0) {\r\n                                    switch (response.errors[0].key) {\r\n                                        case TC.Consts.WFSErrors.INDETERMINATE:\r\n                                            response.errors[0].params[\"serviceTitle\"] = service.mapLayers.reduce(function (prev, cur) {\r\n                                                return prev || cur.title;\r\n                                            }, '') || _getServiceTitle(service);\r\n                                            break;\r\n                                        case TC.Consts.WFSErrors.MAX_NUM_FEATURES:\r\n                                            response.errors[0][\"params\"] = { limit: _numMaxFeatures, serviceTitle: _getServiceTitle(service) };\r\n                                            break;\r\n                                        case TC.Consts.WFSErrors.NO_FEATURES:\r\n                                            response.errors[0][\"params\"] = { serviceTitle: _getServiceTitle(service) };\r\n                                            break;\r\n                                    }\r\n                                    resolve(response);\r\n                                }\r\n                                else\r\n                                    _postOrDownload({ url: url, mapLayer: service.mapLayers[0] }, TC.Util.WFSQueryBuilder(filter, null, capabilities, (download ? outputFormat : TC.Consts.mimeType.JSON), false, getCRS())).then(function (response) {\r\n                                        resolve(Object.assign({ service: service, errors: errors }, response));\r\n                                    });\r\n                            });\r\n                        }\r\n                        else {\r\n                            _postOrDownload({ url: url, mapLayer: service.mapLayers[0] }, TC.Util.WFSQueryBuilder(filter, null, capabilities, (download ? outputFormat : TC.Consts.mimeType.JSON), false, getCRS())).then(function (response) {\r\n                                resolve(Object.assign({ service: service, errors: errors }, response))\r\n\r\n                            });\r\n                        }\r\n                    }).catch(function (e) {\r\n                        resolve({\r\n                            errors: [{\r\n                                key: TC.Consts.WFSErrors.INDETERMINATE,\r\n                                params: { err: e.name, errorThrown: e.message, serviceTitle: _getServiceTitle(service) }\r\n                            }]\r\n                        });\r\n                    });\r\n                }, function (e) {\r\n                    var service = null;\r\n                    for (var title in services)\r\n                        if (services[title].request && services[title].request === serviceObj.request) {\r\n                            service = services[title];\r\n                        }\r\n                    resolve({ errors: [{ key: TC.Consts.WFSErrors.GETCAPABILITIES, params: { err: e.name, serviceTitle: _getServiceTitle(service) } }] });\r\n                });\r\n            }));\r\n        });\r\n        return arrPromises;\r\n    };\r\n    TC.WFSGetFeatureBuilder = WFSGetFeatureBuilder;\r\n\r\n    var readFeaturesFromResponse = function (map, data, contentType) {\r\n        var format;\r\n        var iFormat = contentType;\r\n        if (iFormat && iFormat.indexOf(\";\") > -1)\r\n            iFormat = iFormat.substr(0, iFormat.indexOf(\";\")).trim();\r\n\r\n        if (!iFormat) iFormat = data.requestedFormat;\r\n        switch (iFormat) {\r\n            case 'application/json':\r\n                format = new ol.format.GeoJSON();\r\n                break;\r\n            case 'application/vnd.ogc.gml':\r\n                if (data.responseText.indexOf(\"FeatureCollection\") > -1)\r\n                    format = new ol.format.WFS({\r\n                        gmlFormat: new ol.format.GML2({\r\n                            srsName: map.crs\r\n                        })\r\n                    });\r\n                else\r\n                    format = new ol.format.WMSGetFeatureInfo();\r\n                break;\r\n            case 'application/vnd.ogc.gml/3.1.1':\r\n                format = new ol.format.GML3({\r\n                    srsName: map.crs\r\n                });\r\n                break;\r\n            case \"text/xml\":\r\n            case \"application/xml\":\r\n                //posible error\r\n                const exception = data.querySelector(\"ServiceException\");\r\n                if (exception)\r\n                    TC.error(exception);\r\n                format = null;\r\n                break;\r\n            default:\r\n                format = null;\r\n                break;\r\n        }\r\n        if (format) {\r\n            return format.readFeatures(data, {\r\n                featureProjection: ol.proj.get(map.crs)\r\n            });\r\n        }\r\n        else {\r\n            return null;\r\n            ////si no hay formato reconocido y parseable, metemos un iframe con la respuesta\r\n            ////y prau\r\n            ////para eso, creo una falsa entrada de tipo feature, con un campo especial rawUrl o rawContent\r\n            //var l = service.layers[0];\r\n            //l.features.push({\r\n            //    error: response.responseText\r\n            //});\r\n        }\r\n    };\r\n    var featureToServiceDistributor = function (features, service) {\r\n        var featurePromises = [];\r\n        var featureInsertionPoints = [];\r\n        var isParentOrSame = function (layer, na, nb) {\r\n            var result = false;\r\n            if (na === nb || (na.indexOf(nb) === 0)) {\r\n                result = true;\r\n            }\r\n            else {\r\n                var pa = layer.getPath(na);\r\n                var pb = layer.getPath(nb);\r\n                if (pa.length > 0 && pb.length >= pa.length) {\r\n                    result = true;\r\n                    for (var i = 0; i < pa.length; i++) {\r\n                        if (pa[i] !== pb[i]) {\r\n                            result = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n\r\n        var fakeLayers = {};\r\n        for (var j = 0; j < features.length; j++) {\r\n            var feature = features[j];\r\n            if (feature instanceof ol.Feature) {\r\n                var fid = feature.getId() || TC.getUID();\r\n                var found = false;\r\n                var layerName = fid.substr(0, fid.lastIndexOf('.'));\r\n                for (var k = 0; k < service.layers.length; k++) {\r\n                    var l = service.layers[k];\r\n                    var lName = l.name.substr(l.name.indexOf(':') + 1);\r\n                    if (service.mapLayers.some(function (mapLayer) { return isParentOrSame(mapLayer, lName, layerName) })) {\r\n                        found = true;\r\n                        featurePromises.push(TC.wrap.Feature.createFeature(feature));\r\n\r\n                        featureInsertionPoints[feature.id_] = (l.features);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //si llegamos aqu\\u00ed y no he encontrado su layer, es que no cuadraba el prefijo del fid con el id del layer\r\n                //esto pasa, p.ej, en cartociudad\r\n                if (!found) {\r\n                    //as\\u00ed que creo un layer de palo para la respuesta del featInfo\r\n                    var fakeLayer;\r\n                    if (fakeLayers[layerName]) fakeLayer = fakeLayers[layerName];\r\n                    else {\r\n                        fakeLayer = {\r\n                            name: layerName, title: layerName, features: []\r\n                        };\r\n                        fakeLayers[layerName] = fakeLayer;\r\n                        service.layers.push(fakeLayer);\r\n                    }\r\n\r\n                    featurePromises.push(TC.wrap.Feature.createFeature(feature));\r\n                    featureInsertionPoints.push(feature.id_);\r\n                }\r\n            }\r\n        }//iteraci\\u00f3n sobre las features de esta respuesta\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all(featurePromises).then(function (features) {\r\n                features.forEach(function (feat) {\r\n                    feat.attributes = [];\r\n                    //feat.showsPopup = false;\r\n                    for (var key in feat.data) {\r\n                        var value = feat.data[key];\r\n                        if (typeof value !== 'object') {\r\n                            feat.attributes.push({\r\n                                name: key, value: value\r\n                            });\r\n                        }\r\n                        else {\r\n                            feat.attributes.push({\r\n                                name: key,\r\n                                value: value//\"objeto complejo\"\r\n                            });\r\n                        }\r\n                    }\r\n                    featureInsertionPoints[feat.id].push(feat);\r\n                });\r\n                resolve({\r\n                    service: service\r\n                })\r\n            });\r\n        });\r\n    }\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.getFeaturesByGeometry = function (feature, xy) {\r\n\r\n        var self = this;\r\n        var map = self.parent.map;\r\n        self.parent.filterFeature = feature;\r\n        feature.layer = self.parent.filterLayer;\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n\r\n            var olGeometry = feature.wrap.feature.getGeometry();\r\n            var stride = olGeometry.stride;\r\n            var flatCoordinates = olGeometry.getFlatCoordinates();\r\n            //calcular el punto mas alto\r\n            if (!xy) {\r\n                var bestPoint = null;\r\n                for (var i = 1, len = flatCoordinates.length; i < len; i += stride) {\r\n                    if (!bestPoint || bestPoint[1] < flatCoordinates[i]) {\r\n                        bestPoint = [flatCoordinates[i - 1], flatCoordinates[i]];\r\n                    }\r\n                }\r\n                xy = olMap.getPixelFromCoordinate(new ol.geom.Point(bestPoint).getCoordinates());\r\n            }\r\n\r\n            self.parent.beforeRequest({ xy: xy });\r\n\r\n            var arrRequests = WFSGetFeatureBuilder(map, new TC.filter.intersects(feature, map.crs), TC.Consts.format.JSON);\r\n\r\n            const arrPromises = [];\r\n            Promise.all(arrRequests).then(function (responses) {\r\n                var targetServices = [];\r\n                var featureCount = 0;\r\n                var hayError = false;\r\n\r\n                for (var i = 0; i < responses.length; i++) {\r\n                    const responseObj = responses[i];\r\n                    if (!responseObj) continue;\r\n                    arrPromises[arrPromises.length] = new Promise(function (resolve, reject) {\r\n                        if (responseObj.errors && responseObj.errors.length) {\r\n                            for (var j = 0; j < responseObj.errors.length; j++) {\r\n                                var errorMsg, errorType = TC.Consts.msgType.WARNING;\r\n                                hayError = true;\r\n                                var error = responseObj.errors[j];\r\n                                switch (error.key) {\r\n                                    case TC.Consts.WFSErrors.MAX_NUM_FEATURES:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfs.tooManyFeatures\", error.params);\r\n                                        break;\r\n                                        /*case TC.Consts.WFSErrors.NO_LAYERS:\r\n                                            errorMsg = self.parent.getLocaleString('noLayersLoaded');*/\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.GETCAPABILITIES:\r\n                                        errorMsg = self.parent.getLocaleString('wfsGFI.inValidService', error.params);\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.NO_FEATURES:\r\n                                        //si no hay features nos callamos. Quizas en un futuro se muestre una alerta\r\n                                        hayError = false;\r\n                                        continue;\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.INDETERMINATE:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfs.IndeterminateError\");\r\n                                        TC.error(\"Error:{error} \\r\\n Descripcion:{descripcion} \\r\\n Servicio:{serviceName}\".format({ error: error.params.err, descripcion: error.params.errorThrown, serviceName: error.params.serviceTitle }), TC.Consts.msgErrorMode.CONSOLE);\r\n                                        errorType = TC.Consts.msgType.ERROR;\r\n                                        break;\r\n                                    default:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfsGFI.\" + error.key, error.params);\r\n                                        break;\r\n                                }\r\n\r\n                                map.toast(errorMsg, { type: errorType });\r\n                            }\r\n                            if (!responseObj.response) {\r\n                                resolve();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    // Puede no haber response porque la URL no es correcta, metemos un condicional\r\n                    var featuresFound = responseObj.response ? readFeaturesFromResponse(map, responseObj.response.responseText, responseObj.response.contentType) : [];\r\n                    //ahora se distribuye la features por servicio y capa\r\n                    arrPromises[arrPromises.length - 1] = featureToServiceDistributor(featuresFound, responseObj.service);\r\n                    if (responseObj.service) {\r\n                        targetServices.push(responseObj.service);\r\n                    }\r\n                    featureCount = featureCount + featuresFound.length;\r\n                }\r\n                Promise.all(arrPromises).then(function () {\r\n                    self.parent.responseCallback({\r\n                        xy: xy || null, services: targetServices, featureCount: featureCount\r\n                    });\r\n                });\r\n            }, function (e) {\r\n                self.parent.responseCallback({});\r\n            })\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype = function () {\r\n        this.popup = null;\r\n    };\r\n\r\n    TC.Consts.event.PANANIMATIONSTART = 'pananimationstart.tc';\r\n    TC.Consts.event.PANANIMATIONEND = 'pananimationend.tc';\r\n    TC.wrap.control.Popup.prototype.fitToView = function () {\r\n        var self = this;\r\n        var map = self.parent.map;\r\n        var olMap = self.parent.map.wrap.map;\r\n\r\n        var popupBoundingRect = self.parent.popupDiv.getBoundingClientRect();\r\n        var mapBoundingRect = map.div.getBoundingClientRect();\r\n\r\n        var topLeft = olMap.getCoordinateFromPixel([popupBoundingRect.left - mapBoundingRect.left, popupBoundingRect.top - mapBoundingRect.top]);\r\n        var bottomRight = olMap.getCoordinateFromPixel([popupBoundingRect.right - mapBoundingRect.left, popupBoundingRect.bottom - mapBoundingRect.top]);\r\n        var west = topLeft[0];\r\n        var north = topLeft[1];\r\n        var east = bottomRight[0];\r\n        var south = bottomRight[1];\r\n\r\n        var popupExt = [west, south, east, north];\r\n        var mapExt = map.getExtent();\r\n\r\n        if (!ol.extent.containsExtent(mapExt, popupExt)) {\r\n            var overflows = {\r\n                left: Math.max(mapExt[0] - popupExt[0], 0),\r\n                bottom: Math.max(mapExt[1] - popupExt[1], 0),\r\n                right: Math.max(popupExt[2] - mapExt[2], 0),\r\n                top: Math.max(popupExt[3] - mapExt[3], 0)\r\n            };\r\n\r\n            if (self.parent.dragged) {\r\n                // Movemos el popup\r\n                var newPos = self.popup.getPosition();\r\n                if (overflows.right) {\r\n                    newPos[0] = newPos[0] - overflows.right;\r\n                }\r\n                else if (overflows.left) {\r\n                    newPos[0] = newPos[0] + overflows.left;\r\n                }\r\n                if (overflows.top) {\r\n                    newPos[1] = newPos[1] - overflows.top;\r\n                }\r\n                else if (overflows.bottom) {\r\n                    newPos[1] = newPos[1] + overflows.bottom;\r\n                }\r\n                var newPixelPos = olMap.getPixelFromCoordinate(newPos);\r\n                newPixelPos[1] = olMap.getSize()[1] - newPixelPos[1];\r\n                self.parent._previousContainerPosition = newPixelPos;\r\n                (self.popup._oldUpdatePixelPosition || self.popup.updatePixelPosition).call(self.popup, newPos);\r\n            }\r\n            else {\r\n                if (self.parent.isVisible()) {\r\n                    // Movemos el mapa\r\n                    var view = olMap.getView();\r\n                    var ct = view.getCenter().slice();\r\n\r\n                    if (overflows.top) ct[1] += overflows.top;\r\n                    else if (overflows.bottom) ct[1] -= overflows.bottom;\r\n                    if (overflows.right) ct[0] += overflows.right;\r\n                    else if (overflows.left) ct[0] -= overflows.left;\r\n\r\n                    view.animate({\r\n                        center: ct, easing: function (percent) {\r\n                            if (percent === 0) self.parent.map.trigger(TC.Consts.event.PANANIMATIONSTART);\r\n                            if (percent === 1) self.parent.map.trigger(TC.Consts.event.PANANIMATIONEND);\r\n                            return percent;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype.setDragged = function (dragged) {\r\n        var popup = this.popup;\r\n        //var view = popup.getMap().getView();\r\n        //var onViewChange = function () {\r\n        //    console.log(this.getCenter());\r\n        //};\r\n        if (dragged) {\r\n            // Parcheamos funciones para que el popup no se mueva cuando cambiamos el extent del mapa\r\n            if (!popup._oldUpdatePixelPosition) {\r\n                popup._oldUpdatePixelPosition = popup.updatePixelPosition;\r\n                popup.updatePixelPosition = function () {\r\n                };\r\n            }\r\n            if (!popup._newHandleOffsetChanged) {\r\n                popup._newHandleOffsetChanged = function () {\r\n                    this._oldUpdatePixelPosition();\r\n                };\r\n                ol.events.unlisten(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup.handleOffsetChanged, popup);\r\n                ol.events.listen(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup._newHandleOffsetChanged, popup);\r\n            }\r\n            //view.on(['change:center','change:resolution'], onViewChange);\r\n        }\r\n        else {\r\n            // Redefinimos las propiedades de posicionamiento porque al arrastrarlo, las hemos modificado.\r\n            const containerStyle = popup.getElement().parentElement.style;\r\n            containerStyle.setProperty('top', popup.rendered.top_);\r\n            containerStyle.setProperty('bottom', popup.rendered.bottom_);\r\n            containerStyle.setProperty('left', popup.rendered.left_);\r\n            containerStyle.setProperty('right', popup.rendered.right_);\r\n\r\n            delete this.parent._previousContainerPosition;\r\n            // Deshacemos parcheo\r\n            if (popup._oldUpdatePixelPosition) {\r\n                popup.updatePixelPosition = popup._oldUpdatePixelPosition;\r\n                delete popup._oldUpdatePixelPosition;\r\n            }\r\n            if (popup._newHandleOffsetChanged) {\r\n                ol.events.unlisten(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup._newHandleOffsetChanged, popup);\r\n                ol.events.listen(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup.handleOffsetChanged, popup);\r\n                delete popup._newHandleOffsetChanged;\r\n            }\r\n            //view.un(['change:center', 'change:resolution'], onViewChange);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLegend = function () {\r\n        var self = this;\r\n        var result = {\r\n        };\r\n        var style = getNativeFeatureStyle(self.feature, true);\r\n        if (style) {\r\n            var image = style.getImage();\r\n            if (image) {\r\n                if (image instanceof ol.style.Icon) {\r\n                    result.src = image.getSrc();\r\n                    var scale = image.getScale();\r\n                    if (scale) {\r\n                        result.scale = scale;\r\n                        var img = image.getImage();\r\n                        if (img.width) {\r\n                            result.width = img.width * scale;\r\n                            result.height = img.height * scale;\r\n                        }\r\n                    }\r\n                }\r\n                else if (image instanceof ol.style.Circle) {\r\n                    result.src = image.canvas_.toDataURL();\r\n                }\r\n                if (self.parent.options.radius) {\r\n                    result.height = result.width = self.parent.options.radius * 2;\r\n                }\r\n                else {\r\n                    result.width = result.width || self.parent.options.width;\r\n                    result.height = result.height || self.parent.options.height;\r\n                }\r\n            }\r\n            else {\r\n                // No image, find stroke and fill\r\n                var stroke = style.getStroke();\r\n                var fill = style.getFill();\r\n                if (stroke) {\r\n                    var strokeColor = stroke.getColor();\r\n                    if (strokeColor) {\r\n                        result.strokeColor = ol.color.asString(strokeColor);\r\n                    }\r\n                    var strokeWidth = stroke.getWidth();\r\n                    if (strokeWidth) {\r\n                        result.strokeWidth = strokeWidth;\r\n                    }\r\n                }\r\n                if (fill) {\r\n                    var fillColor = fill.getColor();\r\n                    if (fillColor) {\r\n                        result.fillColor = ol.color.asString(fillColor);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    var createNativeFeature = function (geometryName) {\r\n        const result = new ol.Feature();\r\n        if (geometryName) {\r\n            result.setGeometryName(geometryName);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPoint = function (coords, options) {\r\n        const self = this;\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { point: options } }, self.feature));\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createMarker = function (coords, options) {\r\n        const self = this;\r\n\r\n        var iconUrl = TC.Util.getPointIconUrl(options);\r\n        if (iconUrl) {\r\n            options.url = iconUrl;\r\n            self.feature = createNativeFeature(options.geometryName);\r\n            self.feature._wrap = self;\r\n            self.parent.setCoords(coords);\r\n            if (TC.Util.hasStyleOptions(options)) {\r\n                self.feature.setStyle(createNativeStyle({ styles: { marker: options } }, self.feature));\r\n            }\r\n            self.setData(self.parent.data);\r\n        }\r\n        else {\r\n            self.createPoint(coords, options);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolyline = function (coords, options) {\r\n        const self = this;\r\n\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { line: options } }, self.feature));\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolygon = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { polygon: options } }, self.feature));\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n\r\n    TC.wrap.Feature.prototype.createMultiPolyline = function (coords, options) {\r\n        const self = this;\r\n\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { line: options } }, self.feature));\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createMultiPolygon = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { polygon: options } }, self.feature));\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createCircle = function (coords, options) {\r\n        const self = this;\r\n\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (options) {\r\n            self.feature.setStyle(\r\n                new ol.style.Style({\r\n                    stroke: new ol.style.Stroke({\r\n                        color: options.strokeColor,\r\n                        width: options.strokeWidth,\r\n                        lineDash: options.lineDash\r\n                    }),\r\n                    fill: new ol.style.Fill({\r\n                        color: getRGBA(options.fillColor, options.fillOpacity)\r\n                    })\r\n                })\r\n            );\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.createFeature = function (olFeat, options) {\r\n        if (!olFeat._featurePromise) {\r\n            olFeat._featurePromise = new Promise(function (resolve, reject) {\r\n                var olGeometry = olFeat.getGeometry();\r\n                options = options || {};\r\n                options.id = olFeat.getId();\r\n                let olStyle = olFeat.getStyle();\r\n                if (olStyle) {\r\n                    TC.Util.extend(options, getStyleFromNative(olStyle, olFeat));\r\n                }\r\n                // geometría\r\n                let geomStr;\r\n                switch (true) {\r\n                    case olGeometry instanceof ol.geom.Point:\r\n                        if (TC.Util.isFunction(olStyle)) {\r\n                            olStyle = olStyle(olFeat);\r\n                        }\r\n                        var olStyles = olStyle ? (Array.isArray(olStyle) ? olStyle : [olStyle]) : [];\r\n                        for (var i = 0, len = olStyles.length; i < len; i++) {\r\n                            olStyle = olStyles[i];\r\n                            if (olStyle.getImage() instanceof ol.style.Icon) {\r\n                                geomStr = 'Marker';\r\n                                break;\r\n                            }\r\n                        }\r\n                        geomStr = geomStr || 'Point';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.LineString:\r\n                        geomStr = 'Polyline';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.Polygon:\r\n                        geomStr = 'Polygon';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.MultiLineString:\r\n                        geomStr = 'MultiPolyline';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.MultiPolygon:\r\n                        geomStr = 'MultiPolygon';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (geomStr) {\r\n                    TC.loadJS(\r\n                        !TC.feature || !TC.feature[geomStr],\r\n                        [TC.apiLocation + 'TC/feature/' + geomStr],\r\n                        function () {\r\n                            const feat = new TC.feature[geomStr](olFeat, options);\r\n                            feat.data = feat.wrap.getData();\r\n                            resolve(feat);\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    TC.loadJS(\r\n                        !TC.Feature,\r\n                        [TC.apiLocation + 'TC/Feature'],\r\n                        function () {\r\n                            var feat = new TC.Feature(olFeat, options);\r\n                            feat.data = feat.wrap.getData();\r\n                            resolve(feat);\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        }\r\n        return olFeat._featurePromise;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.cloneFeature = function () {\r\n        return this.feature.clone();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getStyle = function () {\r\n        var self = this;\r\n        var result = {};\r\n        var olStyle = self.feature.getStyle();\r\n        if (TC.Util.isFunction(olStyle)) {\r\n            olStyle = olStyle(self.feature);\r\n        }\r\n        var olStyles = olStyle ? (Array.isArray(olStyle) ? olStyle : [olStyle]) : [];\r\n\r\n        const getFill = function (style, obj) {\r\n            if (style) {\r\n                const fill = style.getFill();\r\n                if (fill) {\r\n                    obj.fillColor = fill.getColor();\r\n                    if (Array.isArray(obj.fillColor)) {\r\n                        obj.fillOpacity = obj.fillColor[3];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        const getStroke = function (style, obj) {\r\n            if (style) {\r\n                const stroke = style.getStroke();\r\n                if (stroke) {\r\n                    obj.strokeColor = stroke.getColor();\r\n                    obj.strokeWidth = stroke.getWidth();\r\n                }\r\n            }\r\n        };\r\n\r\n        for (var i = 0, len = olStyles.length; i < len; i++) {\r\n            olStyle = olStyles[i];\r\n            getFill(olStyle, result);\r\n            getStroke(olStyle, result);\r\n            const image = olStyle.getImage();\r\n            if (image instanceof ol.style.Icon) {\r\n                result.url = image.getSrc();\r\n                const size = image.getSize();\r\n                const scale = image.getScale() || 1;\r\n                if (size) {\r\n                    result.width = size[0] * scale;\r\n                    result.height = size[1] * scale;\r\n                }\r\n                var anchor = image.getAnchor();\r\n                if (anchor) {\r\n                    result.anchor = [anchor[0] * scale, anchor[1] * scale];\r\n                    if (size) {\r\n                        // getAnchor devuelve los valores en pixels, hay que transformar a fracción\r\n                        result.anchor[0] = result.anchor[0] / result.width;\r\n                        result.anchor[1] = result.anchor[1] / result.height;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                getFill(image, result);\r\n                getStroke(image, result);\r\n            }\r\n            var text = olStyle.getText();\r\n            if (text) {\r\n                result.label = text.getText();\r\n                var font = text.getFont();\r\n                if (font) {\r\n                    // A 96dpi 3pt = 4px\r\n                    result.fontSize = parseInt(font.match(/\\d+pt/)) || parseInt(font.match(/\\d+px/)) * 0.75;\r\n                }\r\n                var rotation = text.getRotation();\r\n                if (rotation) {\r\n                    result.angle = -180 * rotation / Math.PI;\r\n                }\r\n                result.labelOffset = [text.getOffsetX(), text.getOffsetY()];\r\n                fill = text.getFill();\r\n                if (fill) {\r\n                    result.fontColor = fill.getColor();\r\n                }\r\n                stroke = text.getStroke();\r\n                if (stroke) {\r\n                    result.labelOutlineColor = stroke.getColor();\r\n                    result.labelOutlineWidth = stroke.getWidth();\r\n                }\r\n            }\r\n        }\r\n        TC.Util.extend(self.parent.options, result);\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getGeometry = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature && self.feature.getGeometry) {\r\n            var geom = self.feature.getGeometry();\r\n            if (geom) {\r\n                if (geom.getCoordinates) {\r\n                    result = geom.getCoordinates();\r\n                }\r\n                else if (geom instanceof ol.geom.Circle) {\r\n                    result = [geom.getCenter(), geom.getRadius()];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setGeometry = function (geometry) {\r\n        const self = this;\r\n        if (self.feature && self.feature.getGeometry) {\r\n            var geom = self.feature.getGeometry();\r\n            var ctor;\r\n            var point,\r\n                points,\r\n                ringsOrPolylines,\r\n                polygons,\r\n                isMultiPolygon,\r\n                isPolygonOrMultiLineString,\r\n                isLineString;\r\n            // punto: array de números\r\n            // línea o anillo: array de puntos\r\n            // multilínea o polígono: array de líneas o anillos\r\n            // multipolígono: array de polígonos\r\n            // Por tanto podemos recorrer los tipos en un switch sin breaks\r\n            switch (true) {\r\n                case (TC.feature.MultiPolygon && self.parent instanceof TC.feature.MultiPolygon):\r\n                    isMultiPolygon = true;\r\n                    ctor = ol.geom.MultiPolygon;\r\n                    polygons = geometry;\r\n                    if (Array.isArray(polygons)) {\r\n                        ringsOrPolylines = geometry[0];\r\n                    }\r\n                case (TC.feature.Polygon && self.parent instanceof TC.feature.Polygon || TC.feature.MultiPolyline && self.parent instanceof TC.feature.MultiPolyline):\r\n                    isPolygonOrMultiLineString = true;\r\n                    ctor = ctor || ((TC.feature.Polygon && self.parent instanceof TC.feature.Polygon) ? ol.geom.Polygon : ol.geom.MultiLineString);\r\n                    ringsOrPolylines = isMultiPolygon ? ringsOrPolylines : geometry;\r\n                    if (Array.isArray(ringsOrPolylines)) {\r\n                        points = ringsOrPolylines[0];\r\n                    }\r\n                case (TC.feature.Polyline && self.parent instanceof TC.feature.Polyline):\r\n                    isLineString = true;\r\n                    ctor = ctor || ol.geom.LineString;\r\n                    points = isPolygonOrMultiLineString ? points : geometry;\r\n                    if (Array.isArray(points)) {\r\n                        point = points[0];\r\n                    }\r\n                case (TC.feature.Point && self.parent instanceof TC.feature.Point):\r\n                    ctor = ctor || ol.geom.Point;\r\n                    point = isLineString ? point : geometry;\r\n                    if (Array.isArray(point) && typeof point[0] === 'number' && typeof point[1] === 'number') {\r\n                        var layout;\r\n                        switch (point.length) {\r\n                            case 3:\r\n                                layout = ol.geom.GeometryLayout.XYZ;\r\n                                break;\r\n                            case 4:\r\n                                layout = ol.geom.GeometryLayout.XYZM;\r\n                                break;\r\n                            default:\r\n                                layout = ol.geom.GeometryLayout.XY;\r\n                                break;\r\n                        }\r\n                        if (geom) {\r\n                            geom.setCoordinates(geometry, layout);\r\n                        }\r\n                        else {\r\n                            geom = new ctor(geometry, layout);\r\n                            self.feature.setGeometry(geom);\r\n                        }\r\n                    }\r\n                    break;\r\n                case (TC.feature.Circle && self.parent instanceof TC.feature.Circle):\r\n                    if (Array.isArray(geometry) &&\r\n                        Array.isArray(geometry[0])\r\n                        && typeof geometry[0][0] === 'number' && typeof geometry[0][1] === 'number'\r\n                        && typeof geometry[1] === 'number') {\r\n                        var layout;\r\n                        switch (geometry[0].length) {\r\n                            case 3:\r\n                                layout = ol.geom.GeometryLayout.XYZ;\r\n                                break;\r\n                            case 4:\r\n                                layout = ol.geom.GeometryLayout.XYZM;\r\n                                break;\r\n                            default:\r\n                                layout = ol.geom.GeometryLayout.XY;\r\n                                break;\r\n                        }\r\n                        if (geom) {\r\n                            geom.setCenterAndRadius(geometry[0], geometry[1], layout);\r\n                        }\r\n                        else {\r\n                            geom = new ol.geom.Circle(geometry[0], geometry[1], layout);\r\n                            self.feature.setGeometry(geom);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getId = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature) {\r\n            result = self.feature.getId();\r\n        };\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setId = function (id) {\r\n        var self = this;\r\n        if (self.feature) {\r\n            self.feature.setId(id);\r\n        };\r\n    };\r\n\r\n    const getPolygonLength = function (polygon, options) {\r\n        const self = this;\r\n        var result = 0;\r\n        polygon.getLinearRings().forEach(function (ring) {\r\n            coordinates = ring.getCoordinates();\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n            }\r\n            const polygon = new ol.geom.Polygon([coordinates]);\r\n            const newRing = polygon.getLinearRing(0);\r\n            result = result + ol.geom.flat.linearRingLength(newRing.flatCoordinates, 0, newRing.flatCoordinates.length, newRing.stride);\r\n        });\r\n        return result;\r\n    };\r\n\r\n    const getLineStringLength = function (lineString, options) {\r\n        const self = this;\r\n        coordinates = lineString.getCoordinates();\r\n        if (options.crs) {\r\n            coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n        }\r\n        const line = new ol.geom.LineString(coordinates);\r\n        return line.getLength();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLength = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        var result = 0;\r\n\r\n        const geom = self.feature.getGeometry();\r\n        var coordinates;\r\n        switch (true) {\r\n            case geom instanceof ol.geom.Polygon:\r\n                result = getPolygonLength.call(self, geom, options);\r\n                break;\r\n            case geom instanceof ol.geom.LineString:\r\n                result = getLineStringLength.call(self, geom, options);\r\n                break;\r\n            case geom instanceof ol.geom.MultiPolygon:\r\n                geom.getPolygons().forEach(function (polygon) {\r\n                    result = result + getPolygonLength.call(self, polygon, options);\r\n                });\r\n                break;\r\n            case geom instanceof ol.geom.MultiPolygon:\r\n                geom.getLineStrings().forEach(function (lineString) {\r\n                    result = result + getLineStringLength.call(self, lineString, options);\r\n                });\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getArea = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const geom = self.feature.getGeometry();\r\n        var coordinates;\r\n        if (geom instanceof ol.geom.Polygon) {\r\n            coordinates = geom.getLinearRing(0).getCoordinates();\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n            }\r\n            const polygon = new ol.geom.Polygon([coordinates]);\r\n            return polygon.getArea();\r\n        }\r\n    };\r\n\r\n    const getNativeFeatureStyle = function (feature, readonly) {\r\n        var style = feature.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            style = style.reduce(function (extendedStyle, currentStyle) {\r\n                extendedStyle.fill_ = currentStyle.fill_ || extendedStyle.fill_;\r\n                extendedStyle.image_ = currentStyle.image_ || extendedStyle.image_;\r\n                extendedStyle.stroke_ = currentStyle.stroke_ || extendedStyle.stroke_;\r\n                extendedStyle.text_ = currentStyle.text_ || extendedStyle.text_;\r\n                return extendedStyle;\r\n            }, new ol.style.Style());\r\n        }\r\n        if (!style && !readonly) {\r\n            style = new ol.style.Style();\r\n            feature.setStyle(style);\r\n        }\r\n        return style;\r\n    };\r\n\r\n    const getNativeLayerStyle = function (feature) {\r\n        var style = this.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            style = style[style.length - 1];\r\n        }\r\n        if (!style) {\r\n            style = new ol.style.Style();\r\n        }\r\n        return style;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setStyle = function (options) {\r\n        const self = this;\r\n        const olFeat = self.feature;\r\n        if (options === null) {\r\n            olFeat.setStyle(null);\r\n            return;\r\n        }\r\n        const feature = self.parent;\r\n        const geom = olFeat.getGeometry();\r\n        let newStyle = olFeat.getStyle();\r\n        let layerStyle;\r\n        if (feature.layer) {\r\n            layerStyle = getNativeLayerStyle.call(feature.layer.wrap.layer, feature.wrap.feature);\r\n        }\r\n        if (!newStyle) {\r\n            if (layerStyle) {\r\n                newStyle = layerStyle.clone();\r\n            }\r\n            else {\r\n                newStyle = new ol.style.Style();\r\n            }\r\n        }\r\n        if (TC.Util.isFunction(newStyle)) {\r\n            newStyle = newStyle(olFeat);\r\n        }\r\n        if (!Array.isArray(newStyle)) {\r\n            newStyle = [newStyle];\r\n        }\r\n        let style = newStyle[newStyle.length - 1];\r\n        if (geom instanceof ol.geom.Point || geom instanceof ol.geom.MultiPoint) {\r\n\r\n            var imageStyle;\r\n            if (options.anchor || options.url || options.cssClass) { // Marcador\r\n                imageStyle = style.getImage();\r\n                const iconOptions = {};\r\n                if (imageStyle instanceof ol.style.Icon) {\r\n                    iconOptions.src = options.url || TC.Util.getBackgroundUrlFromCss(options.cssClass) || imageStyle.getSrc();\r\n\r\n                    if (options.width && options.height) {\r\n                        iconOptions.size = [getStyleValue(options.width, feature), getStyleValue(options.height, feature)];\r\n                    }\r\n                    else {\r\n                        iconOptions.size = imageStyle.getSize();\r\n                    }\r\n                    iconOptions.anchor = getStyleValue(options.anchor, feature);\r\n                    if (!iconOptions.anchor) {\r\n                        const imgAnchor = imageStyle.getAnchor();\r\n                        if (Array.isArray(imgAnchor)) {\r\n                            iconOptions.anchor = imgAnchor.map(function (elm, idx) {\r\n                                return elm / iconOptions.size[idx];\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    iconOptions.src = TC.Util.getPointIconUrl(options);\r\n                    iconOptions.anchor = getStyleValue(options.anchor, feature);\r\n                    iconOptions.size = [getStyleValue(options.width, feature), getStyleValue(options.height, feature)];\r\n                };\r\n                if (options.angle) {\r\n                    iconOptions.angle = options.angle;\r\n                }\r\n\r\n                imageStyle = new ol.style.Icon(iconOptions);\r\n            }\r\n            else if (!(style.getImage()) && style.getText()) { // Etiqueta\r\n\r\n                if (options.label !== undefined) {\r\n                    if (options.label.length) {\r\n                        style.setText(createNativeTextStyle(options, feature));\r\n                    }\r\n                    else {\r\n                        style.setText();\r\n                    }\r\n                } else {\r\n                    style.setText();\r\n                }\r\n            }\r\n            else { // Punto sin icono\r\n                imageStyle = style.getImage();\r\n                if (!imageStyle) {\r\n                    imageStyle = new ol.style.Circle();\r\n                }\r\n                const circleOptions = {\r\n                    radius: getStyleValue(options.radius, feature) ||\r\n                    (getStyleValue(options.height, feature) + getStyleValue(options.width, feature)) / 4\r\n                };\r\n                if (isNaN(circleOptions.radius)) {\r\n                    circleOptions.radius = imageStyle.getRadius();\r\n                }\r\n                if (options.fillColor) {\r\n                    circleOptions.fill = new ol.style.Fill({\r\n                        color: getRGBA(getStyleValue(options.fillColor, feature), getStyleValue(options.fillOpacity, feature))\r\n                    });\r\n                }\r\n                else {\r\n                    circleOptions.fill = imageStyle.getFill();\r\n                }\r\n                circleOptions.stroke = imageStyle.getStroke();\r\n                const layerStroke = layerStyle && layerStyle.getStroke();\r\n                if (options.strokeColor || options.strokeWidth) {\r\n                    if (!circleOptions.stroke) {\r\n                        circleOptions.stroke = new ol.style.Stroke();\r\n                    }\r\n                    if (options.strokeColor) {\r\n                        circleOptions.stroke.setColor(getStyleValue(options.strokeColor, feature));\r\n                    }\r\n                    else {\r\n                        const strokeColor = circleOptions.stroke.getColor() || (layerStroke && layerStroke.getColor() || TC.Cfg.styles.point.strokeColor);\r\n                        circleOptions.stroke.setColor(getStyleValue(strokeColor, feature));\r\n                    }\r\n                    if (options.strokeWidth) {\r\n                        circleOptions.stroke.setWidth(getStyleValue(options.strokeWidth, feature));\r\n                    }\r\n                    else {\r\n                        const strokeWidth = circleOptions.stroke.getWidth() || (layerStroke && layerStroke.getWidth() || TC.Cfg.styles.point.strokeWidth);\r\n                        circleOptions.stroke.setWidth(getStyleValue(strokeWidth, feature));\r\n                    }\r\n                }\r\n                imageStyle = new ol.style.Circle(circleOptions);\r\n            }\r\n            style.setImage(imageStyle);\r\n        }\r\n        else {\r\n            var stroke = style.getStroke();\r\n            var strokeChanged = false;\r\n            if (!stroke) {\r\n                stroke = new ol.style.Stroke();\r\n            }\r\n            if (options.strokeColor) {\r\n                stroke.setColor(getStyleValue(options.strokeColor, feature));\r\n                strokeChanged = true;\r\n            }\r\n            if (options.strokeWidth) {\r\n                stroke.setWidth(getStyleValue(options.strokeWidth, feature));\r\n                strokeChanged = true;\r\n            }\r\n            if (options.lineDash) {\r\n                stroke.setLineDash(options.lineDash)\r\n                strokeChanged = true;\r\n            }\r\n            if (strokeChanged) {\r\n                style.setStroke(stroke);\r\n            }\r\n            if (geom instanceof ol.geom.Polygon || geom instanceof ol.geom.MultiPolygon) {\r\n                if (options.fillColor || options.fillOpacity) {\r\n                    var fill = style.getFill() || new ol.style.Fill();\r\n                    fill.setColor(getRGBA(getStyleValue(options.fillColor, feature), getStyleValue(options.fillOpacity, feature)));\r\n                    style.setFill(fill);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.label !== undefined) {\r\n            if (options.label.length) {\r\n                style.setText(createNativeTextStyle(options, feature));\r\n            }\r\n            else {\r\n                style.setText();\r\n            }\r\n        }\r\n        olFeat.setStyle(newStyle);\r\n        olFeat.changed();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.toggleSelectedStyle = function (condition) {\r\n        const self = this;\r\n        const feature = self.feature;\r\n        const setStyle = condition === undefined ? !feature._originalStyle : condition;\r\n        if (setStyle) {\r\n            setSelectedStyle(feature);\r\n        }\r\n        else {\r\n            removeSelectedStyle(feature);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getInnerPoint = function (options) {\r\n        var result;\r\n        var opts = options || {};\r\n        // Funciones para hacer clipping con el extent actual. Así nos aseguramos de que el popup sale en un punto visible actualmente.\r\n        var feature = this.feature;\r\n        var geometry = feature.getGeometry();\r\n\r\n        const clipCoord = function (coord) {\r\n            const clipBox = opts.clipBox;\r\n            coord[0] = Math.min(Math.max(coord[0], clipBox[0]), clipBox[2]);\r\n            coord[1] = Math.min(Math.max(coord[1], clipBox[1]), clipBox[3]);\r\n        };\r\n        const clipPolygon = function (geom) {\r\n            if (opts.clipBox) {\r\n                geom[0].forEach(clipCoord);\r\n            }\r\n        };\r\n        const clipPolyline = function (geom) {\r\n            const clipBox = opts.clipBox;\r\n            if (clipBox) {\r\n                for (var i = geom.length - 1; i >= 0; i--) {\r\n                    const coord = geom[i];\r\n                    const x = coord[0];\r\n                    const y = coord[1];\r\n                    if (x < clipBox[0] || x > clipBox[2] || y < clipBox[1] || y > clipBox[3]) {\r\n                        geom.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        result = geometry.getFirstCoordinate();\r\n        switch (geometry.getType()) {\r\n            case ol.geom.GeometryType.MULTI_POLYGON:\r\n                var area = 0;\r\n                geometry = geometry.getPolygons().reduce(function (prev, cur) {\r\n                    const curArea = cur.getArea();\r\n                    const result = curArea > area ? cur : prev;\r\n                    area = curArea;\r\n                    return result;\r\n                });\r\n            case ol.geom.GeometryType.POLYGON:\r\n                var isInsideRing = function (point, ring) {\r\n                    var result = false;\r\n                    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\r\n                        var xi = ring[i][0], yi = ring[i][1];\r\n                        var xj = ring[j][0], yj = ring[j][1];\r\n                        var intersect = ((yi > point[1]) != (yj > point[1])) &&\r\n                            (point[0] < (xj - xi) * (point[1] - yi) / (yj - yi) + xi);\r\n                        if (intersect) result = !result;\r\n                    }\r\n                    return result;\r\n                };\r\n                var coords = geometry.getCoordinates();\r\n                clipPolygon(coords);\r\n                geometry = new ol.geom.Polygon(coords);\r\n                result = geometry.getInteriorPoint().getCoordinates();\r\n                var rings = geometry.getLinearRings();\r\n                // Miramos si el punto está dentro de un agujero\r\n                for (var i = 1; i < rings.length; i++) {\r\n                    if (isInsideRing(result, rings[i].getCoordinates())) {\r\n                        result = geometry.getClosestPoint(result);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case ol.geom.GeometryType.MULTI_LINE_STRING:\r\n                var length = 0;\r\n                geometry = geometry.getLineStrings().reduce(function (prev, cur) {\r\n                    const curLength = cur.getLength();\r\n                    const result = curLength > length ? cur : prev;\r\n                    length = curLength;\r\n                    return result;\r\n                });\r\n            case ol.geom.GeometryType.LINE_STRING:\r\n                var centroid = [0, 0];\r\n                var coords = geometry.getCoordinates();\r\n                clipPolyline(coords);\r\n                geometry = new ol.geom.LineString(coords);\r\n                for (var i = 0; i < coords.length; i++) {\r\n                    centroid[0] += coords[i][0];\r\n                    centroid[1] += coords[i][1];\r\n                }\r\n                centroid[0] /= coords.length;\r\n                centroid[1] /= coords.length;\r\n                result = geometry.getClosestPoint(centroid);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.showPopup = function (popupCtl) {\r\n        var self = this;\r\n        var map = popupCtl.map;\r\n        if (map) {\r\n            var feature = self.feature;\r\n            if (feature) {\r\n                map.currentFeature = self.parent;\r\n                var currentExtent = map.getExtent();\r\n\r\n                self._innerCentroid = self.getInnerPoint({ clipBox: currentExtent });\r\n\r\n                popupCtl.contentDiv.innerHTML = self.parent.getInfo({ locale: map.options.locale });\r\n                popupCtl.menuDiv.innerHTML = '';\r\n                if (popupCtl.options.closeButton || popupCtl.options.closeButton === undefined) {\r\n                    const btn = document.createElement('div');\r\n                    btn.classList.add(popupCtl.CLASS + '-close');\r\n                    btn.setAttribute('title', popupCtl.getLocaleString('close'));\r\n                    popupCtl.menuDiv.appendChild(btn);\r\n                    btn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                        popupCtl.hide();\r\n                    });\r\n                    popupCtl.contentDiv.classList.add(popupCtl.CLASS + '-has-btn');\r\n                    // En OL2 los featureInfo en versión \"baraja de cartas\" salen sin tamaño.\r\n                    // Para evitar esto, la clase tc-ctl-finfo tiene ancho y alto establecidos.\r\n                    // Pero eso hace que en el popup salgan barras de scroll, porque contentDiv se crea demasiado pequeño.\r\n                    // Rehacemos el tamaño de tc-ctl-finfo para eliminarlas.\r\n                    const finfo = popupCtl.contentDiv.querySelector('.tc-ctl-finfo');\r\n                    if (finfo) {\r\n                        finfo.width = 'auto';\r\n                        finfo.height = 'auto';\r\n                    }\r\n                }\r\n\r\n                var options = self.parent.options;\r\n                if (TC.Util.isEmptyObject(options) && self.parent.layer &&\r\n                    self.parent.layer.options && self.parent.layer.options.styles) {\r\n\r\n                    switch (self.parent.CLASSNAME) {\r\n                        case \"TC.feature.Point\":\r\n                            options = self.parent.layer.options.styles.point;\r\n\r\n                            // 11/03/2019 Al crear las features del API desde las features nativas, \r\n                            // se valida si la feature tiene icono para definir si es punto o marcador\r\n                            // el problema viene cuando la feature no tiene estilo propio sino que lo obtiene de la capa,\r\n                            // en esos casos se define como punto lo que es un marcador y cuando llegamos aquí no se accede a las\r\n                            // opciones de marcador sino de punto.\r\n                            if (!options || TC.Util.isEmptyObject(options)) {\r\n                                options = self.parent.layer.options.styles.marker;\r\n                            }\r\n                            break;\r\n                        case \"TC.feature.Marker\":\r\n                            options = self.parent.layer.options.styles.marker;\r\n                            break;\r\n                        case \"TC.feature.Circle\":\r\n                            options = self.parent.layer.options.styles.circle;\r\n                            break;\r\n                        case \"TC.feature.MultiPolygon\":\r\n                        case \"TC.feature.Polygon\":\r\n                            options = self.parent.layer.options.styles.polygon;\r\n                            break;\r\n                        case \"TC.feature.MultiPolyline\":\r\n                        case \"TC.feature.Polyline\":\r\n                            options = self.parent.layer.options.styles.line;\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                // Calcular anchor\r\n                var anchor;\r\n                if (options.anchor) {\r\n                    anchor = getStyleValue(options.anchor, self.parent);\r\n                }\r\n                else {\r\n                    var style;\r\n                    var f = feature._wrap.parent;\r\n                    for (var i = 0; i < map.workLayers.length; i++) {\r\n                        var layer = map.workLayers[i];\r\n                        if (!layer.isRaster()) {\r\n                            if (layer.features.indexOf(f) >= 0) {\r\n                                style = layer.wrap.styleFunction(feature);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (Array.isArray(style)) {\r\n                        const image = style[0].getImage();\r\n                        anchor = !image || image instanceof ol.style.Icon ? [0.5, 0] : [0.5, 0.5];\r\n                    }\r\n                }\r\n                const offset = [0, 0];\r\n                if (anchor) {\r\n                    if (options.height) {\r\n                        offset[1] = -(getStyleValue(options.height, self.parent) || 0) * anchor[1];\r\n                    }\r\n                    else {\r\n                        var fStyle = getNativeFeatureStyle(feature, true);\r\n                        if (fStyle) {\r\n                            const image = fStyle.getImage();\r\n                            if (image instanceof ol.style.Icon) {\r\n                                const size = image.getImageSize();\r\n                                if (size) {\r\n                                    offset[1] = size[1] * -image.getScale();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                popupCtl.wrap.setDragged(false);\r\n                popupCtl.wrap.popup.setOffset(offset);\r\n                popupCtl.wrap.popup.setPosition(self._innerCentroid);\r\n                popupCtl.popupDiv.classList.add(TC.Consts.classes.VISIBLE);\r\n            } else {\r\n                map.wrap.hidePopup(popupCtl);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.isNative = function (feature) {\r\n        return feature instanceof ol.Feature;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getPath = function () {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.feature && self.feature._folders) {\r\n            result = self.feature._folders;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getBounds = function () {\r\n        var result = null;\r\n        var self = this;\r\n        if (self.feature) {\r\n            const geometry = self.feature.getGeometry();\r\n            if (!geometry) return null;\r\n            result = geometry.getExtent();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getTemplate = function () {\r\n        var result = null;\r\n        var self = this;\r\n        var style = self.feature.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(self.feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            for (var i = 0; i < style.length; i++) {\r\n                if (style[i]._balloon) {\r\n                    var s = style[i]._balloon.getText();\r\n                    if (s) {\r\n                        style = style[i]._balloon;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (style && !Array.isArray(style) && style.getText) {\r\n            result = style.getText();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getData = function () {\r\n        var self = this;\r\n        var result = self.feature.getProperties();\r\n        // En caso de clusters\r\n        if (Array.isArray(result.features)) {\r\n            if (result.features.length === 1) {\r\n                result = result.features[0].getProperties();\r\n            }\r\n            else {\r\n                result = result.features.length + ' elementos';\r\n            }\r\n        }\r\n        var geometryName = self.feature.getGeometryName();\r\n        if (result[geometryName]) {\r\n            delete result[geometryName];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setData = function (data) {\r\n        this.feature.setProperties(data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.unsetData = function (key) {\r\n        const feature = this.feature;\r\n        feature.unset(key);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.clearData = function () {\r\n        const feature = this.feature;\r\n        const geometryName = feature.getGeometryName();\r\n        feature.getKeys().forEach(function (key) {\r\n            if (key !== geometryName) {\r\n                feature.unset(key);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mouseMoveHandler = function (evt) {\r\n        const self = this;\r\n        if (self.sketch) {\r\n            self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mouseOverHandler = function (evt) {\r\n        const self = this;\r\n        if (self.sketch && self.hoverCoordinate) {\r\n            self.pushCoordinate(self.hoverCoordinate);\r\n            self.hoverCoordinate = null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.clickHandler = function (evt) {\r\n        const self = this;\r\n        if (self.parent.map.view === TC.Consts.view.PRINTING) {\r\n            return;\r\n        }\r\n        if (self._mdPx) { // No operamos si el clic es consecuencia es en realidad un drag\r\n            const dx = self._mdPx[0] - evt.clientX;\r\n            const dy = self._mdPx[1] - evt.clientY;\r\n            if (dx * dx + dy * dy > self.interaction.squaredClickTolerance_) {\r\n                return;\r\n            }\r\n        }\r\n        if (self.sketch) {\r\n            var coords = self.sketch.getGeometry().getCoordinates();\r\n            self.parent.trigger(TC.Consts.event.POINT, {\r\n                point: coords[coords.length - 1]\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mousedownHandler = function (evt) {\r\n        const self = this;\r\n        self._mdPx = [evt.clientX, evt.clientY];\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.getMeasureData = function () {\r\n        var self = this;\r\n\r\n        var formatLength = function (line, data) {\r\n            line = new ol.geom.LineString(TC.Util.reproject(line.getCoordinates(), self.parent.map.crs, self.parent.map.options.utmCrs));\r\n            data.length = line.getLength();\r\n        };\r\n\r\n        var formatArea = function (polygon, data) {\r\n            polygon = new ol.geom.Polygon([TC.Util.reproject(polygon.getLinearRing(0).getCoordinates(), self.parent.map.crs, self.parent.map.options.utmCrs)]);\r\n            data.area = polygon.getArea();\r\n            var ring = polygon.getLinearRing(0);\r\n            data.perimeter = ol.geom.flat.linearRingLength(ring.flatCoordinates, 0, ring.flatCoordinates.length, ring.stride);\r\n        };\r\n\r\n        var result = {\r\n            units: ol.proj.Units.METERS\r\n        };\r\n        if (this.sketch) {\r\n            var geom = (this.sketch.getGeometry());\r\n            if (geom instanceof ol.geom.Polygon) {\r\n                formatArea(geom, result);\r\n            }\r\n            else if (geom instanceof ol.geom.LineString) {\r\n                formatLength(geom, result);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    // Función para reproyectar el dibujo actual\r\n    const drawProjectionChangeHandler = function (ctl, e) {\r\n        if (ctl.sketch) {\r\n            const oldProj = e.oldValue.getProjection();\r\n            const newProj = e.target.get(e.key).getProjection();\r\n            if (oldProj.getCode() !== newProj.getCode()) {\r\n                const geom = ctl.sketch.getGeometry();\r\n                geom.transform(oldProj, newProj);\r\n                ctl.interaction.sketchPoint_.getGeometry().transform(oldProj, newProj);\r\n                const flatCoordinates = [];\r\n                var sketchCoords;\r\n                if (ctl.interaction.getMode() === 'Polygon') {\r\n                    sketchCoords = ctl.interaction.sketchCoords_[0];\r\n                }\r\n                else {\r\n                    sketchCoords = ctl.interaction.sketchCoords_;\r\n                }\r\n                ol.geom.flat.deflateCoordinates(flatCoordinates, 0, sketchCoords, geom.stride);\r\n                const transformFn = ol.proj.getTransform(oldProj, newProj);\r\n                transformFn(flatCoordinates, flatCoordinates, geom.stride);\r\n                sketchCoords = ol.geom.flat.inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, geom.stride);\r\n                if (ctl.interaction.getMode() === 'Polygon') {\r\n                    ctl.interaction.sketchCoords_ = [sketchCoords];\r\n                }\r\n                else {\r\n                    ctl.interaction.sketchCoords_ = sketchCoords;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.activate = function (mode) {\r\n        var self = this;\r\n\r\n        var type;\r\n        switch (mode) {\r\n            case TC.Consts.geom.POLYGON:\r\n                type = ol.geom.GeometryType.POLYGON;\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                type = ol.geom.GeometryType.MULTI_POLYGON;\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n                type = ol.geom.GeometryType.POINT;\r\n                break;\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                type = ol.geom.GeometryType.MULTI_POINT;\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                type = ol.geom.GeometryType.MULTI_LINE_STRING;\r\n                break;\r\n            default:\r\n                type = ol.geom.GeometryType.LINE_STRING;\r\n                break;\r\n        }\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.getLayer()]).then(function (objects) {\r\n                const olMap = objects[0];\r\n                const layer = objects[1];\r\n                if (layer) {\r\n                    layer.wrap.getLayer().then(function (olLayer) {\r\n\r\n                        if (!self.viewport) self.viewport = olMap.getViewport();\r\n\r\n                        if (self.interaction) {\r\n                            olMap.removeInteraction(self.interaction);\r\n                            if (self._mousedownHandler) {\r\n                                self.viewport.removeEventListener('mousedown', self._mousedownHandler);\r\n                                self._mousedownHandler = null;\r\n                            }\r\n                            if (self._clickHandler) {\r\n                                self.viewport.removeEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                                self._clickHandler = null;\r\n                            }\r\n                            if (self._mouseMoveHandler && self._mouseOverHandler) {\r\n                                self.viewport.removeEventListener(MOUSEMOVE, self._mouseMoveHandler);\r\n                                self.viewport.removeEventListener(MOUSEOVER, self._mouseOverHandler);\r\n                            }\r\n                        }\r\n\r\n                        if (self.snapInteraction) {\r\n                            olMap.removeInteraction(self.snapInteraction);\r\n                        }\r\n\r\n                        if (mode) {\r\n                            self._mousedownHandler = self.mousedownHandler.bind(self);\r\n                            self._clickHandler = self.clickHandler.bind(self);\r\n                            self.viewport.addEventListener('mousedown', self._mousedownHandler);\r\n                            self.viewport.addEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                            if (self.parent.measure) {\r\n                                self._mouseMoveHandler = self.mouseMoveHandler.bind(self);\r\n                                self._mouseOverHandler = self.mouseOverHandler.bind(self);\r\n                                self.viewport.addEventListener(MOUSEMOVE, self._mouseMoveHandler);\r\n                                self.viewport.addEventListener(MOUSEOVER, self._mouseOverHandler);\r\n                            }\r\n\r\n                            var drawOptions = {\r\n                                type: type,\r\n                                snapTolerance: 0,\r\n                                condition: function () {\r\n                                    if (ol.events.condition.shiftKeyOnly(arguments[0])) {\r\n                                        hole = olMap.forEachFeatureAtPixel(olMap.getPixelFromCoordinate(arguments[0].coordinate), function (feature) {\r\n                                            if (ol.geom.GeometryType.POLYGON == feature.getGeometry().getType() ||\r\n                                                ol.geom.GeometryType.MULTI_POLYGON == feature.getGeometry().getType()) {\r\n                                                return feature;\r\n                                            }\r\n                                            return null;\r\n                                        },\r\n                                            {\r\n                                                hitTolerance: hitTolerance\r\n                                            });\r\n                                    }\r\n\r\n                                    if (self.parent.map.view === TC.Consts.view.PRINTING) {\r\n                                        return null;\r\n                                    }\r\n\r\n                                    return true;\r\n                                }\r\n                            };\r\n                            if (olLayer) {\r\n                                drawOptions.source = olLayer.getSource();\r\n                            }\r\n                            const parentStyles = self.parent.styles || {};\r\n                            switch (mode) {\r\n                                case TC.Consts.geom.RECTANGLE:\r\n                                    drawOptions.style = createNativeStyle({\r\n                                        styles: { line: self.parent.styles.line }\r\n                                    });\r\n                                    drawOptions.type = ol.geom.GeometryType.LINE_STRING;\r\n                                    drawOptions.maxPoints = 2;\r\n                                    drawOptions.geometryFunction = function (coordinates, geometry) {\r\n                                        const start = coordinates[0];\r\n                                        const end = coordinates[1];\r\n                                        const newCoords = [[start, [start[0], end[1]], end, [end[0], start[1]], start]];\r\n                                        if (geometry) {\r\n                                            geometry.setCoordinates(newCoords);\r\n                                        }\r\n                                        else {\r\n                                            geometry = new ol.geom.Polygon(newCoords);\r\n                                        }\r\n                                        return geometry;\r\n                                    };\r\n                                    break;\r\n                                case TC.Consts.geom.POLYGON:\r\n                                case TC.Consts.geom.MULTIPOLYGON:\r\n                                    if (parentStyles.polygon) {\r\n                                        drawOptions.style = createNativeStyle({\r\n                                            styles: { polygon: parentStyles.polygon }\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                                case TC.Consts.geom.POINT:\r\n                                case TC.Consts.geom.MULTIPOINT:\r\n                                    if (parentStyles.point) {\r\n                                        drawOptions.style = createNativeStyle({\r\n                                            styles: { point: parentStyles.point }\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                                case TC.Consts.geom.MULTIPOLYLINE:\r\n                                default:\r\n                                    if (parentStyles.line) {\r\n                                        drawOptions.style = createNativeStyle({\r\n                                            styles: { line: parentStyles.line }\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n                            self.interaction = new ol.interaction.Draw(drawOptions);\r\n\r\n                            self.interaction.on('drawstart', function (evt) {\r\n                                self.sketch = evt.feature;\r\n                                self.parent.trigger(TC.Consts.event.DRAWSTART);\r\n                            }, this);\r\n\r\n                            self.interaction.on('drawend', function (evt) {\r\n                                const overlayStyle = evt.target.overlay_.getStyle();\r\n                                evt.feature.setStyle(Array.isArray(overlayStyle) ? overlayStyle.map(function (style) {\r\n                                    return style.clone();\r\n                                }) : overlayStyle);\r\n                                if (self.parent.measure) {\r\n                                    self.parent.trigger(TC.Consts.event.MEASURE, self.getMeasureData());\r\n                                }\r\n                                TC.wrap.Feature.createFeature(self.sketch).then(function (feat) {\r\n                                    self.parent.trigger(TC.Consts.event.DRAWEND, { feature: feat });\r\n                                    self.sketch = null;\r\n                                });\r\n                            }, this);\r\n\r\n                            self._projectionChangeHandler = function (e) {\r\n                                drawProjectionChangeHandler(self, e);\r\n                            };\r\n                            olMap.on('change:view', self._projectionChangeHandler);\r\n\r\n                            olMap.addInteraction(self.interaction);\r\n\r\n                            if (self.parent.snapping) {\r\n                                var snapOptions = {};\r\n                                if (olLayer) {\r\n                                    snapOptions.source = olLayer.getSource();\r\n                                }\r\n                                else if (self.parent.snapping instanceof TC.Layer) {\r\n                                    snapOptions.source = self.parent.snapping.wrap.layer.getSource();\r\n                                }\r\n                                self.snapInteraction = new ol.interaction.Snap(snapOptions);\r\n                                olMap.addInteraction(self.snapInteraction);\r\n                            }\r\n                        }\r\n\r\n                        self.redoStack = [];\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.deactivate = function () {\r\n        var self = this;\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.getLayer()]).then(function (objects) {\r\n                const olMap = objects[0];\r\n                const layer = objects[1];\r\n                if (self.viewport) {\r\n                    if (self._mousedownHandler) {\r\n                        self.viewport.removeEventListener('mousedown', self._mousedownHandler);\r\n                        self._mousedownHandler = null;\r\n                    }\r\n                    if (self._clickHandler) {\r\n                        self.viewport.removeEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                        self._clickHandler = null;\r\n                    }\r\n                }\r\n                if (layer && !self.parent.persistent) {\r\n                    layer.clearFeatures();\r\n                }\r\n                if (self.interaction) {\r\n                    olMap.removeInteraction(self.interaction);\r\n                    self.interaction = null;\r\n                }\r\n                olMap.un('change:view', self._projectionChangeHandler);\r\n            });\r\n        }\r\n    };\r\n\r\n    //El valor devuelto es lo que va al stack de redo\r\n    TC.wrap.control.Draw.prototype.popCoordinate = function () {\r\n        var self = this;\r\n        var result = null;\r\n        if (self.interaction) {\r\n            var feature = self.interaction.sketchFeature_;\r\n            if (feature) {\r\n                var coords;\r\n                var geom = feature.getGeometry();\r\n\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    coords = geom.getCoordinates()[0];\r\n                }\r\n                else if (geom instanceof ol.geom.LineString) {\r\n                    coords = geom.getCoordinates();\r\n                }\r\n                var fullCoords = coords;\r\n                if (coords.length > 1) {\r\n\r\n                    var puntos;\r\n                    if (geom instanceof ol.geom.Polygon)\r\n                        puntos = self.interaction.sketchCoords_[0];\r\n                    else if (geom instanceof ol.geom.LineString)\r\n                        puntos = self.interaction.sketchCoords_;\r\n\r\n                    /*\r\n                    Al menos con linestring, no necesariamente hay que quitar el último\r\n                    Porque OL mete en coordinates del sketchFeature_ tanto el último marcado como el que flota detrás del cursor\r\n                    Para comprobar que realmente es ése, podemos contrastarlo con self.interaction.sketchPoint_.getGeometry().getCoordinates()\r\n                    */\r\n                    var flyingPointContained = false;\r\n                    if (self.interaction.sketchPoint_) {\r\n                        var flyingPoint = self.interaction.sketchPoint_.getGeometry().getCoordinates();\r\n                        for (var i = 0; i < coords.length; i++) {\r\n                            if (coords[i][0] == flyingPoint[0] && coords[i][1] == flyingPoint[1]) {\r\n                                flyingPointContained = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    var index;\r\n                    if (flyingPointContained) index = puntos.length - 2;\r\n                    else index = puntos.length - 1;\r\n\r\n                    result = puntos[index];\r\n                    puntos.splice(index, 1);\r\n\r\n                    if (geom instanceof ol.geom.Polygon) {\r\n                        geom.setCoordinates([puntos]);\r\n                        self.interaction.sketchLine_.getGeometry().setCoordinates(puntos);\r\n                    }\r\n                    else {\r\n                        geom.setCoordinates(puntos);\r\n                    }\r\n\r\n\r\n                    feature.setGeometry(geom);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.pushCoordinate = function (coord) {\r\n        var self = this;\r\n        var result = false;\r\n        if (self.interaction) {\r\n            var feature = self.interaction.sketchFeature_;\r\n            if (feature) {\r\n                var coords;\r\n                var geom = feature.getGeometry();\r\n\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    coords = geom.getCoordinates()[0];\r\n                } else if (geom instanceof ol.geom.LineString) {\r\n                    coords = geom.getCoordinates();\r\n                }\r\n                var fullCoords = coords;\r\n                //coords.push(coord);\r\n\r\n                var puntos;\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    puntos = self.interaction.sketchCoords_[0];\r\n                    //self.interaction.sketchCoords_[0].push(coord);\r\n                    //geom.setCoordinates([fullCoords], ol.geom.GeometryLayout.XY);\r\n                } else if (geom instanceof ol.geom.LineString) {\r\n\r\n                    puntos = self.interaction.sketchCoords_;\r\n                }\r\n\r\n                //Si hay punto volador, hay que meter la coordenada justo antes\r\n                var flyingPointContained = false;\r\n                if (self.interaction.sketchPoint_) {\r\n                    var flyingPoint = self.interaction.sketchPoint_.getGeometry().getCoordinates();\r\n                    for (var i = 0; i < coords.length; i++) {\r\n                        if (coords[i][0] == flyingPoint[0] && coords[i][1] == flyingPoint[1]) {\r\n                            flyingPointContained = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                if (flyingPointContained) index = puntos.length - 1;\r\n                else index = puntos.length;\r\n                puntos.splice(index, 0, coord);\r\n\r\n                if (geom instanceof ol.geom.LineString)\r\n                    geom.setCoordinates(puntos, ol.geom.GeometryLayout.XY);\r\n                else {\r\n                    geom.setCoordinates([puntos], ol.geom.GeometryLayout.XY);\r\n                    self.interaction.sketchLine_.getGeometry().setCoordinates(puntos);\r\n                    //feature.setGeometry(geom);\r\n                }\r\n\r\n\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.undo = function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        var coord = self.popCoordinate();\r\n        if (coord) {\r\n            self.redoStack.push(coord);\r\n            result = true;\r\n        }\r\n\r\n        self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.redo = function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        if (self.redoStack.length > 0) {\r\n            self.pushCoordinate(self.redoStack.pop());\r\n            result = true;\r\n        }\r\n\r\n        self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.end = function () {\r\n        var self = this;\r\n        if (self.interaction && self.interaction.sketchFeature_)\r\n            self.interaction.finishDrawing();\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.setStyle = function (style) {\r\n        const self = this;\r\n        if (self.interaction) {\r\n            self.interaction.overlay_.setStyle(createNativeStyle({\r\n                styles: style\r\n            }));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getRequestSchemas = function (options) {\r\n        var extent = options.extent;\r\n        var layers = options.layers;\r\n        var result = new Array(layers.length);\r\n        for (var i = 0, len = result.length; i < len; i++) {\r\n            var layer = layers[i];\r\n            var schema = {\r\n                layerId: layer.id\r\n            };\r\n            var olSource = layer.wrap.layer.getSource();\r\n            if (olSource.getUrls) {\r\n                schema.url = olSource.getUrls()[0];\r\n            }\r\n            if (olSource.getTileGrid) {\r\n                var tileGrid = olSource.getTileGrid();\r\n                var resolutions = tileGrid.getResolutions();\r\n                var matrixIds = tileGrid.getMatrixIds();\r\n                var node = layer.getLayerNodeByName(layer.layerNames);\r\n                var tmsLimits = null;\r\n                for (var j = 0, llen = node.TileMatrixSetLink.length; j < llen; j++) {\r\n                    var tmsl = node.TileMatrixSetLink[j];\r\n                    if (tmsl.TileMatrixSet === layer.matrixSet) {\r\n                        tmsLimits = tmsl.TileMatrixSetLimits;\r\n                        break;\r\n                    }\r\n                }\r\n                schema.tileMatrixLimits = [];\r\n                for (var j = 0, rlen = resolutions.length; j < rlen; j++) {\r\n                    var origin = tileGrid.getOrigin(j);\r\n                    var tileSize = tileGrid.getTileSize(j);\r\n                    var resolution = resolutions[j];\r\n                    var unitsPerTile = tileSize * resolution;\r\n                    var tml = {\r\n                        mId: matrixIds[j],\r\n                        res: resolution,\r\n                        origin: origin,\r\n                        tSize: tileSize,\r\n                        cl: Math.floor((extent[0] - origin[0]) / unitsPerTile),\r\n                        cr: Math.floor((extent[2] - origin[0]) / unitsPerTile),\r\n                        rt: Math.floor((origin[1] - extent[3]) / unitsPerTile),\r\n                        rb: Math.floor((origin[1] - extent[1]) / unitsPerTile)\r\n                    }\r\n                    if (tmsLimits) {\r\n                        var tmsLimit = tmsLimits[j];\r\n                        if (tmsLimit) {\r\n                            tml.cl = Math.max(tml.cl, tmsLimit.MinTileCol);\r\n                            tml.cr = Math.min(tml.cr, tmsLimit.MaxTileCol);\r\n                            tml.rt = Math.max(tml.rt, tmsLimit.MinTileRow);\r\n                            tml.rb = Math.min(tml.rb, tmsLimit.MaxTileRow);\r\n                        }\r\n                    }\r\n                    if (tml.cl <= tml.cr && tml.rt <= tml.rb) {\r\n                        schema.tileMatrixLimits.push(tml);\r\n                    }\r\n                }\r\n            }\r\n            result[i] = schema;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getGetTilePattern = function (layer) {\r\n        var result = \"\";\r\n        var olSource = layer.wrap.layer.getSource();\r\n        if (olSource.getUrls) {\r\n            result = olSource.getUrls()[0];\r\n        }\r\n        if (layer.options.encoding !== TC.Consts.WMTSEncoding.RESTFUL) {\r\n            if (result.indexOf('?') < 0) {\r\n                result = result + '?';\r\n            }\r\n            if (result.indexOf('?') === result.length - 1) {\r\n                result = result + 'layer=' + layer.layerNames + '&style=default&tilematrixset=' + encodeURIComponent(layer.matrixSet) +\r\n                    '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + encodeURIComponent(layer.format) +\r\n                    '&TileMatrix={TileMatrix}&TileCol={TileCol}&TileRow={TileRow}';\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const createHaloStroke1 = function (width) {\r\n        return new ol.style.Stroke({\r\n            color: '#ffffff',\r\n            width: width + 4,\r\n        });\r\n    };\r\n\r\n    const createHaloStroke2 = function (width) {\r\n        return new ol.style.Stroke({\r\n            color: '#000000',\r\n            width: width + 6,\r\n        });\r\n    };\r\n\r\n    const addHaloToStyle = function (style) {\r\n        if (!style) {\r\n            style = [];\r\n        }\r\n        if (style instanceof ol.style.Style) {\r\n            style = [style];\r\n        }\r\n        style = style.slice();\r\n        const mainStyle = style[0];\r\n        if (mainStyle) {\r\n            const image = mainStyle.getImage();\r\n            var strokeWidth;\r\n            if (image instanceof ol.style.RegularShape) {\r\n                strokeWidth = image.getStroke().getWidth();\r\n                const radius = image.getRadius();\r\n                const haloPart1 = mainStyle.clone();\r\n                haloPart1.setImage(new ol.style.Circle({\r\n                    radius: radius,\r\n                    stroke: createHaloStroke1(strokeWidth)\r\n                }));\r\n                style.unshift(haloPart1);\r\n                const haloPart2 = mainStyle.clone();\r\n                haloPart2.setImage(new ol.style.Circle({\r\n                    radius: radius,\r\n                    stroke: createHaloStroke2(strokeWidth)\r\n                }));\r\n                style.unshift(haloPart2);\r\n            }\r\n            const stroke = mainStyle.getStroke();\r\n            if (stroke) {\r\n                strokeWidth = stroke.getWidth();\r\n                style.unshift(new ol.style.Style({\r\n                    stroke: createHaloStroke1(strokeWidth)\r\n                }));\r\n                style.unshift(new ol.style.Style({\r\n                    stroke: createHaloStroke2(strokeWidth)\r\n                }));\r\n            }\r\n            return style;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const createSelectedStyle = function (feat) {\r\n        let originalStyle = feat._originalStyle = feat._originalStyle || feat.getStyle();\r\n        if (!feat._originalStyle && feat._wrap.parent.layer) {\r\n            originalStyle = feat._wrap.parent.layer.wrap.layer.getStyle();\r\n        }\r\n        if (!originalStyle) {\r\n            originalStyle = createNativeStyle({}, feat);\r\n        }\r\n        if (TC.Util.isFunction(originalStyle)) {\r\n            return function (f, r) {\r\n                return addHaloToStyle(originalStyle(f, r));\r\n            };\r\n        }\r\n        return addHaloToStyle(originalStyle);\r\n    };\r\n\r\n    const setSelectedStyle = function (feat) {\r\n        updateSelectedStyle.call(feat);\r\n        feat.changed();\r\n        //ol.events.listen(feat, CHANGE, updateSelectedStyle, feat);\r\n    };\r\n\r\n    const removeSelectedStyle = function (feat) {\r\n        //ol.events.unlisten(feat, CHANGE, updateSelectedStyle, feat);\r\n        if (feat.hasOwnProperty('_originalStyle')) {\r\n            feat.setStyle(feat._originalStyle);\r\n        }\r\n        delete feat._originalStyle;\r\n    };\r\n\r\n    const updateSelectedStyle = function () {\r\n        this.style_ = createSelectedStyle(this);\r\n        this.styleFunction_ = !this.style_ ? undefined : ol.Feature.createStyleFunction(this.style_);\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.activate = function () {\r\n        const self = this;\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.layer.wrap.getLayer()]).then(function (olObjects) {\r\n                const olMap = olObjects[0];\r\n                const olLayer = olObjects[1];\r\n                if (self.selectInteraction) {\r\n                    olMap.removeInteraction(self.selectInteraction);\r\n                }\r\n                var select = new ol.interaction.Select({\r\n                    layers: [olLayer],\r\n                    hitTolerance: hitTolerance\r\n                });\r\n                self.selectInteraction = select;\r\n                olMap.addInteraction(select);\r\n                var getWrapperFeature = function (elm) {\r\n                    return elm._wrap.parent;\r\n                };\r\n                select.on('select', function (event) {\r\n                    if (event.selected.length > 0) {\r\n                        self.parent.trigger(TC.Consts.event.FEATURESSELECT, { ctrl: self, features: event.selected.map(getWrapperFeature) });\r\n                    }\r\n                    if (event.deselected.length > 0) {\r\n                        if (event.selected.length == 0) {\r\n                            self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { ctrl: self.parent, features: event.deselected.map(getWrapperFeature) });\r\n                        }\r\n                    }\r\n                });\r\n                if (self.modifyInteraction) {\r\n                    olMap.removeInteraction(self.modifyInteraction);\r\n                }\r\n                var modify = new ol.interaction.Modify({\r\n                    features: select.getFeatures()\r\n                });\r\n                modify.on('modifyend', function (e) {\r\n                    e.features.forEach(function (feature) {\r\n                        feature._wrap.parent.geometry = feature._wrap.getGeometry();\r\n                        self.parent.trigger(TC.Consts.event.FEATUREMODIFY, { feature: feature._wrap.parent, layer: self.parent.layer });\r\n                    });\r\n                });\r\n                self.modifyInteraction = modify;\r\n                olMap.addInteraction(modify);\r\n\r\n                if (self.snapInteraction) {\r\n                    olMap.removeInteraction(self.snapInteraction);\r\n                }\r\n                if (self.parent.snapping) {\r\n                    self.snapInteraction = new ol.interaction.Snap({\r\n                        source: olLayer.getSource()\r\n                    });\r\n                    olMap.addInteraction(self.snapInteraction);\r\n                }\r\n\r\n                if (!self._onMouseMove) {\r\n                    self._onMouseMove = function (e) {\r\n                        const viewport = olMap.getViewport();\r\n                        var hit = false;\r\n                        var feature;\r\n\r\n                        var pixel = olMap.getEventPixel(e);\r\n                        hit = olMap.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                            if (self.parent.layer && layer === self.parent.layer.wrap.layer) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        },\r\n                            {\r\n                                hitTolerance: hitTolerance\r\n                            });\r\n\r\n                        if (hit) {\r\n                            viewport.style.cursor = 'pointer';\r\n                        } else {\r\n                            viewport.style.cursor = '';\r\n                            //self.parent.trigger(TC.Consts.event.FEATUREOUT);\r\n                        }\r\n                    };\r\n                }\r\n\r\n                olMap.getViewport().addEventListener(MOUSEMOVE, self._onMouseMove);\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.deactivate = function () {\r\n        const self = this;\r\n        if (self.modifyInteraction) {\r\n            self.modifyInteraction.setActive(false);\r\n            self.selectInteraction.setActive(false);\r\n            self.parent.map.wrap.getMap().then(function (olMap) {\r\n                olMap.getViewport().removeEventListener(MOUSEMOVE, self._onMouseMove);\r\n                olMap.removeInteraction(self.modifyInteraction);\r\n                olMap.removeInteraction(self.selectInteraction);\r\n                self.modifyInteraction = null;\r\n                self.selectInteraction = null;\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.getSelectedFeatures = function () {\r\n        var self = this;\r\n        var result = [];\r\n        if (self.selectInteraction) {\r\n            self.selectInteraction.getFeatures().forEach(function (elm) {\r\n                result[result.length] = elm._wrap.parent;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.setSelectedFeatures = function (features) {\r\n        var self = this;\r\n        if (self.selectInteraction) {\r\n            var source = self.selectInteraction.featureOverlay_.getSource();\r\n            source.clear();\r\n            source.addFeatures(features.map(function (elm) {\r\n                return elm.wrap.feature;\r\n            }));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.unselectFeatures = function (features) {\r\n        features = features || [];\r\n        const self = this;\r\n        const selectedFeatures = self.selectInteraction ? self.selectInteraction.getFeatures() : null;\r\n        if (selectedFeatures) {\r\n            const unselectedFeatures = [];\r\n            selectedFeatures.getArray().slice().forEach(function (olFeature) {\r\n                if (!features.length || features.indexOf(olFeature) >= 0) {\r\n                    selectedFeatures.remove(olFeature);\r\n                    unselectedFeatures[unselectedFeatures.length] = olFeature._wrap.parent;\r\n                }\r\n            });\r\n            if (unselectedFeatures.length) {\r\n                self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { features: unselectedFeatures });\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.cancel = function (deactivate, cancelTxt) {\r\n        var self = this;\r\n        self.points = [];\r\n        self.histPoints = [];\r\n        var layer = (self.control && self.control.layer) || (self.modifyInteraction && self.modifyInteraction.layer);\r\n        //if (!self.session || ((self.modifyInteraction && self.modifyInteraction.modified) || (self.session.featuresAdded && self.session.featuresAdded.length)) && cancelTxt && !confirm(cancelTxt))\r\n        //    return;\r\n        if (self.selectInteraction) {\r\n            var features = self.selectInteraction.getFeatures();\r\n            self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { ctrl: self.parent, feature: features.get(0) });\r\n            features.clear();\r\n            self.selectInteraction.setActive(false);\r\n        }\r\n        //if (self.drawInteraction) {\r\n        //    self.drawInteraction.abortDrawing_();\r\n        //    if (deactivate) {\r\n        //        self.drawInteraction.setActive(false);\r\n        //    }\r\n        //}\r\n        //if(self.modifyInteraction)\r\n        //{\r\n        //    if (self.modifyInteraction.feature)\r\n        //        self.modifyInteraction.unselectFeature(self.modifyInteraction.feature);\r\n        //    if (deactivate)\r\n        //    {\r\n        //        self.modifyInteraction.deactivate();\r\n        //    }   \r\n        //}\r\n        ////if (self.session.featuresAdded && self.session.featuresAdded.length > 0) {\r\n        ////    layer.removeFeatures(self.session.featuresAdded);\r\n        ////    self.session.featuresAdded = [];\r\n        ////}\r\n        //self.parent.trigger(TC.Consts.event.EDITIONCANCEL, { ctrl: self });\r\n        ////no se por que hostias se cambia el renderIntent a las features\r\n        //layer.features.forEach(function (feat) {\r\n        //    feat.renderIntent = \"\";\r\n        //});    \r\n        //layer.removeAllFeatures();\r\n        //layer.addFeatures(self.session.features);        \r\n        //self.clearSession();\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.deleteFeatures = function (features) {\r\n        var self = this;\r\n        if (Array.isArray(features)) {\r\n            var olFeatures = features.map(function (elm) {\r\n                return elm.wrap.feature;\r\n            });\r\n            self.parent.layer.wrap.getLayer().then(function (olLayer) {\r\n                var selectedFeatures = self.selectInteraction ? self.selectInteraction.getFeatures() : null;\r\n                for (var i = 0, len = olFeatures.length; i < len; i++) {\r\n                    var olFeature = olFeatures[i];\r\n                    if (selectedFeatures) {\r\n                        selectedFeatures.remove(olFeature);\r\n                        self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { feature: olFeature._wrap.parent });\r\n                    }\r\n                    olLayer.getSource().removeFeature(olFeature);\r\n                    self.parent.trigger(TC.Consts.event.FEATUREREMOVE, { feature: olFeature._wrap.parent });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    //TC.wrap.control.Edit.prototype.clearSession = function () {\r\n    //    var self = this;\r\n    //    delete self.session;\r\n    //};\r\n\r\n    TC.wrap.Feature.prototype.toGML = function (version, srsName) {\r\n        var parser = new ol.format.GML({\r\n            srsName: srsName\r\n        });\r\n        var xml = parser.writeGeometryNode(this.feature.getGeometry());\r\n        //elimino los aributos srsName de los hijos en geometrias compuestas Polygon->LinearRing etc;\r\n        var poligons = xml.querySelector(\"MultiSurface,MultiPolygon,Polygon\")\r\n        if (poligons) poligons.querySelectorAll(\"Polygon,LinearRing\").forEach((item) => { item.removeAttribute(\"srsName\") });\r\n        //id para INSPIRE\r\n        xml.firstChild.setAttribute(\"gml:id\", xml.firstChild.tagName + \".\" + TC.getUID());\r\n        //reemplazo todos los <loquesea por <gml:loquesea y </loquesea por </gml:loquesea\r\n        return new XMLSerializer().serializeToString(xml.firstChild).replace(/\\<\\/?\\w/gm, function (str) { var pos = str.indexOf(\"/\") > 0 ? str.indexOf(\"/\") + 1 : 1; return str.substring(0, pos) + \"gml:\" + str.substring(pos) })\r\n        //return new XMLSerializer().serializeToString(xml.firstChild).replace(/\\</gm, \"<gml:\");\r\n    };\r\n\r\n\r\n    TC.wrap.Feature.prototype.toGeoJSON = function () {\r\n        var parser = new ol.format.GeoJSON();\r\n        return parser.writeGeometry(this.feature.getGeometry());\r\n    };\r\n\r\n    TC.wrap.Geometry.write = function (options) {\r\n        options = options || {};\r\n        var geometry;\r\n        switch (options.format) {\r\n            default:\r\n                options.parser = new ol.format.GeoJSON();\r\n        };\r\n        switch (options.type) {\r\n            case TC.Consts.geom.POLYLINE:\r\n                geometry = new ol.geom.LineString(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.POLYGON:\r\n                geometry = new ol.geom.Polygon(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                geometry = new ol.geom.MultiPoint(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                geometry = new ol.geom.MultiLineString(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                geometry = new ol.geom.MultiPolygon(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n            default:\r\n                geometry = new ol.geom.Point(options.coordinates);\r\n                break;\r\n        };\r\n        return options.parser.writeGeometry(geometry);\r\n    };\r\n\r\n    TC.wrap.Geometry.toGeoJSON = function (options) {\r\n        return TC.wrap.Geometry.write(options);\r\n    };\r\n\r\n    return ol;\r\n});\r\n"]}