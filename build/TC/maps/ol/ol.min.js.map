{"version":3,"sources":["ol/ol.js"],"names":["root","factory","define","amd","exports","module","require","ol","this","Math","hypot","y","length","arguments","i","Infinity","sqrt","lastTime","vendors","x","window","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","max","id","setTimeout","clearTimeout","RESIZE","events","EventType","DRAGENTER","DRAGOVER","DROP","CHANGE","SINGLECLICK","MapBrowserEventType","POINTERMOVE","MOVEEND","MapEventType","POSTRENDER","POSTCOMPOSE","render","ADDFEATURE","source","VectorEventType","REMOVEFEATURE","CLEAR","TILELOADSTART","TileEventType","TILELOADEND","TILELOADERROR","hitTolerance","TC","Util","detectMouse","cssUrl","url","substr","lastIndexOf","format","KMLCustom","syncLoadJS","apiLocation","GPXCustom","View","prototype","getValueForResolutionFunction","opt_power","power","maxResolution","maxResolution_","minResolution","minResolution_","log","resolution","value","min","detectMobile","Overlay","updateRenderedPosition","pixel","mapSize","style","offset","getOffset","positioning","getPositioning","setVisible","offsetX","offsetY","OverlayPositioning","BOTTOM_RIGHT","CENTER_RIGHT","TOP_RIGHT","rendered","left_","left","right","round","devicePixelRatio","right_","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","offsetWidth","BOTTOM_LEFT","top_","top","bottom","bottom_","CENTER_LEFT","offsetHeight","control","OverviewMap","_validateExtent_","validateExtent_","_wrap","parent","options","alwaysCentered","recenter_","_resetExtent_","resetExtent_","call","wrap","is3D","ovview","ovmap_","getView","extent","calculateExtent","feature","get3DCameraLayer","getSource","getFeatures","coordinates","getGeometry","getCoordinates","coord1","coord2","containsCoordinate","buffer","fit","GML3CRS84","GML3","srsName","inherit","GML2CRS84","GML2","gmlNamespace","gml32Namespace","GMLBase","MULTIPOINT_PARSERS_","MULTILINESTRING_PARSERS_","MULTIPOLYGON_PARSERS_","POINTMEMBER_PARSERS_","LINESTRINGMEMBER_PARSERS_","POLYGONMEMBER_PARSERS_","RING_PARSERS","GEOMETRY_FLAT_COORDINATES_PARSERS","FLAT_LINEAR_RINGS_PARSERS","GEOMETRY_PARSERS","MULTICURVE_PARSERS_","MULTISURFACE_PARSERS_","CURVEMEMBER_PARSERS_","SURFACEMEMBER_PARSERS_","SURFACE_PARSERS_","CURVE_PARSERS_","ENVELOPE_PARSERS_","PATCHES_PARSERS_","SEGMENTS_PARSERS_","readFeaturesInternal","node","objectStack","localName","features","gmlnsCollectionParser","FEATURE_COLLECTION_PARSERS","namespace","xml","makeArrayPusher","namespaceURI","pushParseAndPop","context","featureType","featureNS","prefix","defaultPrefix","childNodes","ii","child","nodeType","ft","nodeName","split","pop","indexOf","key","count","uri","candidate","push","ns","parsersNS","featureTypes","Array","isArray","p","parsers","readFeatureElement","makeReplacer","undefined","proj","proj4","register","get","metersPerUnit_","EPSG4326","METERS_PER_UNIT","oldGet","projectionLike","trim","loadProjDef","crs","sync","readGeometryElement","firstElementChild","getAttribute","Error","dataProjection","geometry","Feature","transformWithOptions","ONLY_WHITESPACE_RE","readFeatureElementInternal","asFeature","geometryName","values","n","nextElementSibling","firstChild","getAllTextContent","test","len","attributes","_content_","attName","name","setGeometryName","fid","getAttributeNS","setId","getRGBA","color","opacity","result","asArray","slice","getResolutionOptions","mapWrap","layer","view","map","prevRes","getResolution","pms","projection","getProjection","center","getCenter","enableRotation","maxExtent","layerForResolutions","type","Consts","layerType","VECTOR","getBaseLayer","maxRes","minRes","res","getResolutions","minResIx","maxResIx","resolutions","Map","setMap","self","initialExtent","proj4Obj","crsCode","projOptions","units","oProj","global","equivalentProjections","code","Projection","addEquivalentProjections","axisOrientation","interactions","interaction","defaults","constrainResolution","viewOptions","rect","div","getBoundingClientRect","dx","width","height","dy","zoom","target","controls","pixelRatio","getEventPixel","event","viewportPosition","viewport_","eventPosition","changedTouches","clientX","pointerEvent","clientY","_promise","Promise","resolve","manageSize","updateSize","addEventListener","one","MAPLOAD","on","e","PRINTING","workLayers","forEach","wl","_noFeatureClicked","featuresInLayers","forEachFeatureAtPixel","showsPopup","trigger","FEATURECLICK","NOFEATURECLICK","addMoveEndListener","ZOOM","hasListener","once","BEFOREZOOM","onChangeView","un","limitZoomLevels","getZoom","setView","BASELAYERCHANGE","on3DView","getViewport","MOUSEMOVE","mapTarget","getTarget","hit","activeControl","isExclusive","selectable","FEATUREOVER","cursor","getMetersPerUnit","extentInDegrees","getUnits","Units","DEGREES","getMetersPerDegree","getExtent","getUnitRatio","defaultCrs","Cfg","defaultProj","newProj","normalizeProjection","units_","setProjection","baseLayer","transformExtent","unitRatio","oldView","minZoom","getMinZoom","maxZoom","getMaxZoom","getMinResolution","getMaxResolution","transformFactor","Number","POSITIVE_INFINITY","transform","newView","nearest","insertLayer","olLayer","idx","layers","getLayers","alreadyExists","getLength","item","remove","insertAt","Tile","setMaxResolution","setMinResolution","loadingTileCount","beforeTileLoadHandler","state","Layer","LOADING","BEFORELAYERUPDATE","_loadingTileCount","isRaster","$events","BEFORETILELOAD","TILELOAD","IDLE","LAYERUPDATE","removeLayer","getLayerCount","getLayerGroup","indexOfFirstVector","l","Vector","getLayerIndex","elm","setLayerIndex","index","ix","getArray","setBaseLayer","reject","setLayer","curBl","Image","WMTS","layerProjectionOptions","oldCrs","getCode","getControls","ctl","ZoomSlider","initSlider_","currentResolution","newRes","sort","a","b","reduce","prev","abs","maxResolutionError","isLoaded","animate","duration","ZOOM_ANIMATION_DURATION","bind","setResolution","setExtent","applyExtent","getResolutionForExtent","constrainedResolution","EXTENT_TOLERANCE","setCenter","_setExtentPromise","finally","_timeout","getSize","getLayer","then","apply","factor","getWidth","getHeight","setPromise","coords","opts","getMap","olMap","setRotation","rotation","getRotation","getCoordinateFromPixel","xy","getPixelFromCoordinate","coord","synchronous","isNative","isGeo","addPopup","popupCtl","draggable","loadJS","Draggabilly","DRAGGABILLY","popupDiv","getDiv","$","$popupDiv","classList","add","Popup","CLASS","contentDiv","appendChild","menuDiv","popup","addOverlay","olMapViewport","container","parentElement","classes","DRAGGABLE","matches","stopPropagation","drag","handleEvent","not","pointer","bcr","clientWidth","pageX","clientHeight","pageY","_pointerCancel","setDragging","_currentOffset","_previousContainerPosition","setPosition","setOffset","coordDelta","position","getPosition","containerRect","mouseMoveHandler","removeEventListener","hidePopup","currentFeature","VISIBLE","bounding","canvas","idealWidth","idealHeight","isInteger","newSize","setSize","getFormatFromName","KML","mimeType","showPointNames","GPX","GEOJSON","JSON","GeoJSON","GML","TOPOJSON","TopoJSON","WKT","exportFeatures","nativeStyle","createNativeStyle","styles","olFeatures","getStyle","setStyle","text","getNativeFeatureStyle","getText","clone","setProperties","geom","Point","shape","getImage","RegularShape","diameter","getRadius","getStroke","document","createElement","vectorContext","toContext","getContext","size","setText","drawGeometry","newFeature","getProperties","Style","image","Icon","src","toDataURL","pointsToAdd","point","LineString","getCoordinateAt","Polygon","getInteriorPoint","MultiLineString","lineStrings","getLineStrings","maxLength","line","cur","MultiPolygon","polygons","getPolygons","maxArea","polygon","getArea","crossOrigin","concat","f","values_","keysToChange","newKey","replace","featuresNode","writeFeaturesNode","featureProjection","featureCollectionNode","createElementNS","setAttributeNS","schemaLocation","removeAttribute","setGeometry","writeFeatures","isFileDrag","dataTransfer","types","handleDragEnter","preventDefault","handleDragExit","enableDragAndDrop","ddOptions","formatConstructors","splitCollection","dropTarget","ddInteraction","DragAndDrop","featurePromises","createFeature","all","li","getLoadingIndicator","removeWait","_featureImportWaitId","some","FEATURESIMPORT","fileName","file","FEATURESIMPORTERROR","map_","addInteraction","dropArea","handleDrop","addWait","dropListenKeys_","listen","body","buttons","ddEnabled","loadFiles","files","getInteractions","currentTarget","undoTarget","off","reader","FileReader","LOAD","handleResult_","readAsText","getVisibility","getVisible","setVisibility","visible","r","METERS","metersPerDegree","Raster","WmsParser","WMSCapabilities","WmtsParser","WMTSCapabilities","addCommonEvents","LAYERVISIBILITY","getGetMapUrl","getServiceType","WMS","dcpType","capabilities","Capability","Request","GetMap","DCPType","HTTP","Get","OnlineResource","OperationsMetadata","GetTile","DCP","href","fragment","createDocumentFragment","textarea","innerHTML","textContent","getInfoFormats","c","GetFeatureInfo","Format","infoFormatPreference","getWMTSLayer","Contents","j","TileMatrixSetLink","matrixSet","TileMatrixSet","getTileMatrix","tms","Identifier","TileMatrix","getScaleDenominators","ScaleDenominator","MinScaleDenominator","MaxScaleDenominator","getName","children","getLayerNodes","childDenominators","getAttribution","ServiceProvider","ProviderName","site","ProviderSite","ServiceIdentification","Title","Service","getInfo","layerNodes","getAllLayerNodes","compareNames","title","Abstract","legend","_traverse","o","func","getLegend","MetadataURL","metadata","md","queryable","getServiceTitle","getRootLayerNode","ignorePrefix","Name","getIdentifier","_layerList","getNodeArray","normalizeLayerNode","normalizeCapabilities","LegendURL","isCompatible","names","_isCompatible","nodes","inCrs","itemCRS","CRS","SRS","crsList","isIn","CRSCodesEqual","SupportedCRS","getCompatibleCRS","crsLists","getNodePath","otherCrsLists","filter","every","layerNames","tileMatrixSets","tmsl","getCompatibleLayers","_fnrecursive","crsToCheck","tmsList","tmsIdentifier","layerList","jj","tmsLinkList","k","kk","getCompatibleMatrixSets","tmsLink","setWMTSUrl","urls","getUrls","urlPattern","createWMSLayer","params","ImageWMS","ratio","imageRatio","imageLoadFunction","getImageLoad","tile","layerOptions","LAYERS","method","createWmtsSource","sourceOptions","optionsFromCapabilities","requestEncoding","encoding","location","protocol","setTileLoadFunction","prevFn","matrix","getLimitedMatrixSet","matrixIndex","createWMTSLayer","getParams","setParams","updateParams","setMatrixSet","newSource","extend","newResolutions","newMaxResolution","newMinResolution","setSource","ts","setResolutions","resolutions_","tileGrid","Geometry","getNearest","candidates","getClosestPoint","setScaleFunction","imageStyle","iconWidth","olFeat","setScaleForWidth","imgWidth","markerWidth","setScale","imageSize","img","naturalWidth","getSrc","getStyleValue","property","match","m","data","isFunction","isPoint","isLine","isPolygon","nativeStyleOptions","getType","getId","getData","styleOptions","cluster","stroke","Stroke","strokeColor","strokeWidth","lineDash","fill","Fill","fillColor","fillOpacity","circleOptions","radius","isNaN","Circle","label","createNativeTextStyle","marker","anchor","anchorXUnits","anchorYUnits","styleObj","textOptions","fontSize","font","angle","PI","fontColor","labelOutlineColor","labelOutlineWidth","labelOffset","Text","toHexString","number","toString","getHexColorFromArray","colorArray","getStyleFromNative","olStyle","getColor","getFill","getAnchor","getLineDash","reloadSource","createVectorSource","createStyles","WFS","listenerKey","getState","Observable","unByKey","addFeatures","import","oldFeatures","createFeatureFromNative","_wrapPromise","resolveFn","ctorName","getIcon","vectorOptions","internalLoader","usesGenericLoader","proxify","toLowerCase","getMimeTypeFromUrl","loader","featureloader","xhr","getFormat","fs","readFeatures","newData","LAYERERROR","reason","message","outputFormat","sOrigin","serviceUrl","ajaxOptions","version","properties","Object","keys","join","maxFeatures","responseType","XML","gml","propertynames","pPrefix","_arrProperties","contentType","_requestUrl","ajax","response","feats","triggerLayerUpdate","onFeaturesAdd","FEATURESADD","_tcLayer","markerStyle","Cluster","distance","start","now","pCoords","cCoords","step","fromCoords","toCoords","fraction","getCurrentCoordinates","CLUSTER_ANIMATION_DURATION","clusterCache","splice","elmCoords","cElm","s","addFeatureToLayer","feat","addFn","addPoint","Polyline","addPolyline","addPolygon","addMultiPolygon","MultiPolyline","addMultiPolyline","addFeature","constructor","FEATUREREMOVE","VECTORUPDATE","FEATURESCLEAR","dynamicStyle","styleFunction","isDynamicStyle","obj","prop","setStyles","createVectorLayer","declutter","commit","getFeatureById","removeFeature","clearFeatures","clear","setFeatureVisibility","fillOptions","strokeOptions","displayNoneStyle","_originalStyle","findFeature","getGetFeatureUrl","getDescribeFeatureTypeUrl","sendTransaction","inserts","updates","deletes","getNativeFeature","olInserts","olUpdates","olDeletes","transaction","writeTransaction","featurePrefix","outerHTML","er","getElementsByTagName","errorObj","texts","transactionResponse","readTransactionResponse","catch","setDraggable","onend","onstart","olObjects","interactionOptions","Collection","Translate","removeInteraction","detectIE","_handlerDraggablePointerMove","getFeaturesInExtent","tolerance","featuresInExtent","leftCorner","rightCorner","coordinate","Click","_trigger","featureCount","CLICK","activate","deactivate","ScaleBar","updateElement_","ScaleLine","renderedHTML_","NavBar","zCtl","Zoom","zsCtl","frameState","viewState","requestSliderSize","setTarget","addControl","querySelectorAll","button","display","setAttribute","getLocaleString","zoomSlider","querySelector","refresh","renderPromise","sliderInitialized_","setThumbPosition_","NavBarHome","z2eCtl","ZoomToExtent","tipLabel","homeBtn","setInitialExtent","Coordinates","_coordsTrigger","coordsToClick","view3D","onMouseMove","getEventCoordinate","latLon","reverse","update","Geolocation","_snapTrigger","dragging","initSnap","_postcomposeTrigger","duringTrackSnap","getTrackingLine","layerTracking","hasCoordinates","showElevationMarker","d","ResultsPanel","layerTrack","chart","hideElevationMarker","addWaypoint","waypoint","ele","time","addPosition","heading","speed","accuracy","altitudeAccuracy","altitude","last","appendCoordinate","lx","ly","storage","setSessionLocalValue","Const","LocalStorageKey","TRACKINGTEMP","formattedToStorage","Event","STATEUPDATED","moving","positionChangehandler","geoposition","setTracking","layerGPS","position_","longitude","latitude","projectedPosition","reproject","deltaMean","POSITIONCHANGE","pd","radToDeg","addCircle","accuracyCircle","geopositionTracking","firstPosition","trackCenterButton","zoomToFeatures","track","infoPanel","isVisible","doVisible","isMinimized","maximize","controlContainer","getControlsByClass","addElement","side","SIDE","LEFT","htmlElement","HIDDEN","tracking","nativeTrackingFeature","sessionwaypoint","sessionTracking","parser","storageCRS","tcFeature","currentPositionWaiting","currentPositionTrk","getCurrentPositionInterval","getCurrentPositionRequest","errorTimeout","toast","enableHighAccuracy","timeout","setInterval","getCurrentPosition","errorCallback","navigator","geolocation","clearInterval","watchPosition","onGeolocateError","error","TIMEOUT","maximumAge","msgType","WARNING","activateButton","deactivateButton","watch","clearWatch","activateSnapping","deactivateSnapping","snapInfo","removeOverlay","snapInfoElement","snapLine","attachedDTD","setFillStrokeStyle","endSnap","eventPixel","closestFeature","getClosestFeatureToCoordinate","closestPoint","pow","snappingTolerance","setCoordinates","getElementsByClassName","getKeys","locale","toLocaleString","minimumFractionDigits","getZ","getM","getLayout","GeometryLayout","XYZM","z","XYZ","XYM","getRenderedHtml","html","drawTrackingData","layout","formattedFromStorage","storageData","removeTrackingProperty","notReproject","unset","export","getTrackingData","geoJSON","idRequestAnimationFrame","bufferElm","segmentsUnion","mergedIndex","ls","lineString","nextLineIndex","getLastCoordinate","nls","first","getFirstCoordinate","processImportedFeatures","importedFileName","toAdd","toRemove","maybeRemove","segments","hasOwnProperty","featureToAdd","promises","ta","array","indices","sameName","saveTrack","trackName","importedIndex","processAdd","IMPORTEDTRACK","wait","alert","vectorSource","simulateTrackEnd","chartProgressClear","simulateMarker","simulateTrack","setCoords","animationFrameFraction","hasTime","toLength","utmCrs","arCoordinates","done","walkingSpeed","trackFilm","timestamp","parse","stringify","loopAtFraction","simulate_paused","getCoordinateAtM","getDoneAtM","getSelectedTrack","uiSimulate","hasElevation","chartSetProgress","_getTime","from","getCoords","to","atan2","simulate_speed","delta","d3","D3C3","headingChangehandler","evt","infoOnMap","iomStyle","overFlowY","backgroundColor","getHeading","orientationChangehandler","beta","getBeta","gamma","getGamma","constrainCenter","pulsate","circle","pulsated","elapsed","setRadius","drawCircleGeometry","elevationMarker","stopEvent","getOpacity","getElement","coordsActivate","coordsDeactivate","Parser","read","ovMap","collapsed","collapsible","className","getOverviewMap","pixelRatio_","boxOverlay_","box","boxSizing","_boxElm","ovmMap","positionDrag","newTransform","dragPoint","idxStart","idxEnd","substring","dragged","cloneNode","ACTIVE","insertAdjacentElement","bottomLeft","topRight","viewport","insertBefore","containment","removeChild","moveVector","_delta","centerPixel","newCenter","halfWidth","halfHeight","reset","load","olView","OVERVIEWBASELAYERCHANGE","oldLayer","newLayer","getCapabilitiesPromise","originalLayer","getFallbackLayer","defaultLayer","loadProjections","orderBy","projList","fovStyle","setColor","addLayer","draw3DCamera","camLayer","fov","enable","resizeEvent","createEvent","initEvent","dispatchEvent","disable","FeatureInfo","_clickTrigger","beforeRequest","NOFEATUREINFO","getElementText","esriXmlParser","dom","DOMParser","parseFromString","documentElement","tagName","fiCollections","fic","layerName","fInfos","lenj","fields","lenk","field","getUID","addLayerToService","service","path","getPath","getFeatureInfo","targetServices","auxInfo","requestPromises","requestDataArray","services","elem","getGetFeatureInfoUrl","targetService","mapLayers","request","disgregatedNames","getDisgregatedLayerNames","consoleRegister","params_","gfiURL","QUERY_LAYERS","INFO_FORMAT","FEATURE_COUNT","pixelTolerance","expUrl","requestData","requestedFormat","expandUrl","mapLayer","toolProxification","fetch","cacheHost","getAction","cache","originalUrl","action","responses","someSuccess","featureInsertionPoints","featureInfo","responseText","iFormat","gmlFormat","WMSGetFeatureInfo","isParentOrSame","na","nb","pa","pb","fakeLayers","found","lName","featureId","fakeLayer","compoundLayer","rawUrl","rawContent","rawFormat","responseError","status","ERROR","finfoPromises","defaultFeature","getMapLocale","isInside","responseCallback","INFO","BEFOREFEATUREINFO","GeometryFeatureInfo","hasEligibleLayers","hasLayers","_isSearching","_isDrawing","ret","beginDraw","geometryType","semaforo","drawCtrl","setActive","startDrawing_","olGeometryType","POLYLINE","GeometryType","LINE_STRING","POLYGON","Draw","setShowsPopup","points","sketchCoords_","sketchFeature_","addToDrawing_","_drawToken","cancelDraw","source_","WFSGetFeatureBuilder","download","arrPromises","_getServiceTitle","tree","getCRS","SRSDOWNLOAD_GEOJSON_KML","_postOrDownload","responseData","XMLDocument","responseAsJSON","xml2json","Exception","errors","WFSErrors","Indeterminate","err","exceptionCode","errorThrown","ExceptionText","_makePostCall","availableLayers","availableNames","serviceObj","getWFSCapabilitiesPromise","_numMaxFeatures","Operations","FeatureTypes","titles","LayersNotAvailable","serviceTitle","GetFeature","CountDefault","DefaultValue","QueryExpressions","AllowedValues","Value","QueryNotAvailable","Post","onlineResource","getFeatureUrl","url2","numMaxfeatures","WFSQueryBuilder","featFounds","parseInt","numberMatched","numberOfFeatures","NumMaxFeatures","NoFeatures","limit","assign","NoValidLayers","GetFeatureNotAvailable","GetCapabilities","readFeaturesFromResponse","jqXHR","ServiceException","featureToServiceDistributor","id_","getFeaturesByGeometry","filterFeature","filterLayer","olGeometry","stride","flatCoordinates","getFlatCoordinates","bestPoint","arrRequests","intersects","responseObj","errorMsg","errorType","descripcion","serviceName","msgErrorMode","CONSOLE","featuresFound","PANANIMATIONSTART","PANANIMATIONEND","fitToView","popupBoundingRect","mapBoundingRect","topLeft","bottomRight","west","north","east","popupExt","mapExt","containsExtent","overflows","newPos","newPixelPos","_oldUpdatePixelPosition","ct","easing","percent","setDragged","updatePixelPosition","_newHandleOffsetChanged","unlisten","getChangeEventType","handleOffsetChanged","containerStyle","setProperty","scale","getScale","canvas_","asString","createNativeFeature","createPoint","setData","createMarker","iconUrl","getPointIconUrl","createPolyline","createPolygon","createMultiPolyline","createMultiPolygon","createCircle","geomStr","olStyles","cloneFeature","getFont","getOffsetX","getOffsetY","ctor","ringsOrPolylines","isMultiPolygon","isPolygonOrMultiLineString","isLineString","XY","setCenterAndRadius","getPolygonLength","getLinearRings","ring","newRing","getLinearRing","flat","linearRingLength","getLineStringLength","readonly","layerStyle","MultiPoint","cssClass","iconOptions","getBackgroundUrlFromCss","layerStroke","setWidth","setImage","strokeChanged","setStroke","setLineDash","setFill","changed","toggleSelectedStyle","condition","setSelectedStyle","removeSelectedStyle","getInnerPoint","clipCoord","clipBox","MULTI_POLYGON","area","curArea","isInsideRing","xi","yi","xj","yj","rings","MULTI_LINE_STRING","curLength","centroid","clipPolyline","showPopup","currentExtent","_innerCentroid","closeButton","btn","hide","finfo","isEmptyObject","CLASSNAME","fStyle","getImageSize","_folders","getBounds","getTemplate","_balloon","getGeometryName","clearData","sketch","MEASUREPARTIAL","getMeasureData","mouseOverHandler","hoverCoordinate","pushCoordinate","clickHandler","_mdPx","squaredClickTolerance_","POINT","mousedownHandler","perimeter","formatArea","formatLength","mode","objects","_mousedownHandler","_clickHandler","_mouseMoveHandler","_mouseOverHandler","snapInteraction","measure","drawOptions","snapTolerance","shiftKeyOnly","hole","RECTANGLE","maxPoints","geometryFunction","end","newCoords","DRAWSTART","overlay_","MEASURE","DRAWEND","_projectionChangeHandler","oldProj","oldValue","sketchPoint_","sketchCoords","getMode","deflateCoordinates","getTransform","transformFn","inflateCoordinates","drawProjectionChangeHandler","snapping","snapOptions","Snap","redoStack","persistent","popCoordinate","puntos","flyingPointContained","flyingPoint","sketchLine_","undo","redo","finishDrawing","CacheBuilder","getRequestSchemas","schema","layerId","olSource","getTileGrid","matrixIds","getMatrixIds","getLayerNodeByName","tmsLimits","llen","TileMatrixSetLimits","tileMatrixLimits","rlen","origin","getOrigin","tileSize","getTileSize","unitsPerTile","tml","mId","tSize","cl","floor","cr","rt","rb","tmsLimit","MinTileCol","MaxTileCol","MinTileRow","MaxTileRow","getGetTilePattern","WMTSEncoding","RESTFUL","encodeURIComponent","createHaloStroke1","createHaloStroke2","addHaloToStyle","mainStyle","haloPart1","unshift","haloPart2","updateSelectedStyle","style_","createSelectedStyle","styleFunction_","createStyleFunction","Modify","selectInteraction","select","Select","getWrapperFeature","selected","FEATURESSELECT","ctrl","deselected","FEATURESUNSELECT","modifyInteraction","modify","FEATUREMODIFY","_onMouseMove","getSelectedFeatures","setSelectedFeatures","featureOverlay_","unselectFeatures","selectedFeatures","unselectedFeatures","olFeature","Edit","cancel","editMode","SELECT","drawInteraction","abortDrawing_","CONTROLDEACTIVATE","cancelTxt","histPoints","deleteFeatures","toGML","writeGeometryNode","XMLSerializer","serializeToString","str","pos","toGeoJSON","writeGeometry","write","MULTIPOINT","MULTIPOLYLINE","MULTIPOLYGON"],"mappings":"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","sourcesContent":["; (function (root, factory) {\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['../../lib/ol/build/ol-sitna'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('../../lib/ol/build/ol-sitna'));\r\n    } else {\r\n        root.ol = factory(root.ol);\r\n    }\r\n\r\n})(this, function (ol) {\r\n    Math.hypot = Math.hypot || function () {\r\n        var y = 0;\r\n        var length = arguments.length;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            if (arguments[i] === Infinity || arguments[i] === -Infinity) {\r\n                return Infinity;\r\n            }\r\n            y += arguments[i] * arguments[i];\r\n        }\r\n        return Math.sqrt(y);\r\n    };\r\n\r\n    // requestAnimationFrame polyfill\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\r\n            || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n\r\n    if (!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = window.setTimeout(function () { callback(currTime + timeToCall); },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n\r\n    if (!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n\r\n    // Nombres de tipos de eventos\r\n    const MOUSEMOVE = 'mousemove';\r\n    const MOUSEOVER = 'mouseover';\r\n    const RESIZE = ol.events.EventType.RESIZE;\r\n    const DRAGENTER = ol.events.EventType.DRAGENTER;\r\n    const DRAGOVER = ol.events.EventType.DRAGOVER;\r\n    const DROP = ol.events.EventType.DROP;\r\n    const CHANGE = ol.events.EventType.CHANGE;\r\n    const SINGLECLICK = ol.MapBrowserEventType.SINGLECLICK;\r\n    const POINTERMOVE = ol.MapBrowserEventType.POINTERMOVE;\r\n    const MOVEEND = ol.MapEventType.MOVEEND;\r\n    const POSTRENDER = ol.MapEventType.POSTRENDER;\r\n    const POSTCOMPOSE = ol.render.EventType.POSTCOMPOSE;\r\n    const ADDFEATURE = ol.source.VectorEventType.ADDFEATURE;\r\n    const REMOVEFEATURE = ol.source.VectorEventType.REMOVEFEATURE;\r\n    const CLEAR = ol.source.VectorEventType.CLEAR;\r\n    const TILELOADSTART = ol.source.TileEventType.TILELOADSTART;\r\n    const TILELOADEND = ol.source.TileEventType.TILELOADEND;\r\n    const TILELOADERROR = ol.source.TileEventType.TILELOADERROR;\r\n\r\n    const hitTolerance = TC.Util.detectMouse() ? 3 : 10;\r\n\r\n    var cssUrl = TC.url.ol.substr(0, TC.url.ol.lastIndexOf('/'));\r\n    cssUrl = cssUrl.substr(0, cssUrl.lastIndexOf('/') + 1) + 'css/ol.css';\r\n    //TC.loadCSS(cssUrl);\r\n\r\n\r\n    /////////////////////////// ol patches\r\n\r\n    if (!ol.format.KMLCustom) {\r\n        TC.syncLoadJS(TC.apiLocation + 'TC/ol/format/KMLCustom');\r\n    }\r\n\r\n    if (!ol.format.GPXCustom) {\r\n        TC.syncLoadJS(TC.apiLocation + 'TC/ol/format/GPXCustom');\r\n    }\r\n\r\n    // Parche para evitar el error AssertionError: Assertion failed: calculated value (1.020636810790192) ouside allowed range (0-1)\r\n    ol.View.prototype.getValueForResolutionFunction = function (opt_power) {\r\n        const power = opt_power || 2;\r\n        const maxResolution = this.maxResolution_;\r\n        const minResolution = this.minResolution_;\r\n        const max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n        return (\r\n            /**\r\n                 * @param {number} resolution Resolution.\r\n                 * @return {number} Value.\r\n             */\r\n            function (resolution) {\r\n                var value =\r\n                    (Math.log(maxResolution / resolution) / Math.log(power)) / max;\r\n                value = Math.max(Math.min(1, value), 0);\r\n                return value;\r\n            });\r\n    };\r\n\r\n    if (!TC.Util.detectMobile()) {\r\n        // Parche para situar el ancla del popup cuando tenemos zoom in/out de navegador o pantalla\r\n        ol.Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\r\n            const style = this.element.style;\r\n            const offset = this.getOffset();\r\n\r\n            const positioning = this.getPositioning();\r\n\r\n            this.setVisible(true);\r\n\r\n            var offsetX = offset[0];\r\n            var offsetY = offset[1];\r\n            if (positioning == ol.OverlayPositioning.BOTTOM_RIGHT ||\r\n                positioning == ol.OverlayPositioning.CENTER_RIGHT ||\r\n                positioning == ol.OverlayPositioning.TOP_RIGHT) {\r\n                if (this.rendered.left_ !== '') {\r\n                    this.rendered.left_ = style.left = '';\r\n                }\r\n                const right = Math.round(mapSize[0] - pixel[0] - offsetX) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.right_ != right) {\r\n                    this.rendered.right_ = style.right = right;\r\n                }\r\n            } else {\r\n                if (this.rendered.right_ !== '') {\r\n                    this.rendered.right_ = style.right = '';\r\n                }\r\n                if (positioning == ol.OverlayPositioning.BOTTOM_CENTER ||\r\n                    positioning == ol.OverlayPositioning.CENTER_CENTER ||\r\n                    positioning == ol.OverlayPositioning.TOP_CENTER) {\r\n                    offsetX -= this.element.offsetWidth / 2;\r\n                }\r\n                const left = Math.round(pixel[0] + offsetX) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.left_ != left) {\r\n                    this.rendered.left_ = style.left = left;\r\n                }\r\n            }\r\n            if (positioning == ol.OverlayPositioning.BOTTOM_LEFT ||\r\n                positioning == ol.OverlayPositioning.BOTTOM_CENTER ||\r\n                positioning == ol.OverlayPositioning.BOTTOM_RIGHT) {\r\n                if (this.rendered.top_ !== '') {\r\n                    this.rendered.top_ = style.top = '';\r\n                }\r\n                const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.bottom_ != bottom) {\r\n                    this.rendered.bottom_ = style.bottom = bottom;\r\n                }\r\n            } else {\r\n                if (this.rendered.bottom_ !== '') {\r\n                    this.rendered.bottom_ = style.bottom = '';\r\n                }\r\n                if (positioning == ol.OverlayPositioning.CENTER_LEFT ||\r\n                    positioning == ol.OverlayPositioning.CENTER_CENTER ||\r\n                    positioning == ol.OverlayPositioning.CENTER_RIGHT) {\r\n                    offsetY -= this.element.offsetHeight / 2;\r\n                }\r\n                const top = Math.round(pixel[1] + offsetY) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.top_ != top) {\r\n                    this.rendered.top_ = style.top = top;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // Modificación para cambiar el comportamiento de ol.control.OverviewMap:\r\n    // Mantener la caja del extent siempre centrada.\r\n    ol.control.OverviewMap.prototype._validateExtent_ = ol.control.OverviewMap.prototype.validateExtent_;\r\n    ol.control.OverviewMap.prototype.validateExtent_ = function () {\r\n        var self = this;\r\n        self._validateExtent_();\r\n        if (self._wrap && self._wrap.parent.options.alwaysCentered) {\r\n            self.recenter_();\r\n        }\r\n    };\r\n\r\n    // En modo 3D, cambiar la lógica de la escala para que siempre muestre área de visión.\r\n    ol.control.OverviewMap.prototype._resetExtent_ = ol.control.OverviewMap.prototype.resetExtent_;\r\n    ol.control.OverviewMap.prototype.resetExtent_ = function () {\r\n        var self = this;\r\n        self._resetExtent_.call(self);\r\n        var wrap = self._wrap;\r\n        if (wrap.is3D) {\r\n            var ovmap = self.ovmap_;\r\n            var ovview = ovmap.getView();\r\n            var extent = ovview.calculateExtent();\r\n            var feature = wrap.get3DCameraLayer().getSource().getFeatures()[0];\r\n            if (feature) {\r\n                coordinates = feature.getGeometry().getCoordinates();\r\n                var coord1 = coordinates[0][0];\r\n                var coord2 = coordinates[0][1];\r\n                if (!ol.extent.containsCoordinate(extent, coord1) || !ol.extent.containsCoordinate(extent, coord2)) {\r\n                    var buffer = Math.max(\r\n                        extent[0] - coord1[0],\r\n                        extent[1] - coord1[1],\r\n                        coord1[0] - extent[2],\r\n                        coord1[1] - extent[3],\r\n                        extent[0] - coord2[0],\r\n                        extent[1] - coord2[1],\r\n                        coord2[0] - extent[2],\r\n                        coord2[1] - extent[3]\r\n                    );\r\n                    ovview.fit(ol.extent.buffer(extent, buffer));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ol.format.GML3CRS84 = function () {\r\n        ol.format.GML3.call(this, {\r\n            srsName: 'CRS:84'\r\n        });\r\n    };\r\n    TC.inherit(ol.format.GML3CRS84, ol.format.GML3);\r\n\r\n    ol.format.GML2CRS84 = function () {\r\n        ol.format.GML2.call(this, {\r\n            srsName: 'CRS:84'\r\n        });\r\n    };\r\n    TC.inherit(ol.format.GML2CRS84, ol.format.GML2);\r\n\r\n    // Añadido el espacio de nombres de GML 3.2 al parser\r\n    const gmlNamespace = 'http://www.opengis.net/gml';\r\n    const gml32Namespace = 'http://www.opengis.net/gml/3.2';\r\n    ol.format.GMLBase.prototype.MULTIPOINT_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTIPOINT_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.MULTILINESTRING_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTILINESTRING_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.MULTIPOLYGON_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTIPOLYGON_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.POINTMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.POINTMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.LINESTRINGMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.LINESTRINGMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.POLYGONMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.POLYGONMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.RING_PARSERS[gml32Namespace] = ol.format.GMLBase.prototype.RING_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS[gml32Namespace] = ol.format.GML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.FLAT_LINEAR_RINGS_PARSERS[gml32Namespace] = ol.format.GML3.prototype.FLAT_LINEAR_RINGS_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.GEOMETRY_PARSERS[gml32Namespace] = ol.format.GML3.prototype.GEOMETRY_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.MULTICURVE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.MULTICURVE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.MULTISURFACE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.MULTISURFACE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.CURVEMEMBER_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.CURVEMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SURFACEMEMBER_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SURFACEMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SURFACE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SURFACE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.CURVE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.CURVE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.ENVELOPE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.ENVELOPE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.PATCHES_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.PATCHES_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SEGMENTS_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SEGMENTS_PARSERS_[gmlNamespace];\r\n\r\n    // Bug de OpenLayers hasta 5.3.0 como mínimo:\r\n    // El parser de GML2 no lee las siguientes features del GML si tienen un featureType distinto del primero.\r\n    // Esto pasa porque genera el objeto de featureTypes con la primera y en las siguientes iteraciones si el objeto existe no se regenera.\r\n    // Entre comentarios /* */ se elimina lo que sobra.\r\n    //\r\n    // Más: se añade para FeatureCollection un parser por cada namespaceURI del nodo. \r\n    // Esto es porque QGIS genera GML cuyo nodo FeatureCollection tiene namespace = http://ogr.maptools.org/.\r\n    ol.format.GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\r\n        const localName = node.localName;\r\n        let features = null;\r\n        if (localName == 'FeatureCollection') {\r\n            // Ñapa para leer GML de https://catastro.navarra.es/ref_catastral/gml.ashx?C=217&PO=5&PA=626\r\n            // y demás GMLs obtenidos de un WFS de GeoServer.\r\n            var gmlnsCollectionParser = this.FEATURE_COLLECTION_PARSERS[ol.format.GMLBase.prototype.namespace];\r\n            if (!gmlnsCollectionParser['member']) {\r\n                gmlnsCollectionParser['member'] = ol.xml.makeArrayPusher(\r\n                    ol.format.GMLBase.prototype.readFeaturesInternal);\r\n            };\r\n            //////\r\n            // Sustituimos la siguienta instrucción por la siguiente condición :\r\n            //features = pushParseAndPop([],\r\n            //    this.FEATURE_COLLECTION_PARSERS, node,\r\n            //    objectStack, this);\r\n            if (node.namespaceURI === 'http://www.opengis.net/wfs') {\r\n                features = ol.xml.pushParseAndPop([],\r\n                    this.FEATURE_COLLECTION_PARSERS, node,\r\n                    objectStack, this);\r\n            } else {\r\n                this.FEATURE_COLLECTION_PARSERS[node.namespaceURI] =\r\n                    this.FEATURE_COLLECTION_PARSERS[node.namespaceURI] || this.FEATURE_COLLECTION_PARSERS[ol.format.GMLBase.prototype.namespace];\r\n                features = ol.xml.pushParseAndPop(/*null*/[], // Cambiado null por [] porque si no, no crea el array de features\r\n                    this.FEATURE_COLLECTION_PARSERS, node,\r\n                    objectStack, this);\r\n            }\r\n            //////\r\n        } else if (localName == 'featureMembers' || localName == 'featureMember' || localName == 'member') {\r\n            const context = objectStack[0];\r\n            let featureType = context['featureType'];\r\n            let featureNS = context['featureNS'];\r\n            const prefix = 'p';\r\n            const defaultPrefix = 'p0';\r\n            if (/*!featureType && */node.childNodes) {\r\n                featureType = [], featureNS = {};\r\n                for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\r\n                    const child = node.childNodes[i];\r\n                    if (child.nodeType === 1) {\r\n                        const ft = child.nodeName.split(':').pop();\r\n                        if (featureType.indexOf(ft) === -1) {\r\n                            let key = '';\r\n                            let count = 0;\r\n                            const uri = child.namespaceURI;\r\n                            for (const candidate in featureNS) {\r\n                                if (featureNS[candidate] === uri) {\r\n                                    key = candidate;\r\n                                    break;\r\n                                }\r\n                                ++count;\r\n                            }\r\n                            if (!key) {\r\n                                key = prefix + count;\r\n                                featureNS[key] = uri;\r\n                            }\r\n                            featureType.push(key + ':' + ft);\r\n                        }\r\n                    }\r\n                }\r\n                if (localName != 'featureMember') {\r\n                    // recheck featureType for each featureMember\r\n                    context['featureType'] = featureType;\r\n                    context['featureNS'] = featureNS;\r\n                }\r\n            }\r\n            if (typeof featureNS === 'string') {\r\n                const ns = featureNS;\r\n                featureNS = {};\r\n                featureNS[defaultPrefix] = ns;\r\n            }\r\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\r\n            const parsersNS = {};\r\n            const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\r\n            for (const p in featureNS) {\r\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n                const parsers = {};\r\n                for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\r\n                    const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\r\n                        defaultPrefix : featureTypes[i].split(':')[0];\r\n                    if (featurePrefix === p) {\r\n                        parsers[featureTypes[i].split(':').pop()] =\r\n                            (localName == 'featureMembers') ?\r\n                                ol.xml.makeArrayPusher(this.readFeatureElement, this) :\r\n                                ol.xml.makeReplacer(this.readFeatureElement, this);\r\n                    }\r\n                }\r\n                parsersNS[featureNS[p]] = parsers;\r\n            }\r\n            if (localName == 'featureMember') {\r\n                features = ol.xml.pushParseAndPop(undefined, parsersNS, node, objectStack);\r\n            } else {\r\n                features = ol.xml.pushParseAndPop([], parsersNS, node, objectStack);\r\n            }\r\n        }\r\n        if (features === null) {\r\n            features = [];\r\n        }\r\n        return features;\r\n    };\r\n\r\n    ol.proj.proj4.register(proj4);\r\n    // OpenLayers usa para las proyecciones geográficas un valor ol.proj.METERS_PER_UNIT[ol.proj.Units.DEGREES], calculado con una esfera, salvo\r\n    // EPSG:4326, en la que usa ol.proj.EPSG4326.METERS_PER_UNIT, calculado con el geoide. Esto hace que las proyecciones en EPSG:4258 salgan desplazadas,\r\n    // pese a que para todos los efectos son iguales a las EPSG:4326. Para evitar eso, introducimos en las 4258 el valor ol.proj.EPSG4326.METERS_PER_UNIT.\r\n    ol.proj.get('EPSG:4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n    ol.proj.get('urn:ogc:def:crs:EPSG::4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n    ol.proj.get('http://www.opengis.net/gml/srs/epsg.xml#4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n\r\n    // Reescribimos la obtención de proyección para que soporte códigos tipo EPSG:X, urn:ogc:def:crs:EPSG::X y http://www.opengis.net/gml/srs/epsg.xml#X\r\n    ol.proj.oldGet = ol.proj.get;\r\n    ol.proj.get = function (projectionLike) {\r\n        if (typeof projectionLike === 'string') {\r\n            projectionLike = projectionLike.trim();\r\n            TC.loadProjDef({ crs: projectionLike, sync: true });\r\n        }\r\n        return ol.proj.oldGet.call(this, projectionLike);\r\n    };\r\n\r\n    // Reescritura de código para transformar las geometrías de getFeatureInfo que están en un CRS distinto\r\n    ol.format.GMLBase.prototype.readGeometryElement = function (node, objectStack) {\r\n        var context = /** @type {Object} */ (objectStack[0]);\r\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\r\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\r\n        /** @type {ol.geom.Geometry} */\r\n\r\n        // Parche para poder leer coordenadas en EPSG:4326 con orden incorrecto (las crea QGIS, por ejemplo)\r\n        if (this instanceof ol.format.GML2CRS84 || this instanceof ol.format.GML3CRS84) {\r\n            if (context.srsName !== 'EPSG:4326' || !context.srsName) {\r\n                throw new Error(\"Conflicto de CRS\");\r\n            }\r\n        }\r\n        if (!context.srsName) {\r\n            context.srsName = this.srsName;\r\n        }\r\n        context.dataProjection = ol.proj.get(context.srsName);\r\n        const geometry = ol.xml.pushParseAndPop(null,\r\n            this.GEOMETRY_PARSERS, node, objectStack, this);\r\n        if (geometry) {\r\n            return /** @type {ol.geom.Geometry} */ (\r\n                ol.format.Feature.transformWithOptions(geometry, false, context));\r\n        } else {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n    const ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\r\n\r\n    // Reescritura de código para hacerlo compatible con GML generado por inspire:\r\n    // No se puede considerar geometría cualquier cosa que tenga elementos anidados.\r\n    ol.format.GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\r\n        let geometryName;\r\n        const values = {};\r\n        for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            let value;\r\n            const localName = n.localName;\r\n            // first, check if it is simple attribute\r\n            if (n.childNodes.length === 0\r\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\r\n                value = ol.xml.getAllTextContent(n, false);\r\n                if (ONLY_WHITESPACE_RE.test(value)) {\r\n                    value = undefined;\r\n                }\r\n            } else {\r\n                if (asFeature) {\r\n                    //if feature, try it as a geometry\r\n                    value = this.readGeometryElement(n, objectStack);\r\n                }\r\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\r\n                    value = this.readFeatureElementInternal(n, objectStack, false);\r\n                } else if (localName !== 'boundedBy' && localName !== 'referencePoint') {\r\n                    // boundedBy is an extent and must not be considered as a geometry\r\n                    // flacunza: Tampoco referencePoint\r\n                    geometryName = localName;\r\n                }\r\n            }\r\n\r\n            if (values[localName]) {\r\n                if (!(values[localName] instanceof Array)) {\r\n                    values[localName] = [values[localName]];\r\n                }\r\n                values[localName].push(value);\r\n            } else {\r\n                values[localName] = value;\r\n            }\r\n\r\n            const len = n.attributes.length;\r\n            if (len > 0) {\r\n                values[localName] = { _content_: values[localName] };\r\n                for (let i = 0; i < len; i++) {\r\n                    const attName = n.attributes[i].name;\r\n                    values[localName][attName] = n.attributes[i].value;\r\n                }\r\n            }\r\n        }\r\n        if (!asFeature) {\r\n            return values;\r\n        } else {\r\n            const feature = new ol.Feature(values);\r\n            if (geometryName) {\r\n                feature.setGeometryName(geometryName);\r\n            }\r\n            const fid = node.getAttribute('fid') ||\r\n                node.getAttributeNS(this.namespace, 'id');\r\n            if (fid) {\r\n                feature.setId(fid);\r\n            }\r\n            return feature;\r\n        }\r\n    };\r\n\r\n    //////////////////////// end ol patches\r\n\r\n    const getRGBA = function (color, opacity) {\r\n        var result;\r\n        if (color) {\r\n            result = ol.color.asArray(color);\r\n            result = result.slice();\r\n            if (opacity !== undefined) {\r\n                result[3] = opacity;\r\n            }\r\n        }\r\n        else {\r\n            result = [0, 0, 0, 1];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Obtiene el objeto de opciones de una vista que restringe los niveles de zoom activos sobre el mapa dependiendo de las opciones definidas sobre\r\n     * el mapa base activo.\r\n     */\r\n    var getResolutionOptions = function (mapWrap, layer) {\r\n        var view = mapWrap.map.getView();\r\n        var prevRes = view.getResolution();\r\n\r\n        var pms = {\r\n            projection: view.getProjection(),\r\n            center: view.getCenter(),\r\n            resolution: prevRes,\r\n            enableRotation: false\r\n        };\r\n\r\n        if (mapWrap.parent.maxExtent) {\r\n            pms.extent = mapWrap.parent.maxExtent;\r\n        }\r\n\r\n        // GLS 06/03/2019 Corregimos bug 24832, si el mapa de fondo es el mapa en blanco, asignamos las resoluciones del mapa de fondo actual\r\n        var layerForResolutions = layer;\r\n        if (layer.type === TC.Consts.layerType.VECTOR && mapWrap.parent.getBaseLayer()) {\r\n            layerForResolutions = mapWrap.parent.getBaseLayer();\r\n        }\r\n\r\n        var res = layerForResolutions.getResolutions ? layerForResolutions.getResolutions() : [];\r\n        var maxRes;\r\n        var minRes;\r\n\r\n        if (res && res.length) {\r\n            maxRes = layerForResolutions.maxResolution || res[0];\r\n            minRes = layerForResolutions.minResolution || res[res.length - 1];\r\n\r\n            var minResIx = res.indexOf(minRes);\r\n            var maxResIx = res.indexOf(maxRes);\r\n\r\n            pms.resolutions = res.slice(maxResIx, minResIx + 1);\r\n        }\r\n        else {\r\n            maxRes = layerForResolutions.maxResolution;\r\n            minRes = layerForResolutions.minResolution;\r\n        }\r\n        if (minRes) {\r\n            pms.minResolution = minRes;\r\n            if (prevRes < minRes) {\r\n                pms.resolution = minRes;\r\n            }\r\n        }\r\n        if (maxRes) {\r\n            pms.maxResolution = maxRes;\r\n            if (prevRes > maxRes) {\r\n                pms.resolution = maxRes;\r\n            }\r\n        }\r\n\r\n        return pms;\r\n    };\r\n\r\n\r\n    TC.wrap.Map.prototype.setMap = function () {\r\n        var self = this;\r\n        var center = [\r\n            (self.parent.initialExtent[0] + self.parent.initialExtent[2]) / 2,\r\n            (self.parent.initialExtent[1] + self.parent.initialExtent[3]) / 2\r\n        ];\r\n\r\n        var proj4Obj = proj4(self.parent.crs);\r\n        var addEquivalentProjections = function () {\r\n            // Añadimos proyecciones equivalentes y transformaciones necesarias.\r\n            var crsCode = self.parent.crs.substr(self.parent.crs.lastIndexOf(':') + 1);\r\n\r\n            var projOptions = {\r\n                units: proj4Obj.oProj.units,\r\n                global: true\r\n            };\r\n\r\n            var equivalentProjections = [];\r\n            if (crsCode !== '4326') { // Este código ya está metido, no lo machacamos\r\n                projOptions.code = 'EPSG:' + crsCode;\r\n                equivalentProjections.push(new ol.proj.Projection(projOptions));\r\n                projOptions.code = 'urn:ogc:def:crs:EPSG::' + crsCode;\r\n                equivalentProjections.push(new ol.proj.Projection(projOptions));\r\n\r\n                ol.proj.addEquivalentProjections(equivalentProjections);\r\n            }\r\n            //var doTransform = function (fn, input, opt_output, opt_dimension) {\r\n            //    var result = [];\r\n            //    var dimension = opt_dimension || 2;\r\n            //    for (var i = 0; i < input.length; i += dimension) {\r\n            //        var transformed = Array.prototype.slice.call(fn(input.slice(i, i + dimension)));\r\n            //        if (dimension === 3 || dimension === 4) {\r\n            //            transformed = transformed.slice(0, 2).concat(input.slice(i + 2, (i + 2) + (dimension - 2)));\r\n            //        }\r\n\r\n            //        result = result.concat(transformed);\r\n            //    }\r\n            //    if (Array.isArray(opt_output)) {\r\n            //        opt_output.length = 0;\r\n            //        for (var i = 0; i < result.length; i++) {\r\n            //            opt_output[i] = result[i];\r\n            //        }\r\n            //        result = opt_output;\r\n            //    }\r\n            //    return result;\r\n            //};\r\n            //var fromEPSG4326 = function (input, opt_output, opt_dimension) {\r\n            //    return doTransform(proj4Obj.forward, input, opt_output, opt_dimension);\r\n            //};\r\n            //var toEPSG4326 = function (input, opt_output, opt_dimension) {\r\n            //    return doTransform(proj4Obj.inverse, input, opt_output, opt_dimension);\r\n            //};\r\n\r\n            ol.proj.proj4.register(proj4);\r\n\r\n            //ol.proj.addEquivalentTransforms(\r\n            //    ol.proj.EPSG4326.PROJECTIONS,\r\n            //    equivalentProjections,\r\n            //    fromEPSG4326,\r\n            //    toEPSG4326);\r\n        };\r\n\r\n        addEquivalentProjections();\r\n\r\n        var projOptions = {\r\n            code: self.parent.crs,\r\n            units: proj4Obj.oProj.units\r\n        };\r\n        if (self.parent.crs === 'EPSG:4326') {\r\n            projOptions.axisOrientation = 'neu';\r\n        }\r\n        var projection = new ol.proj.Projection(projOptions);\r\n\r\n        var interactions = ol.interaction.defaults({ constrainResolution: true });\r\n\r\n        var viewOptions = {\r\n            projection: projection,\r\n            center: center,\r\n            enableRotation: false\r\n        };\r\n        if (self.parent.maxExtent) {\r\n            var maxExtent = self.parent.maxExtent;\r\n            viewOptions.extent = maxExtent;\r\n            var rect = self.parent.div.getBoundingClientRect();\r\n            var ratio = rect.width / rect.height;\r\n            var dx = maxExtent[2] - maxExtent[0];\r\n            var dy = maxExtent[3] - maxExtent[1];\r\n            if (rect.width / rect.height > dx / dy) {\r\n                viewOptions.resolution = dx / rect.width;\r\n            }\r\n            else {\r\n                viewOptions.resolution = dy / rect.height;\r\n            }\r\n        }\r\n        else {\r\n            viewOptions.zoom = 2;\r\n        }\r\n\r\n        self.map = new ol.Map({\r\n            target: self.parent.div,\r\n            view: new ol.View(viewOptions),\r\n            controls: [],\r\n            interactions: interactions,\r\n            pixelRatio: 1 /* 08/02/2019 GLS: \r\n            Establecemos el pixelRatio siempre a uno, porque OL sólo atiende al valor al principio, \r\n            si después se hace zoom in/out del navegador, OL no atiende el cambio lo que provoca que el mapa se vea borroso,\r\n            click se sitúa mal, popup se sitúa entre otros efectos.\r\n            Lo gestionamos nosotros hasta que lo soporten del todo. Relacionado con las tareas/bugs:\r\n                Bug 25976:Mapa situación en blanco\r\n                Bug 25954:Canvas en blanco con zoom mayor al 100%\r\n                Bug 23855:Mapa de situación se muestra en blanco\r\n            */\r\n        });\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            // Parche para corregir https://github.com/openlayers/openlayers/issues/2904\r\n            // saben que tienen un bug cuando se trabaja sobre un mapa con zoom\r\n            self.map.getEventPixel = function (event) {\r\n                var viewportPosition = this.viewport_.getBoundingClientRect();\r\n                var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\r\n                eventPosition = eventPosition.clientX ? eventPosition : (eventPosition.pointerEvent ? eventPosition.pointerEvent : eventPosition);\r\n                return [\r\n                    (eventPosition.clientX - viewportPosition.left) * window.devicePixelRatio,\r\n                    (eventPosition.clientY - viewportPosition.top) * window.devicePixelRatio\r\n                ];\r\n            };\r\n        }\r\n\r\n        self.map._wrap = self;\r\n        self._promise = Promise.resolve(self.map);\r\n\r\n        // mantenemos el ancho y alto del canvas en números enteros\r\n        self.manageSize.call(self.map);\r\n\r\n        // Para evitar estiramientos en canvas\r\n        var updateSize = function () {\r\n            self.map.updateSize();\r\n        };\r\n        self.parent.div.addEventListener(RESIZE, updateSize);\r\n        self.parent.one(TC.Consts.event.MAPLOAD, updateSize);\r\n\r\n        self.map.on(SINGLECLICK, function (e) {\r\n\r\n            if (self.parent.view === TC.Consts.view.PRINTING) {\r\n                return;\r\n            }\r\n\r\n            self.parent.workLayers.forEach(function (wl) {\r\n                delete wl._noFeatureClicked;\r\n            });\r\n            var featuresInLayers = self.parent.workLayers.map(function () {\r\n                return false;\r\n            });\r\n            self.map.forEachFeatureAtPixel(e.pixel,\r\n                function (feature, layer) {\r\n                    if (feature._wrap && feature._wrap.parent.showsPopup) {\r\n                        for (var i = 0; i < self.parent.workLayers.length; i++) {\r\n                            var wl = self.parent.workLayers[i];\r\n                            if (wl.wrap.layer === layer) {\r\n                                featuresInLayers[i] = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        self.parent.trigger(TC.Consts.event.FEATURECLICK, { feature: feature._wrap.parent });\r\n                        return feature;\r\n                    }\r\n                },\r\n                {\r\n                    hitTolerance: hitTolerance\r\n                });\r\n            for (var i = 0; i < featuresInLayers.length; i++) {\r\n                if (!featuresInLayers[i]) {\r\n                    self.parent.trigger(TC.Consts.event.NOFEATURECLICK, { layer: self.parent.workLayers[i] });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // GLS: 13/02/2019 cambiamos el orden de las suscripciones a eventos de cambio de resolución y moveend\r\n        // para gestionar el borrado del estado inicial. Si no lo hacemos el cambio al extent inicial se registra como evento de usuario\r\n        // porque la carga inicial del mapa con promesas nativas es más rápido que antes.\r\n        // Bug:26001 Borrar estado inicial al entrar\r\n        const addMoveEndListener = function () {\r\n            self.map.on(MOVEEND, function () {\r\n                self.parent.trigger(TC.Consts.event.ZOOM);\r\n            });\r\n        };\r\n        var olView = self.map.getView();\r\n        olView.on('change:resolution', function () {\r\n            if (!self.map.hasListener(MOVEEND)) {\r\n                self.map.once(MOVEEND, function () {\r\n                    addMoveEndListener();\r\n                });\r\n            }\r\n\r\n            self.parent.trigger(TC.Consts.event.BEFOREZOOM);\r\n        }, self.parent);\r\n\r\n        const onChangeView = function () {\r\n            if (!self.map.hasListener(MOVEEND)) {\r\n                self.map.un('change:view', onChangeView);\r\n                addMoveEndListener();\r\n            }\r\n        };\r\n        self.map.on('change:view', onChangeView);\r\n\r\n        /**\r\n         * Restringe los niveles de zoom activos sobre el mapa dependiendo de las opciones definidas sobre\r\n         * el mapa base activo.\r\n         */\r\n        var limitZoomLevels = function (layer) {\r\n            var prevRes = self.map.getView().getResolution();\r\n            var prevZoom = self.map.getView().getZoom();\r\n\r\n            var pms = getResolutionOptions(self, layer);\r\n\r\n            var view = new ol.View(pms);\r\n            self.map.setView(view);\r\n            self.map.render();\r\n        };\r\n\r\n        self.parent.on(TC.Consts.event.BASELAYERCHANGE, function (e) {\r\n            // Solo se limitan las resoluciones cuando estamos en un CRS por defecto, donde no se repixelan teselas\r\n            if (self.parent.crs === self.parent.options.crs && !self.parent.on3DView && e.layer.type !== TC.Consts.layerType.VECTOR) {\r\n                limitZoomLevels(e.layer);\r\n            }\r\n        });\r\n        self.parent.on(TC.Consts.event.MAPLOAD, function (e) {\r\n            limitZoomLevels(self.parent.getBaseLayer());\r\n        });\r\n\r\n        const olMapViewport = self.map.getViewport();\r\n\r\n        olMapViewport.addEventListener(TC.Consts.event.MOUSEMOVE, function (e) {\r\n            var mapTarget = self.map.getTarget();\r\n            var hit = false;\r\n            var feature;\r\n\r\n            if (!self.parent.activeControl || !self.parent.activeControl.isExclusive()) {\r\n\r\n                if (self.parent.view === TC.Consts.view.PRINTING) {\r\n                    return;\r\n                }\r\n\r\n                var pixel = self.map.getEventPixel(e);\r\n                hit = self.map.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                    var result = true;\r\n                    if (feature._wrap && !feature._wrap.parent.showsPopup && !feature._wrap.parent.options.selectable) {\r\n                        result = false;\r\n                    }\r\n\r\n                    if (result && feature._wrap) {\r\n                        self.parent.trigger(TC.Consts.event.FEATUREOVER, {\r\n                            feature: feature._wrap.parent\r\n                        });\r\n                    }\r\n\r\n                    return result;\r\n                }, { hitTolerance: hitTolerance });\r\n            }\r\n\r\n            if (hit) {\r\n                mapTarget.style.cursor = 'pointer';\r\n            } else {\r\n                mapTarget.style.cursor = '';\r\n                //self.parent.trigger(TC.Consts.event.FEATUREOUT);\r\n            }\r\n        });\r\n    };\r\n\r\n    var getMetersPerUnit = function (proj, extentInDegrees) {\r\n        var units = proj.getUnits();\r\n        if (!units || units === ol.proj.Units.DEGREES) {\r\n            return TC.Util.getMetersPerDegree(extentInDegrees);\r\n        }\r\n        return ol.proj.METERS_PER_UNIT[units];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getMetersPerUnit = function () {\r\n        var self = this;\r\n        return getMetersPerUnit(ol.proj.get(self.parent.crs), self.getExtent());\r\n    };\r\n\r\n    var getUnitRatio = function (options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var defaultCrs = self.parent.options.crs || TC.Cfg.crs;\r\n        var defaultProj = ol.proj.get(defaultCrs);\r\n        var newProj = ol.proj.get(options.crs);\r\n        return getMetersPerUnit(newProj, options.extentInDegrees) / getMetersPerUnit(defaultProj, options.extentInDegrees);\r\n    };\r\n\r\n    var normalizeProjection = function (options) {\r\n        var result;\r\n        if (options.axisOrientation) {\r\n            result = new ol.proj.Projection({\r\n                code: options.crs,\r\n                axisOrientation: options.axisOrientation\r\n            });\r\n        }\r\n        else {\r\n            result = ol.proj.get(options.crs);            \r\n        }\r\n        if (!result.getUnits()) {\r\n            result.units_ = ol.proj.Units.DEGREES;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};        \r\n        const baseLayer = options.baseLayer || self.parent.baseLayer;\r\n        var extent;\r\n        if (options.extent) {\r\n            extent = options.extent;\r\n        }\r\n        else {\r\n            extent = ol.proj.transformExtent(self.getExtent(), self.parent.crs, options.crs);\r\n        }\r\n        const extentInDegrees = ol.proj.transformExtent(extent, options.crs, 'EPSG:4326');\r\n        const unitRatio = getUnitRatio.call(self, {\r\n            crs: options.crs,\r\n            extentInDegrees: extentInDegrees\r\n        });\r\n        const projection = normalizeProjection(options);\r\n        const oldView = self.map.getView();\r\n        const viewOptions = {\r\n            projection: projection,\r\n            enableRotation: false\r\n        };\r\n        const resolutions = baseLayer.getResolutions();\r\n\r\n        if (resolutions && resolutions.length) {\r\n            viewOptions.resolutions = resolutions;\r\n        }\r\n        else {            \r\n            viewOptions.minZoom = oldView.getMinZoom();\r\n            viewOptions.maxZoom = oldView.getMaxZoom();\r\n            const minResolution = baseLayer.wrap.layer.getMinResolution();\r\n            const maxResolution = baseLayer.wrap.layer.getMaxResolution();\r\n            var transformFactor = 1;\r\n            if (minResolution === 0 || maxResolution === Number.POSITIVE_INFINITY) {\r\n                const oldUnitRatio = getUnitRatio.call(self, {\r\n                    crs: self.parent.crs,\r\n                    extentInDegrees: extentInDegrees\r\n                });\r\n                transformFactor = oldUnitRatio / unitRatio;\r\n            }\r\n            if (minResolution === 0) {\r\n                viewOptions.minResolution = oldView.getMinResolution() * transformFactor;\r\n            }\r\n            else {\r\n                viewOptions.minResolution = minResolution;\r\n            }\r\n            if (maxResolution === Number.POSITIVE_INFINITY) {\r\n                viewOptions.maxResolution = oldView.getMaxResolution() * transformFactor;\r\n            }\r\n            else {\r\n                viewOptions.maxResolution = maxResolution;\r\n            }\r\n        }\r\n\r\n        // GLS: transformamos también el centro     \r\n        viewOptions.center = ol.proj.transform(self.getCenter(), self.parent.crs, options.crs);\r\n\r\n        var newView = new ol.View(viewOptions);\r\n        self.map.setView(newView);\r\n        self.parent.initialExtent = unitRatio !== 1 ? ol.proj.transformExtent(self.parent.initialExtent, self.parent.crs, options.crs) : self.parent.options.initialExtent;\r\n        if (self.parent.options.maxExtent) {\r\n            self.parent.options.maxExtent = self.parent.maxExtent = unitRatio !== 1 ? ol.proj.transformExtent(self.parent.maxExtent, self.parent.crs, options.crs) : self.parent.options.maxExtent;\r\n        }\r\n        newView.fit(extent, { nearest: true });\r\n    };\r\n\r\n    /*\r\n     *  insertLayer: inserts OpenLayers layer at index\r\n     *  Parameters: OpenLayers.Layer, number\r\n     */\r\n    TC.wrap.Map.prototype.insertLayer = function (olLayer, idx) {\r\n        var self = this;\r\n        var layers = self.map.getLayers();\r\n        var alreadyExists = false;\r\n        for (var i = 0; i < layers.getLength(); i++) {\r\n            if (layers.item(i) === olLayer) {\r\n                alreadyExists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (alreadyExists) {\r\n            layers.remove(olLayer);\r\n            layers.insertAt(idx, olLayer);\r\n        }\r\n        else {\r\n            if (idx < 0) {\r\n                layers.push(olLayer);\r\n            }\r\n            else {\r\n                layers.insertAt(idx, olLayer);\r\n            }\r\n            // Solo se limitan las resoluciones cuando estamos en un CRS por defecto, donde no se repixelan teselas\r\n            var view = self.map.getView();\r\n            if (self.parent.crs === self.parent.options.crs) {\r\n                if (olLayer instanceof ol.layer.Tile) {\r\n                    var resolutions = olLayer.getSource().getResolutions();\r\n                    view.maxResolution_ = resolutions[0];\r\n                    view.minResolution_ = resolutions[resolutions.length - 1];\r\n                }\r\n            }\r\n            else {\r\n                // Cambiamos los límites de resolución de la capa a los de la vista. Esto lo hacemos porque su resolución está en otro CRS.\r\n                if (olLayer instanceof ol.layer.Tile) {\r\n                    olLayer.setMaxResolution(view.getMaxResolution());\r\n                    olLayer.setMinResolution(view.getMinResolution());\r\n                }\r\n            }\r\n\r\n            var wrap = olLayer._wrap;\r\n            var loadingTileCount = 0;\r\n\r\n            var beforeTileLoadHandler = function (e) {\r\n                wrap.parent.state = TC.Layer.state.LOADING;\r\n                if (loadingTileCount <= 0) {\r\n                    loadingTileCount = 0;\r\n                    self.parent.trigger(TC.Consts.event.BEFORELAYERUPDATE, { layer: wrap.parent });\r\n                }\r\n                olLayer._loadingTileCount = olLayer._loadingTileCount + 1;\r\n            };\r\n            if (wrap.parent.state === TC.Layer.state.LOADING && wrap.parent.isRaster()) {\r\n                beforeTileLoadHandler();\r\n            }\r\n            wrap.$events.on(TC.Consts.event.BEFORETILELOAD, beforeTileLoadHandler);\r\n\r\n            wrap.$events.on(TC.Consts.event.TILELOAD, function (e) {\r\n                loadingTileCount = loadingTileCount - 1;\r\n                if (loadingTileCount <= 0) {\r\n                    loadingTileCount = 0;\r\n                    wrap.parent.state = TC.Layer.state.IDLE;\r\n                    self.parent.trigger(TC.Consts.event.LAYERUPDATE, { layer: wrap.parent });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.removeLayer = function (olLayer) {\r\n        this.map.removeLayer(olLayer);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerCount = function () {\r\n        return this.map.getLayerGroup().getLayers().getLength();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.indexOfFirstVector = function () {\r\n        var result = -1;\r\n        this.map.getLayerGroup().getLayers().forEach(function (l, i) {\r\n            if (l instanceof ol.layer.Vector && result === -1) {\r\n                result = i;\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerIndex = function (olLayer) {\r\n        var result = -1;\r\n        this.map.getLayerGroup().getLayers().forEach(function (elm, idx) {\r\n            if (elm === olLayer) {\r\n                result = idx;\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setLayerIndex = function (olLayer, index) {\r\n        var layers = this.map.getLayers();\r\n        var list = layers.getArray();\r\n        var ix = list.indexOf(olLayer);\r\n\r\n        if (ix > -1 && ix != index) {\r\n            this.map.removeLayer(olLayer);\r\n            this.insertLayer(olLayer, index);\r\n            //layers.setAt(index, olLayer);\r\n        }\r\n        else {\r\n            //no está el layer, así que no hago nada\r\n        }\r\n\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setBaseLayer = function (olLayer) {\r\n        var self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var setLayer = function (curBl) {\r\n                // GLS: si se llega después de una animación el valor de self.parent.getBaseLayer() ya es el definitivo y no el actual lo que provoca efectos indeseados. \r\n                // ir a línea 1313: paso como parámetro el baseLayer actual en el caso de animación.\r\n                var curBl = curBl || self.parent.getBaseLayer();\r\n                if (curBl) {\r\n                    self.map.removeLayer(curBl.wrap.layer);\r\n                    if (olLayer instanceof ol.layer.Image) { // Si es imagen no teselada\r\n                        olLayer._wrap.setProjection({\r\n                            crs: self.parent.crs\r\n                        });\r\n                    }\r\n\r\n                    if (olLayer._wrap.parent.type === TC.Consts.layerType.WMTS) {\r\n                        var layerProjectionOptions = { crs: self.parent.crs, oldCrs: olLayer.getSource().getProjection().getCode() };\r\n\r\n                        if (layerProjectionOptions.oldCrs !== layerProjectionOptions.crs) {\r\n                            olLayer._wrap.parent.setProjection(layerProjectionOptions);\r\n                        }\r\n                    }\r\n\r\n                    //if (olLayer instanceof ol.layer.Tile) { // Si es imagen teselada\r\n                    //    const view = self.map.getView();\r\n                    //    const resolutions = olLayer.getSource().getResolutions();\r\n                    //    if (resolutions) {\r\n                    //        view.options_.resolutions = resolutions;\r\n                    //        view.applyOptions_(view.options_);\r\n                    //    }\r\n                    //}\r\n                }\r\n                self.insertLayer(olLayer, 0);\r\n                self.map.getControls().forEach(function (ctl) {\r\n                    if (ctl instanceof ol.control.ZoomSlider) {\r\n                        ctl.initSlider_();\r\n                    }\r\n                });\r\n                resolve();\r\n            };\r\n\r\n            // Toda esta lógica antes de llamar a setLayer() es para hacer un zoom a la nueva resolución\r\n            // cuando la nueva capa no llega a la resolución actual\r\n            var viewOptions = getResolutionOptions(self, olLayer._wrap.parent);\r\n            var view = self.map.getView();\r\n            var currentResolution = view.getResolution();\r\n            if (viewOptions.resolutions) {\r\n                //buscamos la nueva resolución: o una que sea similar a la actual dentro de los márgenes admitidos, o la inmediata superior\r\n                var newRes = viewOptions.resolutions\r\n                    .sort(function (a, b) { return a - b })\r\n                    .reduce(function (prev, elm) {\r\n                        if (prev === 0 &&\r\n                            (elm > currentResolution || Math.abs(1 - (currentResolution / elm)) < self.parent.options.maxResolutionError)) {\r\n                            return elm;\r\n                        }\r\n                        return prev;\r\n                    }, 0);\r\n                if (newRes !== currentResolution) {\r\n                    if (self.parent.isLoaded) {\r\n                        view.animate({ resolution: newRes, duration: TC.Consts.ZOOM_ANIMATION_DURATION }, setLayer.bind(self, self.parent.getBaseLayer()));\r\n                    }\r\n                    else { // Primera carga, no animamos\r\n                        view.setResolution(newRes);\r\n                        setLayer();\r\n                    }\r\n                }\r\n                else {\r\n                    setLayer();\r\n                }\r\n            }\r\n            else {\r\n                setLayer();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setExtent = function (extent, options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const applyExtent = function (view, mapSize, resolve, reject) {\r\n            var res = view.getResolutionForExtent(extent, mapSize);\r\n            // URI: Esta logica está fusilada de la función fit de un objeto view de OL3\r\n            if (view.constrainResolution) {\r\n                var constrainedResolution = view.constrainResolution(res, 0, 0);\r\n                if (constrainedResolution < res) {\r\n                    if (constrainedResolution / res < TC.Consts.EXTENT_TOLERANCE) {\r\n                        constrainedResolution = view.constrainResolution(\r\n                            constrainedResolution, -1, 0);\r\n                    }\r\n                }\r\n                res = constrainedResolution;\r\n            }\r\n\r\n            // flacunza: No animamos si la duración va a ser 0, porque a veces el zoom no se completa\r\n            // GLS: antes de resolver la promesa validamos si existe animación\r\n            // URI: si la animacion no existe ponemos duracion 0\r\n            // flacunza: en caso de que animate=undefined, se anima\r\n            const center = [((extent[0] + extent[2]) / 2), ((extent[1] + extent[3]) / 2)];\r\n            if (options.animate === void (0) || options.animate) {\r\n                view.animate({\r\n                    resolution: res,\r\n                    center: center,\r\n                    duration: TC.Consts.ZOOM_ANIMATION_DURATION\r\n                }, resolve);\r\n            }\r\n            else {\r\n                view.setCenter(center);\r\n                view.setResolution(res);\r\n                resolve();\r\n            }\r\n        };\r\n\r\n        const setPromise = function (extent) {\r\n            self._setExtentPromise = new Promise(function (resolve, reject) {\r\n                // Timeout porque OL3 no tiene evento featuresadded, por tanto cuando se activa map.options.zoomToMarkers\r\n                // se lanza un setExtent por marcador. El timeout evita ejecuciones a lo tonto.\r\n                clearTimeout(self._timeout);\r\n                self._timeout = setTimeout(function () {\r\n                    var mapSize = self.map.getSize();\r\n                    var view = self.map.getView();\r\n\r\n                    if (self.parent.baseLayer) {\r\n                        self.parent.baseLayer.wrap.getLayer().then(function (olLayer) {\r\n                            // Todo esto para evitar que haga más zoom que el admisible por la capa base\r\n                            const res = view.getResolutionForExtent(extent, mapSize);\r\n                            const resolutions = self.getResolutions();\r\n                            const maxZoom = view.getMaxZoom();\r\n                            if (maxZoom < resolutions.length - 1) {\r\n                                resolutions.length = maxZoom + 1;\r\n                            }\r\n\r\n                            if (resolutions.length > 0) {\r\n                                var minRes = Math.min.apply(self, resolutions);\r\n                                if (minRes > res) {\r\n                                    var factor = 0.5 * (minRes / res - 1);\r\n                                    var dx = ol.extent.getWidth(extent) * factor;\r\n                                    var dy = ol.extent.getHeight(extent) * factor;\r\n                                    extent = extent.slice(0);\r\n                                    extent[0] = extent[0] - dx;\r\n                                    extent[1] = extent[1] - dy;\r\n                                    extent[2] = extent[2] + dx;\r\n                                    extent[3] = extent[3] + dy;\r\n                                }\r\n                            }\r\n\r\n                            applyExtent(view, mapSize, resolve, reject);\r\n\r\n                        });\r\n                    }\r\n                    else {\r\n                        applyExtent(view, mapSize, resolve, reject);\r\n                    }\r\n                }, 50);\r\n            });\r\n        };\r\n        Promise.resolve(self._setExtentPromise).finally(function () {\r\n            setPromise(extent);\r\n        });\r\n\r\n        return self._setExtentPromise;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getExtent = function () {\r\n        return this.map.getView().calculateExtent(this.map.getSize());\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setCenter = function (coords, options) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const callback = function () {\r\n                resolve();\r\n            };\r\n\r\n            const opts = options || {};\r\n            const view = self.map.getView();\r\n\r\n            if (opts.animate) {\r\n                view.animate({\r\n                    center: coords, duration: TC.Consts.ZOOM_ANIMATION_DURATION\r\n                }, callback);\r\n            }\r\n            else {\r\n                view.setCenter(coords);\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getCenter = function () {\r\n        return this.map.getView().getCenter();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolution = function () {\r\n        return this.map.getView().getResolution();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setResolution = function (resolution) {\r\n        this.getMap().then(function (olMap) {\r\n            olMap.getView().setResolution(resolution);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setRotation = function (rotation) {\r\n        this.getMap().then(function (olMap) {\r\n            olMap.getView().setRotation(rotation);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getRotation = function () {\r\n        return this.map.getView().getRotation();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolutions = function () {\r\n        return this.map.getView().getResolutions() || [];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getCoordinateFromPixel = function (xy) {\r\n        return this.map.getCoordinateFromPixel(xy);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getPixelFromCoordinate = function (coord) {\r\n        return this.map.getPixelFromCoordinate(coord);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getViewport = function (options) {\r\n        const self = this;\r\n        var result;\r\n        var opts = options || {\r\n        };\r\n        if (opts.synchronous) {\r\n            result = self.map.getViewport();\r\n        }\r\n        else {\r\n            result = new Promise(function (resolve, reject) {\r\n                self.getMap().then(function (olMap) {\r\n                    resolve(olMap.getViewport());\r\n                });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isNative = function (map) {\r\n        return map instanceof ol.Map;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isGeo = function () {\r\n        var units = this.map.getView().getProjection().getUnits();\r\n        return !units || units === ol.proj.Units.DEGREES;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.addPopup = function (popupCtl) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var draggable = popupCtl.options.draggable === undefined || popupCtl.options.draggable;\r\n            TC.loadJS(\r\n                draggable && !window.Draggabilly,\r\n                [TC.apiLocation + TC.Consts.url.DRAGGABILLY],\r\n                function () {\r\n                    self.getMap().then(function (olMap) {\r\n                        if (!popupCtl.popupDiv) {\r\n                            // No popups yet\r\n                            const popupDiv = TC.Util.getDiv();\r\n                            popupCtl.popupDiv = popupDiv;\r\n                            if (window.$) {\r\n                                popupCtl.$popupDiv = $(popupDiv);\r\n                            }\r\n                            popupDiv.classList.add(TC.control.Popup.prototype.CLASS);\r\n                            popupCtl.contentDiv = TC.Util.getDiv();\r\n                            popupCtl.contentDiv.classList.add(TC.control.Popup.prototype.CLASS + '-content');\r\n                            popupCtl.popupDiv.appendChild(popupCtl.contentDiv);\r\n                            popupCtl.menuDiv = TC.Util.getDiv();\r\n                            popupCtl.menuDiv.classList.add(TC.control.Popup.prototype.CLASS + '-menu');\r\n                            popupCtl.popupDiv.appendChild(popupCtl.menuDiv);\r\n                            self.parent.div.appendChild(popupDiv);\r\n\r\n                            var popup = new ol.Overlay({\r\n                                element: popupDiv,\r\n                                positioning: ol.OverlayPositioning.BOTTOM_LEFT\r\n                            });\r\n                            olMap.addOverlay(popup);\r\n                            popupCtl.wrap.popup = popup;\r\n\r\n                            //popupCtl._firstRender.resolve();\r\n                            //popupCtl.trigger(TC.Consts.event.CONTROLRENDER);\r\n                            const olMapViewport = olMap.getViewport();\r\n\r\n                            if (draggable) {\r\n                                const container = popupCtl.popupDiv.parentElement;\r\n                                popupCtl.popupDiv.classList.add(TC.Consts.classes.DRAGGABLE);\r\n\r\n\r\n                                container.addEventListener('touchmove', function (e) {\r\n                                    var parent = e.target;\r\n                                    do {\r\n                                        if (parent.matches('.tc-ctl-finfo-layer-content')) {\r\n                                            e.stopPropagation();\r\n                                            break;\r\n                                        }\r\n                                        parent = parent.parentElement;\r\n                                    }\r\n                                    while (parent);\r\n                                });\r\n\r\n                                // Tuneamos Draggabilly para que acepte excepciones a los asideros del elemento.\r\n                                const drag = new Draggabilly(container, {\r\n                                    //not: 'th,td, td *,input,select,.tc-ctl-finfo-coords'\r\n                                });\r\n                                drag.handleEvent = function (event) {\r\n                                    if (this.options.not && event.target.matches(this.options.not)) {\r\n                                        return;\r\n                                    }\r\n                                    Draggabilly.prototype.handleEvent.call(this, event);\r\n                                };\r\n                                drag.on('pointerDown', function (e, pointer) {\r\n                                    var bcr = e.target.getBoundingClientRect();\r\n                                    // Si estamos pulsando sobre una barra de scroll abortamos drag\r\n                                    if (bcr.left + e.target.clientWidth < pointer.pageX || bcr.top + e.target.clientHeight < pointer.pageY) {\r\n                                        drag._pointerCancel(e, pointer);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n                                drag.on('dragStart', function (e, pointer) {\r\n                                    popupCtl.setDragging(true);\r\n                                    popupCtl._currentOffset = popup.getOffset();\r\n                                    if (popupCtl._previousContainerPosition) {\r\n                                        var mapSize = olMap.getSize();\r\n                                        popup.setPosition(olMap.getCoordinateFromPixel([popupCtl._previousContainerPosition[0], mapSize[1] - popupCtl._previousContainerPosition[1]]));\r\n                                        popupCtl._currentOffset = [0, 0];\r\n                                        popup.setOffset(popupCtl._currentOffset);\r\n                                        delete popupCtl._previousContainerPosition;\r\n                                    }\r\n                                    else {\r\n                                        popupCtl._currentOffset = popup.getOffset();\r\n                                    }\r\n                                });\r\n                                drag.on('dragEnd', function (e) {\r\n                                    popupCtl.setDragging(false);\r\n                                    var coord1 = olMap.getCoordinateFromPixel([0, 0]);\r\n                                    var coord2 = olMap.getCoordinateFromPixel(popup.getOffset());\r\n                                    var coordDelta = [coord2[0] - coord1[0], coord2[1] - coord1[1]];\r\n                                    var position = popup.getPosition();\r\n                                    popup.setPosition([position[0] + coordDelta[0], position[1] + coordDelta[1]]);\r\n                                    popup.setOffset([0, 0]);\r\n                                    popupCtl._currentOffset = [0, 0];\r\n\r\n                                    const containerRect = container.getBoundingClientRect();\r\n                                    popupCtl._previousContainerPosition = [containerRect.left, containerRect.bottom];\r\n                                });\r\n                                //drag.on('dragMove', function (e, pointer, moveVector) {\r\n                                    //popup.setOffset([popupCtl._currentOffset[0] + moveVector.x, popupCtl._currentOffset[1] + moveVector.y]);\r\n                                //});\r\n                                //.drag(function (ev, dd) {\r\n                                //    if (!ev.buttons && !Modernizr.touch) { // Evitamos que se mantenga el drag si no hay botón pulsado (p.e. en IE pulsando una scrollbar)\r\n                                //        return false;\r\n                                //    }\r\n                                //    popup.setOffset([popupCtl._currentOffset[0] + dd.deltaX, popupCtl._currentOffset[1] + dd.deltaY]);\r\n                                //}, {\r\n                                //    not: 'th,td, td *,input,select,.tc-ctl-finfo-coords'\r\n                                //    })                                \r\n                            }\r\n\r\n                            const mouseMoveHandler = function (e) {\r\n                                var mapTarget = olMap.getTarget();\r\n                                var hit = false;\r\n                                if (!self.parent.activeControl || !self.parent.activeControl.isExclusive()) {\r\n                                    var pixel = olMap.getEventPixel(e);\r\n                                    hit = olMap.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                                        var result = true;\r\n                                        if (feature._wrap && !feature._wrap.parent.showsPopup) {\r\n                                            result = false;\r\n                                        }\r\n                                        return result;\r\n                                    },\r\n                                        {\r\n                                            hitTolerance: hitTolerance\r\n                                        });\r\n                                }\r\n                                if (hit) {\r\n                                    mapTarget.style.cursor = 'pointer';\r\n                                } else {\r\n                                    mapTarget.style.cursor = '';\r\n                                }\r\n                            };\r\n\r\n                            // change mouse cursor when over marker\r\n                            olMapViewport.removeEventListener(MOUSEMOVE, mouseMoveHandler);\r\n                            olMapViewport.addEventListener(MOUSEMOVE, mouseMoveHandler);\r\n                        }\r\n                    });\r\n                    resolve();\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.hidePopup = function (popupCtl) {\r\n        var self = this;\r\n        self.parent.currentFeature = null;\r\n        if (popupCtl.popupDiv) {\r\n            popupCtl.popupDiv.classList.remove(TC.Consts.classes.VISIBLE);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.manageSize = function () {\r\n        const self = this;\r\n\r\n        // Para controlar que el mapa no se vea borroso porque no encajan el width y height con los width y height de CSS\r\n        const manageSize = function (event) {\r\n            var pixelRatio = window.devicePixelRatio || 1;\r\n            var canvas = event.context.canvas;\r\n            var bounding = canvas.getBoundingClientRect();\r\n\r\n            var idealWidth = pixelRatio * bounding.width;\r\n            var idealHeight = pixelRatio * bounding.height;\r\n\r\n            if (idealWidth !== bounding.width || !Number.isInteger(idealWidth)) {\r\n                idealWidth = Math.round(idealWidth);\r\n            }\r\n\r\n            if (idealHeight !== bounding.height || !Number.isInteger(idealHeight)) {\r\n                idealHeight = Math.round(idealHeight);\r\n            }\r\n\r\n            if (idealWidth !== bounding.width || idealHeight !== bounding.height) {\r\n                var newSize = [idealWidth, idealHeight];\r\n                event.target.setSize(newSize);\r\n            }\r\n        };\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            self.on(POSTCOMPOSE, manageSize);\r\n        }\r\n    };\r\n\r\n    var getFormatFromName = function (name) {\r\n        switch (name) {\r\n            case TC.Consts.layerType.KML:\r\n            case TC.Consts.mimeType.KML:\r\n                return new ol.format.KMLCustom({\r\n                    showPointNames: false\r\n                });\r\n            case TC.Consts.layerType.GPX:\r\n            case TC.Consts.mimeType.GPX:\r\n                return new ol.format.GPXCustom();\r\n            case TC.Consts.layerType.GEOJSON:\r\n            case TC.Consts.mimeType.GEOJSON:\r\n            case TC.Consts.mimeType.JSON:\r\n            case TC.Consts.format.JSON:\r\n                return new ol.format.GeoJSON();\r\n            case TC.Consts.format.GML2:\r\n                return new ol.format.GML2();\r\n            case TC.Consts.format.GML3:\r\n                return new ol.format.GML3();\r\n            case TC.Consts.mimeType.GML:\r\n            case TC.Consts.format.GML:\r\n                return new ol.format.GML();\r\n            case TC.Consts.format.TOPOJSON:\r\n                return new ol.format.TopoJSON();\r\n            case TC.Consts.format.WKT:\r\n                return new ol.format.WKT();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.exportFeatures = function (features, options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var nativeStyle = createNativeStyle({\r\n            styles: self.parent.options.styles\r\n        });\r\n        var olFeatures = features.map(function (elm) {\r\n            var result = elm.wrap.feature;\r\n            // Si la feature no tiene estilo propio le ponemos el definido por la API\r\n            if (!result.getStyle()) {\r\n                result.setStyle(nativeStyle);\r\n            }\r\n            // Miramos si tiene texto, en cuyo caso la features se clona para no contaminar la feature orignal \r\n            // y al clon se le añade el texto como atributo (necesario para exportar etiquetas en KML y GPX)\r\n            const text = getNativeFeatureStyle(result).getText();\r\n            if (text) {\r\n                result = result.clone();\r\n                result.setProperties({\r\n                    name: text.getText()\r\n                });\r\n            }\r\n            return result;\r\n        });\r\n        var format = getFormatFromName(options.format);\r\n\r\n        if (format instanceof ol.format.KML) {\r\n            // KML no tiene estilo para puntos aparte del de icono. Para puntos sin icono creamos uno en SVG.\r\n            olFeatures = olFeatures\r\n                .map(function (feature) {\r\n                    const geom = feature.getGeometry();\r\n                    if (geom instanceof ol.geom.Point) {\r\n                        // Si el punto no tiene icono, creamos uno nuevo con un icono generado como data URI a partir del estilo\r\n                        var style = getNativeFeatureStyle(feature);\r\n                        const shape = style.getImage();\r\n                        if (shape instanceof ol.style.RegularShape) {\r\n                            const radius = shape.getRadius();\r\n                            const stroke = shape.getStroke();\r\n                            const strokeWidth = stroke.getWidth();\r\n                            const diameter = (2 * radius) + strokeWidth + 1;\r\n                            const position = diameter / 2;\r\n                            const canvas = document.createElement('canvas');\r\n                            canvas.width = diameter;\r\n                            canvas.height = diameter;\r\n                            const vectorContext = ol.render.toContext(canvas.getContext('2d'), {\r\n                                size: [diameter, diameter]\r\n                            });\r\n                            const text = style.getText();\r\n                            style = style.clone();\r\n                            style.setText(); // Quitamos el texto para que no salga en el canvas\r\n                            vectorContext.setStyle(style);\r\n                            vectorContext.drawGeometry(new ol.geom.Point([position, position]));\r\n                            const newFeature = new ol.Feature(geom);\r\n                            newFeature.setProperties(feature.getProperties());\r\n                            newFeature.setStyle(new ol.style.Style({\r\n                                image: new ol.style.Icon({\r\n                                    src: canvas.toDataURL('image/png')\r\n                                }),\r\n                                text: text\r\n                            }));\r\n                            return newFeature;\r\n                        }\r\n                    }\r\n                    return feature;\r\n                });\r\n            // KML no pone etiquetas a líneas y polígonos. En esos casos ponemos un punto con la etiqueta.\r\n            const pointsToAdd = [];\r\n            olFeatures.forEach(function (feature) {\r\n                var style = getNativeFeatureStyle(feature);\r\n                const geometry = feature.getGeometry();\r\n                const text = style.getText();\r\n                var point;\r\n                if (text) {\r\n                    switch (true) {\r\n                        case geometry instanceof ol.geom.LineString:\r\n                            point = new ol.geom.Point(geometry.getCoordinateAt(0.5));\r\n                            break;\r\n                        case geometry instanceof ol.geom.Polygon:\r\n                            point = geometry.getInteriorPoint();\r\n                            break;\r\n                        case geometry instanceof ol.geom.MultiLineString:\r\n                            // Seleccionamos la línea más larga\r\n                            const lineStrings = geometry.getLineStrings();\r\n                            var maxLength = -1;\r\n                            point = new ol.geom.Point(lineStrings[lineStrings\r\n                                .map(function (line) {\r\n                                    return line.getLength();\r\n                                })\r\n                                .reduce(function (prev, cur, idx) {\r\n                                    if (cur > maxLength) {\r\n                                        maxLength = cur;\r\n                                        return idx;\r\n                                    }\r\n                                    return prev;\r\n                                }, -1)].getCoordinateAt(0.5));\r\n                            break;\r\n                        case geometry instanceof ol.geom.MultiPolygon:\r\n                            // Seleccionamos el polígono más grande\r\n                            const polygons = geometry.getPolygons();\r\n                            var maxArea = -1;\r\n                            point = polygons[polygons\r\n                                .map(function (polygon) {\r\n                                    return polygon.getArea();\r\n                                })\r\n                                .reduce(function (prev, cur, idx) {\r\n                                    if (cur > maxArea) {\r\n                                        maxArea = cur;\r\n                                        return idx;\r\n                                    }\r\n                                    return prev;\r\n                                }, -1)].getInteriorPoint();\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (point) {\r\n                        const newFeature = new ol.Feature(point);\r\n                        newFeature.setStyle(new ol.style.Style({\r\n                            text: text.clone(),\r\n                            image: new ol.style.Icon({\r\n                                crossOrigin: 'anonymous',\r\n                                src: TC.apiLocation + 'TC/css/img/transparent.gif'\r\n                            })\r\n                        }));\r\n                        pointsToAdd.push(newFeature);\r\n                    }\r\n                }\r\n            });\r\n            if (pointsToAdd.length) {\r\n                olFeatures = olFeatures.concat(pointsToAdd);\r\n            }\r\n        }\r\n\r\n        if (format instanceof ol.format.GMLBase) {\r\n\r\n            // Quitamos los espacios en blanco de los nombres de atributo en las features: no son válidos en GML.\r\n            olFeatures = olFeatures.map(function (f) {\r\n                return f.clone();\r\n            });\r\n            olFeatures.forEach(function (f) {\r\n                const values = f.values_\r\n                const keysToChange = [];\r\n                for (var key in values) {\r\n                    if (key.indexOf(' ') >= 0) {\r\n                        keysToChange.push(key);\r\n                    }\r\n                }\r\n                keysToChange.forEach(function (key) {\r\n                    // Quitamos espacios en blanco y evitamos que empiece por un número\r\n                    var newKey = key.replace(/ /g, '_');\r\n                    if (/^\\d/.test(newKey)) {\r\n                        newKey = '_' + newKey;\r\n                    }\r\n                    if (key !== newKey) {\r\n                        while (values[newKey] !== undefined) {\r\n                            newKey += '_';\r\n                        }\r\n                    }\r\n                    values[newKey] = values[key];\r\n                    delete values[key];\r\n                });\r\n            });\r\n\r\n            //Apañamos para que el GML sea válido. Si no lo hacemos, con IE, en ol-debug.js:36514 da un error porque node.localName no existe.\r\n            format.featureNS = \"sitna\";\r\n            format.featureType = \"feature\";\r\n            var featuresNode = format.writeFeaturesNode(olFeatures, {\r\n                featureProjection: self.parent.crs\r\n            });\r\n\r\n            var featureCollectionNode = ol.xml.createElementNS('http://www.opengis.net/gml',\r\n                'FeatureCollection');\r\n            featureCollectionNode.setAttributeNS('http://www.w3.org/2001/XMLSchema-instance',\r\n                'xsi:schemaLocation', format.schemaLocation);\r\n            featuresNode.removeAttribute('xmlns:xsi');\r\n            featuresNode.removeAttribute('xsi:schemaLocation');\r\n            featureCollectionNode.appendChild(featuresNode);\r\n            //ol.xml.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\r\n            //    'xsi:schemaLocation', this.schemaLocation);\r\n            //return featureCollectionNode.outerHTML;\r\n        }\r\n\r\n        if (format instanceof ol.format.GPX) {\r\n            // Queremos exportar tracks en vez de routes. OpenLayers exporta LineStrings como routes y MultiLineStrings como tracks.\r\n            olFeatures = olFeatures.map(function (f) {\r\n                const geom = f.getGeometry();\r\n                if (geom instanceof ol.geom.LineString) {\r\n                    f = f.clone();\r\n                    f.setGeometry(new ol.geom.MultiLineString([geom.getCoordinates()]));\r\n                }\r\n                return f;\r\n            });\r\n        }\r\n\r\n        var result = format.writeFeatures(olFeatures, {\r\n            dataProjection: 'EPSG:4326',\r\n            featureProjection: self.parent.crs\r\n        });\r\n        if (format instanceof ol.format.GPX) {\r\n            // Este formato no procesa bien las elevaciones cuando son nulas. Hemos hecho un preproceso para transformarlas en NaN y ahora hay que eliminarlas.\r\n            result = result.replace(/<ele>NaN<\\/ele>/g, '');\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var isFileDrag = function (e) {\r\n        for (var i = 0, len = e.dataTransfer.types.length; i < len; i++) {\r\n            if (e.dataTransfer.types[i] === 'Files') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var handleDragEnter = function (e) {\r\n        var self = this;\r\n        if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n            self.getMap()._wrap.parent.div.classList.add(TC.Consts.classes.DROP);\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n\r\n    var handleDragExit = function (e) {\r\n        var self = this;\r\n        if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n            var map = self.getMap()._wrap.parent;\r\n            if (e.target === self.target) {\r\n                map.div.classList.remove(TC.Consts.classes.DROP);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.enableDragAndDrop = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        var ddOptions = {\r\n            formatConstructors: [\r\n                ol.format.KMLCustom,\r\n                ol.format.GPXCustom,\r\n                ol.format.GML3CRS84,\r\n                ol.format.GML2CRS84,\r\n                ol.format.GML3,\r\n                ol.format.GML2,\r\n                ol.format.GeoJSON,\r\n                function () {\r\n                    return new ol.format.WKT({\r\n                        splitCollection: true\r\n                    });\r\n                },\r\n                ol.format.TopoJSON\r\n            ]\r\n        };\r\n        if (opts.dropTarget) {\r\n            ddOptions.target = TC.getDiv(opts.dropTarget);\r\n        }\r\n        else {\r\n            ddOptions.target = self.parent.div;\r\n        }\r\n        var ddInteraction = new ol.interaction.DragAndDrop(ddOptions);\r\n        ddInteraction.on('addfeatures', function (e) {\r\n            var featurePromises = e.features ? e.features.map(function (elm) {\r\n                return TC.wrap.Feature.createFeature(elm);\r\n            }) : [];\r\n            Promise.all(featurePromises).then(function (features) {\r\n                var li = self.parent.getLoadingIndicator();\r\n                if (li) {\r\n                    li.removeWait(self._featureImportWaitId);\r\n                }\r\n                if (features.length && !(features.some(function (feature) {\r\n                    return !feature.geometry\r\n                }))) {\r\n                    self.parent.trigger(TC.Consts.event.FEATURESIMPORT, {\r\n                        features: features, fileName: e.file.name, dropTarget: e.target.target\r\n                    });\r\n                }\r\n                else {\r\n                    self.parent.trigger(TC.Consts.event.FEATURESIMPORTERROR, {\r\n                        file: e.file\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        if (opts.once) {\r\n            ddInteraction.map_ = self.map;\r\n        }\r\n        else {\r\n            self.map.addInteraction(ddInteraction);\r\n            var dropArea = ddInteraction.target ? ddInteraction.target : self.map.getViewport();\r\n            // Añadidos gestores de eventos para mostrar el indicador visual de drop.\r\n            var handleDrop = function (e) {\r\n                if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n                    var map = self.parent;\r\n                    if (ddInteraction.target === e.target) {\r\n                        var li = map.getLoadingIndicator();\r\n                        if (li) {\r\n                            self._featureImportWaitId = li.addWait();\r\n                        }\r\n                        e.stopPropagation();\r\n                    }\r\n                    else {\r\n                        e.preventDefault();\r\n                    }\r\n                    map.div.classList.remove(TC.Consts.classes.DROP);\r\n                }\r\n            };\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DRAGENTER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DRAGENTER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DRAGOVER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DRAGOVER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DROP,\r\n                    handleDrop, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DROP,\r\n                    handleDrop, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragleave',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragend',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragexit',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            document.addEventListener('mouseenter', function (e) {\r\n                if (!e.buttons) {\r\n                    self.parent.div.classList.remove(TC.Consts.classes.DROP);\r\n                }\r\n            }, false);\r\n            self.ddEnabled = true;\r\n        }\r\n        return ddInteraction;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.loadFiles = function (files, options) {\r\n        var self = this;\r\n        var ddInteraction;\r\n        if (self.ddEnabled) {\r\n            self.map.getInteractions().forEach(function (elm) {\r\n                if (elm instanceof ol.interaction.DragAndDrop) {\r\n                    ddInteraction = elm;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            ddInteraction = self.enableDragAndDrop({\r\n                once: true\r\n            });\r\n        }\r\n\r\n        if (ddInteraction && options) {\r\n            var currentTarget = ddInteraction.target;\r\n            ddInteraction.target = options.control;\r\n            const undoTarget = function (e) {\r\n                ddInteraction.target = currentTarget;\r\n\r\n                self.parent.off(TC.Consts.event.FEATURESIMPORT, undoTarget);\r\n            };\r\n            self.parent.on(TC.Consts.event.FEATURESIMPORT, undoTarget);\r\n        }\r\n\r\n        var li = self.parent.getLoadingIndicator();\r\n        if (li) {\r\n            self._featureImportWaitId = li.addWait();\r\n        }\r\n        for (let i = 0, ii = files.length; i < ii; ++i) {\r\n            const file = files.item(i);\r\n            const reader = new FileReader();\r\n            reader.addEventListener(ol.events.EventType.LOAD, ddInteraction.handleResult_.bind(ddInteraction, file));\r\n            reader.readAsText(file);\r\n        }\r\n    };\r\n\r\n    /*\r\n     *  getVisibility: gets the OpenLayers layer visibility\r\n     *  Result: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.getVisibility = function () {\r\n        const self = this;\r\n        var result = false;\r\n        if (self.layer) {\r\n            result = self.layer.getVisible();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /*\r\n     *  setVisibility: Sets the OpenLayers layer visibility\r\n     *  Parameter: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.setVisibility = function (visible) {\r\n        const self = this;\r\n        self.getLayer().then(function (layer) {\r\n            layer.setVisible(visible);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.isNative = function (layer) {\r\n        return layer instanceof ol.layer.Layer;\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const layer = self.parent;\r\n        if (layer.map) {\r\n            const unitRatio = getUnitRatio.call(self, {\r\n                crs: options.crs,\r\n                extentInDegrees: ol.proj.transformExtent(layer.map.getExtent(), layer.map.crs, 'EPSG:4326')\r\n            });\r\n\r\n            var resolutions = layer.getResolutions();\r\n            if (resolutions && resolutions.length) {\r\n                resolutions = resolutions.map(function (r) {\r\n                    return r / unitRatio;\r\n                });\r\n                layer.wrap.layer.setMaxResolution(resolutions[0]);\r\n                layer.wrap.layer.setMinResolution(resolutions[resolutions.length - 1]);\r\n            }\r\n            else {\r\n                // de metros a grados\r\n                if (options.oldCrs && ol.proj.get(options.oldCrs).getUnits() === ol.proj.Units.METERS && (!ol.proj.get(options.crs).getUnits() || ol.proj.get(options.crs).getUnits() === ol.proj.Units.DEGREES)) {\r\n\r\n                    if (layer.minResolution) {\r\n                        layer.minResolution = layer.minResolution / unitRatio;\r\n                        self.layer.setMinResolution(layer.minResolution);\r\n                    }\r\n\r\n                    if (layer.maxResolution) {\r\n                        layer.maxResolution = layer.maxResolution / unitRatio;\r\n                        self.layer.setMaxResolution(layer.maxResolution);\r\n                    }\r\n\r\n                  // de grados a metros\r\n                } else if (options.oldCrs && ol.proj.get(options.oldCrs).getUnits() === ol.proj.Units.DEGREES && ol.proj.get(options.crs).getUnits() === ol.proj.Units.METERS) {\r\n                    var metersPerDegree = TC.Util.getMetersPerDegree(ol.proj.transformExtent(layer.map.getExtent(), layer.map.crs, 'EPSG:4326'));\r\n\r\n                    if (layer.minResolution) {\r\n                        layer.minResolution = layer.minResolution * metersPerDegree;\r\n                        self.layer.setMinResolution(layer.minResolution);\r\n                    }\r\n\r\n                    if (layer.maxResolution) {\r\n                        layer.maxResolution = layer.maxResolution * metersPerDegree;\r\n                        self.layer.setMaxResolution(layer.maxResolution);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.WmsParser = ol.format.WMSCapabilities;\r\n\r\n    TC.wrap.layer.Raster.prototype.WmtsParser = ol.format.WMTSCapabilities;\r\n\r\n    TC.wrap.Layer.prototype.addCommonEvents = function (layer) {\r\n        var self = this;\r\n        layer.on('change:visible', function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.LAYERVISIBILITY, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        }, self.parent.map);\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getGetMapUrl = function () {\r\n        var result = null;\r\n        var self = this;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                var dcpType = self.parent.capabilities.Capability.Request.GetMap.DCPType;\r\n                for (var i = 0; i < dcpType.length; i++) {\r\n                    if (dcpType[i].HTTP && dcpType[i].HTTP.Get) {\r\n                        result = dcpType[i].HTTP.Get.OnlineResource;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                result = self.parent.capabilities.OperationsMetadata.GetTile.DCP.HTTP.Get[0].href;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const fragment = document.createDocumentFragment();\r\n        const textarea = document.createElement('textarea');\r\n        fragment.appendChild(textarea);\r\n        textarea.innerHTML = result;\r\n        result = textarea.textContent;\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfoFormats = function () {\r\n        var result = null;\r\n        var c = this.parent.capabilities;\r\n        if (c.Capability && c.Capability.Request.GetFeatureInfo) {\r\n            result = c.Capability.Request.GetFeatureInfo.Format;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.infoFormatPreference = [\r\n        'application/json',\r\n        'application/vnd.ogc.gml/3.1.1',\r\n        'application/vnd.ogc.gml',\r\n        'application/vnd.esri.wms_featureinfo_xml',\r\n        'text/html',\r\n        'text/plain',\r\n        'text/xml'\r\n    ];\r\n\r\n    TC.wrap.layer.Raster.prototype.getWMTSLayer = function () {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Contents) {\r\n            for (var i = 0; i < capabilities.Contents.Layer.length; i++) {\r\n                var layer = capabilities.Contents.Layer[i];\r\n                for (var j = 0; j < layer.TileMatrixSetLink.length; j++) {\r\n                    if (self.parent.options.matrixSet === layer.TileMatrixSetLink[j].TileMatrixSet) {\r\n                        result = layer;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getTileMatrix = function (matrixSet) {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Contents && capabilities.Contents.TileMatrixSet) {\r\n            for (var i = 0; i < capabilities.Contents.TileMatrixSet.length; i++) {\r\n                var tms = capabilities.Contents.TileMatrixSet[i];\r\n                if (tms.Identifier === matrixSet) {\r\n                    result = tms.TileMatrix;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getScaleDenominators = function (node) {\r\n        var result = [];\r\n        var self = this;\r\n        if (node.ScaleDenominator) {\r\n            result = [node.ScaleDenominator, node.ScaleDenominator];\r\n        }\r\n        else {\r\n            if (node.MinScaleDenominator || node.MaxScaleDenominator) {\r\n                result = [node.MaxScaleDenominator, node.MinScaleDenominator];\r\n            }\r\n        }\r\n        // Contemplamos el caso de una capa sin nombre: sus escalas válidas serán las de sus hijas.\r\n        if (!result.length && !self.getName(node)) {\r\n            var children = self.getLayerNodes(node);\r\n            var max = -Infinity, min = Infinity;\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var childDenominators = self.getScaleDenominators(children[i]);\r\n                if (childDenominators[0] > max) {\r\n                    max = childDenominators[0];\r\n                }\r\n                if (childDenominators[1] < min) {\r\n                    min = childDenominators[1];\r\n                }\r\n            }\r\n            if (max > -Infinity && min < Infinity) {\r\n                result = [max, min];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getAttribution = function () {\r\n        const self = this;\r\n        const result = {};\r\n        const capabilities = TC.capabilities[self.parent.url];\r\n\r\n        if (capabilities) {\r\n            if (capabilities.ServiceProvider) {\r\n                result.name = capabilities.ServiceProvider.ProviderName.trim();\r\n                result.site = capabilities.ServiceProvider.ProviderSite;\r\n                if (result.site.href && result.site.href.trim().length > 0) {\r\n                    result.site = result.site.href;\r\n                }\r\n            }\r\n            else if (capabilities.ServiceIdentification) {\r\n                result.name = capabilities.ServiceIdentification.Title.trim();\r\n            }\r\n            else {\r\n                result.name = capabilities.Service.Title.trim();\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfo = function (name) {\r\n        var self = this;\r\n        var result = {};\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Capability) {\r\n            var layerNodes = self.getAllLayerNodes();\r\n            for (var i = 0; i < layerNodes.length; i++) {\r\n                var l = layerNodes[i];\r\n                if (self.parent.compareNames(self.getName(l), name)) {\r\n                    if (l.Title) {\r\n                        result.title = l.Title;\r\n                    }\r\n                    if (l.Abstract) {\r\n                        result['abstract'] = l.Abstract;\r\n                    }\r\n                    result.legend = [];\r\n\r\n                    var _process = function (value) {\r\n                        var legend = this.getLegend(value);\r\n\r\n                        if (legend.src)\r\n                            result.legend.push({\r\n                                src: legend.src, title: value.Title\r\n                            });\r\n                    };\r\n\r\n                    var _traverse = function (o, func) {\r\n                        if (o.Layer && o.Layer.length > 0) {\r\n                            for (var i in o.Layer) {\r\n                                //bajar un nivel en el árbol\r\n                                _traverse(o.Layer[i], func);\r\n                            }\r\n                        } else {\r\n                            func.apply(self, [o]);\r\n                        }\r\n                    };\r\n\r\n                    //Obtenemos todas las leyendas de la capa o grupo de capas\r\n                    _traverse(l, _process);\r\n\r\n                    if (l.MetadataURL && l.MetadataURL.length) {\r\n                        result.metadata = [];\r\n                        for (var j = 0; j < l.MetadataURL.length; j++) {\r\n                            var md = l.MetadataURL[j];\r\n                            result.metadata.push({\r\n                                format: md.Format, type: md.type, url: md.OnlineResource\r\n                            });\r\n                        }\r\n                    }\r\n                    result.queryable = l.queryable;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceType = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.Capability && capabilities.Capability.Request && capabilities.Capability.Request.GetMap) {\r\n            result = TC.Consts.layerType.WMS;\r\n        }\r\n        else if (capabilities.OperationsMetadata && capabilities.OperationsMetadata.GetTile) {\r\n            result = TC.Consts.layerType.WMTS;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceTitle = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.Capability && capabilities.Service) {\r\n            result = capabilities.Service.Title;\r\n        }\r\n        else if (capabilities.ServiceIdentification) {\r\n            result = capabilities.ServiceIdentification.Title;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getRootLayerNode = function () {\r\n        var self = this;\r\n        var result;\r\n        if (self.getServiceType() === TC.Consts.layerType.WMS) {\r\n            result = self.parent.capabilities.Capability.Layer;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getName = function (node, ignorePrefix) {\r\n        var result = node.Name;\r\n        if (result && ignorePrefix) {\r\n            var idx = result.indexOf(':');\r\n            if (idx >= 0) {\r\n                result = result.substr(idx + 1);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getIdentifier = function (node) {\r\n        return node.Identifier;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getLayerNodes = function (node) {\r\n        var result = node.Layer;\r\n        if (!Array.isArray(result)) {\r\n            if (result) {\r\n                result = [result];\r\n            }\r\n            else {\r\n                result = [];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getAllLayerNodes = function () {\r\n        var self = this;\r\n        if (!self._layerList) {\r\n            switch (self.getServiceType()) {\r\n                case TC.Consts.layerType.WMS:\r\n                    var getNodeArray = function getNodeArray(node) {\r\n                        var r = [node];\r\n                        var children = self.getLayerNodes(node);\r\n                        for (var i = 0; i < children.length; i++) {\r\n                            r = r.concat(getNodeArray(children[i]));\r\n                        }\r\n                        return r;\r\n                    };\r\n                    var root = self.getRootLayerNode();\r\n                    self._layerList = root ? getNodeArray(root) : [];\r\n                    break;\r\n                case TC.Consts.layerType.WMTS:\r\n                    self._layerList = self.parent.capabilities.Contents.Layer.slice();\r\n                    break;\r\n                default:\r\n                    self._layerList = [];\r\n                    break;\r\n            }\r\n        }\r\n        return self._layerList;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.normalizeLayerNode = function (node) {\r\n        return node;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.normalizeCapabilities = function (capabilities) {\r\n        return capabilities;\r\n    };\r\n\r\n\r\n    TC.wrap.layer.Raster.prototype.getLegend = function (node) {\r\n        var result = {};\r\n        var styles = node.Style;\r\n        if (styles && styles.length) {\r\n            if (styles.length && styles[0].LegendURL && styles[0].LegendURL.length) {\r\n                var legend = styles[0].LegendURL[0];\r\n\r\n                const fragment = document.createDocumentFragment();\r\n                const textarea = document.createElement('textarea');\r\n                fragment.appendChild(textarea);\r\n                textarea.innerHTML = legend.OnlineResource;\r\n                result.src = textarea.textContent;\r\n                // Eliminado porque GeoServer miente con el tamaño de sus imágenes de la leyenda\r\n                //if (legend.size) {\r\n                //    result.width = legend.size[0];\r\n                //    result.height = legend.size[1];\r\n                //}\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.isCompatible = function (crs) {\r\n        var self = this;\r\n        var result = true;\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    if (layer.names.length > 0) {\r\n                        var names = layer.names.slice(0);\r\n                        var _isCompatible = function _isCompatible(nodes, name, inCrs) {\r\n                            var r = false;\r\n                            if (nodes) {\r\n                                for (var i = 0; i < nodes.length; i++) {\r\n                                    var n = nodes[i];\r\n                                    const itemCRS = n.CRS || n.SRS;\r\n                                    const crsList = Array.isArray(itemCRS) ? itemCRS : [itemCRS];\r\n                                    var isIn = inCrs || crsList.indexOf(crs) >= 0;\r\n                                    if (layer.compareNames(self.getName(n), name)) {\r\n                                        if (isIn) {\r\n                                            r = true;\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    else if (_isCompatible(n.Layer, name, isIn)) {\r\n                                        r = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return r;\r\n                        };\r\n                        while (names.length > 0) {\r\n                            if (!_isCompatible([layer.capabilities.Capability.Layer], names.pop())) {\r\n                                result = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                result = false;\r\n                if (layer.capabilities && layer.capabilities.Contents && layer.capabilities.Contents.TileMatrixSet) {\r\n                    var tms = layer.capabilities.Contents.TileMatrixSet;\r\n                    for (var i = 0; i < tms.length; i++) {\r\n                        if (tms[i].Identifier === layer.options.matrixSet) {\r\n                            result = TC.Util.CRSCodesEqual(crs, tms[i].SupportedCRS);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleCRS = function () {\r\n        var self = this;\r\n        var result = [];\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    if (layer.names.length > 0) {\r\n                        const crsLists = layer.names\r\n                            .map(function (name) {\r\n                                return layer\r\n                                    .getNodePath(name) // array de nodos\r\n                                    .map(function (node) {\r\n                                        const itemCRS = node.CRS || node.SRS || [];\r\n                                        const crsList = Array.isArray(itemCRS) ? itemCRS : [itemCRS];\r\n                                        return Array.isArray(crsList) ? crsList : [crsList];\r\n                                    }) // array de arrays de crs\r\n                                    .reduce(function (prev, cur) {\r\n                                        if (prev.length === 0) {\r\n                                            return cur;\r\n                                        }\r\n                                        cur.forEach(function (elm) {\r\n                                            if (prev.indexOf(elm) < 0) {\r\n                                                prev[prev.length - 1] = elm;\r\n                                            }\r\n                                        });// array con todos los crs\r\n                                        return prev;\r\n                                    }, []);\r\n                            });\r\n\r\n                        if (crsLists.length === 1) {\r\n                            result = crsLists[0];\r\n                        } else {\r\n                            const otherCrsLists = crsLists.slice(1);\r\n                            result = crsLists[0].filter(function (elm) {\r\n                                return otherCrsLists.every(function (crsList) {\r\n                                    return crsList.indexOf(elm) >= 0;\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                if (layer.capabilities && layer.capabilities.Contents) {\r\n                    layer.capabilities.Contents.Layer\r\n                        .filter(function (l) {\r\n                            return l.Identifier === layer.layerNames;\r\n                        })  // La capa de interés\r\n                        .forEach(function (l) {\r\n                            const tileMatrixSets = l.TileMatrixSetLink\r\n                                .map(function (tmsl) {\r\n                                    return tmsl.TileMatrixSet;\r\n                                });\r\n                            result = layer.capabilities.Contents.TileMatrixSet\r\n                                .filter(function (tms) {\r\n                                    return tileMatrixSets.indexOf(tms.Identifier) >= 0;\r\n                                }) // TileMatrixSets asociados a la capa de interés\r\n                                .map(function (tms) {\r\n                                    return tms.SupportedCRS;\r\n                                });\r\n                        });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleLayers = function (crs) {\r\n        var self = this;\r\n        var result = [];\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    var _fnrecursive = function (item, crs, inCrs) {\r\n                        var crsToCheck = item.CRS || item.SRS;\r\n                        var itemCRS = Array.isArray(crsToCheck) ? crsToCheck : [crsToCheck];\r\n                        var isIn = inCrs || itemCRS.indexOf(crs) >= 0;\r\n                        if (isIn && item.Name) result[result.length] = item.Name;\r\n                        if (item.Layer) {\r\n                            for (var i = 0; i < item.Layer.length; i++) {\r\n                                _fnrecursive(item.Layer[i], crs, isIn);\r\n                            }\r\n                        }\r\n                    }\r\n                    _fnrecursive(layer.capabilities.Capability.Layer, crs);\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                if (layer.capabilities && layer.capabilities.Contents && layer.capabilities.Contents.TileMatrixSet) {\r\n                    var tmsList = layer.capabilities.Contents.TileMatrixSet;\r\n                    for (var i = 0, ii = tmsList.length; i < ii; i++) {\r\n                        var tms = tmsList[i];\r\n                        if (TC.Util.CRSCodesEqual(crs, tms.SupportedCRS)) {\r\n                            var tmsIdentifier = tms.Identifier;\r\n                            var layerList = layer.capabilities.Contents.Layer;\r\n                            for (var j = 0, jj = layerList.length; j < jj; j++) {\r\n                                var tmsLinkList = layerList[j].TileMatrixSetLink;\r\n                                for (var k = 0, kk = tmsLinkList.length; k < kk; k++) {\r\n                                    if (tmsLinkList[k].TileMatrixSet === tmsIdentifier) {\r\n                                        result[result.length] = layerList[j].Identifier;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleMatrixSets = function (crs) {\r\n        var self = this;\r\n        var result = [];\r\n        normalizeProjection({\r\n            crs: crs\r\n        });\r\n        var layer = self.parent;\r\n        if (self.getServiceType() === TC.Consts.layerType.WMTS) {\r\n            var layerList = layer.capabilities.Contents.Layer;\r\n            var tmsList = layer.capabilities.Contents.TileMatrixSet;\r\n            for (var i = 0, ii = layerList.length; i < ii; i++) {\r\n                if (layer.layerNames === layerList[i].Identifier) {\r\n                    var tmsLinkList = layerList[i].TileMatrixSetLink;\r\n                    for (var j = 0, jj = tmsLinkList.length; j < jj; j++) {\r\n                        var tmsLink = tmsLinkList[j];\r\n                        for (var k = 0, kk = tmsList.length; k < kk; k++) {\r\n                            var tms = tmsList[k];\r\n                            if (tms.Identifier === tmsLink.TileMatrixSet) {\r\n                                if (TC.Util.CRSCodesEqual(crs, tms.SupportedCRS)) {\r\n                                    result[result.length] = tms.Identifier;\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setWMTSUrl = function () {\r\n        var self = this;\r\n\r\n        self.getLayer().then(function (l) {\r\n            self.parent.options = self.parent.options || {};\r\n            var urls = l.getSource().getUrls();\r\n            self.parent.options.urlPattern = urls[urls.length - 1];\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMSLayer = function (url, params, options) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var source = new ol.source.ImageWMS({\r\n            url: url,\r\n            crossOrigin: options.map ? options.map.options.crossOrigin : undefined,\r\n            params: params,\r\n            extent: TC.Cfg.initialExtent,\r\n            ratio: TC.Cfg.imageRatio,\r\n            imageLoadFunction: self.parent.getImageLoad.bind(self.parent)\r\n        });\r\n\r\n        source.on('imageloadstart', function (e) {\r\n            self.trigger(TC.Consts.event.BEFORETILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n        source.on('imageloadend', function (e) {\r\n            self.trigger(TC.Consts.event.TILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n        source.on('imageloaderror', function (e) {\r\n            self.trigger(TC.Consts.event.TILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n\r\n\r\n        var layerOptions = {\r\n            visible: !!params.LAYERS.length || (options && options.method && options.method === 'POST'), //Las capas de temáticos cargadas por POST no tienen el atributo LAYERS\r\n            source: source\r\n        };\r\n\r\n        if (options.minResolution) {\r\n            layerOptions.minResolution = options.minResolution;\r\n        }\r\n        if (options.maxResolution) {\r\n            layerOptions.maxResolution = options.maxResolution;\r\n        }\r\n        result = new ol.layer.Image(layerOptions);\r\n\r\n        result._wrap = self;\r\n\r\n        self.addCommonEvents(result);\r\n\r\n        return result;\r\n    };\r\n\r\n    var createWmtsSource = function (options) {\r\n        var self = this;\r\n        var result = null;\r\n        var sourceOptions = ol.source.WMTS.optionsFromCapabilities(self.parent.capabilities, {\r\n            layer: options.layerNames,\r\n            matrixSet: options.matrixSet,\r\n            crossOrigin: options.map ? options.map.options.crossOrigin : undefined,\r\n            requestEncoding: options.encoding,\r\n            format: options.format,\r\n        });\r\n        var https = 'https:';\r\n\r\n        if (sourceOptions) {\r\n            if (location.protocol === https) {\r\n                sourceOptions.urls = sourceOptions.urls.map(function (elm) {\r\n                    return elm.replace('http:', https);\r\n                });\r\n            }\r\n\r\n            sourceOptions.crossOrigin = options.map ? options.map.options.crossOrigin : undefined;\r\n\r\n            result = new ol.source.WMTS(sourceOptions);\r\n            result.setTileLoadFunction(self.parent.getImageLoad.bind(self.parent));\r\n\r\n            result.on(TILELOADSTART, function (e) {\r\n                self.trigger(TC.Consts.event.BEFORETILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n            result.on(TILELOADEND, function (e) {\r\n                self.trigger(TC.Consts.event.TILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n            result.on(TILELOADERROR, function (e) {\r\n                self.trigger(TC.Consts.event.TILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n\r\n            var prevFn = result.getResolutions.bind(result);\r\n            result.getResolutions = function () {\r\n                var resolutions = prevFn();\r\n                var matrix = self.parent.getLimitedMatrixSet();\r\n                //esto está mal, porque matrix podría empezar más abajo (tener recortado por ambos lados)\r\n                if (matrix && matrix.length) {\r\n                    var ix = matrix[0].matrixIndex;\r\n                    resolutions = resolutions.slice(ix, matrix.length + ix);\r\n                }\r\n\r\n                return resolutions;\r\n            };\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMTSLayer = function (options) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var source = createWmtsSource.call(self, options);\r\n\r\n        if (source) {\r\n            var layerOptions = {\r\n                source: source\r\n            };\r\n            if (options.minResolution) {\r\n                layerOptions.minResolution = options.minResolution;\r\n            }\r\n            if (options.maxResolution) {\r\n                layerOptions.maxResolution = options.maxResolution;\r\n            }\r\n            result = new ol.layer.Tile(layerOptions);\r\n            result._wrap = self;\r\n\r\n            self.addCommonEvents(result);\r\n\r\n            var resolutions = source.getResolutions();\r\n            //Este +1 tan chungo es porque, en el caso en que la resolución del mapa es igual a la máxima del layer, openLayers lo oculta\r\n            result.setMaxResolution(resolutions[0] + 1);\r\n            result.setMinResolution(resolutions[resolutions.length - 1]);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n    /*\r\n     *  getParams: Gets the WMS layer getmap parameters\r\n     *  Returns: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.getParams = function () {\r\n        return this.layer.getSource().getParams();\r\n    };\r\n\r\n    /*\r\n     *  setParams: Sets the WMS layer getmap parameters\r\n     *  Parameter: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.setParams = function (params) {\r\n        this.layer.getSource().updateParams(params);\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setMatrixSet = function (matrixSet) {\r\n        const self = this;\r\n        const oldResolutions = self.layer.getSource().getResolutions();\r\n        if (self.parent.type === TC.Consts.layerType.WMTS) {\r\n            const newSource = createWmtsSource.call(self, TC.Util.extend({}, self.parent.options, { matrixSet: matrixSet }));\r\n            const newResolutions = newSource.getResolutions();\r\n            const newMaxResolution = newResolutions[0]\r\n            const newMinResolution = newResolutions[newResolutions.length - 1];\r\n            self.layer.setMaxResolution(newMaxResolution);\r\n            self.layer.setMinResolution(newMinResolution);\r\n            if (self.parent.minResolution) {\r\n                self.parent.minResolution = newMinResolution;\r\n            }\r\n            if (self.parent.maxResolution) {\r\n                self.parent.maxResolution = newMaxResolution;\r\n            }\r\n            self.layer.setSource(newSource);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getResolutions = function () {\r\n        if (this.layer.getSource) {\r\n            var ts = this.layer.getSource();\r\n            if (ts.getResolutions) return ts.getResolutions();\r\n            else return [];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setResolutions = function (resolutions) {\r\n        if (this.layer.getSource) {\r\n            var ts = this.layer.getSource();\r\n            if (ts.resolutions_) {\r\n                ts.resolutions_ = resolutions;\r\n            }\r\n            else if (ts.tileGrid) {\r\n                ts.tileGrid.resolutions_ = resolutions;\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Geometry = {\r\n        getNearest: function (point, candidates) {\r\n            var pline = new ol.geom.LineString(candidates);\r\n            return pline.getClosestPoint(point);\r\n        }\r\n    };\r\n\r\n    // En OL3 la imagen tiene el tamaño original. Escalamos si hace falta.\r\n    var setScaleFunction = function (imageStyle, iconWidth, olFeat) {\r\n        if (imageStyle) {\r\n            var setScaleForWidth = function (imgWidth) {\r\n                var markerWidth = (olFeat && olFeat._wrap ? olFeat._wrap.parent.options.width : null) || iconWidth;\r\n                if (markerWidth < imgWidth) {\r\n                    var factor = markerWidth / imgWidth;\r\n                    imageStyle.setScale(factor);\r\n                }\r\n            };\r\n            var imageSize = imageStyle.getSize();\r\n            if (imageSize) {\r\n                setScaleForWidth(imageSize[0]);\r\n            }\r\n            else {\r\n                var img = imageStyle.getImage();\r\n                if (img.naturalWidth) {\r\n                    setScaleForWidth(img.naturalWidth);\r\n                }\r\n                else {\r\n                    const fragment = document.createDocumentFragment();\r\n                    const img = document.createElement('img');\r\n                    img.src = imageStyle.getSrc();\r\n                    img.addEventListener('load', function () {\r\n                        setScaleForWidth(this.naturalWidth);\r\n                    });\r\n                    fragment.appendChild(img);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var getStyleValue = function (property, feature) {\r\n        var result = property;\r\n        var olFeat = feature && feature.wrap && feature.wrap.feature;\r\n        if (typeof property === 'string') {\r\n            var match = property.match(/^\\$\\{(.+)\\}$/);\r\n            if (match && olFeat) {\r\n                // Permitimos el formato ${prop.subprop.subsubprop}\r\n                var m = match[1].split('.');\r\n                var r = olFeat.getProperties();\r\n                for (var i = 0; i < m.length && r !== undefined; i++) {\r\n                    r = r[m[i]];\r\n                }\r\n                if (r === undefined) {\r\n                    r = feature.data;\r\n                    for (var i = 0; i < m.length && r !== undefined; i++) {\r\n                        r = r[m[i]];\r\n                    }\r\n                }\r\n                result = r;\r\n            }\r\n        }\r\n        else if (TC.Util.isFunction(property)) {\r\n            result = property(feature);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // Transformación de opciones de estilo en un estilo nativo OL3.\r\n    var createNativeStyle = function (options, olFeat) {\r\n        var nativeStyleOptions = {\r\n        };\r\n\r\n        var feature;\r\n        var isPoint, isLine, isPolygon;\r\n        if (olFeat) {\r\n            switch (olFeat.getGeometry().getType()) {\r\n                case 'Point':\r\n                case 'MultiPoint':\r\n                    isPoint = true;\r\n                    break;\r\n                case 'LineString':\r\n                case 'MultiLineString':\r\n                    isLine = true;\r\n                    break;\r\n                case 'Polygon':\r\n                case 'MultiPolygon':\r\n                    isPolygon = true;\r\n                    break;\r\n            }\r\n            if (olFeat._wrap) {\r\n                feature = olFeat._wrap.parent;\r\n            }\r\n            else {\r\n                // Si la API SITNA no ha completado su feature, creamos un mock-up para que no fallen las funciones de estilo\r\n                feature = {\r\n                    id: TC.wrap.Feature.prototype.getId.call({\r\n                        feature: olFeat\r\n                    }), // GLS añado el id de la feature para poder filtrar por la capa a la cual pertenece                    \r\n                    features: olFeat.get('features'),\r\n                    getData: function () {\r\n                        return TC.wrap.Feature.prototype.getData.call({\r\n                            feature: olFeat\r\n                        });\r\n                    }\r\n                };\r\n\r\n\r\n            }\r\n        }\r\n        var isCluster = feature && Array.isArray(feature.features) && feature.features.length > 1 && options.cluster;\r\n        var styles;\r\n        if (isCluster) {\r\n            styles = TC.Util.extend(true, {}, TC.Cfg.styles.cluster, options.cluster.styles);\r\n        }\r\n        else {\r\n            styles = options.styles || TC.Cfg.styles;\r\n        }\r\n\r\n        var styleOptions = {};\r\n        if (styles.line && (isLine || !olFeat)) {\r\n            styleOptions = styles.line;\r\n            nativeStyleOptions.stroke = new ol.style.Stroke({\r\n                color: getStyleValue(styles.line.strokeColor, feature),\r\n                width: getStyleValue(styles.line.strokeWidth, feature),\r\n                lineDash: styles.line.lineDash\r\n            });\r\n        }\r\n\r\n        if (styles.polygon && (isPolygon || !olFeat)) {\r\n            styleOptions = styles.polygon;\r\n            nativeStyleOptions.fill = new ol.style.Fill({\r\n                color: getRGBA(getStyleValue(styles.polygon.fillColor, feature), getStyleValue(styles.polygon.fillOpacity, feature))\r\n            });\r\n            nativeStyleOptions.stroke = new ol.style.Stroke({\r\n                color: getStyleValue(styles.polygon.strokeColor, feature),\r\n                width: getStyleValue(styles.polygon.strokeWidth, feature),\r\n                lineDash: styles.polygon.lineDash\r\n            });\r\n        }\r\n\r\n        if (styles.point && (isPoint || !olFeat)) {\r\n            styleOptions = styles.point;\r\n            var circleOptions = {\r\n                radius: getStyleValue(styleOptions.radius, feature) ||\r\n                    (getStyleValue(styleOptions.height, feature) + getStyleValue(styleOptions.width, feature)) / 4\r\n            };\r\n            if (styleOptions.fillColor) {\r\n                circleOptions.fill = new ol.style.Fill({\r\n                    color: getRGBA(getStyleValue(styleOptions.fillColor, feature), getStyleValue(styleOptions.fillOpacity, feature))\r\n                });\r\n            }\r\n            if (styleOptions.strokeColor) {\r\n                circleOptions.stroke = new ol.style.Stroke({\r\n                    color: getStyleValue(styleOptions.strokeColor, feature),\r\n                    width: getStyleValue(styleOptions.strokeWidth, feature),\r\n                    lineDash: styleOptions.lineDash\r\n                });\r\n            }\r\n\r\n            if (!isNaN(circleOptions.radius))\r\n                nativeStyleOptions.image = new ol.style.Circle(circleOptions);\r\n        }\r\n\r\n        if (styleOptions.label) {\r\n            nativeStyleOptions.text = createNativeTextStyle(styleOptions, feature);\r\n        }\r\n\r\n        if (styles.marker && (isPoint || !olFeat)) {\r\n            styleOptions = styles.marker;\r\n            var ANCHOR_DEFAULT_UNITS = 'fraction';\r\n            if (styleOptions.url) {\r\n                nativeStyleOptions.image = new ol.style.Icon({\r\n                    crossOrigin: 'anonymous',\r\n                    anchor: styleOptions.anchor,\r\n                    anchorXUnits: styleOptions.anchorXUnits || ANCHOR_DEFAULT_UNITS,\r\n                    anchorYUnits: styleOptions.anchorYUnits || ANCHOR_DEFAULT_UNITS,\r\n                    src: styleOptions.url\r\n                });\r\n                nativeStyleOptions.text = createNativeTextStyle(styleOptions, feature);\r\n            }\r\n        }\r\n\r\n        return [new ol.style.Style(nativeStyleOptions)];\r\n    };\r\n\r\n    const createNativeTextStyle = function (styleObj, feature) {\r\n        if (!styleObj || !styleObj.label) {\r\n            return;\r\n        }\r\n\r\n        const textOptions = {\r\n            text: '' + getStyleValue(styleObj.label, feature),\r\n        };\r\n        //const olGeom = feature.wrap.feature.getGeometry();\r\n        //if (olGeom instanceof ol.geom.LineString || olGeom instanceof ol.geom.MultiLineString) {\r\n        //    textOptions.placement = ol.style.TextPlacement.LINE;\r\n        //}\r\n        if (styleObj.fontSize) {\r\n            textOptions.font = getStyleValue(styleObj.fontSize, feature) + 'pt sans-serif';\r\n        }\r\n        if (styleObj.angle) {\r\n            textOptions.rotation = -Math.PI * getStyleValue(styleObj.angle, feature) / 180;\r\n        }\r\n        if (styleObj.fontColor) {\r\n            textOptions.fill = new ol.style.Fill({\r\n                color: getRGBA(getStyleValue(styleObj.fontColor, feature), 1)\r\n            });\r\n        }\r\n        if (styleObj.labelOutlineColor) {\r\n            textOptions.stroke = new ol.style.Stroke({\r\n                color: getRGBA(getStyleValue(styleObj.labelOutlineColor, feature), 1),\r\n                width: getStyleValue(styleObj.labelOutlineWidth, feature)\r\n            });\r\n        }\r\n        if (styleObj.labelOffset) {\r\n            textOptions.offsetX = styleObj.labelOffset[0];\r\n            textOptions.offsetY = styleObj.labelOffset[1];\r\n        }\r\n        return new ol.style.Text(textOptions);\r\n    };\r\n\r\n    var toHexString = function (number) {\r\n        var result = number.toString(16);\r\n        if (result.length === 1) {\r\n            result = '0' + result;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var getHexColorFromArray = function (colorArray) {\r\n        return '#' + toHexString(colorArray[0]) + toHexString(colorArray[1]) + toHexString(colorArray[2])\r\n    };\r\n\r\n    var getStyleFromNative = function (olStyle, olFeat) {\r\n        var result = {\r\n        };\r\n        if (TC.Util.isFunction(olStyle)) {\r\n            if (olFeat) {\r\n                olStyle = olStyle(olFeat);\r\n            }\r\n        }\r\n        if (Array.isArray(olStyle)) {\r\n            olStyle = olStyle[0];\r\n        }\r\n        if (!TC.Util.isFunction(olStyle)) {\r\n            var color;\r\n            var stroke;\r\n            var fill;\r\n            var image = olStyle.getImage();\r\n            if (image) {\r\n                if (image instanceof ol.style.RegularShape) {\r\n                    stroke = image.getStroke();\r\n                    color = stroke.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.strokeColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.strokeWidth = stroke.getWidth();\r\n                    fill = image.getFill();\r\n                    if (fill) {\r\n                        color = fill.getColor();\r\n                        if (color) {\r\n                            color = ol.color.asArray(color);\r\n                            result.fillColor = getHexColorFromArray(color);\r\n                        }\r\n                        result.fillOpacity = color[3];\r\n                    }\r\n                }\r\n                else {\r\n                    result.url = image.getSrc();\r\n                    var size = image.getSize();\r\n                    if (size) {\r\n                        result.width = size[0];\r\n                        result.height = size[1];\r\n                        result.anchor = image.getAnchor();\r\n                        if (result.anchor) {\r\n                            result.anchor[0] = result.anchor[0] / result.width;\r\n                            result.anchor[1] = result.anchor[1] / result.height;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                stroke = olStyle.getStroke();\r\n                if (stroke) {\r\n                    color = stroke.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.strokeColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.strokeWidth = stroke.getWidth();\r\n                    result.lineDash = stroke.getLineDash();\r\n                }\r\n                fill = olStyle.getFill();\r\n                if (fill) {\r\n                    color = fill.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.fillColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.fillOpacity = color[3];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getStyle = function () {\r\n        return getStyleFromNative(this.layer.getStyle());\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.reloadSource = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const layerOptions = self.createVectorSource(self.parent, self.createStyles(self.parent));\r\n\r\n            if (self.parent.type === TC.Consts.layerType.WFS) {\r\n                var listenerKey = layerOptions.source.on('change', function (e) {\r\n                    if (layerOptions.source.getState() == 'ready') {\r\n                        ol.Observable.unByKey(listenerKey);\r\n\r\n                        resolve();\r\n                    }\r\n                });\r\n            }\r\n\r\n            var features = self.layer.getSource().getFeatures();\r\n            self.layer.setSource(layerOptions.source);\r\n\r\n            if (layerOptions.style)\r\n                self.layer.setStyle(layerOptions.style);\r\n\r\n            if (self.parent.type != TC.Consts.layerType.WFS) {\r\n                layerOptions.source.addFeatures(features);\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.import = function (options) {\r\n        var self = this;\r\n        var opts = TC.Util.extend({\r\n        }, options);\r\n        opts.type = options.format;\r\n\r\n        var oldFeatures = self.layer.getSource().getFeatures();\r\n        var layerOptions = self.createVectorSource(opts, self.createStyles(self.parent));\r\n        self.layer.setSource(layerOptions.source);\r\n        if (layerOptions.style) {\r\n            self.layer.setStyle(layerOptions.style);\r\n        }\r\n\r\n        layerOptions.source.addFeatures(oldFeatures);\r\n    };\r\n\r\n    const getIcon = function (olFeat) {\r\n        var result = null;\r\n        var style = getNativeFeatureStyle(olFeat, true);\r\n        if (style) {\r\n            var img = style.getImage();\r\n            if (img instanceof ol.style.Icon) {\r\n                result = img.getSrc();\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const createFeatureFromNative = function (olFeat) {\r\n        if (!olFeat._wrapPromise) { // Si no se ha llamado antes a esta función para esta feature\r\n            olFeat._wrapPromise = new Promise(function (resolve, reject) {\r\n                var options;\r\n                var geom = olFeat.getGeometry();\r\n                const olStyle = olFeat.getStyle();\r\n                if (olStyle) {\r\n                    options = getStyleFromNative(olStyle, olFeat);\r\n                }\r\n\r\n                const resolveFn = function (ctorName) {\r\n                    if (ctorName) {\r\n                        TC.loadJS(\r\n                            !TC.feature || !TC.feature[ctorName],\r\n                            TC.apiLocation + 'TC/feature/' + ctorName,\r\n                            function () {\r\n                                resolve(new TC.feature[ctorName](olFeat, options));\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        resolve(new TC.Feature(olFeat, options));\r\n                    }\r\n                };\r\n\r\n                if (geom instanceof ol.geom.Point) {\r\n                    if (getIcon(olFeat)) {\r\n                        resolveFn('Marker');\r\n                    }\r\n                    else {\r\n                        resolveFn('Point');\r\n                    }\r\n                }\r\n                else if (geom instanceof ol.geom.LineString) {\r\n                    resolveFn('Polyline');\r\n                }\r\n                else if (geom instanceof ol.geom.Polygon) {\r\n                    resolveFn('Polygon');\r\n                }\r\n                else if (geom instanceof ol.geom.MultiLineString) {\r\n                    resolveFn('MultiPolyline');\r\n                }\r\n                else if (geom instanceof ol.geom.MultiPolygon) {\r\n                    resolveFn('MultiPolygon');\r\n                }\r\n                else {\r\n                    resolveFn();\r\n                }\r\n            });\r\n        }\r\n        return olFeat._wrapPromise;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createVectorSource = function (options, nativeStyle) {\r\n        var self = this;\r\n\r\n        var createGenericLoader = function (url, format) {\r\n            var internalLoader = ol.featureloader.xhr(url, format);\r\n            return function (extent, resolution, projection) {\r\n                self.parent.state = TC.Layer.state.LOADING;\r\n                if (self.parent.map) {\r\n                    self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                        layer: self.parent\r\n                    });\r\n                }\r\n                internalLoader.call(this, extent, resolution, projection);\r\n            };\r\n        };\r\n        var usesGenericLoader = false;\r\n\r\n        var source;\r\n        var vectorOptions;\r\n\r\n        var getMimeTypeFromUrl = function (url) {\r\n            var idx = url.indexOf('?');\r\n            if (idx >= 0) {\r\n                url = url.substr(0, idx);\r\n            }\r\n            else {\r\n                idx = url.indexOf('#');\r\n                if (idx >= 0) {\r\n                    url = url.substr(0, idx);\r\n                }\r\n            }\r\n            switch (url.substr(url.lastIndexOf('.') + 1).toLowerCase()) {\r\n                case 'kml':\r\n                    return TC.Consts.mimeType.KML;\r\n                case 'json':\r\n                case 'geojson':\r\n                    return TC.Consts.mimeType.GEOJSON;\r\n                case 'gml':\r\n                    return TC.Consts.mimeType.GML;\r\n                case 'gpx':\r\n                    return TC.Consts.mimeType.GPX;\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n\r\n        if (Array.isArray(options.url) || options.urls) {\r\n            var urls = options.urls || options.url;\r\n            urls = urls.map(function (elm, idx) {\r\n                return TC.proxify(elm);\r\n            });\r\n            vectorOptions = {\r\n                url: urls,\r\n                format: new ol.format.KMLCustom({\r\n                    showPointNames: false\r\n                }),\r\n                projection: options.crs\r\n            };\r\n        }\r\n        else if (options.url && options.type !== TC.Consts.layerType.WFS) {\r\n            vectorOptions = {\r\n                url: TC.proxify(options.url),\r\n                projection: options.crs\r\n            };\r\n            vectorOptions.format = getFormatFromName(options.format) || getFormatFromName(getMimeTypeFromUrl(options.url)) || getFormatFromName(options.type);\r\n            vectorOptions.loader = createGenericLoader(vectorOptions.url, vectorOptions.format);\r\n            usesGenericLoader = true;\r\n        }\r\n        else if (options.data) {\r\n            vectorOptions = {\r\n                projection: options.crs,\r\n                loader: function (extent, resolution, projection) {\r\n                    self.parent.state = TC.Layer.state.LOADING;\r\n                    if (self.parent.map) {\r\n                        self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                            layer: self.parent\r\n                        });\r\n                    }\r\n                    var format = this.getFormat();\r\n                    try {\r\n                        var fs = format.readFeatures(options.data, {\r\n                            featureProjection: projection\r\n                        });\r\n                        this.addFeatures(fs);\r\n                        self.parent.state = TC.Layer.state.IDLE;\r\n                        if (self.parent.map) {\r\n                            self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                                layer: self.parent, newData: data\r\n                            });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        self.parent.state = TC.Layer.state.IDLE;\r\n                        if (self.parent.map) {\r\n                            self.parent.map.trigger(TC.Consts.event.LAYERERROR, {\r\n                                layer: self.parent, reason: e.message\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            vectorOptions.format = getFormatFromName(options.format) || getFormatFromName(options.type);\r\n        }\r\n        else if (options.type == TC.Consts.layerType.WFS) {\r\n            var outputFormat;\r\n            var mimeType;\r\n            switch (options.outputFormat) {\r\n                case TC.Consts.format.JSON:\r\n                    outputFormat = new ol.format.GeoJSON({\r\n                        geometryName: options.geometryName\r\n                    });\r\n                    mimeType = 'json';\r\n                    break;\r\n                case TC.Consts.format.GML3:\r\n                    outputFormat = new ol.format.GML3();\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n                default:\r\n                    outputFormat = new ol.format.GML2();\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n            }\r\n            vectorOptions = {\r\n                format: outputFormat,\r\n                loader: function (extent, resolution, projection) {\r\n                    var sOrigin = this;\r\n                    var serviceUrl = options.url;\r\n                    if (serviceUrl) {\r\n                        self.parent.state = TC.Layer.state.LOADING;\r\n                        self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                            layer: self.parent\r\n                        });\r\n                        var ajaxOptions = {};\r\n                        var crs = projection.getCode();\r\n                        var version = options.version || '1.1.0';\r\n                        var url = serviceUrl;\r\n                        var featureType = Array.isArray(options.featureType) ? options.featureType : [options.featureType];\r\n                        if (!options.properties || (options.properties instanceof Array && !options.properties.length) || !(Object.keys(options.properties).length)) {\r\n                            url = url + '?service=WFS&' +\r\n                                'version=' + version + '&request=GetFeature&typename=' + featureType.join(',') + '&' +\r\n                                'outputFormat=' + mimeType + '&srsname=' + crs;\r\n                            if (extent[0] !== -Infinity && extent[1] !== -Infinity && extent[2] !== Infinity && extent[3] !== Infinity) {\r\n                                url = url + '&bbox=' + extent.join(',') + ',' + crs;\r\n                            }\r\n\r\n                            if (options.maxFeatures)\r\n                                url = url + \"maxFeatures=\" + options.maxFeatures;\r\n                        }\r\n                        else {\r\n                            ajaxOptions.method = 'POST';\r\n                            switch (mimeType) {\r\n                                case 'json':\r\n                                    ajaxOptions.responseType = TC.Consts.mimeType.JSON;\r\n                                    break;\r\n                                default:\r\n                                    ajaxOptions.responseType = TC.Consts.mimeType.XML;\r\n                                    break;\r\n\r\n                            }\r\n                            //ajaxOptions.contentType = TC.Consts.mimeType.XML;\r\n                            //ajaxOptions.processData = false;\r\n                            //var formatter = new ol.format.WFS();\r\n                            //var doc = formatter.writeGetFeature({\r\n                            //    featureNS: 'wfs',\r\n                            //    featurePrefix: 'feature',\r\n                            //    featureTypes: featureType,\r\n                            //    srsName: crs\r\n                            //});\r\n                            //var filter = [];\r\n                            //filter[0] = '<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\">';\r\n                            //if (options.properties.length > 1) {\r\n                            //    filter[filter.length] = '<ogc:And>';\r\n                            //}\r\n                            //for (var j = 0; j < options.properties.length; j++) {\r\n                            //    var prop = options.properties[j];\r\n                            //    filter[filter.length] = '<ogc:PropertyIsEqualTo matchCase=\"true\"><ogc:PropertyName>';\r\n                            //    filter[filter.length] = prop.name;\r\n                            //    filter[filter.length] = '</ogc:PropertyName><ogc:Literal>';\r\n                            //    filter[filter.length] = prop.value;\r\n                            //    filter[filter.length] = '</ogc:Literal></ogc:PropertyIsEqualTo>';\r\n                            //}\r\n                            //if (options.properties.length > 1) {\r\n                            //    filter[filter.length] = '</ogc:And>';\r\n                            //}\r\n                            //filter[filter.length] = '</ogc:Filter>';\r\n                            //filter = filter.join('');\r\n                            //var $doc = $(doc);\r\n                            //$doc.find('Query').each(function (idx, query) {\r\n                            //    $(query).html(filter);\r\n                            //});\r\n                            //ajaxOptions.data = $('<div>').append($doc).html();\r\n                            var gml = [];\r\n                            gml[gml.length] = '<wfs:GetFeature xmlns:wfs=\"http://www.opengis.net/wfs\" service=\"WFS\" version=\"';\r\n                            gml[gml.length] = version;\r\n                            gml[gml.length] = '\" outputFormat=\"';\r\n                            gml[gml.length] = options.outputFormat;\r\n                            if (options.maxFeatures) {\r\n                                gml[gml.length] = '\" maxFeatures=\"';\r\n                                gml[gml.length] = options.maxFeatures;\r\n                            }\r\n                            gml[gml.length] = '\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/';\r\n                            gml[gml.length] = version;\r\n                            gml[gml.length] = '/wfs.xsd\">';\r\n                            for (var i = 0; i < featureType.length; i++) {\r\n                                gml[gml.length] = '<wfs:Query typeName=\"feature:';\r\n                                gml[gml.length] = featureType[i];\r\n                                gml[gml.length] = '\" srsName=\"';\r\n                                gml[gml.length] = crs;\r\n                                gml[gml.length] = '\">';\r\n                                if (options.propertynames) {\r\n                                    var pPrefix = version === '1.1.0' ? 'wfs' : 'ogc';\r\n                                    var _arrProperties = typeof (options.propertynames) === \"string\" ? options.propertynames.split(\",\") : options.propertynames\r\n                                    if (options.geometryName)\r\n                                        _arrProperties.push(options.geometryName)\r\n                                    for (var i; i < _arrProperties.length; i++) {\r\n                                        gml[gml.length] = '<' + pPrefix + ':PropertyName>' + _arrProperties[i].trim() + '</' + pPrefix + ':PropertyName>';\r\n                                    }\r\n                                }\r\n                                gml[gml.length] = options.properties.getText();\r\n                                gml[gml.length] = '</wfs:Query>';\r\n                            }\r\n                            gml[gml.length] = '</wfs:GetFeature>';\r\n\r\n                            ajaxOptions.data = gml.join('');\r\n                            ajaxOptions.contentType = TC.Consts.mimeType.XML;\r\n                        }\r\n                        ajaxOptions.url = url;\r\n                        self._requestUrl = url;\r\n                        TC.ajax(ajaxOptions).then(function (response) {\r\n                            const data = response.data;\r\n                            const feats = outputFormat.readFeatures(data);\r\n                            const triggerLayerUpdate = function () {\r\n                                self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                                    layer: self.parent, newData: data\r\n                                });\r\n                            };\r\n                            const onFeaturesAdd = function (e) {\r\n                                if (e.layer === self.parent) {\r\n                                    self.parent.map.off(TC.Consts.event.FEATURESADD, onFeaturesAdd);\r\n                                    triggerLayerUpdate();\r\n                                }\r\n                            };\r\n                            if (feats.length) {\r\n                                sOrigin.addFeatures(feats);\r\n                                self.parent.map.on(TC.Consts.event.FEATURESADD, onFeaturesAdd);\r\n                            }\r\n                            else {\r\n                                triggerLayerUpdate();\r\n                            }\r\n                            self.parent.state = TC.Layer.state.IDLE;\r\n                        });\r\n                    }\r\n                },\r\n                //strategy: ol.loadingstrategy.all(),\r\n                projection: options.crs\r\n            };\r\n        }\r\n\r\n        source = new ol.source.Vector(vectorOptions);\r\n\r\n        if (usesGenericLoader) {\r\n            source.on(CHANGE, function (e) {\r\n                if (self.parent.map) {\r\n                    self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                        layer: self.parent\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        source._tcLayer = self.parent;\r\n\r\n        var markerStyle = options.style && options.style.marker ? options.style.marker : TC.Cfg.styles.marker;\r\n        if (!options.style || !options.style.marker) {\r\n            markerStyle = TC.Util.extend({}, markerStyle, {\r\n                anchor: TC.Cfg.styles.point.anchor\r\n            });\r\n        }\r\n\r\n        // Si habilitamos el clustering la fuente es especial\r\n        if (options.cluster) {\r\n            source = new ol.source.Cluster({\r\n                projection: options.crs,\r\n                distance: options.cluster.distance,\r\n                source: source\r\n            });\r\n\r\n            // Animación\r\n            if (options.cluster.animate) {\r\n                var getCurrentCoordinates = function (fromCoords, toCoords, duration, start) {\r\n                    var fraction = Math.min((Date.now() - start) / duration, 1);\r\n                    var dx = (toCoords[0] - fromCoords[0]) * fraction;\r\n                    var dy = (toCoords[1] - fromCoords[1]) * fraction;\r\n                    return [fromCoords[0] + dx, fromCoords[1] + dy];\r\n                };\r\n                var animate = function (parent, child) {\r\n                    var start = Date.now();\r\n                    var pCoords = parent.getGeometry().getCoordinates();\r\n                    var cCoords = child.getGeometry().getCoordinates();\r\n                    child.setGeometry(new ol.geom.Point(pCoords));\r\n                    var step = function step() {\r\n                        var coords = getCurrentCoordinates(pCoords, cCoords, TC.Consts.CLUSTER_ANIMATION_DURATION, start);\r\n                        child.setGeometry(new ol.geom.Point(coords));\r\n                        if (coords[0] !== cCoords[0] && coords[1] !== cCoords[1]) {\r\n                            requestAnimationFrame(step);\r\n                        }\r\n                        else {\r\n                            clusterCache.splice(clusterCache.indexOf(parent), 1);\r\n                        }\r\n                    };\r\n                    requestAnimationFrame(step);\r\n                };\r\n                var clusterCache = [];\r\n                source.addEventListener(REMOVEFEATURE, function (e) {\r\n                    var features = e.feature.get('features');\r\n                    if (features && features.length > 1) {\r\n                        clusterCache.push(e.feature);\r\n                    }\r\n                });\r\n                source.addEventListener(ADDFEATURE, function (e) {\r\n                    var features = e.feature.get('features');\r\n                    if (features) {\r\n                        var coords = features[0].getGeometry().getCoordinates();\r\n                        if (features.length > 1) {\r\n                            var match = clusterCache.filter(function (elm) {\r\n                                var elmCoords = elm.getGeometry().getCoordinates();\r\n                                return elmCoords[0] === coords[0] && elmCoords[1] === coords[1];\r\n                            });\r\n                            if (match.length) {\r\n                                clusterCache.splice(clusterCache.indexOf(match[0]), 1);\r\n                            }\r\n                        }\r\n                        var parent = clusterCache.filter(function (elm) {\r\n                            var children = elm.get('features');\r\n                            if (children && children.length > 0) {\r\n                                var child = children.filter(function (cElm) {\r\n                                    var cCoords = cElm.getGeometry().getCoordinates();\r\n                                    return cCoords[0] === coords[0] && cCoords[1] === coords[1];\r\n                                });\r\n                                return child.length > 0;\r\n                            }\r\n                        });\r\n                        if (parent.length) {\r\n                            animate(parent[parent.length - 1], e.feature);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var s = source;\r\n        do {\r\n            s.addEventListener(ADDFEATURE, function (e) {\r\n                var olFeat = e.feature;\r\n                // OL3 dibuja el tamaño original del icono del marcador, lo escalamos si es necesario:\r\n                var style = getNativeFeatureStyle(olFeat, true);\r\n                if (style) {\r\n                    setScaleFunction(style.getImage(), markerStyle.width, olFeat);\r\n                }\r\n            });\r\n            if (TC.Util.isFunction(s.getSource)) {\r\n                s = s.getSource();\r\n            }\r\n            else {\r\n                s = null;\r\n            }\r\n        }\r\n        while (s);\r\n\r\n        source.addEventListener(ADDFEATURE, function (e) {\r\n            const olFeat = e.feature;\r\n\r\n            const addFeatureToLayer = function (feat) {\r\n                var addFn;\r\n                switch (true) {\r\n                    case TC.feature.Point && feat instanceof TC.feature.Point:\r\n                        addFn = self.parent.addPoint;\r\n                        break;\r\n                    case TC.feature.Polyline && feat instanceof TC.feature.Polyline:\r\n                        addFn = self.parent.addPolyline;\r\n                        break;\r\n                    case TC.feature.Polygon && feat instanceof TC.feature.Polygon:\r\n                        addFn = self.parent.addPolygon;\r\n                        break;\r\n                    case TC.feature.MultiPolygon && feat instanceof TC.feature.MultiPolygon:\r\n                        addFn = self.parent.addMultiPolygon;\r\n                        break;\r\n                    case TC.feature.MultiPolyline && feat instanceof TC.feature.MultiPolyline:\r\n                        addFn = self.parent.addMultiPolyline;\r\n                        break;\r\n                    default:\r\n                        addFn = self.parent.addFeature;\r\n                        break;\r\n                }\r\n                if (addFn) {\r\n                    var _timeout;\r\n                    addFn.call(self.parent, olFeat).then(function (f) {\r\n                        var features = olFeat.get('features');\r\n                        if (Array.isArray(features)) {\r\n                            // Es una feature de fuente ol.source.Cluster\r\n                            f.features = features.map(function (elm) {\r\n                                return new feat.constructor(elm);\r\n                            });\r\n                        }\r\n\r\n                        // Timeout porque OL3 no tiene evento featuresadded. El timeout evita ejecuciones a lo tonto.\r\n                        clearTimeout(_timeout);\r\n                        _timeout = setTimeout(function () {\r\n                            self.parent.map.trigger(TC.Consts.event.FEATURESADD, {\r\n                                layer: self.parent, features: [f]\r\n                            });\r\n                        }, 50);\r\n                    });\r\n                }\r\n            };\r\n\r\n            if (!olFeat._wrap || !olFeat._wrap.parent.layer) { // Solo actuar si no es una feature añadida desde la API\r\n                createFeatureFromNative(olFeat).then(addFeatureToLayer);\r\n            }\r\n        });\r\n\r\n        source.addEventListener(REMOVEFEATURE, function (e) {\r\n            var olFeat = e.feature;\r\n            if (olFeat._wrap) {\r\n                var idx = self.parent.features.indexOf(olFeat._wrap.parent);\r\n                if (idx > -1) {\r\n                    self.parent.features.splice(idx, 1);\r\n                    self.parent.map.trigger(TC.Consts.event.FEATUREREMOVE, {\r\n                        layer: self.parent, feature: olFeat._wrap.parent\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        source.addEventListener(ADDFEATURE, function (e) {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        source.addEventListener(REMOVEFEATURE, function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        source.addEventListener(CLEAR, function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.FEATURESCLEAR, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        var layerOptions = {\r\n            source: source\r\n        };\r\n\r\n        if (options.minResolution) {\r\n            layerOptions.minResolution = options.minResolution;\r\n        }\r\n        if (options.maxResolution) {\r\n            layerOptions.maxResolution = options.maxResolution;\r\n        }\r\n\r\n        // En KML conservamos el estilo que viene con el archivo, así que no entramos aquí.\r\n        // A no ser que tenga clusters, porque OL no soporta por defecto la combinación de estilo KML con clusters.\r\n        if (!(vectorOptions && vectorOptions.format instanceof ol.format.KML) || options.cluster) {\r\n            layerOptions.style = nativeStyle || options.styles;\r\n        }\r\n\r\n        return layerOptions;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createStyles = function (options) {\r\n        var self = this;\r\n\r\n        var dynamicStyle = false;\r\n\r\n        if (TC.Util.isFunction(options)) {\r\n            dynamicStyle = true;\r\n            self.styleFunction = function (olFeat) {\r\n                return createNativeStyle(options(olFeat));\r\n            }\r\n        }\r\n        else {\r\n            options = TC.Util.extend({}, options);\r\n            options.crs = options.crs || TC.Cfg.crs;\r\n            options.styles = options.styles || TC.Cfg.styles;\r\n            var isDynamicStyle = function isDynamicStyle(obj) {\r\n                for (var key in obj) {\r\n                    var prop = obj[key];\r\n                    switch (typeof prop) {\r\n                        case 'string':\r\n                            if (/^\\$\\{(.+)\\}$/.test(prop)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case 'object':\r\n                            if (isDynamicStyle(prop)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case 'function':\r\n                            return true;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n\r\n            dynamicStyle = !!(options.cluster && options.cluster.styles) || isDynamicStyle(options.styles);\r\n            self.styleFunction = function (olFeat) {\r\n                return createNativeStyle(self.parent.options, olFeat);\r\n            };\r\n        }\r\n\r\n        var nativeStyle = dynamicStyle ? self.styleFunction : self.styleFunction();\r\n\r\n        return nativeStyle;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setStyles = function (options) {\r\n        const self = this;\r\n        self.getLayer().then(function (olLayer) {\r\n            olLayer.setStyle(self.createStyles(options));\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createVectorLayer = function () {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var options = self.parent.options;\r\n\r\n        var layerOptions = self.createVectorSource(options, self.createStyles(options));\r\n        layerOptions.declutter = self.parent.options.declutter || false;\r\n        result = new ol.layer.Vector(layerOptions);\r\n        result._wrap = self;\r\n\r\n        self.addCommonEvents(result);\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.addFeatures = function (features) {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            var source = l;\r\n            while (TC.Util.isFunction(source.getSource)) {\r\n                source = source.getSource();\r\n            }\r\n            source.addFeatures(features);\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatures = function () {\r\n        var olLayer = this.getLayer();\r\n        if (olLayer instanceof ol.layer.Layer) {\r\n            return olLayer.getSource().getFeatures();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatureById = function (id) {\r\n        var olLayer = this.layer;\r\n        if (olLayer instanceof ol.layer.Layer) {\r\n            return olLayer.getSource().getFeatureById(id);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.removeFeature = function (feature) {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            if (feature.wrap.feature) {\r\n                var source = l.getSource();\r\n                source.removeFeature(feature.wrap.feature);\r\n            }\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.clearFeatures = function () {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            var source = l.getSource();\r\n            if (source.clearFeatures) {\r\n                source.clearFeatures();\r\n            }\r\n            else {\r\n                source.clear();\r\n            }\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setFeatureVisibility = function (feature, visible) {\r\n        var self = this;\r\n\r\n        var fillOptions = {\r\n            color: 'rgba(0, 0, 0, 0)'\r\n        };\r\n        var strokeOptions = {\r\n            color: 'rgba(0, 0, 0, 0)'\r\n        };\r\n        var displayNoneStyle = new ol.style.Style({\r\n            image: new ol.style.Circle({\r\n                radius: 0,\r\n                fill: new ol.style.Fill(fillOptions),\r\n                stroke: new ol.style.Stroke(strokeOptions)\r\n            }),\r\n            fill: new ol.style.Fill(fillOptions),\r\n            stroke: new ol.style.Stroke(strokeOptions)\r\n        });\r\n        var idx = self.parent.features.indexOf(feature);\r\n        if (idx >= 0) {\r\n            var olFeat = feature.wrap.feature;\r\n            self.getLayer().then(function (olLayer) {\r\n                if (visible && olFeat._originalStyle) {\r\n                    olFeat.setStyle(olFeat._originalStyle);\r\n                }\r\n                else {\r\n                    olFeat._originalStyle = olFeat.getStyle() || olLayer.getStyle();\r\n                    olFeat.setStyle(displayNoneStyle);\r\n                }\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getRGBA = function (color, opacity) {\r\n        return getRGBA(color, opacity);\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.findFeature = function (values) {\r\n        // TODO: añadir ol.animation.zoom\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getGetFeatureUrl = function () {\r\n        return this._requestUrl;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getDescribeFeatureTypeUrl = function () {\r\n        var self = this;\r\n        var layer = self.parent;\r\n        var version = layer.options.version || '1.1.0';\r\n        var url = layer.url;\r\n        var featureType = Array.isArray(layer.options.featureType) ? layer.options.featureType : [layer.options.featureType];\r\n        url = url + '?service=WFS&' + 'version=' + version + '&request=DescribeFeatureType&typename=' + featureType.join(',') + '&outputFormat=XMLSCHEMA';\r\n        return url;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.sendTransaction = function (inserts, updates, deletes) {\r\n        const self = this;\r\n        const getNativeFeature = function (feat) {\r\n            return feat.wrap.feature;\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            const olInserts = inserts.map(getNativeFeature);\r\n            const olUpdates = updates.map(getNativeFeature);\r\n            const olDeletes = deletes.map(getNativeFeature);\r\n            if (inserts.length || updates.length || deletes.length) {\r\n                self.getLayer().then(function (olLayer) {\r\n                    var source = olLayer.getSource();\r\n                    var format = new ol.format.WFS();\r\n                    var options = self.parent.options;\r\n                    var transaction = format.writeTransaction(olInserts, olUpdates, olDeletes, {\r\n                        featurePrefix: options.featurePrefix,\r\n                        featureNS: options.featureNS,\r\n                        featureType: options.featureType[0]\r\n                    });\r\n                    var ajaxOptions = {\r\n                        url: self.parent.url,\r\n                        method: 'POST',\r\n                        responseType: TC.Consts.mimeType.XML,\r\n                        data: transaction.outerHTML\r\n                    };\r\n                    TC.ajax(ajaxOptions)\r\n                        .then(function (response) {\r\n                            const data = response.data;\r\n                            var er = data.getElementsByTagName('ExceptionReport')[0];\r\n                            var errorObj = {\r\n                                reason: ''\r\n                            };\r\n                            if (er) {\r\n                                var e = er.getElementsByTagName('Exception')[0];\r\n                                if (e) {\r\n                                    errorObj.code = e.getAttribute('exceptionCode');\r\n                                    var texts = e.getElementsByTagName('ExceptionText');\r\n                                    for (var i = 0, len = texts.length; i < len; i++) {\r\n                                        errorObj.reason += '\\n' + texts[i].innerHTML;\r\n                                    }\r\n                                }\r\n                                reject(errorObj);\r\n                            }\r\n                            else {\r\n                                var transactionResponse = format.readTransactionResponse(data);\r\n                                resolve(transactionResponse);\r\n                            }\r\n                        })\r\n                        .catch(function () {\r\n                            reject({\r\n                                code: '', reason: 'unknown'\r\n                            });\r\n                        });\r\n                });\r\n            }\r\n            else {\r\n                resolve(self.parent);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setDraggable = function (draggable, onend, onstart) {\r\n        var self = this;\r\n\r\n        //tiene que estar a nivel de control para poder retirarla después\r\n        //var interaction;\r\n        Promise.all([self.parent.map.wrap.getMap(), self.getLayer()]).then(function (olObjects) {\r\n            const olMap = olObjects[0];\r\n            const olLayer = olObjects[1];\r\n            if (draggable) {\r\n                var interactionOptions = {\r\n                    layers: [olLayer],\r\n                    features: new ol.Collection(olLayer.getSource().getFeatures())\r\n                };\r\n                self.interaction = new ol.interaction.Translate(interactionOptions);\r\n                if (TC.Util.isFunction(onend)) {\r\n                    self.interaction.on('translateend', function (e) {\r\n                        if (e.features.getLength()) {\r\n                            onend(e.features.item(0)._wrap.parent);\r\n                        }\r\n                    });\r\n                }\r\n                if (TC.Util.isFunction(onstart)) {\r\n                    self.interaction.on('translatestart', function (e) {\r\n                        if (e.features.getLength()) {\r\n                            onstart(e.features.item(0)._wrap.parent);\r\n                        }\r\n                    });\r\n                }\r\n                olMap.addInteraction(self.interaction);\r\n            }\r\n            else if (self.interaction) {\r\n                olMap.removeInteraction(self.interaction);\r\n\r\n                // GLS: En IE no muestra la manita en el over sobre marcadores trasladables.\r\n                if (TC.Util.detectIE() && self._handlerDraggablePointerMove && TC.Util.isFunction(self._handlerDraggablePointerMove)) {\r\n                    olMap.un('pointermove', self._handlerDraggablePointerMove);\r\n                    delete self._handlerDraggablePointerMove;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeaturesInExtent = function (extent, tolerance) {\r\n        var self = this;\r\n        var features = this.layer.getSource().getFeatures();\r\n        var featuresInExtent = [];\r\n\r\n        if (tolerance) {\r\n            var leftCorner = self.parent.map.getPixelFromCoordinate([extent[0], extent[1]]);\r\n            var rightCorner = self.parent.map.getPixelFromCoordinate([extent[2], extent[3]]);\r\n            leftCorner[0] -= tolerance[0] / 2;\r\n            leftCorner[1] += tolerance[1];\r\n            rightCorner[0] += tolerance[0] / 2;\r\n            extent = self.parent.map.getCoordinateFromPixel(leftCorner).concat(self.parent.map.getCoordinateFromPixel(rightCorner));\r\n        }\r\n\r\n        for (var i = 0; i < features.length; i++) {\r\n            var feat = features[i];\r\n\r\n            var geometry = feat.getGeometry();\r\n            var coordinate = geometry.getCoordinates();\r\n\r\n            if (ol.extent.containsCoordinate(extent, coordinate)) {\r\n                featuresInExtent.push(feat._wrap.parent);\r\n            }\r\n        }\r\n\r\n        return featuresInExtent;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getAttribution = function () {\r\n        return null;\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        self._trigger = function (e) {\r\n            if (map.view === TC.Consts.view.PRINTING) {\r\n                return;\r\n            }\r\n            var featureCount = 0;\r\n            map.wrap.map.forEachFeatureAtPixel(e.pixel,\r\n                function (feature, layer) {\r\n                    if (feature._wrap && feature._wrap.parent.showsPopup) {\r\n                        featureCount++;\r\n                    }\r\n                },\r\n                {\r\n                    hitTolerance: hitTolerance\r\n                });\r\n            if (!featureCount) {\r\n                // GLS: lanzo el evento click, para que los controles que no pueden heredar de click y definir un callback pueda suscribirse al evento\r\n                self.parent.map.trigger(TC.Consts.event.CLICK, {\r\n                    coordinate: e.coordinate, pixel: e.pixel\r\n                });\r\n                self.parent.callback(e.coordinate, e.pixel);\r\n            }\r\n            // Seguimos adelante si no se han pinchado featuers\r\n            return featureCount === 0;\r\n        };\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.activate = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            olMap.on(SINGLECLICK, self._trigger);\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.deactivate = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            olMap.un(SINGLECLICK, self._trigger);\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ScaleBar.prototype.render = function () {\r\n        var self = this;\r\n        if (!self.ctl) {\r\n            self.ctl = new ol.control.ScaleLine({\r\n                target: self.parent.div\r\n            });\r\n        }\r\n        else {\r\n            self.ctl.updateElement_();\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.ScaleBar.prototype.getText = function () {\r\n        var self = this;\r\n        if (self.ctl) {\r\n            return self.ctl.renderedHTML_;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            const div = self.parent.div;\r\n            self.zCtl = new ol.control.Zoom({\r\n                target: div\r\n            });\r\n            // Ponemos para render una función modificada, para evitar que en los pinch zoom haya errores de este tipo:\r\n            // AssertionError: Assertion failed: calculated value (1.002067782531452) ouside allowed range (0-1)\r\n\r\n            self.zsCtl = new ol.control.ZoomSlider({\r\n                render: function (e) {\r\n                    if (!e.frameState || !e.frameState.viewState || olMap.getView().getMinResolution() <= e.frameState.viewState.resolution) {\r\n                        // GLS: para evitar que el slider se configure en horizontal\r\n                        var render = function () {\r\n                            if (this.element.offsetWidth > this.element.offsetHeight) {\r\n                                if (!self.requestSliderSize) {\r\n                                    self.requestSliderSize = window.requestAnimationFrame(render.bind(this));\r\n                                }\r\n\r\n                                window.requestAnimationFrame(render.bind(this));\r\n                            } else if (this.element.offsetWidth < this.element.offsetHeight) {\r\n                                if (self.requestSliderSize) {\r\n                                    window.cancelAnimationFrame(self.requestSliderSize);\r\n                                    delete self.requestSliderSize;\r\n                                }\r\n                                ol.control.ZoomSlider.render.call(this, e);\r\n                            }\r\n                        };\r\n                        render.call(this);\r\n                    }\r\n                }\r\n            });\r\n            self.zsCtl.setTarget(div);\r\n\r\n            olMap.addControl(self.zsCtl);\r\n            olMap.addControl(self.zCtl);\r\n\r\n            div.querySelectorAll('button').forEach(function (button) {\r\n                button.classList.add('tc-ctl-btn', self.parent.CLASS + '-btn');\r\n                button.style.display = 'block';\r\n                button.innerHTML = '';\r\n                if (button.matches('.ol-zoom-in')) {\r\n                    button.classList.add(self.parent.CLASS + '-btn-zoomin');\r\n                    button.setAttribute('title', self.parent.getLocaleString('zoomIn'));\r\n                }\r\n                if (button.matches('.ol-zoom-out')) {\r\n                    button.classList.add(self.parent.CLASS + '-btn-zoomout');\r\n                    button.setAttribute('title', self.parent.getLocaleString('zoomOut'));\r\n                }\r\n            });\r\n\r\n            const zoomSlider = div.querySelector('.ol-zoomslider');\r\n            zoomSlider.classList.add(self.parent.CLASS + '-bar');\r\n            zoomSlider.querySelector('.ol-zoomslider-thumb').classList.add(self.parent.CLASS + '-slider');\r\n\r\n            map.on(TC.Consts.event.BASELAYERCHANGE, self.refresh.bind(self));\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.refresh = function () {\r\n        /*\r\n        var map = this.parent.map;\r\n        var olMap = map.wrap.map;\r\n\r\n        olMap.removeControl(self.zsCtl);\r\n        var res = map.getResolutions();\r\n        self.zsCtl = new ol.control.ZoomSlider(\r\n            {\r\n                target: this.parent.div,\r\n                \"maxResolution\": res[0],\r\n                \"minResolution\": res[res.length - 1]\r\n            });\r\n\r\n        olMap.addControl(self.zsCtl);\r\n        $(map.div).find('.ol-zoomslider').addClass(self.parent.CLASS + '-bar').find('.ol-zoomslider-thumb').addClass(self.parent.CLASS + '-slider');\r\n        */\r\n        var self = this;\r\n        var map = self.parent.map.wrap.map;\r\n        // Puede ser que se llame a refresh antes de que esté inicializado ol.control.ZoomSlider. En ese caso llamamos a render que lo inicializa.\r\n        // Como render necesita un ol.MapEvent, esperamos al evento POSTRENDER.\r\n\r\n        self.parent.renderPromise().then(function () {\r\n            if (self.zsCtl.sliderInitialized_) {\r\n                var res = map.getView().getResolution();\r\n                self.zsCtl.setThumbPosition_(res);\r\n            }\r\n            else {\r\n                map.once(POSTRENDER, function (e) {\r\n                    self.zsCtl.render(e);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBarHome.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            const div = self.parent.div;\r\n\r\n            self.z2eCtl = new ol.control.ZoomToExtent({\r\n                target: div, extent: map.initialExtent, tipLabel: ''\r\n            });\r\n\r\n            olMap.addControl(self.z2eCtl);\r\n\r\n            div.querySelectorAll('button').forEach(function (button) {\r\n                button.style.display = 'block';\r\n                button.innerHTML = '';\r\n            });\r\n            const homeBtn = div.querySelector('.ol-zoom-extent button');\r\n            homeBtn.classList.add('tc-ctl-btn', self.parent.CLASS + '-btn');\r\n            homeBtn.setAttribute('title', self.parent.getLocaleString('zoomToInitialExtent'));\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBarHome.prototype.setInitialExtent = function (extent) {\r\n        this.z2eCtl.extent = extent;\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.register = function (map) {\r\n        const self = this;\r\n        self.map = map;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            self._coordsTrigger = function (e) {\r\n                self.parent.coordsToClick(e);\r\n            };\r\n\r\n            map.wrap.getMap().then(function (olMap) {\r\n                self.olMap = olMap;\r\n\r\n                if (!self.parent.map.on3DView) {\r\n                    var projection = olMap.getView().getProjection();\r\n                    self.parent.crs = projection.getCode();\r\n                    self.parent.units = projection.getUnits();\r\n                } else {\r\n                    self.parent.crs = self.parent.map.view3D.crs;\r\n                    self.parent.units = TC.Consts.units.DEGREES;\r\n                }\r\n\r\n                self.parent.isGeo = self.parent.units === ol.proj.Units.DEGREES;\r\n\r\n                //$(olMap.getViewport()).add(self.parent.div);\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.onMouseMove = function (e) {\r\n        var self = this;\r\n        if (self.map.wrap.map) {\r\n            var coords = self.map.wrap.map.getEventCoordinate(e);\r\n            if (coords) {\r\n                if (self.parent.isGeo) {\r\n                    self.parent.latLon = coords.reverse();\r\n                } else {\r\n                    self.parent.xy = coords;\r\n                }\r\n\r\n                self.parent.update.apply(self.parent, arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.register = function (map) {\r\n        var self = this;\r\n        self.map = map;\r\n\r\n        self._snapTrigger = function (e) {\r\n            if (e.dragging)\r\n                return;\r\n\r\n            self.initSnap(self.olMap.getEventCoordinate(e), e.pixel);\r\n        };\r\n\r\n        self._postcomposeTrigger = function (e) {\r\n            self.duringTrackSnap(e);\r\n        };\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n            self.olMap = olMap;\r\n        });\r\n    };\r\n\r\n    var getTrackingLine = function () {\r\n        var self = this;\r\n\r\n        return self.parent.layerTracking.features.filter(function (f) {\r\n            return f instanceof TC.feature.Polyline;\r\n        })[0];\r\n    }\r\n\r\n    TC.wrap.control.Geolocation.prototype.hasCoordinates = function () {\r\n        var self = this;\r\n\r\n        return self.parent.layerTracking.features.length > 0 && self.parent.layerTracking.features[0].geometry.length >= 1;\r\n    };\r\n\r\n    var getTime = function (timeFrom, timeTo) {\r\n        var diff = timeTo - timeFrom;\r\n        var d = {\r\n            s: Math.floor((diff / 1000) % 60),\r\n            m: Math.floor(((diff / (1000 * 60)) % 60)),\r\n            h: Math.floor(((diff / (1000 * 60 * 60)) % 24))\r\n        };\r\n\r\n        return TC.Util.extend({}, d, { toString: (\"00000\" + d.h).slice(-2) + ':' + (\"00000\" + d.m).slice(-2) + ':' + (\"00000\" + d.s).slice(-2) });\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.showElevationMarker = function (d) {\r\n        var self = this;\r\n\r\n        TC.wrap.control.ResultsPanel.prototype.showElevationMarker.call(self, {\r\n            data: d,\r\n            layer: self.parent.layerTrack,\r\n            coords: self.parent.chart.coordinates\r\n        })\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.hideElevationMarker = function () {\r\n        TC.wrap.control.ResultsPanel.prototype.hideElevationMarker.call(this);\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.addWaypoint = function (position, properties) {\r\n        var self = this;\r\n\r\n        var waypoint = new ol.Feature({\r\n            geometry: new ol.geom.Point([position[0], position[1], properties.ele, properties.time], ('XYZM'))\r\n        });\r\n        waypoint.setProperties(properties);\r\n\r\n        self.parent.layerTracking.wrap.layer.getSource().addFeature(waypoint);\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.addPosition = function (position, heading, m, speed, accuracy, altitudeAccuracy, altitude) {\r\n        var self = this;\r\n\r\n        var x = Math.round(position[0]);\r\n        var y = Math.round(position[1]);\r\n\r\n        var line = getTrackingLine.call(this);\r\n        if (self.parent.layerTracking.features && line) {\r\n            var last = line.geometry.length > 0 && line.geometry[line.geometry.length - 1];\r\n            if (last && last.length == 0) {\r\n                self.parent.layerTracking.features[0].geometry.push([x, y, altitude, m]);\r\n                line.wrap.feature.getGeometry().appendCoordinate([x, y, altitude, m]);\r\n            }\r\n            else {\r\n                var lx = Math.round(last[0]);\r\n                var ly = Math.round(last[1]);\r\n\r\n                if (x != lx || y != ly) {\r\n                    self.parent.layerTracking.features[0].geometry.push([x, y, altitude, m]);\r\n                    line.wrap.feature.getGeometry().appendCoordinate([x, y, altitude, m]);\r\n                }\r\n            }\r\n\r\n            TC.Util.storage.setSessionLocalValue(self.parent.Const.LocalStorageKey.TRACKINGTEMP, self.formattedToStorage(self.parent.layerTracking).features);\r\n        }\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && speed != undefined && speed > 0 && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.positionChangehandler = function (geoposition) {\r\n        const self = this;\r\n        var accuracy, heading, speed, altitude, altitudeAccuracy;\r\n\r\n        if (!getTrackingLine.call(this)) {\r\n            self.parent.setTracking(false);\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            if (geoposition && geoposition.coords) {\r\n                self.parent.layerGPS.clearFeatures();\r\n\r\n                accuracy = (geoposition.coords.accuracy / self.parent.map.getMetersPerUnit()) || 0;\r\n                heading = geoposition.coords.heading || geoposition[2] || 0;\r\n                speed = geoposition.coords.speed ? geoposition.coords.speed * 3.6 : 0;\r\n                altitude = geoposition.coords.altitude || 0;\r\n                altitudeAccuracy = geoposition.coords.altitudeAccuracy || 0;\r\n\r\n                if (self.parent.layerTracking) {\r\n                    var position_ = [geoposition.coords && geoposition.coords.longitude || geoposition[0], geoposition.coords && geoposition.coords.latitude || geoposition[1]];\r\n                    var projectedPosition = TC.Util.reproject(position_, 'EPSG:4326', self.parent.map.crs);\r\n\r\n                    self.addPosition(projectedPosition, heading, new Date().getTime(), speed, accuracy, altitudeAccuracy, altitude);\r\n\r\n                    var coords = getTrackingLine.call(self).geometry;\r\n                    var len = coords.length;\r\n                    if (len >= 2) {\r\n                        self.parent.deltaMean = (coords[len - 1][3] - coords[0][3]) / (len - 1);\r\n                    }\r\n\r\n                    self.parent.trigger(self.parent.Const.Event.POSITIONCHANGE, {\r\n                        pd: {\r\n                            \"position\": projectedPosition,\r\n                            \"altitude\": altitude,\r\n                            \"accuracy\": accuracy,\r\n                            \"heading\": TC.Util.radToDeg(heading),\r\n                            \"speed\": speed\r\n                        }\r\n                    });\r\n\r\n                    Promise.all([self.parent.layerGPS.addPoint(projectedPosition, {\r\n                        radius: 4,\r\n                        fillColor: '#00CED1',\r\n                        fillOpacity: 1,\r\n                        strokeColor: '#ffffff',\r\n                        strokeWidth: 2,\r\n                        showsPopup: false\r\n                    }), self.parent.layerGPS.addCircle([projectedPosition, accuracy], {\r\n                        strokeColor: '#00CED1',\r\n                        strokeWidth: 0.4,\r\n                        fillColor: '#ffffff',\r\n                        fillOpacity: 0.2,\r\n                        showsPopup: false\r\n                    })]).then(function (features) {\r\n                        const marker = features[0];\r\n                        const accuracyCircle = features[1];\r\n                        self.parent.geopositionTracking = true;\r\n\r\n                        if (self.parent.firstPosition == false) {\r\n                            self.parent.firstPosition = true;\r\n\r\n                            if (!self.parent.trackCenterButton) {\r\n                                self.parent.trackCenterButton = self.parent.div.querySelector('.' + self.parent.CLASS + '-track-center');\r\n                                self.parent.trackCenterButton.querySelector('button').addEventListener('click', function () {\r\n                                    self.parent.layerGPS.map.zoomToFeatures(self.parent.layerGPS.features);\r\n\r\n                                    if (!self.parent.track.infoPanel.isVisible()) {\r\n                                        self.parent.track.infoPanel.doVisible();\r\n                                    }\r\n\r\n                                    if (self.parent.track.infoPanel.isMinimized()) {\r\n                                        self.parent.track.infoPanel.maximize();\r\n                                    }\r\n                                });\r\n\r\n                                var controlContainer = self.parent.map.getControlsByClass('TC.control.ControlContainer')[0];\r\n                                if (controlContainer) {\r\n                                    self.parent.trackCenterButton = controlContainer.addElement({ side: controlContainer.SIDE.LEFT, htmlElement: self.parent.trackCenterButton });\r\n                                } else {\r\n                                    self.parent.map.div.appendChild(self.parent.trackCenterButton);\r\n                                }\r\n\r\n                            }\r\n                            self.parent.trackCenterButton.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n                            self.parent.layerGPS.map.zoomToFeatures(self.parent.layerGPS.features);\r\n                        }\r\n\r\n                        resolve({\r\n                            marker: marker, accuracy: accuracyCircle\r\n                        });\r\n                    });\r\n\r\n                } else { resolve(null); }\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.setTracking = function (tracking) {\r\n        var self = this;\r\n\r\n        if (tracking) {\r\n            self.parent.firstPosition = false;\r\n            var sessionwaypoint = [];\r\n\r\n            var nativeTrackingFeature;\r\n\r\n            if (self.parent.sessionTracking) {\r\n\r\n                var JSONParser = new TC.wrap.parser.JSON();\r\n                var features = JSONParser.parser.readFeatures(self.parent.sessionTracking);\r\n                if (features && self.parent.storageCRS !== self.parent.map.crs) {\r\n                    features = features.map(function (feature) {\r\n                        var clone = feature.clone();\r\n                        clone.getGeometry().transform(self.parent.storageCRS, self.parent.map.crs);\r\n                        return clone;\r\n                    });\r\n                }\r\n\r\n                var coordinates = features.filter(function (feature) {\r\n                    var type = feature.getGeometry().getType().toLowerCase();\r\n                    if (type === 'point') { sessionwaypoint.push(feature); }\r\n                    return type === 'linestring' || type === 'multilinestring';\r\n                })[0].getGeometry().getCoordinates();\r\n\r\n                nativeTrackingFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString(coordinates, ('XYZM')),\r\n                    tracking: true\r\n                });\r\n\r\n            } else {\r\n                nativeTrackingFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString([], ('XYZM')),\r\n                    tracking: true\r\n                });\r\n            }\r\n\r\n            if (nativeTrackingFeature) {\r\n\r\n                TC.wrap.Feature.createFeature(nativeTrackingFeature).then(function (tcFeature) {\r\n                    self.parent.layerTracking.addFeature(tcFeature);\r\n\r\n                    if (tcFeature.geometry.length > 1) {\r\n                        self.parent.map.zoomToFeatures(self.parent.layerTracking.features);\r\n                    }\r\n\r\n                    if (sessionwaypoint.length > 0) {\r\n                        Promise.all(sessionwaypoint.map(function (waypoint) {\r\n                            return TC.wrap.Feature.createFeature(waypoint);\r\n                        })).then(function (features) {\r\n                            if (features) {\r\n                                features.forEach(function (feature) {\r\n                                    self.parent.layerTracking.addFeature(feature);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    self.parent.currentPositionWaiting = self.parent.getLoadingIndicator().addWait();\r\n\r\n                    if (!self.currentPositionTrk) {\r\n                        self.currentPositionTrk = [];\r\n                    }\r\n\r\n                    var getCurrentPositionInterval;\r\n                    var getCurrentPositionRequest = 0;\r\n                    var errorTimeout = 0;\r\n                    var toast = false;\r\n                    var options = {\r\n                        enableHighAccuracy: true, timeout: 600000\r\n                    };\r\n\r\n                    function getCurrentPosition(errorCallback) {\r\n                        var id = getCurrentPositionRequest++;\r\n                        navigator.geolocation.getCurrentPosition(\r\n                            function (data) {\r\n                                clearInterval(getCurrentPositionInterval);\r\n                                self.parent.getLoadingIndicator().removeWait(self.parent.currentPositionWaiting);\r\n                                self.positionChangehandler(data).then(function (obj) {\r\n                                    if (self.parent.geopositionTracking == true && obj && obj.marker && obj.accuracy) {\r\n                                        self.currentPositionTrk.push(navigator.geolocation.watchPosition(self.positionChangehandler.bind(self), self.parent.onGeolocateError.bind(self.parent), options));\r\n                                    }\r\n                                });\r\n                            },\r\n                            errorCallback ? errorCallback :\r\n                                function (error) {\r\n                                    switch (error.code) {\r\n                                        case error.TIMEOUT:\r\n                                            if (errorTimeout > 10) {\r\n                                                clearInterval(getCurrentPositionInterval);\r\n                                                self.parent.onGeolocateError.call(self.parent, error);\r\n                                            } else {\r\n                                                errorTimeout++;\r\n                                                getCurrentPosition(function () {\r\n                                                    clearInterval(getCurrentPositionInterval);\r\n                                                    if (!toast) {\r\n                                                        toast = true;\r\n                                                        self.parent.onGeolocateError.call(self.parent, error);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                            break;\r\n                                        default:\r\n                                            clearInterval(getCurrentPositionInterval);\r\n                                            self.parent.onGeolocateError.call(self.parent, error);\r\n                                    }\r\n                                }, {\r\n                                timeout: 5000 + id,\r\n                                maximumAge: 10,\r\n                                enableHighAccuracy: true\r\n                            }\r\n                        );\r\n                    }\r\n                    getCurrentPositionInterval = setInterval(getCurrentPosition, 1000);\r\n\r\n                    setTimeout(function () {\r\n                        if (self.parent.layerTracking && self.parent.layerTracking.features && self.parent.layerTracking.features.length > 0 && self.parent.layerTracking.features[0].geometry.length == 0) {\r\n                            clearInterval(getCurrentPositionInterval);\r\n\r\n                            self.parent.getLoadingIndicator().removeWait(self.parent.currentPositionWaiting);\r\n                            self.map.toast(self.parent.getLocaleString(\"geo.error.permission_denied\"), {\r\n                                type: TC.Consts.msgType.WARNING\r\n                            });\r\n                            self.parent.track.activateButton.classList.remove(TC.Consts.classes.HIDDEN);\r\n                            self.parent.track.deactivateButton.classList.add(TC.Consts.classes.HIDDEN);\r\n                        }\r\n                    }, options.timeout + 1000); // Wait extra second\r\n\r\n                });\r\n            }\r\n        } else {\r\n            self.parent.firstPosition = false;\r\n\r\n            if (self.currentPositionTrk) {\r\n                self.currentPositionTrk = self.currentPositionTrk instanceof Array ? self.currentPositionTrk : [self.currentPositionTrk];\r\n\r\n                self.currentPositionTrk.forEach(function (watch) {\r\n                    navigator.geolocation.clearWatch(watch);\r\n                });\r\n\r\n                self.currentPositionTrk = [];\r\n            }\r\n\r\n            if (self.parent.trackCenterButton)\r\n                self.parent.trackCenterButton.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.activateSnapping = function () {\r\n        var self = this;\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            self.olMap.on([POINTERMOVE, SINGLECLICK], self._snapTrigger);\r\n            self.olMap.on(POSTCOMPOSE, self._postcomposeTrigger);\r\n        }\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.deactivateSnapping = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            if (!TC.Util.detectMobile()) {\r\n                olMap.un([POINTERMOVE, SINGLECLICK], self._snapTrigger);\r\n                olMap.un(POSTCOMPOSE, self._postcomposeTrigger);\r\n            }\r\n\r\n            if (self.snapInfo) {\r\n                olMap.removeOverlay(self.snapInfo);\r\n            }\r\n\r\n            if (self.snapInfoElement) {\r\n                self.snapInfoElement.style.display = 'none';\r\n            }\r\n\r\n            if (self.snapLine) {\r\n                delete self.snapLine;\r\n                olMap.render();\r\n            }\r\n        });\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.clear = function (layer) {\r\n        var self = this;\r\n\r\n        if (layer) {\r\n            layer.clearFeatures();\r\n        }\r\n\r\n        attachedDTD = false;\r\n\r\n        self.deactivateSnapping.call(self);\r\n    };\r\n    var vectorCtx;\r\n    TC.wrap.control.Geolocation.prototype.duringTrackSnap = function (e) {\r\n        var self = this;\r\n\r\n        var vectorContext = vectorCtx = e.vectorContext;\r\n\r\n        if (vectorContext && self.snapLine) {\r\n            if (typeof (vectorContext.setFillStrokeStyle) === 'function')\r\n                vectorContext.setFillStrokeStyle(null, new ol.style.Stroke({\r\n                    color: 'rgba(197, 39, 55, 1)',\r\n                    width: 1\r\n                }));\r\n\r\n            if (typeof (vectorContext.drawGeometry) === 'function')\r\n                vectorContext.drawGeometry(self.snapLine.wrap.feature.getGeometry());\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.endSnap = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            /* cartel */\r\n            if (self.snapInfo) {\r\n                olMap.removeOverlay(self.snapInfo);\r\n            }\r\n            if (self.snapInfoElement) {\r\n                self.snapInfoElement.style.display = 'none';\r\n            }\r\n            /* línea */\r\n            if (self.snapLine) {\r\n                delete self.snapLine;\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.initSnap = function (coordinate, eventPixel) {\r\n        var self = this;\r\n\r\n        if (self.parent.layerTrack) {\r\n            var vectorSource = self.parent.layerTrack.wrap.layer.getSource();\r\n            var closestFeature = vectorSource.getClosestFeatureToCoordinate(coordinate);\r\n\r\n            if (closestFeature !== null) {\r\n                var geometry = closestFeature.getGeometry();\r\n                var closestPoint = geometry.getClosestPoint(coordinate);\r\n\r\n                const pixel = self.parent.map.getPixelFromCoordinate(closestPoint);\r\n                const distance = Math.sqrt(\r\n                    Math.pow(eventPixel[0] - pixel[0], 2) +\r\n                    Math.pow(eventPixel[1] - pixel[1], 2));\r\n\r\n                if (distance > self.parent.snappingTolerance) {\r\n                    self.endSnap();\r\n                } else {\r\n                    var coordinates = [coordinate, [closestPoint[0], closestPoint[1]]];\r\n\r\n                    if (!self.snapLine) self.snapLine = new TC.feature.Polyline(coordinates);\r\n                    else self.snapLine.wrap.feature.getGeometry().setCoordinates(coordinates);\r\n\r\n                    // información del punto\r\n                    if (!self.snapInfoElement)\r\n                        self.snapInfoElement = document.getElementsByClassName('tc-ctl-geolocation-track-snap-info')[0];\r\n\r\n                    self.snapInfoElement.style.display = 'block';\r\n\r\n                    if (!self.snapInfo) {\r\n                        self.snapInfo = new ol.Overlay({\r\n                            element: self.snapInfoElement,\r\n                            offset: [5, 18]\r\n                        });\r\n\r\n                        self.olMap.addOverlay(self.snapInfo);\r\n                    }\r\n\r\n                    if (self.snapInfo.getMap() == undefined)\r\n                        self.snapInfo.setMap(self.olMap);\r\n\r\n                    self.snapInfo.setPosition(coordinate);\r\n\r\n                    var data = {};\r\n                    if (closestFeature.getGeometry().getType() != \"LineString\") {\r\n                        if (closestFeature.getKeys().indexOf('name') > -1)\r\n                            data.n = closestFeature.get('name');\r\n                    }\r\n\r\n                    var locale = self.parent.map.options.locale && self.parent.map.options.locale.replace('_', '-') || undefined;\r\n                    data.x = self.map.wrap.isGeo() ? closestPoint[0].toLocaleString(locale, { minimumFractionDigits: 5 }) : Math.round(closestPoint[0]).toLocaleString(locale);\r\n                    data.y = self.map.wrap.isGeo() ? closestPoint[1].toLocaleString(locale, { minimumFractionDigits: 5 }) : Math.round(closestPoint[1]).toLocaleString(locale);\r\n\r\n                    if (self.map.wrap.isGeo()) {\r\n                        data.isGeo = true;\r\n                    }\r\n\r\n                    var getZ = function (position) {\r\n                        return closestPoint[position] ? (Math.round(closestPoint[position] * 100) / 100).toLocaleString(locale) : undefined;\r\n                    };\r\n                    var getM = function (position) {\r\n                        return closestPoint[position] > 0 ? new Date(closestPoint[position]).toLocaleString(locale) : undefined;\r\n                    };\r\n\r\n                    if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYZM) {\r\n                        data.z = getZ(2);\r\n                        data.m = getM(3);\r\n                    } else if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYZ) {\r\n                        data.z = getZ(2);\r\n                    } else if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYM) {\r\n                        data.m = getM(2);\r\n                    }\r\n\r\n                    if (data) {\r\n                        self.parent.getRenderedHtml(self.parent.CLASS + '-track-snapping-node', data, function (html) {\r\n                            self.snapInfoElement.innerHTML = html;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        self.olMap.render();\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.drawTrackingData = function (track) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            const featurePromises = [];\r\n\r\n            const JSONParser = new TC.wrap.parser.JSON();\r\n            const features = JSONParser.parser.readFeatures(track.data);\r\n\r\n            features.filter(function (feature) {\r\n                return feature.getGeometry().getType().toLowerCase() === 'linestring' || feature.getGeometry().getType().toLowerCase() === 'multilinestring';\r\n            }).forEach(function (feature) {\r\n                feature.getGeometry().setCoordinates(feature.getGeometry().getCoordinates(), track.layout);\r\n            });\r\n\r\n            self.activateSnapping.call(self);\r\n\r\n            for (var i = 0, len = features.length; i < len; i++) {\r\n                featurePromises.push(TC.wrap.Feature.createFeature(features[i]));\r\n            }\r\n\r\n            Promise.all(featurePromises).then(function (feats) {\r\n                feats.forEach(function (feat) {\r\n                    if (feat) {\r\n                        self.parent.layerTrack.addFeature(feat);\r\n                    }\r\n                });\r\n                self.parent.map.zoomToFeatures(self.parent.layerTrack.features);\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.formattedFromStorage = function (storageData) {\r\n        const self = this;\r\n\r\n        if (self.parent.storageCRS !== self.parent.map.crs) {\r\n            var features = new ol.format.GeoJSON().readFeatures(storageData);\r\n            if (features) {\r\n                features = features.map(function (feature) {\r\n                    var clone = feature.clone();\r\n                    clone.getGeometry().transform(self.parent.storageCRS, self.parent.map.crs);\r\n                    return clone;\r\n                });\r\n\r\n                return new ol.format.GeoJSON().writeFeatures(features);\r\n            }\r\n        }\r\n\r\n        return storageData;\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.formattedToStorage = function (layer, removeTrackingProperty, notReproject) {\r\n        var self = this;\r\n\r\n        var parser = new TC.wrap.parser.JSON();\r\n        parser = parser.parser;\r\n\r\n        var features = layer.wrap.layer.getSource().getFeatures();\r\n        var layout;\r\n\r\n        features = features.map(function (feature) {\r\n            if (feature.getGeometry() instanceof ol.geom.LineString) {\r\n                layout = feature.getGeometry().getLayout();\r\n            }\r\n\r\n            if (removeTrackingProperty && feature.getProperties().tracking) {\r\n                feature.unset(\"tracking\");\r\n            }\r\n\r\n            if (!notReproject && self.parent.map.crs !== self.parent.storageCRS) {\r\n                var clone = feature.clone();\r\n                clone.getGeometry().transform(self.parent.map.crs, self.parent.storageCRS);\r\n\r\n                return clone;\r\n            }\r\n\r\n            return feature;\r\n        }).sort(function (a, b) {\r\n\r\n            if (a.getGeometry() instanceof ol.geom.Point &&\r\n                !(b.getGeometry() instanceof ol.geom.Point)) {\r\n                return -1;\r\n            }\r\n\r\n            if (b.getGeometry() instanceof ol.geom.Point &&\r\n                !(a.getGeometry() instanceof ol.geom.Point)) {\r\n                return 2;\r\n            }\r\n\r\n            if (a.getProperties().name < b.getProperties().name) { return -1; }\r\n            if (a.getProperties().name > b.getProperties().name) { return 1; }\r\n\r\n            return 0;\r\n        });\r\n\r\n        return {\r\n            features: parser.writeFeatures(features), layout: layout\r\n        };\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.export = function (type, li) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var features = [];\r\n\r\n            self.parent.getTrackingData(li).then(function (data) {\r\n                if (data) {\r\n\r\n                    var olFeatures = new ol.format.GeoJSON().readFeatures(data.data);\r\n\r\n                    if (olFeatures.length === 0) {\r\n                        var geoJSON = self.parent.getTrackingData(li);\r\n                        olFeatures = new ol.format.GeoJSON().readFeatures(geoJSON);\r\n                    }\r\n\r\n                    features = olFeatures.map(function (feature) {\r\n                        var clone = feature.clone();\r\n                        clone.getGeometry().transform(self.parent.map.crs, 'EPSG:4326');\r\n\r\n                        if (!(clone.getGeometry() instanceof ol.geom.LineString)) {\r\n                            return clone;\r\n                        } else {\r\n                            return new ol.Feature({\r\n                                geometry: new ol.geom.MultiLineString([clone.getGeometry().getCoordinates()], ('XYZM'))\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                switch (type) {\r\n                    case 'GPX':\r\n                        resolve(features ? new ol.format.GPXCustom().writeFeatures(features) : null);\r\n                        break;\r\n                    case 'KML':\r\n                        resolve(features ? new ol.format.KMLCustom().writeFeatures(features) : null);\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    var segmentsUnion = function (lineStrings) {\r\n        var mergedIndex = [];\r\n        var coords = [];\r\n        if (lineStrings.length > 1) {\r\n\r\n            if (lineStrings[0].length == 4) {\r\n                lineStrings = lineStrings.sort(function (a, b) {\r\n                    if (a[0][3] == b[0][3])\r\n                        return 0;\r\n                    else if (a[0][3] < b[0][3])\r\n                        return -1;\r\n                    else return 1;\r\n                });\r\n            }\r\n\r\n            for (var ls = 0; ls < lineStrings.length; ls++) {\r\n                var lineString = lineStrings[ls];\r\n                var nextLineIndex = -1;\r\n                var distance = Infinity;\r\n\r\n                var last = lineString.getLastCoordinate();\r\n                for (var nls = ls + 1; nls < lineStrings.length; nls++) {\r\n                    var first = lineStrings[nls].getFirstCoordinate();\r\n                    var d = Math.hypot(last[0] - first[0], last[1] - first[1]);\r\n                    if (d < distance) {\r\n                        nextLineIndex = nls;\r\n                        distance = d;\r\n                    }\r\n                }\r\n\r\n                if (mergedIndex.length < lineStrings.length) {\r\n                    if (mergedIndex.indexOf(ls) == -1) {\r\n                        mergedIndex.push(ls);\r\n                        coords = coords.concat(lineString.getCoordinates());\r\n                    }\r\n                    if (mergedIndex.indexOf(nextLineIndex) == -1) {\r\n                        mergedIndex.push(nextLineIndex);\r\n                        coords = coords.concat(lineStrings[nextLineIndex].getCoordinates());\r\n                    }\r\n                }\r\n            }\r\n\r\n            //self.map.toast(self.parent.getLocaleString(\"geo.trk.simulateWarning\"), { type: TC.Consts.msgType.WARNING });\r\n\r\n            return coords;\r\n        }\r\n\r\n        return lineStrings[0].getCoordinates();\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.processImportedFeatures = function (options) {\r\n        var self = this;\r\n\r\n        var source = self.parent.layerTrack.wrap.layer.getSource();\r\n        var fileName = self.parent.importedFileName;\r\n        var names = [];\r\n        var toAdd = [];\r\n        var toRemove = [];\r\n        var maybeRemove = [];\r\n        var features = source.getFeatures();\r\n\r\n        var segments = [];\r\n        var coord = [];\r\n\r\n        var getName = function (feature) {\r\n            if (feature.getProperties().hasOwnProperty(\"name\")) {\r\n                if (feature.getProperties().name.trim().length > 0)\r\n                    names.push(feature.getProperties().name);\r\n                else names.push(fileName);\r\n            }\r\n            else names.push(fileName);\r\n        };\r\n\r\n        for (var f = 0; f < features.length; f++) {\r\n            var feature = features[f];\r\n\r\n            if (feature instanceof TC.Feature)\r\n                feature = features[f].wrap.feature;\r\n\r\n            if (feature.getGeometry() instanceof ol.geom.Point) {\r\n                coord.push(feature.getGeometry().getCoordinates());\r\n                maybeRemove.push(feature);\r\n            }\r\n            else if (feature.getGeometry() instanceof ol.geom.LineString) {\r\n                // GLS: 31/01/2018 Routes (<rte>) are converted into LineString geometries, and tracks (<trk>) into MultiLineString, por tanto, las líneas las cargamos como N Rutas, no las unimos como hasta ahora: // segments.push(feature.getGeometry());                \r\n                getName(feature);\r\n                toAdd.push(new ol.Feature({\r\n                    geometry: new ol.geom.LineString(feature.getGeometry().getCoordinates(), feature.getGeometry().getLayout())\r\n                }));\r\n                toRemove.push(feature);\r\n            }\r\n            else if (feature.getGeometry() instanceof ol.geom.MultiLineString) {\r\n                var clone = feature.clone();\r\n                getName(clone);\r\n\r\n                var ls = clone.getGeometry().getLineStrings();\r\n\r\n                var coords = segmentsUnion(ls);\r\n                toAdd.push(new ol.Feature({\r\n                    geometry: new ol.geom.LineString(coords, feature.getGeometry().getLayout())\r\n                }));\r\n                toRemove.push(feature);\r\n            }\r\n        }\r\n\r\n        if (segments.length > 0) {\r\n            var coords = segmentsUnion(segments);\r\n            toAdd.push(new ol.Feature({\r\n                geometry: new ol.geom.LineString(coords)\r\n            }));\r\n        }\r\n\r\n        if (coord.length > 0 && maybeRemove.length == features.length) {\r\n            toAdd.push(new ol.Feature({\r\n                geometry: new ol.geom.LineString(coord)\r\n            }));\r\n        }\r\n\r\n        if (toRemove.length > 0)\r\n            for (var i = 0; i < toRemove.length; i++)\r\n                source.removeFeature(toRemove[i]);\r\n\r\n        if (toAdd.length > 0) {\r\n            var sameName = function (array, element) {\r\n                var indices = [];\r\n                var idx = array.indexOf(element);\r\n                while (idx != -1) {\r\n                    indices.push(idx);\r\n                    idx = array.indexOf(element, idx + 1);\r\n\r\n                    if (indices.length > 1)\r\n                        return true;\r\n                }\r\n\r\n                return indices.length > 1 ? true : false;\r\n            };\r\n\r\n            var featureToAdd;\r\n            var index = 0;\r\n            var processAdd = function () {\r\n                const promises = toAdd.map(function (ta, idx) {\r\n                    return new Promise(function (resolve, reject) {\r\n                        if (featureToAdd) {\r\n                            source.removeFeature(featureToAdd);\r\n                        }\r\n\r\n                        var name;\r\n                        if (names.length > idx) {\r\n                            var name = names[idx];\r\n                            if (sameName(names, name))\r\n                                name = '[' + (idx + 1) + ']' + ' ' + name;\r\n                        }\r\n\r\n                        self.parent.importedFileName = name ? name : fileName;\r\n\r\n                        featureToAdd = toAdd[idx];\r\n                        source.addFeature(featureToAdd);\r\n\r\n                        self.parent.saveTrack({\r\n                            message: self.parent.getLocaleString('geo.trk.upload.ok', { trackName: name ? name : fileName }),\r\n                            importedFileName: name ? name : fileName,\r\n                            notReproject: options.notReproject\r\n                        }).then(function (importedIndex) {\r\n                            if (idx == 0) {\r\n                                index = importedIndex;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                    });\r\n                });\r\n                return Promise.all(promises);\r\n            };\r\n            processAdd().then(function () {\r\n\r\n                self.parent.layerTrack.setVisibility(false);\r\n                self.parent.layerTrack.clearFeatures();\r\n\r\n                self.parent.trigger(self.parent.Const.Event.IMPORTEDTRACK, { index: index });\r\n\r\n                delete self.parent.importedFileName;\r\n                self.parent.getLoadingIndicator().removeWait(options.wait);\r\n            });\r\n        } else {\r\n\r\n            if (self.parent.layerTrack) {\r\n                self.parent.map.removeLayer(self.parent.layerTrack);\r\n                self.parent.layerTrack = undefined;\r\n            }\r\n\r\n            delete self.parent.importedFileName;\r\n            self.parent.getLoadingIndicator().removeWait(options.wait);\r\n            TC.alert(self.parent.getLocaleString(\"geo.trk.upload.error4\"));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.import = function (wait, data, type) {\r\n        var self = this;\r\n        var vectorSource;\r\n        var listenerKey;\r\n\r\n        if (data && data.text) {\r\n\r\n            var layerOptions = self.parent.layerTrack.wrap.createVectorSource({\r\n                data: data.text,\r\n                type: type\r\n            });\r\n            vectorSource = layerOptions.source;\r\n\r\n            listenerKey = vectorSource.on('change', function (e) {\r\n                if (vectorSource.getState() == 'ready') {\r\n                    ol.Observable.unByKey(listenerKey);\r\n                    self.processImportedFeatures(wait);\r\n                }\r\n            });\r\n\r\n            var olLayer = self.parent.layerTrack.wrap.layer;\r\n            olLayer.setSource(vectorSource);\r\n\r\n        } else {\r\n\r\n            if (self.parent.layerTrack) {\r\n                self.parent.map.removeLayer(self.parent.layerTrack);\r\n                self.parent.layerTrack = undefined;\r\n            }\r\n\r\n            delete self.parent.importedFileName;\r\n            self.parent.getLoadingIndicator().removeWait(wait);\r\n            TC.alert(self.parent.getLocaleString(\"geo.trk.upload.error4\"));\r\n        }\r\n    };\r\n\r\n    var idRequestAnimationFrame;\r\n    TC.wrap.control.Geolocation.prototype.simulateTrackEnd = function () {\r\n        var self = this;\r\n\r\n        self.parent.chartProgressClear();\r\n\r\n        if (self.simulateMarker) {\r\n            window.cancelAnimationFrame(idRequestAnimationFrame);\r\n            if (self.simulateMarker.layer.wrap.layer.getSource().getFeatures().length > 0)\r\n                self.simulateMarker.layer.removeFeature(self.simulateMarker);\r\n\r\n            delete self.simulateMarker;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.simulateTrack = function () {\r\n        var self = this;\r\n\r\n        var coordinates;\r\n        var features = self.parent.layerTrack.wrap.layer.getSource().getFeatures();\r\n        for (var ls = 0; ls < features.length; ls++) {\r\n            if (features[ls].getGeometry() instanceof ol.geom.LineString) {\r\n                coordinates = features[ls].getGeometry().getCoordinates();\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (coordinates && coordinates.length > 0) {\r\n            var first = coordinates[0];\r\n\r\n            var setSimulateMarker = function () {\r\n                return new Promise(function (resolve, reject) {\r\n                    if (!self.simulateMarker) {\r\n                        self.parent.layerTrack.addPoint(first.slice(0, 2), {\r\n                            radius: 7,\r\n                            fillColor: '#ff0000',\r\n                            fillOpacity: 0.5,\r\n                            strokeColor: '#ffffff',\r\n                            strokeWidth: 2\r\n                        }).then(function (f) {\r\n                            resolve(f);\r\n                        });\r\n                    } else {\r\n                        self.simulateMarker.setCoords(first.slice(0, 2));\r\n                        resolve(self.simulateMarker);\r\n                    }\r\n                });\r\n            };\r\n            setSimulateMarker().then(function (f) {\r\n                self.simulateMarker = f;\r\n\r\n                var animationFrameFraction = function () {\r\n                    var trackLength = coordinates.length;\r\n                    var start, finish;\r\n                    var duration;\r\n                    var fraction;\r\n                    var hasTime = false;\r\n\r\n                    const toLength = function (coords) {\r\n                        if (self.parent.map.crs !== self.parent.map.options.utmCrs) {\r\n                            return TC.Util.reproject(coords, self.parent.map.crs, self.parent.map.options.utmCrs);\r\n                        }\r\n\r\n                        return coords;\r\n                    };\r\n\r\n                    var arCoordinates = coordinates;\r\n                    if (arCoordinates[0].length == 4 && arCoordinates[0][3] > 0) {\r\n                        start = arCoordinates[0][3];\r\n                        finish = arCoordinates[arCoordinates.length - 1][3];\r\n                        hasTime = true;\r\n                    } else {\r\n                        arCoordinates[0][3] = Date.now();\r\n\r\n                        for (var i = 1; i < arCoordinates.length; i++) {\r\n                            var done;\r\n                            arCoordinates[i][3] = 0;\r\n\r\n                            if (i + 1 < arCoordinates.length) {\r\n                                done = new ol.geom.LineString(toLength(arCoordinates.slice(i - 1, i + 1))).getLength();\r\n                            } else {\r\n                                done = new ol.geom.LineString(toLength(arCoordinates.slice(i - 1))).getLength();\r\n                            }\r\n\r\n                            arCoordinates[i][3] = arCoordinates[i - 1][3] + (3600000 * done / self.parent.walkingSpeed);\r\n                        }\r\n\r\n                        start = arCoordinates[0][3];\r\n                        finish = arCoordinates[arCoordinates.length - 1][3];\r\n                    }\r\n\r\n                    var trackFilm = new ol.geom.LineString(arCoordinates);\r\n                    var timestamp = start;\r\n                    var distance = 0;\r\n\r\n                    if (self.parent.map.crs !== self.parent.map.options.utmCrs) {\r\n                        distance = new ol.geom.LineString(toLength(JSON.parse(JSON.stringify(arCoordinates)))).getLength();\r\n                    } else {\r\n                        distance = trackFilm.getLength();\r\n                    }\r\n\r\n                    var done = 0;\r\n                    var getDoneAtM = function (m) {\r\n                        for (var i = 0; i < arCoordinates.length; i++) {\r\n                            if (arCoordinates[i][3] > m)\r\n                                return {\r\n                                    d: new ol.geom.LineString(toLength(arCoordinates.slice(0, i))).getLength(),\r\n                                    p: arCoordinates[i - 1].slice(0, 2)\r\n                                };\r\n                        }\r\n                    };\r\n\r\n                    var loopAtFraction = function () {\r\n\r\n                        if (!self.parent.simulate_paused) {\r\n                            var position = trackFilm.getCoordinateAtM(timestamp);\r\n                            var d = getDoneAtM(timestamp);\r\n\r\n                            if (fraction >= 1 || !position || !d) {\r\n                                self.simulateTrackEnd();\r\n                                var li = self.parent.getSelectedTrack();\r\n                                if (li)\r\n                                    self.parent.uiSimulate(false, li);\r\n\r\n                                if (self.parent.hasElevation) {\r\n                                    self.parent.chartProgressClear();\r\n                                }\r\n\r\n                                return;\r\n                            } else {\r\n\r\n                                if (self.parent.hasElevation) {\r\n                                    self.parent.chartSetProgress(d, position, distance, (hasTime ? self.parent._getTime(arCoordinates[0][3], position[3]) : false));\r\n                                }\r\n\r\n                                if (self.simulateMarker) {\r\n                                    var from = self.simulateMarker.getCoords();\r\n                                    var to = position;\r\n                                    var rotation = Math.atan2(to[1] - from[1], to[0] - from[0]) * 180 / Math.PI;\r\n\r\n                                    self.simulateMarker.setCoords(position);\r\n                                    //self.simulateMarker.setStyle({ angle: rotation });\r\n                                }\r\n\r\n                                if (self.parent.simulate_speed !== 1)\r\n                                    timestamp = timestamp + (self.parent.delta * self.parent.simulate_speed);\r\n                                else\r\n                                    timestamp = timestamp + self.parent.delta;\r\n                            }\r\n                        }\r\n\r\n                        idRequestAnimationFrame = requestAnimationFrame(loopAtFraction);\r\n                    };\r\n                    idRequestAnimationFrame = requestAnimationFrame(loopAtFraction);\r\n\r\n                };\r\n\r\n                const hasD3 = new Promise(function (resolve, reject) {\r\n                    if (window.d3) {\r\n                        resolve();\r\n                    }\r\n                    else {\r\n                        TC.loadJS(!window.d3, [TC.Consts.url.D3C3], function () {\r\n                            resolve();\r\n                        });\r\n                    }\r\n                });\r\n                hasD3.then(function () {\r\n                    idRequestAnimationFrame = requestAnimationFrame(animationFrameFraction);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.headingChangehandler = function (evt) {\r\n        var self = this;\r\n        if (!self.parent.track.infoOnMap) {\r\n            self.parent.track.infoOnMap = document.createElement('div');\r\n            const iomStyle = self.parent.track.infoOnMap.style;\r\n            iomStyle.overFlowY = 'scroll';\r\n            iomStyle.height = '200px';\r\n            iomStyle.width = '200px';\r\n            iomStyle.top = '0';\r\n            iomStyle.left = '100px';\r\n            iomStyle.backgroundColor = 'fuchsia';\r\n            iomStyle.position = 'absolute';\r\n            self.parent.map.div.appendChild(self.parent.track.infoOnMap);\r\n        }\r\n\r\n        self.parent.track.infoOnMap.style.display = '';\r\n\r\n        self.heading = evt.target.getHeading();\r\n\r\n        self.parent.track.infoOnMap.innerHTML = self.parent.track.infoOnMap.innerHTML +\r\n            '<br> <p> salta headingChangehandler </p> <br> <p> evt.target.getHeading(): ' + self.heading + ' </p>';\r\n\r\n\r\n\r\n        self.map.wrap.getMap().then(function (map) {\r\n            map.getView().setRotation(-self.heading);\r\n        });\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.orientationChangehandler = function (event) {\r\n        var self = this;\r\n\r\n        var view = self.map.wrap.map.getView();\r\n        var center = view.getCenter();\r\n        var resolution = view.getResolution();\r\n        var beta = event.target.getBeta() || 0;\r\n        var gamma = event.target.getGamma() || 0;\r\n\r\n        center[0] -= resolution * gamma * 25;\r\n        center[1] += resolution * beta * 25;\r\n\r\n        view.setCenter(view.constrainCenter(center));\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.pulsate = function (circle) {\r\n        var self = this;\r\n\r\n        self.pulsated = true;\r\n\r\n        var radius = circle.wrap.feature.getGeometry().getRadius();\r\n        var start = new Date().getTime();\r\n\r\n        var duration = 500;\r\n        var listenerKey;\r\n\r\n        var getRadius = function (elapsed) {\r\n            switch (true) {\r\n                case elapsed <= 50:\r\n                    return radius;\r\n                case elapsed > 50 && elapsed <= 100:\r\n                    return radius * 1.02;\r\n                case elapsed > 100 && elapsed <= 150:\r\n                    return radius * 1.05;\r\n                case elapsed > 150 && elapsed <= 200:\r\n                    return radius * 1.02;\r\n                case elapsed > 200 && elapsed <= 300:\r\n                    return radius;\r\n                case elapsed > 300 && elapsed <= 350:\r\n                    return radius * 1.02;\r\n                case elapsed > 350 && elapsed <= 400:\r\n                    return radius * 1.05;\r\n                case elapsed > 400 && elapsed <= 450:\r\n                    return radius * 1.02;\r\n                case elapsed > 450 && elapsed <= 500:\r\n                    return radius * 1;\r\n                default:\r\n                    return radius;\r\n            }\r\n        };\r\n        listenerKey = self.olMap.on(POSTCOMPOSE, function (event) {\r\n            var vectorContext = event.vectorContext;\r\n            var frameState = event.frameState;\r\n\r\n            var elapsed = frameState.time - start;\r\n\r\n            var f = circle.wrap.feature.getGeometry().clone();\r\n            var r = getRadius(elapsed);\r\n            f.setRadius(r);\r\n\r\n            vectorContext.setFillStrokeStyle(\r\n                new ol.style.Fill({\r\n                    color: 'rgba(0, 0, 0, 0.1)'\r\n                }),\r\n                new ol.style.Stroke({\r\n                    color: 'rgba(255, 0, 0, .8)', width: 1\r\n                })\r\n            );\r\n            vectorContext.drawCircleGeometry(f);\r\n\r\n            if (elapsed > duration) {\r\n                ol.Observable.unByKey(listenerKey);\r\n                return;\r\n            }\r\n\r\n            frameState.animate = true;\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.register = function (map) {\r\n        const self = this;\r\n        self.map = map;\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n            self.olMap = olMap;\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.showElevationMarker = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const data = options.data;\r\n        const layer = options.layer;\r\n        const coords = options.coords;\r\n\r\n        if (!self.elevationMarker) {\r\n            const elm = document.createElement('div');\r\n            elm.style.display = 'none';\r\n            elm.classList.add('tc-ctl-geolocation-trackMarker', 'elevation');\r\n            self.elevationMarker = new ol.Overlay({\r\n                element: elm,\r\n                offset: [0, -11],\r\n                positioning: ol.OverlayPositioning.CENTER_CENTER,\r\n                stopEvent: false\r\n            });\r\n        }\r\n\r\n        // GLS: si la capa del track está visible mostramos marcamos punto del gráfico en el mapa\r\n        if (layer.getVisibility() && layer.getOpacity() > 0) {\r\n            self.elevationMarker.getElement().style.display = '';\r\n            self.olMap.addOverlay(self.elevationMarker);\r\n            self.elevationMarker.setPosition(coords[data[0].index]);\r\n        }\r\n\r\n        // No centrar en el marker\r\n        //var extent = self.map.getExtent();\r\n        //var p = coords[data[0].index];\r\n        //if (p[0] >= extent[0] && p[0] <= extent[2] && p[1] >= extent[1] && p[1] <= extent[3]) { }\r\n        //else {\r\n        //    self.map.setCenter(p.slice(0, 2), { animate: true });\r\n        //}\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.hideElevationMarker = function () {\r\n        if (this.elevationMarker) {\r\n            this.elevationMarker.getElement().style.display = 'none';\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.coordsActivate = function () {\r\n        var self = this;\r\n\r\n        self.olMap.on(SINGLECLICK, self._coordsTrigger);\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.coordsDeactivate = function () {\r\n        var self = this;\r\n\r\n        self.olMap.un(SINGLECLICK, self._coordsTrigger);\r\n    };\r\n\r\n    TC.wrap.Parser = function () {\r\n    };\r\n\r\n    TC.wrap.Parser.prototype.read = function (data) {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.parser) {\r\n            if (!TC.Feature) {\r\n                TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n            }\r\n            result = self.parser.readFeatures(data).map(function (feat) {\r\n                return new TC.Feature(null, {\r\n                    id: feat.getId(), data: feat.getProperties()\r\n                });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.parser = {\r\n        WFS: function (options) {\r\n            this.parser = new ol.format.WFS(options);\r\n        },\r\n        JSON: function (options) {\r\n            this.parser = new ol.format.GeoJSON(options);\r\n        }\r\n    };\r\n    TC.inherit(TC.wrap.parser.WFS, TC.wrap.Parser);\r\n    TC.inherit(TC.wrap.parser.JSON, TC.wrap.Parser);\r\n\r\n    TC.wrap.control.OverviewMap.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        self.parent.layer.wrap.getLayer().then(function (olLayer) {\r\n            self.ovMap = new ol.control.OverviewMap({\r\n                target: self.parent.div,\r\n                collapsed: false,\r\n                collapsible: false,\r\n                className: self.parent.CLASS + ' ol-overviewmap',\r\n                layers: [olLayer]\r\n            });\r\n            self.ovMap._wrap = self;\r\n\r\n            /* 08/02/2019 GLS: \r\n                Establecemos el pixelRatio siempre a uno (aunque el control instancie un olMap internamente no admite el paso de la opción pixelRatio,\r\n                imposible de entender, por eso lo hago directamente), porque OL sólo atiende al valor al principio,\r\n                si después se hace zoom in/out del navegador, OL no atiende el cambio lo que provoca que el mapa se vea borroso, click se sitúa mal,\r\n                popup se sitúa entre otros efectos.\r\n                Lo gestionamos nosotros hasta que lo soporten del todo. Relacionado con las tareas/bugs:\r\n                    Bug 25976:Mapa situación en blanco\r\n                    Bug 25954:Canvas en blanco con zoom mayor al 100%\r\n                    Bug 23855:Mapa de situación se muestra en blanco\r\n            */\r\n            self.ovMap.getOverviewMap().pixelRatio_ = 1;\r\n\r\n            // Quitamos el drag&drop añadido en OL 4.1.0 machacando el overlay\r\n            self.ovMap.ovmap_.removeOverlay(self.ovMap.boxOverlay_);\r\n            var box = document.createElement('DIV');\r\n            box.className = 'ol-overviewmap-box';\r\n            box.style.boxSizing = 'border-box';\r\n            self.ovMap.boxOverlay_ = new ol.Overlay({\r\n                position: [0, 0],\r\n                positioning: ol.OverlayPositioning.BOTTOM_LEFT,\r\n                element: box\r\n            });\r\n            self.ovMap.ovmap_.addOverlay(self.ovMap.boxOverlay_);\r\n\r\n            // mantenemos el ancho y alto del canvas en números enteros\r\n            self.manageSize.call(self.ovMap.ovmap_);\r\n\r\n            self._boxElm = self.ovMap.boxOverlay_.getElement();\r\n\r\n            TC.loadJS(\r\n                !window.Draggabilly,\r\n                [TC.apiLocation + TC.Consts.url.DRAGGABILLY],\r\n                function () {\r\n                    var ovmMap = self.ovMap.ovmap_;\r\n                    const drag = new Draggabilly(self._boxElm);\r\n                    // Parcheamos Draggabilly para que respete las otras transformaciones, por ejemplo rotación.\r\n                    drag.positionDrag = function () {\r\n                        const style = this.element.style;\r\n                        const newTransform = 'translate3d( ' + this.dragPoint.x +\r\n                            'px, ' + this.dragPoint.y + 'px, 0)';\r\n                        if (style.transform.length) {\r\n                            const idxStart = style.transform.indexOf('translate3d');\r\n                            if (idxStart >= 0) {\r\n                                const idxEnd = style.transform.indexOf(')', idxStart);\r\n                                style.transform = style.transform.replace(style.transform.substring(idxStart, idxEnd + 1), newTransform);\r\n                            }\r\n                            else {\r\n                                style.transform = newTransform + ' ' + style.transform;\r\n                            }\r\n                        }\r\n                        else {\r\n                            style.transform = newTransform;\r\n                        }\r\n                    };\r\n                    drag.on('pointerDown', function (e) {\r\n                        drag.dragged = self._boxElm.cloneNode();\r\n                        drag.dragged.classList.add(TC.Consts.classes.ACTIVE);\r\n                        drag.dragged.style.position = 'absolute';\r\n                        self._boxElm.insertAdjacentElement('beforebegin', drag.dragged);\r\n                        if (map.maxExtent) {\r\n                            var bottomLeft = ovmMap.getPixelFromCoordinate([map.maxExtent[0], map.maxExtent[1]]);\r\n                            var topRight = ovmMap.getPixelFromCoordinate([map.maxExtent[2], map.maxExtent[3]]);\r\n                            var mapSize = ovmMap.getSize();\r\n                            const container = document.createElement('div');\r\n                            container.style.position = 'absolute';\r\n                            container.style.bottom = Math.round(mapSize[1] - bottomLeft[1]) + 'px';\r\n                            container.style.left = Math.round(bottomLeft[0]) + 'px';\r\n                            container.style.top = Math.round(topRight[1]) + 'px';\r\n                            container.style.right = Math.round(mapSize[0] - topRight[0]) + 'px';\r\n                            const viewport = ovmMap.getViewport();\r\n                            viewport.insertBefore(container, viewport.firstElementChild);\r\n                            drag.options.containment = container;\r\n                        }\r\n                    });\r\n                    drag.on('pointerUp', function (e) {\r\n                        drag.dragged.parentElement.removeChild(drag.dragged);\r\n                        if (map.maxExtent) {\r\n                            ovmMap.getViewport().removeChild(drag.options.containment);\r\n                            drag.options.containment = null;\r\n                        }\r\n                    });\r\n                    drag.on('dragMove', function (e, pointer, moveVector) {\r\n                        drag._delta = moveVector;\r\n                    });\r\n                    drag.on('dragEnd', function (e, pointer) {\r\n                        var olMap = self.ovMap.getMap();\r\n                        var view = olMap.getView();\r\n                        var centerPixel = ovmMap.getPixelFromCoordinate(view.getCenter());\r\n                        var newCenter = ovmMap.getCoordinateFromPixel([centerPixel[0] + drag._delta.x, centerPixel[1] + drag._delta.y]);\r\n                        var extent = map.getExtent();\r\n                        var halfWidth = (extent[2] - extent[0]) / 2;\r\n                        var halfHeight = (extent[3] - extent[1]) / 2;\r\n\r\n                        if (newCenter[0] + halfWidth > map.maxExtent[2]) {\r\n                            newCenter[0] = map.maxExtent[2] - halfWidth;\r\n                        }\r\n                        else if (newCenter[0] - halfWidth < map.maxExtent[0]) {\r\n                            newCenter[0] = map.maxExtent[0] + halfWidth;\r\n                        }\r\n                        if (newCenter[1] + halfHeight > map.maxExtent[3]) {\r\n                            newCenter[1] = map.maxExtent[3] - halfHeight;\r\n                        }\r\n                        else if (newCenter[1] - halfHeight < map.maxExtent[1]) {\r\n                            newCenter[1] = map.maxExtent[1] + halfHeight;\r\n                        }\r\n\r\n                        drag.setPosition(0, 0);\r\n                        delete drag._delta;\r\n                        map.setCenter(newCenter, { animate: true });\r\n                    });\r\n                });\r\n\r\n            map.wrap.getMap().then(function (olMap) {\r\n\r\n                // Modificamos mapa para que tenga la proyección correcta\r\n                self.reset();\r\n\r\n                const load = self.parent.div.querySelector('.' + self.parent.CLASS + '-load');\r\n                olLayer._wrap.$events.on(TC.Consts.event.BEFORETILELOAD, function () {\r\n                    load.classList.remove(TC.Consts.classes.HIDDEN);\r\n                    load.classList.add(TC.Consts.classes.VISIBLE);\r\n                });\r\n                olLayer._wrap.$events.on(TC.Consts.event.TILELOAD, function () {\r\n                    load.classList.remove(TC.Consts.classes.VISIBLE);\r\n                    load.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n\r\n                olMap.addControl(self.ovMap);\r\n\r\n                self.parent.isLoaded = true;\r\n                self.parent.trigger(TC.Consts.event.MAPLOAD);\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.reset = function (options) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const setLayer = function (layer, crs) {\r\n                if (layer.type === TC.Consts.layerType.WMTS) {\r\n                    var layerProjectionOptions = { crs: crs || self.parent.map.crs, oldCrs: layer.wrap.layer.getSource().getProjection().getCode() }; // , allowFallbackLayer: true\r\n\r\n                    if (layerProjectionOptions.oldCrs !== layerProjectionOptions.crs) {\r\n                        layer.setProjection(layerProjectionOptions);\r\n                    }\r\n                }\r\n\r\n                layer.wrap.getLayer().then(function (olLayer) {\r\n\r\n                    var olView = new ol.View(getResolutionOptions(self.parent.map.wrap, olLayer._wrap.parent));\r\n\r\n                    if (olView.getResolutions()) {\r\n                        olView.setResolution(olView.getResolutions().filter(function (res) {\r\n                            return res > olView.getResolutionForExtent(self.parent.map.getExtent(), olMap.getSize())\r\n                        }).reverse()[0]);\r\n\r\n                        olMap.setView(olView);\r\n                    } else if (olView.getProjection().getCode() !== olMap.getView().getProjection().getCode()) {\r\n                        olMap.setView(olView);\r\n                    }\r\n\r\n                    // para controlar el mapa en blanco en IE en la carga inicial\r\n                    olLayer._wrap.$events.one(TC.Consts.event.TILELOAD, function () {\r\n                        olMap.getLayers().getArray()[0].getSource().refresh();\r\n                    });\r\n\r\n                    if (layer !== self.parent.layer || olMap.getLayers().getArray().indexOf(layer) === -1) {\r\n\r\n                        self.parent.map.trigger(TC.Consts.event.OVERVIEWBASELAYERCHANGE, { oldLayer: layer !== self.parent.layer ? self.parent.layer : null, newLayer: layer });\r\n                        olMap.getLayers().forEach(function (l) {\r\n                            if (l instanceof ol.layer.Image || l instanceof ol.layer.Tile) {\r\n                                olMap.removeLayer(l);\r\n                            }\r\n                        });\r\n\r\n                        const load = self.parent.div.querySelector('.' + self.parent.CLASS + '-load');\r\n                        olLayer._wrap.$events.on(TC.Consts.event.BEFORETILELOAD, function () {\r\n                            load.classList.remove(TC.Consts.classes.HIDDEN);\r\n                            load.classList.add(TC.Consts.classes.VISIBLE);\r\n                        });\r\n                        olLayer._wrap.$events.on(TC.Consts.event.TILELOAD, function () {\r\n                            load.classList.remove(TC.Consts.classes.VISIBLE);\r\n                            load.classList.add(TC.Consts.classes.HIDDEN);\r\n                        });\r\n\r\n                        olMap.getLayers().insertAt(0, olLayer); // GLS: no usamos .addLayer(olLayer) para asegurar que la capa a añadir quede como fondo.\r\n                    }\r\n\r\n                    resolve(layer);\r\n                });\r\n            };\r\n\r\n            options = options || {};\r\n            var layer = options.layer || self.parent.layer;\r\n            if (self.parent.map && layer && self.ovMap) {\r\n                var olMap = self.ovMap.ovmap_;\r\n\r\n                layer.getCapabilitiesPromise().then(function () {\r\n\r\n                    var originalLayer = layer;\r\n\r\n                    if (!layer.isCompatible(self.parent.map.crs) && layer.wrap.getCompatibleMatrixSets(self.parent.map.crs).length === 0) {\r\n                        layer = layer.getFallbackLayer() || self.parent.defaultLayer;\r\n\r\n                        layer.getCapabilitiesPromise().then(function () {\r\n                            if (self.parent.map.on3DView && !layer.isCompatible(self.parent.map.crs)) {\r\n                                self.parent.map.loadProjections({\r\n                                    crsList: originalLayer.getCompatibleCRS(),\r\n                                    orderBy: 'name'\r\n                                }).then(function (projList) {\r\n                                    setLayer(originalLayer, projList[0].code);\r\n                                });\r\n                            } else if (layer.isCompatible(self.parent.map.crs)) {\r\n                                setLayer(layer);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        setLayer(layer);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.get3DCameraLayer = function () {\r\n        var self = this;\r\n        var result = null;\r\n        var camLayerId = '3DCamera';\r\n        var ovMap;\r\n\r\n        if (self.ovMap) {\r\n            ovMap = self.ovMap.getOverviewMap();\r\n            ovMap.getLayers().forEach(function (elm) {\r\n                if (elm.get('id') === camLayerId) {\r\n                    result = elm;\r\n                }\r\n            });\r\n\r\n            if (!result) {\r\n                var ovMap = self.ovMap.getOverviewMap();\r\n                var fovStyle = createNativeStyle({});\r\n                // Ponemos los cuadriláteros de fov sin relleno (por legibilidad)\r\n                fovStyle[0].getFill().setColor([0, 0, 0, 0]);\r\n                result = new ol.layer.Vector({\r\n                    id: camLayerId,\r\n                    source: new ol.source.Vector(),\r\n                    style: fovStyle\r\n                });\r\n                ovMap.addLayer(result);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.draw3DCamera = function (options) {\r\n        var self = this;\r\n\r\n        if (this.parent.map.isLoaded) {\r\n            self.is3D = !!options;\r\n            var camLayer = self.get3DCameraLayer();\r\n            if (camLayer) {\r\n                var feature;\r\n                options = options || {\r\n                };\r\n                var fov = options.fov;\r\n                var source = camLayer.getSource();\r\n                if (!fov || !fov.length) { // no vemos terreno o no estamos en vista 3D\r\n                    source.clear();\r\n                }\r\n                else {\r\n                    var features = source.getFeatures();\r\n                    if (!features.length) {\r\n                        feature = new ol.Feature();\r\n                        source.addFeature(feature);\r\n                    }\r\n                    else {\r\n                        feature = features[0];\r\n                    }\r\n                    feature.setGeometry(new ol.geom.Polygon([fov]));\r\n                }\r\n                var heading = (typeof options.heading === 'number') ? options.heading : 0;\r\n                self._boxElm.style.transform = 'rotate(' + heading + 'rad)';\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.enable = function () {\r\n        var self = this;\r\n        if (self.parent.layer && self.parent.layer.setVisibility) {\r\n            self.parent.layer.setVisibility(true);\r\n\r\n            /* GLS: bug 23855: mapa de situación se muestra en blanco\r\n                En el resize se valida el alto y el ancho y como el div padre (id = \"ovmap\") tiene display: none, \r\n                el ancho y el alto devuelven cero y por ello se muestra en blanco. \r\n                No vale con lanzar .trigger('resize') porque no utiliza los valores actuales del div, \r\n                sino los almacenados, por eso llamamos a updateSize que actualiza dichos valores.\r\n                https://tfsapp.tracasa.es:8088/tfs/web/wi.aspx?pcguid=4819cc6e-400e-4f70-ba7c-c18a830405aa&id=23855                \r\n            */\r\n            self.parent.wrap.ovMap.ovmap_.updateSize();\r\n\r\n            // Lo siguiente es para actualizar mapa de situación\r\n            const resizeEvent = document.createEvent('HTMLEvents');\r\n            resizeEvent.initEvent('resize', false, false);\r\n            self.parent.map.div.dispatchEvent(resizeEvent);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.disable = function () {\r\n        var self = this;\r\n        if (self.parent.layer && self.parent.layer.setVisibility) {\r\n            self.parent.layer.setVisibility(false);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.manageSize = function () {\r\n        const self = this;\r\n\r\n        TC.wrap.Map.prototype.manageSize.call(self);\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            TC.wrap.control.Click.prototype.register.call(self, map);\r\n            var _clickTrigger = self._trigger;\r\n            self._trigger = function (e) {\r\n                var result = _clickTrigger.call(self, e);\r\n                if (result) {\r\n                    self.parent.beforeRequest({ xy: e.pixel });\r\n                }\r\n                else {\r\n                    map.trigger(TC.Consts.event.NOFEATUREINFO, { control: self.parent });\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    };\r\n\r\n    var bufferElm;\r\n    var getElementText = function (elm) {\r\n        var text = elm.innerHTML || elm.textContent;\r\n        bufferElm = bufferElm || document.createElement(\"textarea\");\r\n        bufferElm.innerHTML = text;\r\n        return bufferElm.value;\r\n    };\r\n\r\n    var esriXmlParser = {\r\n        readFeatures: function (text) {\r\n            var result = [];\r\n            var dom = (new DOMParser()).parseFromString(text, 'text/xml');\r\n            if (dom.documentElement.tagName === 'FeatureInfoResponse') {\r\n                var fiCollections = dom.documentElement.getElementsByTagName('FeatureInfoCollection');\r\n                for (var i = 0, len = fiCollections.length; i < len; i++) {\r\n                    var fic = fiCollections[i];\r\n                    var layerName = fic.getAttribute('layername');\r\n                    var fInfos = fic.getElementsByTagName('FeatureInfo');\r\n                    for (var j = 0, lenj = fInfos.length; j < lenj; j++) {\r\n                        var fields = fInfos[j].getElementsByTagName('Field');\r\n                        var attributes = {\r\n                        };\r\n                        for (var k = 0, lenk = fields.length; k < lenk; k++) {\r\n                            var field = fields[k];\r\n                            attributes[getElementText(field.getElementsByTagName('FieldName')[0])] = getElementText(field.getElementsByTagName('FieldValue')[0]);\r\n                        }\r\n                        var feature = new ol.Feature(attributes);\r\n                        feature.setId(layerName + '.' + TC.getUID());\r\n                        result[result.length] = feature;\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n\r\n    var addLayerToService = function (service, layer, name) {\r\n        var path = layer.getPath(name);\r\n        service.layers.push({\r\n            name: name,\r\n            title: path[path.length - 1],\r\n            path: path.slice(1),\r\n            features: []\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.getFeatureInfo = function (coords, resolution, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        var map = self.parent.map;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            var targetServices = {};\r\n            var auxInfo = {};\r\n            const requestPromises = [];\r\n            const requestDataArray = [];\r\n            var featurePromises = [];\r\n            var services = [];\r\n\r\n            //var infoFormats = [];\r\n            var layers = olMap.getLayers().getArray();\r\n\r\n            // GLS: filtro el array de capas para quedarnos con las capas que son raster y visibles.\r\n            layers = layers.filter(function (elem) { return elem instanceof ol.layer.Image && elem.getVisible(); });\r\n\r\n            for (var j = 0; j < layers.length; j++) {\r\n                var olLayer = layers[j];\r\n                var layer = olLayer._wrap.parent;\r\n                var source = olLayer.getSource();\r\n\r\n                //console.log(\"Source: \" + layer.layerNames.join(\",\"));\r\n                //Por qué en workLayers están el vectorial de medición, y cosas así?\r\n                if (source.getGetFeatureInfoUrl && map.workLayers.indexOf(layer) >= 0 && layer.names.length > 0\r\n                    && (!opts.serviceUrl || opts.serviceUrl === layer.url)) { // Mirar si en las opciones pone que solo busque en un servicio\r\n\r\n                    //\r\n                    var targetService;\r\n                    if (!targetServices[layer.url]) {\r\n                        targetService = {\r\n                            layers: [],\r\n                            mapLayers: [],\r\n                            title: layer.title,\r\n                            request: null\r\n                        };\r\n                        targetServices[layer.url] = targetService;\r\n                        auxInfo[layer.url] = {\r\n                            source: TC.Util.extend(true, {}, source),\r\n                            layers: []\r\n                        };\r\n                    }\r\n                    else {\r\n                        targetService = targetServices[layer.url];\r\n                        auxInfo[layer.url].source.updateParams(TC.Util.extend(auxInfo[layer.url].source.getParams(), source.getParams()));\r\n                    }\r\n                    targetService.mapLayers.push(layer);\r\n\r\n                    //var targetService = {\r\n                    //    layers: [], mapLayers: [layer]\r\n                    //};\r\n                    var disgregatedNames = layer.getDisgregatedLayerNames();\r\n                    if (opts.layerName) { // Mirar si en las opciones pone que solo busque en una capa\r\n                        if (disgregatedNames.indexOf(opts.layerName) >= 0 && olLayer._wrap.getInfo(opts.layerName).queryable) {\r\n                            addLayerToService(targetService, layer, opts.layerName);\r\n                            auxInfo[layer.url].layers.push(opts.layerName);\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0; i < disgregatedNames.length; i++) {\r\n                            var name = disgregatedNames[i];\r\n                            if (olLayer._wrap.getInfo(name).queryable) {\r\n                                addLayerToService(targetService, layer, name);\r\n                            }\r\n                            else {\r\n                                TC.Util.consoleRegister('Capa \"' + disgregatedNames[i] + '\" no queryable, la eliminamos de la petición GFI');\r\n                                disgregatedNames.splice(i, 1);\r\n                                i = i - 1;\r\n                            }\r\n                        }\r\n\r\n                        // GLS: validamos si nos queda alguna capa a la cual consultar\r\n                        if (disgregatedNames.length > 0) {\r\n                            auxInfo[layer.url].layers = auxInfo[layer.url].layers.concat(disgregatedNames);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var serviceUrl in targetServices) {\r\n                services.push(targetServices[serviceUrl]);\r\n                var targetService = targetServices[serviceUrl];\r\n                var source = auxInfo[serviceUrl].source;\r\n                var layers = auxInfo[serviceUrl].layers;\r\n\r\n                // GLS: validamos si hay capas a las cuales consultar, si no hay continuamos con el siguiente servicio\r\n                if (!layers || (layers && layers.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                var params = source.getParams();\r\n                source.params_.LAYERS = layers.join(',');\r\n                var gfiURL = source.getGetFeatureInfoUrl(coords, resolution, map.crs, {\r\n                    'QUERY_LAYERS': layers.join(','),\r\n                    'INFO_FORMAT': params.INFO_FORMAT,\r\n                    'FEATURE_COUNT': 1000,\r\n                    'radius': map.options.pixelTolerance,\r\n                    'buffer': map.options.pixelTolerance\r\n                });\r\n\r\n                gfiURL = gfiURL.replace(/sld_body=[a-zA-Z%0-9._]*/); // Quitamos el parámetro sld_body\r\n\r\n\r\n                var expUrl = gfiURL;\r\n                const requestData = {\r\n                    serviceUrl: serviceUrl,\r\n                    requestedFormat: params.INFO_FORMAT,\r\n                    expandUrl: expUrl\r\n                };\r\n                requestDataArray.push(requestData);\r\n                requestPromises.push(new Promise(function (resolve, reject) {\r\n                    const mapLayer = targetService.mapLayers[0];\r\n                    mapLayer.toolProxification.fetch(gfiURL)\r\n                        .then(function (data) {\r\n                            mapLayer.toolProxification.cacheHost.getAction(requestData.expandUrl).then(function (cache) {\r\n                                requestData.originalUrl = cache.action.call(mapLayer.toolProxification, requestData.expandUrl);\r\n                                resolve(TC.Util.extend({}, data, requestData));\r\n                            });\r\n                        })\r\n                        .catch(function (error) {\r\n                            reject(Error(error));\r\n                        });\r\n                }));\r\n                TC.Util.consoleRegister(\"Lanzamos GFI\");\r\n            }\r\n\r\n            if (requestPromises.length > 0) {\r\n                Promise.all(requestPromises).then(function (responses) {\r\n                    var someSuccess = false;\r\n                    var featureCount = 0;\r\n                    var featureInsertionPoints = [];\r\n                    for (var i = 0; i < responses.length; i++) {\r\n                        var featureInfo = responses[i];\r\n                        var service = targetServices[requestDataArray[i].serviceUrl];\r\n                        someSuccess = true;\r\n                        service.text = featureInfo.responseText;\r\n                        var format;\r\n                        var iFormat = featureInfo.contentType;\r\n                        if (iFormat && iFormat.indexOf(\";\") > -1)\r\n                            iFormat = iFormat.substr(0, iFormat.indexOf(\";\")).trim();\r\n\r\n                        if (!iFormat) iFormat = featureInfo.requestedFormat;\r\n\r\n                        if (iFormat === featureInfo.requestedFormat) {\r\n                            switch (iFormat) {\r\n                                case 'application/json':\r\n                                    format = new ol.format.GeoJSON();\r\n                                    break;\r\n                                case 'application/vnd.ogc.gml':\r\n                                    if (featureInfo.responseText.indexOf(\"FeatureCollection\") > -1) {\r\n                                        format = new ol.format.WFS({\r\n                                            gmlFormat: new ol.format.GML2({\r\n                                                srsName: map.crs\r\n                                            })\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        format = new ol.format.WMSGetFeatureInfo();\r\n                                    }\r\n                                    break;\r\n                                case 'application/vnd.ogc.gml/3.1.1':\r\n                                    format = new ol.format.GML3({\r\n                                        srsName: map.crs\r\n                                    });\r\n                                    break;\r\n                                case 'application/vnd.esri.wms_featureinfo_xml':\r\n                                    format = esriXmlParser;\r\n                                    break;\r\n                                default:\r\n                                    format = null;\r\n                                    break;\r\n                            }\r\n\r\n                            if (format) {\r\n                                var features;\r\n                                try {\r\n                                    features = format.readFeatures(featureInfo.responseText, {\r\n                                        featureProjection: ol.proj.get(map.crs)\r\n                                    });\r\n                                }\r\n                                catch (e) {\r\n                                    TC.error(self.parent.getLocaleString('featureInfo.error.badResponse', { url: featureInfo.serviceUrl }) + ': ' + e.message);\r\n                                    features = [];\r\n                                    continue;\r\n                                };\r\n                                featureCount = featureCount + features.length;\r\n                                var isParentOrSame = function (layer, na, nb) {\r\n                                    var result = false;\r\n                                    if (na === nb) {\r\n                                        result = true;\r\n                                    }\r\n                                    else {\r\n                                        var pa = layer.getNodePath(na);\r\n                                        var pb = layer.getNodePath(nb);\r\n                                        if (pa.length > 0 && pb.length >= pa.length) {\r\n                                            result = true;\r\n                                            for (var i = 0; i < pa.length; i++) {\r\n                                                if (layer.wrap.getName(pa[i]) !== layer.wrap.getName(pb[i])) {\r\n                                                    result = false;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    return result;\r\n                                };\r\n\r\n                                var fakeLayers = {\r\n                                };\r\n\r\n                                for (var j = 0; j < features.length; j++) {\r\n                                    var feature = features[j];\r\n                                    if (feature instanceof ol.Feature) {\r\n                                        var fid = feature.getId() || TC.getUID();\r\n                                        var found = false;\r\n                                        var layerName = fid.substr(0, fid.lastIndexOf('.'));\r\n                                        for (var k = 0; k < service.layers.length; k++) {\r\n                                            var l = service.layers[k];\r\n                                            var lName = l.name.substr(l.name.indexOf(':') + 1);\r\n                                            if (service.mapLayers.some(function (mapLayer) { return isParentOrSame(mapLayer, lName, layerName) })) {\r\n                                                found = true;\r\n                                                if (!opts.featureId || feature.getId() === opts.featureId) { // Mirar si en las opciones pone que solo busque una feature\r\n                                                    featurePromises.push(TC.wrap.Feature.createFeature(feature, { showsPopup: false }));\r\n                                                    featureInsertionPoints.push(l.features);\r\n                                                }\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        //si llegamos aquí y no he encontrado su layer, es que no cuadraba el prefijo del fid con el id del layer\r\n                                        //esto pasa, p.ej, en cartociudad\r\n                                        if (!found) {\r\n                                            //así que creo un layer de palo para la respuesta del featInfo\r\n                                            var fakeLayer;\r\n                                            if (fakeLayers[layerName]) fakeLayer = fakeLayers[layerName];\r\n                                            else {\r\n                                                fakeLayer = {\r\n                                                    name: layerName, title: layerName, path: [layerName], features: []\r\n                                                };\r\n                                                fakeLayers[layerName] = fakeLayer;\r\n                                                service.layers.push(fakeLayer);\r\n                                            }\r\n\r\n                                            if (!opts.featureId || feature.getId() === opts.featureId) { // Mirar si en las opciones pone que solo busque una feature\r\n                                                featurePromises.push(TC.wrap.Feature.createFeature(feature, { showsPopup: false }));\r\n                                                featureInsertionPoints.push(fakeLayer.features);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }//iteración sobre las features de esta respuesta\r\n\r\n\r\n                            }\r\n                            else {\r\n                                //si no hay formato reconocido y parseable, metemos un iframe con la respuesta\r\n                                //y prau\r\n                                //para eso, creo una falsa entrada de tipo feature, con un campo especial rawUrl o rawContent\r\n\r\n                                var compoundLayer = {\r\n                                    name: 'layer' + TC.getUID(), title: 'Datos en el punto', features: []\r\n                                };\r\n\r\n                                service.layers[service.layers.length] = compoundLayer;\r\n                                compoundLayer.features[0] = {\r\n                                    rawUrl: featureInfo.originalUrl, expandUrl: featureInfo.expandUrl, rawContent: featureInfo.responseText, rawFormat: iFormat\r\n                                };\r\n                                featureCount = featureCount + 1;\r\n                            }\r\n                        }\r\n                        else { // iFormat !== featureInfo.requestedFormat\r\n\r\n                            // GLS:\r\n                            TC.Util.consoleRegister(\"Respuesta GFI: lo más probable es que el servidor esté devolviendo una excepción\");\r\n                            TC.Util.consoleRegister(\"Lanzamos los eventos que corresponde y mostramos tostada\");\r\n\r\n                            // En este caso lo más probable es que el servidor esté devolviendo una excepción\r\n                            self.parent.responseError({\r\n                                message: featureInfo.responseText,\r\n                                status: featureInfo.status\r\n                            });\r\n                            // GLS: misma gestión de error que en ol.js - > function (a, b, c) { // error...\r\n                            map.toast(self.parent.getLocaleString('featureInfo.error'), {\r\n                                type: TC.Consts.msgType.ERROR\r\n                            });\r\n                        }\r\n\r\n                    }\r\n                    if (someSuccess) {\r\n                        var finfoPromises = featurePromises;\r\n                        if (featurePromises.length) {\r\n                            finfoPromises = finfoPromises.concat(new Promise(function (resolve, reject) {\r\n                                // Si hay features cargamos el módulo de geometria para encontrar una que se interseque con el punto\r\n                                TC.loadJS(\r\n                                    !TC.Geometry,\r\n                                    TC.apiLocation + 'TC/Geometry',\r\n                                    function () {\r\n                                        resolve();\r\n                                    }\r\n                                );\r\n                            }));\r\n                        }\r\n                        Promise.all(finfoPromises).then(function (features) {\r\n                            var defaultFeature;\r\n                            features.forEach(function (feat, idx) {\r\n                                if (feat) {\r\n                                    feat.attributes = [];\r\n                                    for (var key in feat.data) {\r\n                                        var value = feat.data[key];\r\n                                        if (typeof value !== 'object') {\r\n                                            feat.attributes.push({\r\n                                                name: key,\r\n                                                value: typeof (value) == \"number\" ? value.toLocaleString(TC.Util.getMapLocale(self.parent.map)) : value\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    if (!defaultFeature && TC.Geometry.isInside(coords, feat.geometry)) {\r\n                                        defaultFeature = feat;\r\n                                    }\r\n                                    featureInsertionPoints[idx].push(feat);\r\n                                }\r\n                            });\r\n\r\n                            var services = [];\r\n                            for (var serviceUrl in targetServices) {\r\n                                if (targetServices.hasOwnProperty(serviceUrl)) {\r\n                                    services.push(targetServices[serviceUrl]);\r\n                                }\r\n                            }\r\n\r\n                            self.parent.responseCallback({\r\n                                coords: coords,\r\n                                resolution: resolution,\r\n                                services: services,\r\n                                featureCount: featureCount,\r\n                                defaultFeature: defaultFeature\r\n                            });\r\n                        });\r\n                    }\r\n                },\r\n                    function (a, b, c) { // error\r\n                        if (services && services.length == 0) {\r\n                            for (var serviceUrl in targetServices) {\r\n                                services.push(targetServices[serviceUrl]);\r\n                            }\r\n                        }\r\n\r\n                        self.parent.responseCallback({\r\n                            coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                        });\r\n                        map.toast(self.parent.getLocaleString('featureInfo.error'), {\r\n                            type: TC.Consts.msgType.ERROR\r\n                        });\r\n                    });\r\n            }\r\n            else {\r\n\r\n                if (map.workLayers.filter(function (layer) {\r\n                    return layer instanceof TC.layer.Raster;\r\n                }).length > 0) {\r\n                    map.toast(self.parent.getLocaleString('featureInfo.notQueryableLayers'), {\r\n                        type: TC.Consts.msgType.INFO\r\n                    });\r\n                }\r\n\r\n                if (services && services.length == 0) {\r\n                    for (var serviceUrl in targetServices) {\r\n                        services.push(targetServices[serviceUrl]);\r\n                    }\r\n                }\r\n\r\n                // GLS: nos suscribimos TC.Consts.event.BEFOREFEATUREINFO y lanzamos el mismo evento de zero resultados ya que puede darse que la resolución se lance antes del before.\r\n                map.on(TC.Consts.event.BEFOREFEATUREINFO, function () {\r\n                    self.parent.responseCallback({\r\n                        coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                    });\r\n                });\r\n\r\n                self.parent.responseCallback({\r\n                    coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            TC.wrap.control.Click.prototype.register.call(self, map);\r\n            var _clickTrigger = self._trigger;\r\n            self._trigger = function (e) {\r\n                self.hasEligibleLayers().then(function (hasLayers) {\r\n                    if (hasLayers) {\r\n                        if (!self.parent._isSearching) {\r\n                            if (e.type == SINGLECLICK && !self.parent._isDrawing && !self.parent._isSearching) {\r\n                                _clickTrigger.call(self, e);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.hasEligibleLayers = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const map = self.parent.map;\r\n            var ret = false;\r\n            map.wrap.getMap().then(function (olMap) {\r\n                olMap.getLayers().forEach(function (olLayer) {\r\n                    var layer = olLayer._wrap.parent;\r\n                    var source = olLayer.getSource();\r\n                    //Por qué en workLayers están el vectorial de medición, y cosas así?\r\n                    if (source.getGetFeatureInfoUrl && map.workLayers.indexOf(layer) >= 0) {\r\n                        ret = true;\r\n                        return false;   //break del foreach\r\n                    }\r\n                });\r\n                resolve(ret);\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.beginDraw = function (options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var xy = options.xy;\r\n        var layer = options.layer;\r\n        var callback = options.callback;\r\n        var geometryType = options.geometryType;\r\n        var semaforo = false;\r\n        if (!self.drawCtrl) {\r\n            layer.wrap.getLayer().then(function (olLayer) {\r\n                var olGeometryType;\r\n                switch (geometryType) {\r\n                    case TC.Consts.geom.POLYLINE:\r\n                        olGeometryType = ol.geom.GeometryType.LINE_STRING;\r\n                        break;\r\n                    default:\r\n                        olGeometryType = ol.geom.GeometryType.POLYGON;\r\n                        break;\r\n                }\r\n                self.drawCtrl = new ol.interaction.Draw({\r\n                    source: olLayer.getSource(),\r\n                    type: olGeometryType\r\n                    , style: olLayer.getStyle()\r\n                });\r\n                var setShowsPopup = function (wrap) {\r\n                    wrap.parent.showsPopup = false;\r\n                };\r\n                olLayer.getSource().on(ADDFEATURE, function (event) {\r\n                    if (event.feature._wrap) {\r\n                        setShowsPopup(event.feature._wrap);\r\n                    }\r\n                    else {\r\n                        event.feature._wrapPromise.then(setShowsPopup);\r\n                    }\r\n                });\r\n                self.drawCtrl.handleEvent = function (event) {\r\n                    //esta ñapa para solucionar cuando haces un primer punto y acontinuación otro muy rápido\r\n                    if (event.type == SINGLECLICK) {\r\n                        var points = olGeometryType === ol.geom.GeometryType.POLYGON ? this.sketchCoords_[0] : this.sketchCoords_;\r\n                        if (semaforo && points.length == 2 && this.sketchFeature_ !== null) {// GLS: Añado la misma validación (this.sketchFeature_ !== null) que tiene el código de OL antes de invocar addToDrawing_ \r\n                            this.addToDrawing_(event);\r\n                        }\r\n                        else {\r\n                            semaforo = true;\r\n                        }\r\n                    }\r\n                    return ol.interaction.Draw.prototype.handleEvent.call(this, event);\r\n                }\r\n                const map = self.parent.map;\r\n                const olMap = map.wrap.map;\r\n                olMap.addInteraction(self.drawCtrl);\r\n                self.drawCtrl.on('drawstart', function (event) {\r\n                    self.parent._isDrawing = true;\r\n                    olMap.getInteractions().forEach(function (item, i) {\r\n                        if (item instanceof (ol.interaction.DoubleClickZoom))\r\n                            item.setActive(false);\r\n                    });\r\n                });\r\n                self.drawCtrl.startDrawing_({\r\n                    coordinate: xy\r\n                });\r\n                self.drawCtrl.on('drawend', function (event) {\r\n                    self.parent._isDrawing = false;\r\n                    olMap.getInteractions().forEach(function (item, i) {\r\n                        if (item instanceof (ol.interaction.DoubleClickZoom))\r\n                            item.setActive(false);\r\n                    });\r\n                    olMap.removeInteraction(self.drawCtrl);\r\n                    this.setActive(false);\r\n                    self.drawCtrl = null;\r\n                    olLayer.getSource().clear();\r\n                    self.parent._drawToken = true;\r\n                    setTimeout(function () {\r\n                        self.parent._drawToken = false;\r\n                    }, 500);\r\n                    if (callback) {\r\n                        TC.wrap.Feature.createFeature(event.feature, { showsPopup: false }).then(function (feat) {\r\n                            callback(feat);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n        else {\r\n            self.drawCtrl.setActive(true);\r\n            self.drawCtrl.startDrawing_({\r\n                coordinate: xy\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.cancelDraw = function (xy, layer, callback) {\r\n        var self = this;\r\n        if (self.drawCtrl && self.parent._isDrawing) {\r\n            self.parent._isDrawing = false;\r\n            self.drawCtrl.setActive(false);\r\n            self.drawCtrl.source_.clear();\r\n\r\n        }\r\n    };\r\n\r\n    const _checkMaxFeatures = function (numMaxfeatures, url, data) {\r\n        return new Promise(function (resolve) {\r\n            TC.ajax({\r\n                url: url,\r\n                data: data,\r\n                cache: false,\r\n                contentType: 'application/xml',\r\n                responseType: 'application/xml',\r\n                method: 'POST'\r\n            }).then(function (response) {\r\n                const responseData = response.data;\r\n                if (responseData instanceof XMLDocument) {\r\n                    var responseAsJSON = xml2json(responseData);\r\n                    if (responseAsJSON.Exception) {\r\n                        resolve({\r\n                            errors: [{\r\n                                key: TC.Consts.WFSErrors.Indeterminate,\r\n                                params: {\r\n                                    err: responseAsJSON.Exception.exceptionCode, errorThrown: responseAsJSON.Exception.ExceptionText\r\n                                }\r\n                            }]\r\n                        })\r\n                        return;\r\n                    }\r\n                }\r\n                var featFounds = parseInt(responseAsJSON.numberMatched || responseAsJSON.numberOfFeatures, 10)\r\n                if (isNaN(featFounds) || featFounds > parseInt(numMaxfeatures, 10)) {\r\n                    resolve({\r\n                        errors: [{\r\n                            key: TC.Consts.WFSErrors.NumMaxFeatures\r\n                        }]\r\n                    });\r\n                    return;\r\n                }\r\n                else if (featFounds === 0) {\r\n                    resolve({\r\n                        errors: [{\r\n                            key: TC.Consts.WFSErrors.NoFeatures\r\n                        }]\r\n                    });\r\n                    return;\r\n                }\r\n                else\r\n                    resolve(featFounds);\r\n\r\n            }, function (e) {\r\n                resolve({\r\n                    errors: [{\r\n                        key: TC.Consts.WFSErrors.Indeterminate,\r\n                        params: { err: e.name, errorThrown: e.message }\r\n                    }]\r\n                });\r\n                return;\r\n            });\r\n        });\r\n    }\r\n\r\n    const _makePostCall = function (url, data) {\r\n        return new Promise(function (resolve) {\r\n            TC.ajax({\r\n                url: url,\r\n                data: data,\r\n                cache: false,\r\n                contentType: 'application/xml',\r\n                method: 'POST'\r\n            }).then(function (response) {\r\n                const responseData = response.data;\r\n                if (responseData instanceof XMLDocument) {\r\n                    var responseAsJSON = xml2json(responseData);\r\n                    if (responseAsJSON.Exception) {\r\n                        resolve({\r\n                            errors: [{\r\n                                key: TC.Consts.WFSErrors.Indeterminate,\r\n                                params: {\r\n                                    err: responseAsJSON.Exception.exceptionCode, errorThrown: responseAsJSON.Exception.ExceptionText\r\n                                }\r\n                            }]\r\n                        })\r\n                        return;\r\n                    }\r\n                }\r\n                resolve({ response: response });\r\n            }, function (e) {\r\n                resolve({\r\n                    errors: [{\r\n                        key: TC.Consts.WFSErrors.Indeterminate,\r\n                        params: { err: e.name, errorThrown: e.message }\r\n                    }]\r\n                });\r\n                return;\r\n            });\r\n        });\r\n    }\r\n\r\n    var WFSGetFeatureBuilder = function (map, filter, outputFormat, download) {\r\n        const arrPromises = [];\r\n\r\n        var services = {};\r\n\r\n        const _getServiceTitle = function (service) {\r\n            const mapLayer = service.mapLayers[0];\r\n            return service.title || service.mapLayers.reduce(function (prev, cur) {\r\n                return prev || cur.title;\r\n            }, '') || (mapLayer.tree && mapLayer.tree.title) || mapLayer.capabilities.Service.Title;\r\n        };\r\n\r\n\r\n        const olMap = map.wrap.map;\r\n        const getCRS = function () {\r\n            if (download && (outputFormat === TC.Consts.mimeType.JSON || outputFormat === TC.Consts.mimeType.KML))\r\n                return TC.Consts.SRSDOWNLOAD_GEOJSON_KML;\r\n            return map.getCRS();\r\n        };\r\n        const _postOrDownload = function (url, data) {\r\n            return new Promise(function (resolve) {\r\n                if (!download) {\r\n                    _makePostCall(url, data).then(function (response) {\r\n                        if (response.errors && response.errors.length > 0) {\r\n                            response.errors[0].params[\"serviceTitle\"] = service.mapLayers.reduce(function (prev, cur) {\r\n                                return prev || cur.title;\r\n                            }, '') || _getServiceTitle(service);\r\n                            resolve(response);\r\n                        }\r\n                        else {\r\n                            resolve(response);\r\n                        }\r\n                    })\r\n                }\r\n                else\r\n                    resolve({\r\n                        url: url,\r\n                        data: data\r\n                    });\r\n            });\r\n        };\r\n        olMap.getLayers().forEach(function (olLayer) {\r\n            var layer = olLayer._wrap.parent;\r\n            if (!olLayer.getVisible() || map.workLayers.indexOf(layer) < 0 || layer.type !== TC.Consts.layerType.WMS)\r\n                return;\r\n            var availableLayers = layer.getDisgregatedLayerNames() || layer.availableNames;\r\n            var serviceObj = services[layer.url.toLowerCase()];\r\n            if (!serviceObj) {\r\n                serviceObj = services[layer.url.toLowerCase()] = {\r\n                    layers: [], mapLayers: [layer], layerNames: []\r\n                };\r\n            }\r\n            for (var i = 0; i < availableLayers.length; i++) {\r\n                var name = availableLayers[i];\r\n                //URI:se quita la exclusion de capas no visibles por escala\r\n                /*if (!layer.isVisibleByScale(name) && !download)\r\n                    continue;*/\r\n                if (!layer.wrap.getInfo(name).queryable)\r\n                    continue;\r\n                serviceObj.layerNames.push(name);\r\n                var path = layer.getPath(name);\r\n                serviceObj.layers.push({\r\n                    name: name,\r\n                    title: path[path.length - 1],\r\n                    path: path.slice(1),\r\n                    features: []\r\n                });\r\n            }\r\n            if (serviceObj.layerNames.length == 0)\r\n                return;\r\n            if (typeof (serviceObj.request) !== \"undefined\") {\r\n                return;\r\n            }\r\n            serviceObj.request = serviceObj.request || layer.getWFSCapabilitiesPromise(); //WFSCapabilities.Promises(url);\r\n            arrPromises.push(new Promise(function (resolve, reject) {\r\n                serviceObj.request.then(function (capabilities) {\r\n                    var service = null;\r\n                    var errors = [];\r\n                    for (var url in services)\r\n                        if (services[url].request && services[url].request == serviceObj.request) {\r\n                            service = services[url];\r\n                        }\r\n                    var _numMaxFeatures = null;\r\n                    var layerList = service.layerNames;\r\n                    if (!(layerList instanceof Array) || !layerList.length) return;//condici\\u00f3n de salida\r\n                    //comprobamos que tiene el getfeature habilitado\r\n                    if (typeof (capabilities.Operations.GetFeature) === \"undefined\") {\r\n                        errors.push({ key: TC.Consts.WFSErrors.GetFeatureNotAvailable, params: { serviceTitle: _getServiceTitle(service) } })\r\n                        resolve({ \"errors\": errors });\r\n                        return;\r\n                    }\r\n                    var availableLayers = [];\r\n                    for (var i = 0; i < layerList.length; i++) {\r\n                        //Comprbamos si la capa en el WMS tiene el mimso nombre que en el WFS\r\n                        var layer = layerList[i].substring(layerList[i].indexOf(\":\") + 1);\r\n                        //quitamos los ultimos caracteres que sean \"_\" , cosas de Idena\r\n                        while (layer[layer.length - 1] === \"_\") {\r\n                            layer = layer.substring(0, layer.lastIndexOf(\"_\"));\r\n                        }\r\n                        if (!capabilities.FeatureTypes.hasOwnProperty(layer)) {\r\n                            var titles = service.mapLayers[0].getPath(layer);\r\n                            errors.push({ key: TC.Consts.WFSErrors.LayersNotAvailable, params: { serviceTitle: _getServiceTitle(service), \"layerName\": titles[titles.length - 1] } });\r\n                            continue;\r\n                        }\r\n                        if (availableLayers.indexOf(layer) < 0)\r\n                            availableLayers.push(layer);\r\n                    }\r\n                    if (availableLayers.length == 0) {\r\n                        errors.push({ key: TC.Consts.WFSErrors.NoValidLayers, params: { serviceTitle: _getServiceTitle(service) } });\r\n                        resolve({ \"errors\": errors });\r\n                        return;\r\n                    }\r\n                    if (capabilities.Operations.GetFeature.CountDefault)\r\n                        _numMaxFeatures = capabilities.Operations.GetFeature.CountDefault.DefaultValue;\r\n                    //comprobamos si soporta querys    \r\n                    if (\r\n                        (capabilities.version === \"1.0.0\" && !capabilities.Operations.GetFeature.Operations.hasOwnProperty(\"Query\"))\r\n                        ||\r\n                        ((capabilities.version === \"2.0.0\" || capabilities.version === \"1.1.0\") && capabilities.Operations.QueryExpressions.AllowedValues.Value.indexOf(\"wfs:Query\") < 0)\r\n                    ) {\r\n                        errors.push({ key: TC.Consts.WFSErrors.QueryNotAvailable, params: { serviceTitle: _getServiceTitle(service) } });\r\n                        resolve({ \"errors\": errors });\r\n                        return;\r\n                    }\r\n                    var url = (capabilities.Operations.GetFeature.DCPType ? capabilities.Operations.GetFeature.DCPType[1].HTTP.Post.onlineResource : capabilities.Operations.GetFeature.DCP.HTTP.Post[\"xlink:href\"]);\r\n\r\n                    // var url2 = service.mapLayers[0].getFeatureUrl(url);\r\n                    service.mapLayers[0].getFeatureUrl(url).then(function (url2) {\r\n                        if (_numMaxFeatures) {\r\n                            _checkMaxFeatures(_numMaxFeatures, url2, TC.Util.WFSQueryBuilder(availableLayers, filter, capabilities, outputFormat, true, getCRS())).then(function (response) {\r\n                                if (response.errors && response.errors.length > 0) {\r\n                                    switch (response.errors[0].key) {\r\n                                        case TC.Consts.WFSErrors.Indeterminate:\r\n                                            response.errors[0].params[\"serviceTitle\"] = service.mapLayers.reduce(function (prev, cur) {\r\n                                                return prev || cur.title;\r\n                                            }, '') || _getServiceTitle(service);\r\n                                            break;\r\n                                        case TC.Consts.WFSErrors.NumMaxFeatures:\r\n                                            response.errors[0][\"params\"] = { limit: _numMaxFeatures, serviceTitle: _getServiceTitle(service) };\r\n                                            break;\r\n                                        case TC.Consts.WFSErrors.NoFeatures:\r\n                                            response.errors[0][\"params\"] = { serviceTitle: _getServiceTitle(service) };\r\n                                            break;\r\n                                    }\r\n                                    resolve(response);\r\n                                }\r\n                                else\r\n                                    _postOrDownload(url2, TC.Util.WFSQueryBuilder(availableLayers, filter, capabilities, (download ? outputFormat : TC.Consts.mimeType.JSON), false, getCRS())).then(function (response) {\r\n                                        resolve(Object.assign({ service: service, errors: errors }, response));\r\n                                    });\r\n                            });\r\n                        }\r\n                        else {\r\n                            _postOrDownload(url2, TC.Util.WFSQueryBuilder(availableLayers, filter, capabilities, (download ? outputFormat : TC.Consts.mimeType.JSON), false, getCRS())).then(function (response) {\r\n                                resolve(Object.assign({ service: service, errors: errors }, response))\r\n\r\n                            });\r\n                        }\r\n                    }).catch(function (e) {\r\n                        resolve({\r\n                            errors: [{\r\n                                key: TC.Consts.WFSErrors.Indeterminate,\r\n                                params: { err: e.name, errorThrown: e.message, serviceTitle: _getServiceTitle(service) }\r\n                            }]\r\n                        });\r\n                    });\r\n                }, function (e) {\r\n                    var service = null;\r\n                    for (var title in services)\r\n                        if (services[title].request && services[title].request === serviceObj.request) {\r\n                            service = services[title];\r\n                        }\r\n                    resolve({ errors: [{ key: TC.Consts.WFSErrors.GetCapabilities, params: { err: e.name, serviceTitle: _getServiceTitle(service) } }] });\r\n                });\r\n            }));\r\n        });\r\n        return arrPromises;\r\n    };\r\n    TC.WFSGetFeatureBuilder = WFSGetFeatureBuilder;\r\n\r\n    var readFeaturesFromResponse = function (map, data, contentType) {\r\n        var format;\r\n        var iFormat = contentType;\r\n        if (iFormat && iFormat.indexOf(\";\") > -1)\r\n            iFormat = iFormat.substr(0, iFormat.indexOf(\";\")).trim();\r\n\r\n        if (!iFormat) iFormat = data.requestedFormat;\r\n        switch (iFormat) {\r\n            case 'application/json':\r\n                format = new ol.format.GeoJSON();\r\n                break;\r\n            case 'application/vnd.ogc.gml':\r\n                if (data.responseText.indexOf(\"FeatureCollection\") > -1)\r\n                    format = new ol.format.WFS({\r\n                        gmlFormat: new ol.format.GML2({\r\n                            srsName: map.crs\r\n                        })\r\n                    });\r\n                else\r\n                    format = new ol.format.WMSGetFeatureInfo();\r\n                break;\r\n            case 'application/vnd.ogc.gml/3.1.1':\r\n                format = new ol.format.GML3({\r\n                    srsName: map.crs\r\n                });\r\n                break;\r\n            case \"text/xml\":\r\n            case \"application/xml\":\r\n                //posible error\r\n                var jqXHR = xml2json(data);\r\n                if (jqXHR.ServiceException)\r\n                    TC.error(jqXHR.ServiceException);\r\n                format = null;\r\n                break;\r\n            default:\r\n                format = null;\r\n                break;\r\n        }\r\n        if (format) {\r\n            return format.readFeatures(data, {\r\n                featureProjection: ol.proj.get(map.crs)\r\n            });\r\n        }\r\n        else {\r\n            return null;\r\n            ////si no hay formato reconocido y parseable, metemos un iframe con la respuesta\r\n            ////y prau\r\n            ////para eso, creo una falsa entrada de tipo feature, con un campo especial rawUrl o rawContent\r\n            //var l = service.layers[0];\r\n            //l.features.push({\r\n            //    error: response.responseText\r\n            //});\r\n        }\r\n    };\r\n    var featureToServiceDistributor = function (features, service) {\r\n        var featurePromises = [];\r\n        var featureInsertionPoints = [];\r\n        var isParentOrSame = function (layer, na, nb) {\r\n            var result = false;\r\n            if (na === nb || (na.indexOf(nb) === 0)) {\r\n                result = true;\r\n            }\r\n            else {\r\n                var pa = layer.getPath(na);\r\n                var pb = layer.getPath(nb);\r\n                if (pa.length > 0 && pb.length >= pa.length) {\r\n                    result = true;\r\n                    for (var i = 0; i < pa.length; i++) {\r\n                        if (pa[i] !== pb[i]) {\r\n                            result = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        for (var j = 0; j < features.length; j++) {\r\n            var feature = features[j];\r\n            if (feature instanceof ol.Feature) {\r\n                var fid = feature.getId() || TC.getUID();\r\n                var found = false;\r\n                var layerName = fid.substr(0, fid.lastIndexOf('.'));\r\n                for (var k = 0; k < service.layers.length; k++) {\r\n                    var l = service.layers[k];\r\n                    var lName = l.name.substr(l.name.indexOf(':') + 1);\r\n                    if (service.mapLayers.some(function (mapLayer) { return isParentOrSame(mapLayer, lName, layerName) })) {\r\n                        found = true;\r\n                        featurePromises.push(TC.wrap.Feature.createFeature(feature));\r\n\r\n                        featureInsertionPoints[feature.id_] = (l.features);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //si llegamos aqu\\u00ed y no he encontrado su layer, es que no cuadraba el prefijo del fid con el id del layer\r\n                //esto pasa, p.ej, en cartociudad\r\n                if (!found) {\r\n                    //as\\u00ed que creo un layer de palo para la respuesta del featInfo\r\n                    var fakeLayer;\r\n                    if (fakeLayers[layerName]) fakeLayer = fakeLayers[layerName];\r\n                    else {\r\n                        fakeLayer = {\r\n                            name: layerName, title: layerName, features: []\r\n                        };\r\n                        fakeLayers[layerName] = fakeLayer;\r\n                        service.layers.push(fakeLayer);\r\n                    }\r\n\r\n                    if (!opts.featureId || feature.getId() === opts.featureId) { // Mirar si en las opciones pone que solo busque una feature\r\n                        featurePromises.push(TC.wrap.Feature.createFeature(feature));\r\n                        featureInsertionPoints.push(fakeLayer.features);\r\n                    }\r\n                }\r\n            }\r\n        }//iteraci\\u00f3n sobre las features de esta respuesta\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all(featurePromises).then(function (features) {\r\n                features.forEach(function (feat) {\r\n                    feat.attributes = [];\r\n                    //feat.showsPopup = false;\r\n                    for (var key in feat.data) {\r\n                        var value = feat.data[key];\r\n                        if (typeof value !== 'object') {\r\n                            feat.attributes.push({\r\n                                name: key, value: value\r\n                            });\r\n                        }\r\n                    }\r\n                    featureInsertionPoints[feat.id].push(feat);\r\n                });\r\n                resolve({\r\n                    service: service\r\n                })\r\n            });\r\n        });\r\n    }\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.getFeaturesByGeometry = function (feature, xy) {\r\n\r\n        var self = this;\r\n        var map = self.parent.map;\r\n        self.parent.filterFeature = feature;\r\n        feature.layer = self.parent.filterLayer;\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n\r\n            var olGeometry = feature.wrap.feature.getGeometry();\r\n            var stride = olGeometry.stride;\r\n            var flatCoordinates = olGeometry.getFlatCoordinates();\r\n            //calcular el punto mas alto\r\n            if (!xy) {\r\n                var bestPoint = null;\r\n                for (var i = 1, len = flatCoordinates.length; i < len; i += stride) {\r\n                    if (!bestPoint || bestPoint[1] < flatCoordinates[i]) {\r\n                        bestPoint = [flatCoordinates[i - 1], flatCoordinates[i]];\r\n                    }\r\n                }\r\n                xy = olMap.getPixelFromCoordinate(new ol.geom.Point(bestPoint).getCoordinates());\r\n            }\r\n\r\n            self.parent.beforeRequest({ xy: xy });\r\n\r\n            var arrRequests = WFSGetFeatureBuilder(map, new TC.filter.intersects(feature, map.crs), TC.Consts.format.JSON);\r\n\r\n            const arrPromises = [];\r\n            Promise.all(arrRequests).then(function (responses) {\r\n                var targetServices = [];\r\n                var featureCount = 0;\r\n                var hayError = false;\r\n\r\n                for (var i = 0; i < responses.length; i++) {\r\n                    const responseObj = responses[i];\r\n                    if (!responseObj) continue;\r\n                    arrPromises[arrPromises.length] = new Promise(function (resolve, reject) {\r\n                        if (responseObj.errors && responseObj.errors.length) {\r\n                            for (var j = 0; j < responseObj.errors.length; j++) {\r\n                                var errorMsg, errorType = TC.Consts.msgType.WARNING;\r\n                                hayError = true;\r\n                                var error = responseObj.errors[j];\r\n                                switch (error.key) {\r\n                                    case TC.Consts.WFSErrors.NumMaxFeatures:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfs.tooManyFeatures\", error.params);\r\n                                        break;\r\n                                        /*case TC.Consts.WFSErrors.NoLayers:\r\n                                            errorMsg = self.parent.getLocaleString('noLayersLoaded');*/\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.GetCapabilities:\r\n                                        errorMsg = self.parent.getLocaleString('wfsGFI.inValidService', error.params);\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.NoFeatures:\r\n                                        //si no hay features nos callamos. Quizas en un futuro se muestre una alerta\r\n                                        hayError = false;\r\n                                        continue;\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.Indeterminate:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfs.IndeterminateError\");\r\n                                        TC.error(\"Error:{error} \\r\\n Descripcion:{descripcion} \\r\\n Servicio:{serviceName}\".format({ error: error.params.err, descripcion: error.params.errorThrown, serviceName: error.params.serviceTitle }), TC.Consts.msgErrorMode.CONSOLE);\r\n                                        errorType = TC.Consts.msgType.ERROR;\r\n                                        break;\r\n                                    default:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfsGFI.\" + error.key, error.params);\r\n                                        break;\r\n                                }\r\n\r\n                                map.toast(errorMsg, { type: errorType });\r\n                            }\r\n                            if (!responseObj.response) {\r\n                                resolve();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    // Puede no haber response porque la URL no es correcta, metemos un condicional\r\n                    var featuresFound = responseObj.response ? readFeaturesFromResponse(map, responseObj.response.data, responseObj.response.contentType) : [];\r\n                    //ahora se distribuye la features por servicio y capa\r\n                    arrPromises[arrPromises.length - 1] = featureToServiceDistributor(featuresFound, responseObj.service);\r\n                    if (responseObj.service) {\r\n                        targetServices.push(responseObj.service);\r\n                    }\r\n                    featureCount = featureCount + featuresFound.length;\r\n                }\r\n                Promise.all(arrPromises).then(function () {\r\n                    self.parent.responseCallback({\r\n                        xy: xy || null, services: targetServices, featureCount: featureCount\r\n                    });\r\n                });\r\n            }, function (e) {\r\n                self.parent.responseCallback({});\r\n            })\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype = function () {\r\n        this.popup = null;\r\n    };\r\n\r\n    TC.Consts.event.PANANIMATIONSTART = 'pananimationstart.tc';\r\n    TC.Consts.event.PANANIMATIONEND = 'pananimationend.tc';\r\n    TC.wrap.control.Popup.prototype.fitToView = function () {\r\n        var self = this;\r\n        var map = self.parent.map;\r\n        var olMap = self.parent.map.wrap.map;\r\n\r\n        var popupBoundingRect = self.parent.popupDiv.getBoundingClientRect();\r\n        var mapBoundingRect = map.div.getBoundingClientRect();\r\n\r\n        var topLeft = olMap.getCoordinateFromPixel([popupBoundingRect.left - mapBoundingRect.left, popupBoundingRect.top - mapBoundingRect.top]);\r\n        var bottomRight = olMap.getCoordinateFromPixel([popupBoundingRect.right - mapBoundingRect.left, popupBoundingRect.bottom - mapBoundingRect.top]);\r\n        var west = topLeft[0];\r\n        var north = topLeft[1];\r\n        var east = bottomRight[0];\r\n        var south = bottomRight[1];\r\n\r\n        var popupExt = [west, south, east, north];\r\n        var mapExt = map.getExtent();\r\n\r\n        if (!ol.extent.containsExtent(mapExt, popupExt)) {\r\n            var overflows = {\r\n                left: Math.max(mapExt[0] - popupExt[0], 0),\r\n                bottom: Math.max(mapExt[1] - popupExt[1], 0),\r\n                right: Math.max(popupExt[2] - mapExt[2], 0),\r\n                top: Math.max(popupExt[3] - mapExt[3], 0)\r\n            };\r\n\r\n            if (self.parent.dragged) {\r\n                // Movemos el popup\r\n                var newPos = self.popup.getPosition();\r\n                if (overflows.right) {\r\n                    newPos[0] = newPos[0] - overflows.right;\r\n                }\r\n                else if (overflows.left) {\r\n                    newPos[0] = newPos[0] + overflows.left;\r\n                }\r\n                if (overflows.top) {\r\n                    newPos[1] = newPos[1] - overflows.top;\r\n                }\r\n                else if (overflows.bottom) {\r\n                    newPos[1] = newPos[1] + overflows.bottom;\r\n                }\r\n                var newPixelPos = olMap.getPixelFromCoordinate(newPos);\r\n                newPixelPos[1] = olMap.getSize()[1] - newPixelPos[1];\r\n                self.parent._previousContainerPosition = newPixelPos;\r\n                self.popup._oldUpdatePixelPosition(newPos);\r\n            }\r\n            else {\r\n                if (self.parent.isVisible()) {\r\n                    // Movemos el mapa\r\n                    var view = olMap.getView();\r\n                    var ct = view.getCenter().slice();\r\n\r\n                    if (overflows.top) ct[1] += overflows.top;\r\n                    else if (overflows.bottom) ct[1] -= overflows.bottom;\r\n                    if (overflows.right) ct[0] += overflows.right;\r\n                    else if (overflows.left) ct[0] -= overflows.left;\r\n\r\n                    view.animate({\r\n                        center: ct, easing: function (percent) {\r\n                            if (percent === 0) self.parent.map.trigger(TC.Consts.event.PANANIMATIONSTART);\r\n                            if (percent === 1) self.parent.map.trigger(TC.Consts.event.PANANIMATIONEND);\r\n                            return percent;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype.setDragged = function (dragged) {\r\n        var popup = this.popup;\r\n        //var view = popup.getMap().getView();\r\n        //var onViewChange = function () {\r\n        //    console.log(this.getCenter());\r\n        //};\r\n        if (dragged) {\r\n            // Parcheamos funciones para que el popup no se mueva cuando cambiamos el extent del mapa\r\n            if (!popup._oldUpdatePixelPosition) {\r\n                popup._oldUpdatePixelPosition = popup.updatePixelPosition;\r\n                popup.updatePixelPosition = function () {\r\n                };\r\n            }\r\n            if (!popup._newHandleOffsetChanged) {\r\n                popup._newHandleOffsetChanged = function () {\r\n                    this._oldUpdatePixelPosition();\r\n                };\r\n                ol.events.unlisten(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup.handleOffsetChanged, popup);\r\n                ol.events.listen(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup._newHandleOffsetChanged, popup);\r\n            }\r\n            //view.on(['change:center','change:resolution'], onViewChange);\r\n        }\r\n        else {\r\n            // Redefinimos las propiedades de posicionamiento porque al arrastrarlo, las hemos modificado.\r\n            const containerStyle = popup.getElement().parentElement.style;\r\n            containerStyle.setProperty('top', popup.rendered.top_);\r\n            containerStyle.setProperty('bottom', popup.rendered.bottom_);\r\n            containerStyle.setProperty('left', popup.rendered.left_);\r\n            containerStyle.setProperty('right', popup.rendered.right_);\r\n\r\n            delete this.parent._previousContainerPosition;\r\n            // Deshacemos parcheo\r\n            if (popup._oldUpdatePixelPosition) {\r\n                popup.updatePixelPosition = popup._oldUpdatePixelPosition;\r\n                delete popup._oldUpdatePixelPosition;\r\n            }\r\n            if (popup._newHandleOffsetChanged) {\r\n                ol.events.unlisten(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup._newHandleOffsetChanged, popup);\r\n                ol.events.listen(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup.handleOffsetChanged, popup);\r\n                delete popup._newHandleOffsetChanged;\r\n            }\r\n            //view.un(['change:center', 'change:resolution'], onViewChange);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLegend = function () {\r\n        var self = this;\r\n        var result = {\r\n        };\r\n        var style = getNativeFeatureStyle(self.feature, true);\r\n        if (style) {\r\n            var image = style.getImage();\r\n            if (image) {\r\n                if (image instanceof ol.style.Icon) {\r\n                    result.src = image.getSrc();\r\n                    var scale = image.getScale();\r\n                    if (scale) {\r\n                        result.scale = scale;\r\n                        var img = image.getImage();\r\n                        if (img.width) {\r\n                            result.width = img.width * scale;\r\n                            result.height = img.height * scale;\r\n                        }\r\n                    }\r\n                }\r\n                else if (image instanceof ol.style.Circle) {\r\n                    result.src = image.canvas_.toDataURL();\r\n                }\r\n                if (self.parent.options.radius) {\r\n                    result.height = result.width = self.parent.options.radius * 2;\r\n                }\r\n                else {\r\n                    result.width = result.width || self.parent.options.width;\r\n                    result.height = result.height || self.parent.options.height;\r\n                }\r\n            }\r\n            else {\r\n                // No image, find stroke and fill\r\n                var stroke = style.getStroke();\r\n                var fill = style.getFill();\r\n                if (stroke) {\r\n                    var strokeColor = stroke.getColor();\r\n                    if (strokeColor) {\r\n                        result.strokeColor = ol.color.asString(strokeColor);\r\n                    }\r\n                    var strokeWidth = stroke.getWidth();\r\n                    if (strokeWidth) {\r\n                        result.strokeWidth = strokeWidth;\r\n                    }\r\n                }\r\n                if (fill) {\r\n                    var fillColor = fill.getColor();\r\n                    if (fillColor) {\r\n                        result.fillColor = ol.color.asString(fillColor);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    var createNativeFeature = function (geometryName) {\r\n        const result = new ol.Feature();\r\n        if (geometryName) {\r\n            result.setGeometryName(geometryName);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPoint = function (coords, options) {\r\n        const self = this;\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        self.feature.setStyle(createNativeStyle({ styles: { point: options } }));\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createMarker = function (coords, options) {\r\n        const self = this;\r\n\r\n        var iconUrl = TC.Util.getPointIconUrl(options);\r\n        if (iconUrl) {\r\n            options.url = iconUrl;\r\n            self.feature = createNativeFeature(options.geometryName);\r\n            self.feature._wrap = self;\r\n            self.parent.setCoords(coords);\r\n            self.feature.setStyle(createNativeStyle({ styles: { marker: options } }));\r\n            self.setData(self.parent.data);\r\n        }\r\n        else {\r\n            self.createPoint(coords, options);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolyline = function (coords, options) {\r\n        const self = this;\r\n\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        self.feature.setStyle(createNativeStyle({ styles: { line: options } }));\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolygon = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (options.strokeColor || options.strokeWidth || options.fillColor || options.fillOpacity) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { polygon: options } }));\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n\r\n    TC.wrap.Feature.prototype.createMultiPolyline = function (coords, options) {\r\n        const self = this;\r\n\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        self.feature.setStyle(createNativeStyle({ styles: { line: options } }));\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createMultiPolygon = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (options.strokeColor || options.strokeWidth || options.fillColor || options.fillOpacity) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { polygon: options } }));\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createCircle = function (coords, options) {\r\n        const self = this;\r\n\r\n        self.feature = createNativeFeature(options.geometryName);\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        if (options) {\r\n            self.feature.setStyle(\r\n                new ol.style.Style({\r\n                    stroke: new ol.style.Stroke({\r\n                        color: options.strokeColor,\r\n                        width: options.strokeWidth,\r\n                        lineDash: options.lineDash\r\n                    }),\r\n                    fill: new ol.style.Fill({\r\n                        color: getRGBA(options.fillColor, options.fillOpacity)\r\n                    })\r\n                })\r\n            );\r\n        }\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.createFeature = function (olFeat, options) {\r\n        return new Promise(function (resolve, reject) {\r\n            var olGeometry = olFeat.getGeometry();\r\n            options = options || {};\r\n            options.id = olFeat.getId();\r\n\r\n            // geometría\r\n            var geomStr;\r\n            switch (true) {\r\n                case olGeometry instanceof ol.geom.Point:\r\n                    var olStyle = olFeat.getStyle();\r\n                    if (TC.Util.isFunction(olStyle)) {\r\n                        olStyle = olStyle(olFeat);\r\n                    }\r\n                    var olStyles = olStyle ? (Array.isArray(olStyle) ? olStyle : [olStyle]) : [];\r\n                    for (var i = 0, len = olStyles.length; i < len; i++) {\r\n                        olStyle = olStyles[i];\r\n                        if (olStyle.getImage() instanceof ol.style.Icon) {\r\n                            geomStr = 'Marker';\r\n                            break;\r\n                        }\r\n                    }\r\n                    geomStr = geomStr || 'Point';\r\n                    break;\r\n                case olGeometry instanceof ol.geom.LineString:\r\n                    geomStr = 'Polyline';\r\n                    break;\r\n                case olGeometry instanceof ol.geom.Polygon:\r\n                    geomStr = 'Polygon';\r\n                    break;\r\n                case olGeometry instanceof ol.geom.MultiLineString:\r\n                    geomStr = 'MultiPolyline';\r\n                    break;\r\n                case olGeometry instanceof ol.geom.MultiPolygon:\r\n                    geomStr = 'MultiPolygon';\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (geomStr) {\r\n                TC.loadJS(\r\n                    !TC.feature || (TC.feature && !TC.feature[geomStr]),\r\n                    [TC.apiLocation + 'TC/feature/' + geomStr],\r\n                    function () {\r\n                        var feat = new TC.feature[geomStr](olFeat, options);\r\n                        feat.data = feat.wrap.getData();\r\n                        resolve(feat);\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                TC.loadJS(\r\n                    !TC.Feature,\r\n                    [TC.apiLocation + 'TC/Feature'],\r\n                    function () {\r\n                        var feat = new TC.Feature(olFeat, options);\r\n                        feat.data = feat.wrap.getData();\r\n                        resolve(feat);\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.cloneFeature = function () {\r\n        return this.feature.clone();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getStyle = function () {\r\n        var self = this;\r\n        var result = {};\r\n        var olStyle = self.feature.getStyle();\r\n        if (TC.Util.isFunction(olStyle)) {\r\n            olStyle = olStyle(self.feature);\r\n        }\r\n        var olStyles = olStyle ? (Array.isArray(olStyle) ? olStyle : [olStyle]) : [];\r\n\r\n        const getFill = function (style, obj) {\r\n            if (style) {\r\n                const fill = style.getFill();\r\n                if (fill) {\r\n                    obj.fillColor = fill.getColor();\r\n                    if (Array.isArray(obj.fillColor)) {\r\n                        obj.fillOpacity = obj.fillColor[3];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        const getStroke = function (style, obj) {\r\n            if (style) {\r\n                const stroke = style.getStroke();\r\n                if (stroke) {\r\n                    obj.strokeColor = stroke.getColor();\r\n                    obj.strokeWidth = stroke.getWidth();\r\n                }\r\n            }\r\n        };\r\n\r\n        for (var i = 0, len = olStyles.length; i < len; i++) {\r\n            olStyle = olStyles[i];\r\n            getFill(olStyle, result);\r\n            getStroke(olStyle, result);\r\n            const image = olStyle.getImage();\r\n            if (image instanceof ol.style.Icon) {\r\n                result.url = image.getSrc();\r\n                const size = image.getSize();\r\n                const scale = image.getScale() || 1;\r\n                if (size) {\r\n                    result.width = size[0] * scale;\r\n                    result.height = size[1] * scale;\r\n                }\r\n                var anchor = image.getAnchor();\r\n                if (anchor) {\r\n                    result.anchor = [anchor[0] * scale, anchor[1] * scale];\r\n                    if (size) {\r\n                        // getAnchor devuelve los valores en pixels, hay que transformar a fracción\r\n                        result.anchor[0] = result.anchor[0] / result.width;\r\n                        result.anchor[1] = result.anchor[1] / result.height;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                getFill(image, result);\r\n                getStroke(image, result);\r\n            }\r\n            var text = olStyle.getText();\r\n            if (text) {\r\n                result.label = text.getText();\r\n                var font = text.getFont();\r\n                if (font) {\r\n                    // A 96dpi 3pt = 4px\r\n                    result.fontSize = parseInt(font.match(/\\d+pt/)) || parseInt(font.match(/\\d+px/)) * 0.75;\r\n                }\r\n                var rotation = text.getRotation();\r\n                if (rotation) {\r\n                    result.angle = -180 * rotation / Math.PI;\r\n                }\r\n                result.labelOffset = [text.getOffsetX(), text.getOffsetY()];\r\n                fill = text.getFill();\r\n                if (fill) {\r\n                    result.fontColor = fill.getColor();\r\n                }\r\n                stroke = text.getStroke();\r\n                if (stroke) {\r\n                    result.labelOutlineColor = stroke.getColor();\r\n                    result.labelOutlineWidth = stroke.getWidth();\r\n                }\r\n            }\r\n        }\r\n        TC.Util.extend(self.parent.options, result);\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getGeometry = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature && self.feature.getGeometry) {\r\n            var geom = self.feature.getGeometry();\r\n            if (geom) {\r\n                if (geom.getCoordinates) {\r\n                    result = geom.getCoordinates();\r\n                }\r\n                else if (geom instanceof ol.geom.Circle) {\r\n                    result = [geom.getCenter(), geom.getRadius()];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setGeometry = function (geometry) {\r\n        const self = this;\r\n        if (self.feature && self.feature.getGeometry) {\r\n            var geom = self.feature.getGeometry();\r\n            var ctor;\r\n            var point,\r\n                points,\r\n                ringsOrPolylines,\r\n                polygons,\r\n                isMultiPolygon,\r\n                isPolygonOrMultiLineString,\r\n                isLineString;\r\n            // punto: array de números\r\n            // línea o anillo: array de puntos\r\n            // multilínea o polígono: array de líneas o anillos\r\n            // multipolígono: array de polígonos\r\n            // Por tanto podemos recorrer los tipos en un switch sin breaks\r\n            switch (true) {\r\n                case (TC.feature.MultiPolygon && self.parent instanceof TC.feature.MultiPolygon):\r\n                    isMultiPolygon = true;\r\n                    ctor = ol.geom.MultiPolygon;\r\n                    polygons = geometry;\r\n                    if (Array.isArray(polygons)) {\r\n                        ringsOrPolylines = geometry[0];\r\n                    }\r\n                case (TC.feature.Polygon && self.parent instanceof TC.feature.Polygon || TC.feature.MultiPolyline && self.parent instanceof TC.feature.MultiPolyline):\r\n                    isPolygonOrMultiLineString = true;\r\n                    ctor = ctor || ((TC.feature.Polygon && self.parent instanceof TC.feature.Polygon) ? ol.geom.Polygon : ol.geom.MultiLineString);\r\n                    ringsOrPolylines = isMultiPolygon ? ringsOrPolylines : geometry;\r\n                    if (Array.isArray(ringsOrPolylines)) {\r\n                        points = ringsOrPolylines[0];\r\n                    }\r\n                case (TC.feature.Polyline && self.parent instanceof TC.feature.Polyline):\r\n                    isLineString = true;\r\n                    ctor = ctor || ol.geom.LineString;\r\n                    points = isPolygonOrMultiLineString ? points : geometry;\r\n                    if (Array.isArray(points)) {\r\n                        point = points[0];\r\n                    }\r\n                case (TC.feature.Point && self.parent instanceof TC.feature.Point):\r\n                    ctor = ctor || ol.geom.Point;\r\n                    point = isLineString ? point : geometry;\r\n                    if (Array.isArray(point) && typeof point[0] === 'number' && typeof point[1] === 'number') {\r\n                        var layout;\r\n                        switch (point.length) {\r\n                            case 3:\r\n                                layout = ol.geom.GeometryLayout.XYZ;\r\n                                break;\r\n                            case 4:\r\n                                layout = ol.geom.GeometryLayout.XYZM;\r\n                                break;\r\n                            default:\r\n                                layout = ol.geom.GeometryLayout.XY;\r\n                                break;\r\n                        }\r\n                        if (geom) {\r\n                            geom.setCoordinates(geometry, layout);\r\n                        }\r\n                        else {\r\n                            geom = new ctor(geometry, layout);\r\n                            self.feature.setGeometry(geom);\r\n                        }\r\n                    }\r\n                    break;\r\n                case (TC.feature.Circle && self.parent instanceof TC.feature.Circle):\r\n                    if (Array.isArray(geometry) &&\r\n                        Array.isArray(geometry[0])\r\n                        && typeof geometry[0][0] === 'number' && typeof geometry[0][1] === 'number'\r\n                        && typeof geometry[1] === 'number') {\r\n                        var layout;\r\n                        switch (geometry[0].length) {\r\n                            case 3:\r\n                                layout = ol.geom.GeometryLayout.XYZ;\r\n                                break;\r\n                            case 4:\r\n                                layout = ol.geom.GeometryLayout.XYZM;\r\n                                break;\r\n                            default:\r\n                                layout = ol.geom.GeometryLayout.XY;\r\n                                break;\r\n                        }\r\n                        if (geom) {\r\n                            geom.setCenterAndRadius(geometry[0], geometry[1], layout);\r\n                        }\r\n                        else {\r\n                            geom = new ol.geom.Circle(geometry[0], geometry[1], layout);\r\n                            self.feature.setGeometry(geom);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getId = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature) {\r\n            result = self.feature.getId();\r\n        };\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setId = function (id) {\r\n        var self = this;\r\n        if (self.feature) {\r\n            self.feature.setId(id);\r\n        };\r\n    };\r\n\r\n    const getPolygonLength = function (polygon, options) {\r\n        const self = this;\r\n        var result = 0;\r\n        polygon.getLinearRings().forEach(function (ring) {\r\n            coordinates = ring.getCoordinates();\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n            }\r\n            const polygon = new ol.geom.Polygon([coordinates]);\r\n            const newRing = polygon.getLinearRing(0);\r\n            result = result + ol.geom.flat.linearRingLength(newRing.flatCoordinates, 0, newRing.flatCoordinates.length, newRing.stride);\r\n        });\r\n        return result;\r\n    };\r\n\r\n    const getLineStringLength = function (lineString, options) {\r\n        const self = this;\r\n        coordinates = lineString.getCoordinates();\r\n        if (options.crs) {\r\n            coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n        }\r\n        const line = new ol.geom.LineString(coordinates);\r\n        return line.getLength();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLength = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        var result = 0;\r\n\r\n        const geom = self.feature.getGeometry();\r\n        var coordinates;\r\n        switch (true) {\r\n            case geom instanceof ol.geom.Polygon:\r\n                result = getPolygonLength.call(self, geom, options);\r\n                break;\r\n            case geom instanceof ol.geom.LineString:\r\n                result = getLineStringLength.call(self, geom, options);\r\n                break;\r\n            case geom instanceof ol.geom.MultiPolygon:\r\n                geom.getPolygons().forEach(function (polygon) {\r\n                    result = result + getPolygonLength.call(self, polygon, options);\r\n                });\r\n                break;\r\n            case geom instanceof ol.geom.MultiPolygon:\r\n                geom.getLineStrings().forEach(function (lineString) {\r\n                    result = result + getLineStringLength.call(self, lineString, options);\r\n                });\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getArea = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const geom = self.feature.getGeometry();\r\n        var coordinates;\r\n        if (geom instanceof ol.geom.Polygon) {\r\n            coordinates = geom.getLinearRing(0).getCoordinates();\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n            }\r\n            const polygon = new ol.geom.Polygon([coordinates]);\r\n            return polygon.getArea();\r\n        }\r\n    };\r\n\r\n    const getNativeFeatureStyle = function (feature, readonly) {\r\n        var style = feature.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            style = style[style.length - 1];\r\n        }\r\n        if (!style && !readonly) {\r\n            style = new ol.style.Style();\r\n            feature.setStyle(style);\r\n        }\r\n        return style;\r\n    };\r\n\r\n    const getNativeLayerStyle = function (feature) {\r\n        var style = this.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            style = style[style.length - 1];\r\n        }\r\n        if (!style) {\r\n            style = new ol.style.Style();\r\n        }\r\n        return style;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setStyle = function (options) {\r\n        const self = this;\r\n        const olFeat = self.feature;\r\n        if (options === null) {\r\n            olFeat.setStyle(null);\r\n            return;\r\n        }\r\n        const feature = self.parent;\r\n        const geom = olFeat.getGeometry();\r\n        var style = getNativeFeatureStyle(olFeat);\r\n        var layerStyle;\r\n        if (feature.layer) {\r\n            layerStyle = getNativeLayerStyle.call(feature.layer.wrap.layer, feature.wrap.feature);\r\n        }\r\n        if (geom instanceof ol.geom.Point || geom instanceof ol.geom.MultiPoint) {\r\n\r\n            var imageStyle;\r\n            if (options.anchor || options.url || options.cssClass) { // Marcador\r\n                imageStyle = style.getImage();\r\n                const iconOptions = {};\r\n                if (imageStyle instanceof ol.style.Icon) {\r\n                    iconOptions.src = options.url || TC.Util.getBackgroundUrlFromCss(options.cssClass) || imageStyle.getSrc();\r\n\r\n                    if (options.width && options.height) {\r\n                        iconOptions.size = [getStyleValue(options.width, feature), getStyleValue(options.height, feature)];\r\n                    }\r\n                    else {\r\n                        iconOptions.size = imageStyle.getSize();\r\n                    }\r\n                    iconOptions.anchor = getStyleValue(options.anchor, feature) || imageStyle.getAnchor().map(function (elm, idx) {\r\n                        return elm / iconOptions.size[idx];\r\n                    });\r\n                }\r\n                else {\r\n                    iconOptions.src = TC.Util.getPointIconUrl(options);\r\n                    iconOptions.anchor = getStyleValue(options.anchor, feature);\r\n                    iconOptions.size = [getStyleValue(options.width, feature), getStyleValue(options.height, feature)];\r\n                };\r\n                if (options.angle) {\r\n                    iconOptions.angle = options.angle;\r\n                }\r\n\r\n                imageStyle = new ol.style.Icon(iconOptions);\r\n            }\r\n            else if (!(style.getImage()) && style.getText()) { // Etiqueta\r\n\r\n                if (options.label !== undefined) {\r\n                    style = getNativeFeatureStyle(olFeat);\r\n                    if (options.label.length) {\r\n                        style.setText(createNativeTextStyle(options, feature));\r\n                    }\r\n                    else {\r\n                        style.setText();\r\n                    }\r\n                } else {\r\n                    style.setText();\r\n                }\r\n            }\r\n            else { // Punto sin icono\r\n                imageStyle = style.getImage();\r\n                if (!imageStyle) {\r\n                    imageStyle = new ol.style.Circle();\r\n                }\r\n                const circleOptions = {\r\n                    radius: getStyleValue(options.radius, feature) ||\r\n                        (getStyleValue(options.height, feature) + getStyleValue(options.width, feature)) / 4\r\n                };\r\n                if (isNaN(circleOptions.radius)) {\r\n                    circleOptions.radius = imageStyle.getRadius();\r\n                }\r\n                if (options.fillColor) {\r\n                    circleOptions.fill = new ol.style.Fill({\r\n                        color: getRGBA(getStyleValue(options.fillColor, feature), getStyleValue(options.fillOpacity, feature))\r\n                    });\r\n                }\r\n                else {\r\n                    circleOptions.fill = imageStyle.getFill();\r\n                }\r\n                circleOptions.stroke = imageStyle.getStroke();\r\n                const layerStroke = layerStyle && layerStyle.getStroke();\r\n                if (options.strokeColor || options.strokeWidth) {\r\n                    if (!circleOptions.stroke) {\r\n                        circleOptions.stroke = new ol.style.Stroke();\r\n                    }\r\n                    if (options.strokeColor) {\r\n                        circleOptions.stroke.setColor(getStyleValue(options.strokeColor, feature));\r\n                    }\r\n                    else {\r\n                        const strokeColor = circleOptions.stroke.getColor() || (layerStroke && layerStroke.getColor() || TC.Cfg.styles.point.strokeColor);\r\n                        circleOptions.stroke.setColor(getStyleValue(strokeColor, feature));\r\n                    }\r\n                    if (options.strokeWidth) {\r\n                        circleOptions.stroke.setWidth(getStyleValue(options.strokeWidth, feature));\r\n                    }\r\n                    else {\r\n                        const strokeWidth = circleOptions.stroke.getWidth() || (layerStroke && layerStroke.getWidth() || TC.Cfg.styles.point.strokeWidth);\r\n                        circleOptions.stroke.setWidth(getStyleValue(strokeWidth, feature));\r\n                    }\r\n                }\r\n                imageStyle = new ol.style.Circle(circleOptions);\r\n            }\r\n            style.setImage(imageStyle);\r\n        }\r\n        else {\r\n            var stroke = style.getStroke();\r\n            var strokeChanged = false;\r\n            if (!stroke) {\r\n                stroke = new ol.style.Stroke();\r\n            }\r\n            if (options.strokeColor) {\r\n                stroke.setColor(getStyleValue(options.strokeColor, feature));\r\n                strokeChanged = true;\r\n            }\r\n            if (options.strokeWidth) {\r\n                stroke.setWidth(getStyleValue(options.strokeWidth, feature));\r\n                strokeChanged = true;\r\n                style.setStroke(stroke);\r\n            }\r\n            if (options.lineDash) {\r\n                stroke.setLineDash(options.lineDash)\r\n                strokeChanged = true;\r\n                style.setStroke(stroke);\r\n            }\r\n            if (strokeChanged) {\r\n                style.setStroke(stroke);\r\n            }\r\n            if (geom instanceof ol.geom.Polygon || geom instanceof ol.geom.MultiPolygon) {\r\n                if (options.fillColor || options.fillOpacity) {\r\n                    var fill = style.getFill() || new ol.style.Fill();\r\n                    fill.setColor(getRGBA(getStyleValue(options.fillColor, feature), getStyleValue(options.fillOpacity, feature)));\r\n                    style.setFill(fill);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.label !== undefined) {\r\n            style = getNativeFeatureStyle(olFeat);\r\n            if (options.label.length) {\r\n                style.setText(createNativeTextStyle(options, feature));\r\n            }\r\n            else {\r\n                style.setText();\r\n            }\r\n        }\r\n\r\n        olFeat.changed();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.toggleSelectedStyle = function (condition) {\r\n        const self = this;\r\n        const feature = self.feature;\r\n        const setStyle = condition === undefined ? !feature._originalStyle : condition;\r\n        if (setStyle) {\r\n            setSelectedStyle(feature);\r\n        }\r\n        else {\r\n            removeSelectedStyle(feature);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getInnerPoint = function (options) {\r\n        var result;\r\n        var opts = options || {};\r\n        // Funciones para hacer clipping con el extent actual. Así nos aseguramos de que el popup sale en un punto visible actualmente.\r\n        var feature = this.feature;\r\n        var geometry = feature.getGeometry();\r\n\r\n        const clipCoord = function (coord) {\r\n            const clipBox = opts.clipBox;\r\n            coord[0] = Math.min(Math.max(coord[0], clipBox[0]), clipBox[2]);\r\n            coord[1] = Math.min(Math.max(coord[1], clipBox[1]), clipBox[3]);\r\n        };\r\n        const clipPolygon = function (geom) {\r\n            if (opts.clipBox) {\r\n                geom[0].forEach(clipCoord);\r\n            }\r\n        };\r\n        const clipPolyline = function (geom) {\r\n            const clipBox = opts.clipBox;\r\n            if (clipBox) {\r\n                for (var i = geom.length - 1; i >= 0; i--) {\r\n                    const coord = geom[i];\r\n                    const x = coord[0];\r\n                    const y = coord[1];\r\n                    if (x < clipBox[0] || x > clipBox[2] || y < clipBox[1] || y > clipBox[3]) {\r\n                        geom.splice(i, 1);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        result = geometry.getFirstCoordinate();\r\n        switch (geometry.getType()) {\r\n            case ol.geom.GeometryType.MULTI_POLYGON:\r\n                var area = 0;\r\n                geometry = geometry.getPolygons().reduce(function (prev, cur) {\r\n                    const curArea = cur.getArea();\r\n                    const result = curArea > area ? cur : prev;\r\n                    area = curArea;\r\n                    return result;\r\n                });\r\n            case ol.geom.GeometryType.POLYGON:\r\n                var isInsideRing = function (point, ring) {\r\n                    var result = false;\r\n                    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\r\n                        var xi = ring[i][0], yi = ring[i][1];\r\n                        var xj = ring[j][0], yj = ring[j][1];\r\n                        var intersect = ((yi > point[1]) != (yj > point[1])) &&\r\n                            (point[0] < (xj - xi) * (point[1] - yi) / (yj - yi) + xi);\r\n                        if (intersect) result = !result;\r\n                    }\r\n                    return result;\r\n                };\r\n                var coords = geometry.getCoordinates();\r\n                clipPolygon(coords);\r\n                geometry = new ol.geom.Polygon(coords);\r\n                result = geometry.getInteriorPoint().getCoordinates();\r\n                var rings = geometry.getLinearRings();\r\n                // Miramos si el punto está dentro de un agujero\r\n                for (var i = 1; i < rings.length; i++) {\r\n                    if (isInsideRing(result, rings[i].getCoordinates())) {\r\n                        result = geometry.getClosestPoint(result);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case ol.geom.GeometryType.MULTI_LINE_STRING:\r\n                var length = 0;\r\n                geometry = geometry.getLineStrings().reduce(function (prev, cur) {\r\n                    const curLength = cur.getLength();\r\n                    const result = curLength > length ? cur : prev;\r\n                    length = curLength;\r\n                    return result;\r\n                });\r\n            case ol.geom.GeometryType.LINE_STRING:\r\n                var centroid = [0, 0];\r\n                var coords = geometry.getCoordinates();\r\n                clipPolyline(coords);\r\n                geometry = new ol.geom.LineString(coords);\r\n                for (var i = 0; i < coords.length; i++) {\r\n                    centroid[0] += coords[i][0];\r\n                    centroid[1] += coords[i][1];\r\n                }\r\n                centroid[0] /= coords.length;\r\n                centroid[1] /= coords.length;\r\n                result = geometry.getClosestPoint(centroid);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.showPopup = function (popupCtl) {\r\n        var self = this;\r\n        var map = popupCtl.map;\r\n        if (map) {\r\n            var feature = self.feature;\r\n            if (feature) {\r\n                map.currentFeature = self.parent;\r\n                var currentExtent = map.getExtent();\r\n\r\n                self._innerCentroid = self.getInnerPoint({ clipBox: currentExtent });\r\n\r\n                popupCtl.contentDiv.innerHTML = self.parent.getInfo({ locale: map.options.locale });\r\n                popupCtl.menuDiv.innerHTML = '';\r\n                if (popupCtl.options.closeButton || popupCtl.options.closeButton === undefined) {\r\n                    const btn = document.createElement('div');\r\n                    btn.classList.add(popupCtl.CLASS + '-close');\r\n                    btn.setAttribute('title', popupCtl.getLocaleString('close'));\r\n                    popupCtl.menuDiv.appendChild(btn);\r\n                    btn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                        popupCtl.hide();\r\n                    });\r\n                    popupCtl.contentDiv.classList.add(popupCtl.CLASS + '-has-btn');\r\n                    // En OL2 los featureInfo en versión \"baraja de cartas\" salen sin tamaño.\r\n                    // Para evitar esto, la clase tc-ctl-finfo tiene ancho y alto establecidos.\r\n                    // Pero eso hace que en el popup salgan barras de scroll, porque contentDiv se crea demasiado pequeño.\r\n                    // Rehacemos el tamaño de tc-ctl-finfo para eliminarlas.\r\n                    const finfo = popupCtl.contentDiv.querySelector('.tc-ctl-finfo');\r\n                    if (finfo) {\r\n                        finfo.width = 'auto';\r\n                        finfo.height = 'auto';\r\n                    }\r\n                }\r\n\r\n                var options = self.parent.options;\r\n                if (TC.Util.isEmptyObject(options) && self.parent.layer &&\r\n                    self.parent.layer.options && self.parent.layer.options.styles) {\r\n\r\n                    switch (self.parent.CLASSNAME) {\r\n                        case \"TC.feature.Point\":\r\n                            options = self.parent.layer.options.styles.point;\r\n\r\n                            // 11/03/2019 Al crear las features del API desde las features nativas, \r\n                            // se valida si la feature tiene icono para definir si es punto o marcador\r\n                            // el problema viene cuando la feature no tiene estilo propio sino que lo obtiene de la capa,\r\n                            // en esos casos se define como punto lo que es un marcador y cuando llegamos aquí no se accede a las\r\n                            // opciones de marcador sino de punto.\r\n                            if (!options || TC.Util.isEmptyObject(options)) {\r\n                                options = self.parent.layer.options.styles.marker;\r\n                            }\r\n                            break;\r\n                        case \"TC.feature.Marker\":\r\n                            options = self.parent.layer.options.styles.marker;\r\n                            break;\r\n                        case \"TC.feature.Circle\":\r\n                            options = self.parent.layer.options.styles.circle;\r\n                            break;\r\n                        case \"TC.feature.MultiPolygon\":\r\n                        case \"TC.feature.Polygon\":\r\n                            options = self.parent.layer.options.styles.polygon;\r\n                            break;\r\n                        case \"TC.feature.MultiPolyline\":\r\n                        case \"TC.feature.Polyline\":\r\n                            options = self.parent.layer.options.styles.line;\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                // Calcular anchor\r\n                var anchor;\r\n                if (options.anchor) {\r\n                    anchor = getStyleValue(options.anchor, self.parent);\r\n                }\r\n                else {\r\n                    var style;\r\n                    var f = feature._wrap.parent;\r\n                    for (var i = 0; i < map.workLayers.length; i++) {\r\n                        var layer = map.workLayers[i];\r\n                        if (!layer.isRaster()) {\r\n                            if (layer.features.indexOf(f) >= 0) {\r\n                                style = layer.wrap.styleFunction(feature);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (Array.isArray(style)) {\r\n                        const image = style[0].getImage();\r\n                        anchor = !image || image instanceof ol.style.Icon ? [0.5, 0] : [0.5, 0.5];\r\n                    }\r\n                }\r\n                const offset = [0, 0];\r\n                if (anchor) {\r\n                    if (options.height) {\r\n                        offset[1] = -(getStyleValue(options.height, self.parent) || 0) * anchor[1];\r\n                    }\r\n                    else {\r\n                        var fStyle = getNativeFeatureStyle(feature, true);\r\n                        if (fStyle) {\r\n                            const image = fStyle.getImage();\r\n                            if (image instanceof ol.style.Icon) {\r\n                                offset[1] = image.getImageSize()[1] * -image.getScale();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                popupCtl.wrap.setDragged(false);\r\n                popupCtl.wrap.popup.setOffset(offset);\r\n                popupCtl.wrap.popup.setPosition(self._innerCentroid);\r\n                popupCtl.popupDiv.classList.add(TC.Consts.classes.VISIBLE);\r\n            } else {\r\n                map.wrap.hidePopup(popupCtl);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.isNative = function (feature) {\r\n        return feature instanceof ol.Feature;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getPath = function () {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.feature && self.feature._folders) {\r\n            result = self.feature._folders;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getBounds = function () {\r\n        var result = null;\r\n        var self = this;\r\n        if (self.feature) {\r\n            result = self.feature.getGeometry().getExtent();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getTemplate = function () {\r\n        var result = null;\r\n        var self = this;\r\n        var style = self.feature.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(self.feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            for (var i = 0; i < style.length; i++) {\r\n                if (style[i]._balloon) {\r\n                    var s = style[i]._balloon.getText();\r\n                    if (s) {\r\n                        style = style[i]._balloon;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (style && !Array.isArray(style) && style.getText) {\r\n            result = style.getText();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getData = function () {\r\n        var self = this;\r\n        var result = self.feature.getProperties();\r\n        // En caso de clusters\r\n        if (Array.isArray(result.features)) {\r\n            if (result.features.length === 1) {\r\n                result = result.features[0].getProperties();\r\n            }\r\n            else {\r\n                result = result.features.length + ' elementos';\r\n            }\r\n        }\r\n        var geometryName = self.feature.getGeometryName();\r\n        if (result[geometryName]) {\r\n            delete result[geometryName];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setData = function (data) {\r\n        this.feature.setProperties(data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.clearData = function () {\r\n        const feature = this.feature;\r\n        const geometryName = feature.getGeometryName();\r\n        feature.getKeys().forEach(function (key) {\r\n            if (key !== geometryName) {\r\n                feature.unset(key);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mouseMoveHandler = function (evt) {\r\n        const self = this;\r\n        if (self.sketch) {\r\n            self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mouseOverHandler = function (evt) {\r\n        const self = this;\r\n        if (self.sketch && self.hoverCoordinate) {\r\n            self.pushCoordinate(self.hoverCoordinate);\r\n            self.hoverCoordinate = null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.clickHandler = function (evt) {\r\n        const self = this;\r\n        if (self.parent.map.view === TC.Consts.view.PRINTING) {\r\n            return;\r\n        }\r\n        if (self._mdPx) { // No operamos si el clic es consecuencia es en realidad un drag\r\n            const dx = self._mdPx[0] - evt.clientX;\r\n            const dy = self._mdPx[1] - evt.clientY;\r\n            if (dx * dx + dy * dy > self.interaction.squaredClickTolerance_) {\r\n                return;\r\n            }\r\n        }\r\n        if (self.sketch) {\r\n            var coords = self.sketch.getGeometry().getCoordinates();\r\n            self.parent.trigger(TC.Consts.event.POINT, {\r\n                point: coords[coords.length - 1]\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mousedownHandler = function (evt) {\r\n        const self = this;\r\n        self._mdPx = [evt.clientX, evt.clientY];\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.getMeasureData = function () {\r\n        var self = this;\r\n\r\n        var formatLength = function (line, data) {\r\n            line = new ol.geom.LineString(TC.Util.reproject(line.getCoordinates(), self.parent.map.crs, self.parent.map.options.utmCrs));\r\n            data.length = line.getLength();\r\n        };\r\n\r\n        var formatArea = function (polygon, data) {\r\n            polygon = new ol.geom.Polygon([TC.Util.reproject(polygon.getLinearRing(0).getCoordinates(), self.parent.map.crs, self.parent.map.options.utmCrs)]);\r\n            data.area = polygon.getArea();\r\n            var ring = polygon.getLinearRing(0);\r\n            data.perimeter = ol.geom.flat.linearRingLength(ring.flatCoordinates, 0, ring.flatCoordinates.length, ring.stride);\r\n        };\r\n\r\n        var result = {\r\n            units: ol.proj.Units.METERS\r\n        };\r\n        if (this.sketch) {\r\n            var geom = (this.sketch.getGeometry());\r\n            if (geom instanceof ol.geom.Polygon) {\r\n                formatArea(geom, result);\r\n            }\r\n            else if (geom instanceof ol.geom.LineString) {\r\n                formatLength(geom, result);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    // Función para reproyectar el dibujo actual\r\n    const drawProjectionChangeHandler = function (ctl, e) {\r\n        if (ctl.sketch) {\r\n            const oldProj = e.oldValue.getProjection();\r\n            const newProj = e.target.get(e.key).getProjection();\r\n            if (oldProj.getCode() !== newProj.getCode()) {\r\n                const geom = ctl.sketch.getGeometry();\r\n                geom.transform(oldProj, newProj);\r\n                ctl.interaction.sketchPoint_.getGeometry().transform(oldProj, newProj);\r\n                const flatCoordinates = [];\r\n                var sketchCoords;\r\n                if (ctl.interaction.getMode() === 'Polygon') {\r\n                    sketchCoords = ctl.interaction.sketchCoords_[0];\r\n                }\r\n                else {\r\n                    sketchCoords = ctl.interaction.sketchCoords_;\r\n                }\r\n                ol.geom.flat.deflateCoordinates(flatCoordinates, 0, sketchCoords, geom.stride);\r\n                const transformFn = ol.proj.getTransform(oldProj, newProj);\r\n                transformFn(flatCoordinates, flatCoordinates, geom.stride);\r\n                sketchCoords = ol.geom.flat.inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, geom.stride);\r\n                if (ctl.interaction.getMode() === 'Polygon') {\r\n                    ctl.interaction.sketchCoords_ = [sketchCoords];\r\n                }\r\n                else {\r\n                    ctl.interaction.sketchCoords_ = sketchCoords;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.activate = function (mode) {\r\n        var self = this;\r\n\r\n        var type;\r\n        switch (mode) {\r\n            case TC.Consts.geom.POLYGON:\r\n                type = ol.geom.GeometryType.POLYGON;\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n                type = ol.geom.GeometryType.POINT;\r\n                break;\r\n            default:\r\n                type = ol.geom.GeometryType.LINE_STRING;\r\n                break;\r\n        }\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.getLayer()]).then(function (objects) {\r\n                const olMap = objects[0];\r\n                const layer = objects[1];\r\n                if (layer) {\r\n                    layer.wrap.getLayer().then(function (olLayer) {\r\n\r\n                        if (!self.viewport) self.viewport = olMap.getViewport();\r\n\r\n                        if (self.interaction) {\r\n                            olMap.removeInteraction(self.interaction);\r\n                            if (self._mousedownHandler) {\r\n                                self.viewport.removeEventListener('mousedown', self._mousedownHandler);\r\n                                self._mousedownHandler = null;\r\n                            }\r\n                            if (self._clickHandler) {\r\n                                self.viewport.removeEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                                self._clickHandler = null;\r\n                            }\r\n                            if (self._mouseMoveHandler && self._mouseOverHandler) {\r\n                                self.viewport.removeEventListener(MOUSEMOVE, self._mouseMoveHandler);\r\n                                self.viewport.removeEventListener(MOUSEOVER, self._mouseOverHandler);\r\n                            }\r\n                        }\r\n\r\n                        if (self.snapInteraction) {\r\n                            olMap.removeInteraction(self.snapInteraction);\r\n                        }\r\n\r\n                        if (mode) {\r\n                            self._mousedownHandler = self.mousedownHandler.bind(self);\r\n                            self._clickHandler = self.clickHandler.bind(self);\r\n                            self.viewport.addEventListener('mousedown', self._mousedownHandler);\r\n                            self.viewport.addEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                            if (self.parent.measure) {\r\n                                self._mouseMoveHandler = self.mouseMoveHandler.bind(self);\r\n                                self._mouseOverHandler = self.mouseOverHandler.bind(self);\r\n                                self.viewport.addEventListener(MOUSEMOVE, self._mouseMoveHandler);\r\n                                self.viewport.addEventListener(MOUSEOVER, self._mouseOverHandler);\r\n                            }\r\n\r\n                            var drawOptions = {\r\n                                type: type,\r\n                                snapTolerance: 0,\r\n                                condition: function () {\r\n                                    if (ol.events.condition.shiftKeyOnly(arguments[0])) {\r\n                                        hole = olMap.forEachFeatureAtPixel(olMap.getPixelFromCoordinate(arguments[0].coordinate), function (feature) {\r\n                                            if (ol.geom.GeometryType.POLYGON == feature.getGeometry().getType() ||\r\n                                                ol.geom.GeometryType.MULTI_POLYGON == feature.getGeometry().getType()) {\r\n                                                return feature;\r\n                                            }\r\n                                            return null;\r\n                                        },\r\n                                            {\r\n                                                hitTolerance: hitTolerance\r\n                                            });\r\n                                    }\r\n\r\n                                    if (self.parent.map.view === TC.Consts.view.PRINTING) {\r\n                                        return null;\r\n                                    }\r\n\r\n                                    return true;\r\n                                }\r\n                            };\r\n                            if (olLayer) {\r\n                                drawOptions.source = olLayer.getSource();\r\n                            }\r\n                            switch (mode) {\r\n                                case TC.Consts.geom.RECTANGLE:\r\n                                    drawOptions.style = createNativeStyle({\r\n                                        styles: { line: self.parent.styles.line }\r\n                                    });\r\n                                    drawOptions.type = ol.geom.GeometryType.LINE_STRING;\r\n                                    drawOptions.maxPoints = 2;\r\n                                    drawOptions.geometryFunction = function (coordinates, geometry) {\r\n                                        const start = coordinates[0];\r\n                                        const end = coordinates[1];\r\n                                        const newCoords = [[start, [start[0], end[1]], end, [end[0], start[1]], start]];\r\n                                        if (geometry) {\r\n                                            geometry.setCoordinates(newCoords);\r\n                                        }\r\n                                        else {\r\n                                            geometry = new ol.geom.Polygon(newCoords);\r\n                                        }\r\n                                        return geometry;\r\n                                    };\r\n                                    break;\r\n                                case TC.Consts.geom.POLYGON:\r\n                                    drawOptions.style = createNativeStyle({\r\n                                        styles: { polygon: self.parent.styles.polygon }\r\n                                    });\r\n                                    break;\r\n                                case TC.Consts.geom.POINT:\r\n                                    drawOptions.style = createNativeStyle({\r\n                                        styles: { point: self.parent.styles.point }\r\n                                    });\r\n                                    break;\r\n                                default:\r\n                                    drawOptions.style = createNativeStyle({\r\n                                        styles: { line: self.parent.styles.line }\r\n                                    });\r\n                                    break;\r\n                            }\r\n\r\n                            self.interaction = new ol.interaction.Draw(drawOptions);\r\n\r\n                            self.interaction.on('drawstart', function (evt) {\r\n                                self.sketch = evt.feature;\r\n                                self.parent.trigger(TC.Consts.event.DRAWSTART);\r\n                            }, this);\r\n\r\n                            self.interaction.on('drawend', function (evt) {\r\n                                evt.feature.setStyle(evt.target.overlay_.getStyle().map(function (style) {\r\n                                    return style.clone();\r\n                                }));\r\n                                if (self.parent.measure) {\r\n                                    self.parent.trigger(TC.Consts.event.MEASURE, self.getMeasureData());\r\n                                }\r\n                                createFeatureFromNative(self.sketch).then(function (feat) {\r\n                                    self.parent.trigger(TC.Consts.event.DRAWEND, { feature: feat });\r\n                                    self.sketch = null;\r\n                                });\r\n                            }, this);\r\n\r\n                            self._projectionChangeHandler = function (e) {\r\n                                drawProjectionChangeHandler(self, e);\r\n                            };\r\n                            olMap.on('change:view', self._projectionChangeHandler);\r\n\r\n                            olMap.addInteraction(self.interaction);\r\n\r\n                            if (self.parent.snapping) {\r\n                                var snapOptions = {};\r\n                                if (olLayer) {\r\n                                    snapOptions.source = olLayer.getSource();\r\n                                }\r\n                                else if (self.parent.snapping instanceof TC.Layer) {\r\n                                    snapOptions.source = self.parent.snapping.wrap.layer.getSource();\r\n                                }\r\n                                self.snapInteraction = new ol.interaction.Snap(snapOptions);\r\n                                olMap.addInteraction(self.snapInteraction);\r\n                            }\r\n                        }\r\n\r\n                        self.redoStack = [];\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.deactivate = function () {\r\n        var self = this;\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.getLayer()]).then(function (objects) {\r\n                const olMap = objects[0];\r\n                const layer = objects[1];\r\n                if (self.viewport) {\r\n                    if (self._mousedownHandler) {\r\n                        self.viewport.removeEventListener('mousedown', self._mousedownHandler);\r\n                        self._mousedownHandler = null;\r\n                    }\r\n                    if (self._clickHandler) {\r\n                        self.viewport.removeEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                        self._clickHandler = null;\r\n                    }\r\n                }\r\n                if (layer && !self.parent.persistent) {\r\n                    layer.clearFeatures();\r\n                }\r\n                if (self.interaction) {\r\n                    olMap.removeInteraction(self.interaction);\r\n                    self.interaction = null;\r\n                }\r\n                olMap.un('change:view', self._projectionChangeHandler);\r\n            });\r\n        }\r\n    };\r\n\r\n    //El valor devuelto es lo que va al stack de redo\r\n    TC.wrap.control.Draw.prototype.popCoordinate = function () {\r\n        var self = this;\r\n        var result = null;\r\n        if (self.interaction) {\r\n            var feature = self.interaction.sketchFeature_;\r\n            if (feature) {\r\n                var coords;\r\n                var geom = feature.getGeometry();\r\n\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    coords = geom.getCoordinates()[0];\r\n                }\r\n                else if (geom instanceof ol.geom.LineString) {\r\n                    coords = geom.getCoordinates();\r\n                }\r\n                var fullCoords = coords;\r\n                if (coords.length > 1) {\r\n\r\n                    var puntos;\r\n                    if (geom instanceof ol.geom.Polygon)\r\n                        puntos = self.interaction.sketchCoords_[0];\r\n                    else if (geom instanceof ol.geom.LineString)\r\n                        puntos = self.interaction.sketchCoords_;\r\n\r\n                    /*\r\n                    Al menos con linestring, no necesariamente hay que quitar el último\r\n                    Porque OL mete en coordinates del sketchFeature_ tanto el último marcado como el que flota detrás del cursor\r\n                    Para comprobar que realmente es ése, podemos contrastarlo con self.interaction.sketchPoint_.getGeometry().getCoordinates()\r\n                    */\r\n                    var flyingPointContained = false;\r\n                    if (self.interaction.sketchPoint_) {\r\n                        var flyingPoint = self.interaction.sketchPoint_.getGeometry().getCoordinates();\r\n                        for (var i = 0; i < coords.length; i++) {\r\n                            if (coords[i][0] == flyingPoint[0] && coords[i][1] == flyingPoint[1]) {\r\n                                flyingPointContained = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    var index;\r\n                    if (flyingPointContained) index = puntos.length - 2;\r\n                    else index = puntos.length - 1;\r\n\r\n                    result = puntos[index];\r\n                    puntos.splice(index, 1);\r\n\r\n                    if (geom instanceof ol.geom.Polygon) {\r\n                        geom.setCoordinates([puntos]);\r\n                        self.interaction.sketchLine_.getGeometry().setCoordinates(puntos);\r\n                    }\r\n                    else {\r\n                        geom.setCoordinates(puntos);\r\n                    }\r\n\r\n\r\n                    feature.setGeometry(geom);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.pushCoordinate = function (coord) {\r\n        var self = this;\r\n        var result = false;\r\n        if (self.interaction) {\r\n            var feature = self.interaction.sketchFeature_;\r\n            if (feature) {\r\n                var coords;\r\n                var geom = feature.getGeometry();\r\n\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    coords = geom.getCoordinates()[0];\r\n                } else if (geom instanceof ol.geom.LineString) {\r\n                    coords = geom.getCoordinates();\r\n                }\r\n                var fullCoords = coords;\r\n                //coords.push(coord);\r\n\r\n                var puntos;\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    puntos = self.interaction.sketchCoords_[0];\r\n                    //self.interaction.sketchCoords_[0].push(coord);\r\n                    //geom.setCoordinates([fullCoords], ol.geom.GeometryLayout.XY);\r\n                } else if (geom instanceof ol.geom.LineString) {\r\n\r\n                    puntos = self.interaction.sketchCoords_;\r\n                }\r\n\r\n                //Si hay punto volador, hay que meter la coordenada justo antes\r\n                var flyingPointContained = false;\r\n                if (self.interaction.sketchPoint_) {\r\n                    var flyingPoint = self.interaction.sketchPoint_.getGeometry().getCoordinates();\r\n                    for (var i = 0; i < coords.length; i++) {\r\n                        if (coords[i][0] == flyingPoint[0] && coords[i][1] == flyingPoint[1]) {\r\n                            flyingPointContained = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                if (flyingPointContained) index = puntos.length - 1;\r\n                else index = puntos.length;\r\n                puntos.splice(index, 0, coord);\r\n\r\n                if (geom instanceof ol.geom.LineString)\r\n                    geom.setCoordinates(puntos, ol.geom.GeometryLayout.XY);\r\n                else {\r\n                    geom.setCoordinates([puntos], ol.geom.GeometryLayout.XY);\r\n                    self.interaction.sketchLine_.getGeometry().setCoordinates(puntos);\r\n                    //feature.setGeometry(geom);\r\n                }\r\n\r\n\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.undo = function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        var coord = self.popCoordinate();\r\n        if (coord) {\r\n            self.redoStack.push(coord);\r\n            result = true;\r\n        }\r\n\r\n        self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.redo = function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        if (self.redoStack.length > 0) {\r\n            self.pushCoordinate(self.redoStack.pop());\r\n            result = true;\r\n        }\r\n\r\n        self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.end = function () {\r\n        var self = this;\r\n        if (self.interaction && self.interaction.sketchFeature_)\r\n            self.interaction.finishDrawing();\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.setStyle = function (style) {\r\n        const self = this;\r\n        if (self.interaction) {\r\n            self.interaction.overlay_.setStyle(createNativeStyle({\r\n                styles: style\r\n            }));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getRequestSchemas = function (options) {\r\n        var self = this;\r\n        var extent = options.extent;\r\n        var layers = options.layers;\r\n        var result = new Array(layers.length);\r\n        for (var i = 0, len = result.length; i < len; i++) {\r\n            var layer = layers[i];\r\n            var schema = {\r\n                layerId: layer.id\r\n            };\r\n            var olSource = layer.wrap.layer.getSource();\r\n            if (olSource.getUrls) {\r\n                schema.url = olSource.getUrls()[0];\r\n            }\r\n            if (olSource.getTileGrid) {\r\n                var tileGrid = olSource.getTileGrid();\r\n                var resolutions = tileGrid.getResolutions();\r\n                var matrixIds = tileGrid.getMatrixIds();\r\n                var node = layer.getLayerNodeByName(layer.layerNames);\r\n                var tmsLimits = null;\r\n                for (var j = 0, llen = node.TileMatrixSetLink.length; j < llen; j++) {\r\n                    var tmsl = node.TileMatrixSetLink[j];\r\n                    if (tmsl.TileMatrixSet === layer.matrixSet) {\r\n                        tmsLimits = tmsl.TileMatrixSetLimits;\r\n                        break;\r\n                    }\r\n                }\r\n                schema.tileMatrixLimits = [];\r\n                for (var j = 0, rlen = resolutions.length; j < rlen; j++) {\r\n                    var origin = tileGrid.getOrigin(j);\r\n                    var tileSize = tileGrid.getTileSize(j);\r\n                    var resolution = resolutions[j];\r\n                    var unitsPerTile = tileSize * resolution;\r\n                    var tml = {\r\n                        mId: matrixIds[j],\r\n                        res: resolution,\r\n                        origin: origin,\r\n                        tSize: tileSize,\r\n                        cl: Math.floor((extent[0] - origin[0]) / unitsPerTile),\r\n                        cr: Math.floor((extent[2] - origin[0]) / unitsPerTile),\r\n                        rt: Math.floor((origin[1] - extent[3]) / unitsPerTile),\r\n                        rb: Math.floor((origin[1] - extent[1]) / unitsPerTile)\r\n                    }\r\n                    if (tmsLimits) {\r\n                        var tmsLimit = tmsLimits[j];\r\n                        if (tmsLimit) {\r\n                            tml.cl = Math.max(tml.cl, tmsLimit.MinTileCol);\r\n                            tml.cr = Math.min(tml.cr, tmsLimit.MaxTileCol);\r\n                            tml.rt = Math.max(tml.rt, tmsLimit.MinTileRow);\r\n                            tml.rb = Math.min(tml.rb, tmsLimit.MaxTileRow);\r\n                        }\r\n                    }\r\n                    if (tml.cl <= tml.cr && tml.rt <= tml.rb) {\r\n                        schema.tileMatrixLimits.push(tml);\r\n                    }\r\n                }\r\n            }\r\n            result[i] = schema;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getGetTilePattern = function (layer) {\r\n        var result = \"\";\r\n        var olSource = layer.wrap.layer.getSource();\r\n        if (olSource.getUrls) {\r\n            result = olSource.getUrls()[0];\r\n        }\r\n        if (layer.options.encoding !== TC.Consts.WMTSEncoding.RESTFUL) {\r\n            if (result.indexOf('?') < 0) {\r\n                result = result + '?';\r\n            }\r\n            if (result.indexOf('?') === result.length - 1) {\r\n                result = result + 'layer=' + layer.layerNames + '&style=default&tilematrixset=' + encodeURIComponent(layer.matrixSet) +\r\n                    '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + encodeURIComponent(layer.format) +\r\n                    '&TileMatrix={TileMatrix}&TileCol={TileCol}&TileRow={TileRow}';\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const createHaloStroke1 = function (width) {\r\n        return new ol.style.Stroke({\r\n            color: '#ffffff',\r\n            width: width + 4,\r\n        });\r\n    };\r\n\r\n    const createHaloStroke2 = function (width) {\r\n        return new ol.style.Stroke({\r\n            color: '#000000',\r\n            width: width + 6,\r\n        });\r\n    };\r\n\r\n    const addHaloToStyle = function (style) {\r\n        if (style === undefined) {\r\n            style = [];\r\n        }\r\n        if (style instanceof ol.style.Style) {\r\n            style = [style];\r\n        }\r\n        style = style.slice();\r\n        const mainStyle = style[0];\r\n        if (mainStyle) {\r\n            const image = mainStyle.getImage();\r\n            var strokeWidth;\r\n            if (image instanceof ol.style.RegularShape) {\r\n                strokeWidth = image.getStroke().getWidth();\r\n                const radius = image.getRadius();\r\n                const haloPart1 = mainStyle.clone();\r\n                haloPart1.setImage(new ol.style.Circle({\r\n                    radius: radius,\r\n                    stroke: createHaloStroke1(strokeWidth)\r\n                }));\r\n                style.unshift(haloPart1);\r\n                const haloPart2 = mainStyle.clone();\r\n                haloPart2.setImage(new ol.style.Circle({\r\n                    radius: radius,\r\n                    stroke: createHaloStroke2(strokeWidth)\r\n                }));\r\n                style.unshift(haloPart2);\r\n            }\r\n            const stroke = mainStyle.getStroke();\r\n            if (stroke) {\r\n                strokeWidth = stroke.getWidth();\r\n                style.unshift(new ol.style.Style({\r\n                    stroke: createHaloStroke1(strokeWidth)\r\n                }));\r\n                style.unshift(new ol.style.Style({\r\n                    stroke: createHaloStroke2(strokeWidth)\r\n                }));\r\n            }\r\n            return style;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const createSelectedStyle = function (feat) {\r\n        feat._originalStyle = feat._originalStyle || feat.getStyle();\r\n        if (TC.Util.isFunction(feat._originalStyle)) {\r\n            return function (f, r) {\r\n                return addHaloToStyle(feat._originalStyle(f, r));\r\n            };\r\n        }\r\n        return addHaloToStyle(feat._originalStyle);\r\n    };\r\n\r\n    const setSelectedStyle = function (feat) {\r\n        updateSelectedStyle.call(feat);\r\n        feat.changed();\r\n        ol.events.listen(feat, CHANGE, updateSelectedStyle, feat);\r\n    };\r\n\r\n    const removeSelectedStyle = function (feat) {\r\n        ol.events.unlisten(feat, CHANGE, updateSelectedStyle, feat);\r\n        if (feat._originalStyle) {\r\n            feat.setStyle(null);\r\n            feat.setStyle(feat._originalStyle);\r\n        }\r\n        feat._originalStyle = null;\r\n    };\r\n\r\n    const updateSelectedStyle = function () {\r\n        this.style_ = createSelectedStyle(this);\r\n        this.styleFunction_ = !this.style_ ? undefined : ol.Feature.createStyleFunction(this.style_);\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.activate = function () {\r\n        const self = this;\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.layer.wrap.getLayer()]).then(function (olObjects) {\r\n                const olMap = olObjects[0];\r\n                const olLayer = olObjects[1];\r\n                if (self.selectInteraction) {\r\n                    olMap.removeInteraction(self.selectInteraction);\r\n                }\r\n                var select = new ol.interaction.Select({\r\n                    layers: [olLayer],\r\n                    hitTolerance: hitTolerance\r\n                });\r\n                self.selectInteraction = select;\r\n                olMap.addInteraction(select);\r\n                var getWrapperFeature = function (elm) {\r\n                    return elm._wrap.parent;\r\n                };\r\n                select.on('select', function (event) {\r\n                    if (event.selected.length > 0) {\r\n                        self.parent.trigger(TC.Consts.event.FEATURESSELECT, { ctrl: self, features: event.selected.map(getWrapperFeature) });\r\n                    }\r\n                    if (event.deselected.length > 0) {\r\n                        if (event.selected.length == 0) {\r\n                            self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { ctrl: self.parent, features: event.deselected.map(getWrapperFeature) });\r\n                        }\r\n                    }\r\n                });\r\n                if (self.modifyInteraction) {\r\n                    olMap.removeInteraction(self.modifyInteraction);\r\n                }\r\n                var modify = new ol.interaction.Modify({\r\n                    features: select.getFeatures()\r\n                });\r\n                modify.on('modifyend', function (e) {\r\n                    e.features.forEach(function (feature) {\r\n                        feature._wrap.parent.geometry = feature._wrap.getGeometry();\r\n                        self.parent.trigger(TC.Consts.event.FEATUREMODIFY, { feature: feature._wrap.parent, layer: self.parent.layer });\r\n                    });\r\n                });\r\n                self.modifyInteraction = modify;\r\n                olMap.addInteraction(modify);\r\n\r\n                if (self.snapInteraction) {\r\n                    olMap.removeInteraction(self.snapInteraction);\r\n                }\r\n                if (self.parent.snapping) {\r\n                    self.snapInteraction = new ol.interaction.Snap({\r\n                        source: olLayer.getSource()\r\n                    });\r\n                    olMap.addInteraction(self.snapInteraction);\r\n                }\r\n\r\n                if (!self._onMouseMove) {\r\n                    self._onMouseMove = function (e) {\r\n                        const mapTarget = olMap.getTarget();\r\n                        var hit = false;\r\n                        var feature;\r\n\r\n                        var pixel = olMap.getEventPixel(e);\r\n                        hit = olMap.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                            if (layer === self.parent.layer.wrap.layer) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        },\r\n                            {\r\n                                hitTolerance: hitTolerance\r\n                            });\r\n\r\n                        if (hit) {\r\n                            mapTarget.style.cursor = 'pointer';\r\n                        } else {\r\n                            mapTarget.style.cursor = '';\r\n                            //self.parent.trigger(TC.Consts.event.FEATUREOUT);\r\n                        }\r\n                    };\r\n                }\r\n\r\n                olMap.getViewport().addEventListener(MOUSEMOVE, self._onMouseMove);\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.deactivate = function () {\r\n        const self = this;\r\n        if (self.modifyInteraction) {\r\n            self.modifyInteraction.setActive(false);\r\n            self.selectInteraction.setActive(false);\r\n            self.parent.map.wrap.getMap().then(function (olMap) {\r\n                olMap.getViewport().removeEventListener(MOUSEMOVE, self._onMouseMove);\r\n                olMap.removeInteraction(self.modifyInteraction);\r\n                olMap.removeInteraction(self.selectInteraction);\r\n                self.modifyInteraction = null;\r\n                self.selectInteraction = null;\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.getSelectedFeatures = function () {\r\n        var self = this;\r\n        var result = [];\r\n        if (self.selectInteraction) {\r\n            self.selectInteraction.getFeatures().forEach(function (elm) {\r\n                result[result.length] = elm._wrap.parent;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.setSelectedFeatures = function (features) {\r\n        var self = this;\r\n        if (self.selectInteraction) {\r\n            var source = self.selectInteraction.featureOverlay_.getSource();\r\n            source.clear();\r\n            source.addFeatures(features.map(function (elm) {\r\n                return elm.wrap.feature;\r\n            }));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.unselectFeatures = function (features) {\r\n        features = features || [];\r\n        const self = this;\r\n        const selectedFeatures = self.selectInteraction ? self.selectInteraction.getFeatures() : null;\r\n        if (selectedFeatures) {\r\n            const unselectedFeatures = [];\r\n            selectedFeatures.getArray().slice().forEach(function (olFeature) {\r\n                if (!features.length || features.indexOf(olFeature) >= 0) {\r\n                    selectedFeatures.remove(olFeature);\r\n                    unselectedFeatures[unselectedFeatures.length] = olFeature._wrap.parent;\r\n                }\r\n            });\r\n            if (unselectedFeatures.length) {\r\n                self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { features: unselectedFeatures });\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.activate = function (mode) {\r\n        var self = this;\r\n        self.cancel(true);\r\n        //if (!self.session) {\r\n        //    self.session = {\r\n        //        features: []\r\n        //        , featuresAdded: []\r\n        //        , featuresRemoved: []\r\n        //        , featuresModified: []\r\n        //    };\r\n        //}\r\n        if (mode === TC.Consts.editMode.SELECT) {\r\n            TC.wrap.control.Modify.prototype.activate.call(self);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.deactivate = function () {\r\n        var self = this;\r\n        TC.wrap.control.Modify.prototype.deactivate.call(self);\r\n\r\n        if (self.drawInteraction) {\r\n            self.drawInteraction.abortDrawing_();\r\n            self.drawInteraction.setActive(false);\r\n            //self.drawInteraction.destroy();\r\n            self.parent.map.wrap.getMap().then(function (olMap) {\r\n                olMap.removeInteraction(self.drawInteraction);\r\n                self.drawInteraction = null;\r\n            });\r\n            //    self.control.layer.events.un(\"sketchcomplete\");\r\n            //    self.control.deactivate();\r\n            //    self.control.destroy();\r\n            //    self.control = null;\r\n        }\r\n        self.parent.trigger(TC.Consts.event.CONTROLDEACTIVATE, { ctrl: self });\r\n        //self.session = null;        \r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.cancel = function (deactivate, cancelTxt) {\r\n        var self = this;\r\n        self.points = [];\r\n        self.histPoints = [];\r\n        var layer = (self.control && self.control.layer) || (self.modifyInteraction && self.modifyInteraction.layer);\r\n        //if (!self.session || ((self.modifyInteraction && self.modifyInteraction.modified) || (self.session.featuresAdded && self.session.featuresAdded.length)) && cancelTxt && !confirm(cancelTxt))\r\n        //    return;\r\n        if (self.selectInteraction) {\r\n            var features = self.selectInteraction.getFeatures();\r\n            self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { ctrl: self.parent, feature: features.get(0) });\r\n            features.clear();\r\n            self.selectInteraction.setActive(false);\r\n        }\r\n        //if (self.drawInteraction) {\r\n        //    self.drawInteraction.abortDrawing_();\r\n        //    if (deactivate) {\r\n        //        self.drawInteraction.setActive(false);\r\n        //    }\r\n        //}\r\n        //if(self.modifyInteraction)\r\n        //{\r\n        //    if (self.modifyInteraction.feature)\r\n        //        self.modifyInteraction.unselectFeature(self.modifyInteraction.feature);\r\n        //    if (deactivate)\r\n        //    {\r\n        //        self.modifyInteraction.deactivate();\r\n        //    }   \r\n        //}\r\n        ////if (self.session.featuresAdded && self.session.featuresAdded.length > 0) {\r\n        ////    layer.removeFeatures(self.session.featuresAdded);\r\n        ////    self.session.featuresAdded = [];\r\n        ////}\r\n        //self.parent.trigger(TC.Consts.event.EDITIONCANCEL, { ctrl: self });\r\n        ////no se por que hostias se cambia el renderIntent a las features\r\n        //layer.features.forEach(function (feat) {\r\n        //    feat.renderIntent = \"\";\r\n        //});    \r\n        //layer.removeAllFeatures();\r\n        //layer.addFeatures(self.session.features);        \r\n        //self.clearSession();\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.getSelectedFeatures = function () {\r\n        return TC.wrap.control.Modify.prototype.getSelectedFeatures.call(this);\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.setSelectedFeatures = function (features) {\r\n        TC.wrap.control.Modify.prototype.setSelectedFeatures.call(this, features);\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.deleteFeatures = function (features) {\r\n        var self = this;\r\n        if (Array.isArray(features)) {\r\n            var olFeatures = features.map(function (elm) {\r\n                return elm.wrap.feature;\r\n            });\r\n            self.parent.layer.wrap.getLayer().then(function (olLayer) {\r\n                var selectedFeatures = self.selectInteraction ? self.selectInteraction.getFeatures() : null;\r\n                for (var i = 0, len = olFeatures.length; i < len; i++) {\r\n                    var olFeature = olFeatures[i];\r\n                    if (selectedFeatures) {\r\n                        selectedFeatures.remove(olFeature);\r\n                        self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { feature: olFeature._wrap.parent });\r\n                    }\r\n                    olLayer.getSource().removeFeature(olFeature);\r\n                    self.parent.trigger(TC.Consts.event.FEATUREREMOVE, { feature: olFeature._wrap.parent });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    //TC.wrap.control.Edit.prototype.clearSession = function () {\r\n    //    var self = this;\r\n    //    delete self.session;\r\n    //};\r\n\r\n    TC.wrap.Feature.prototype.toGML = function (version, srsName) {\r\n        var parser = new ol.format.GML({\r\n            srsName: srsName\r\n        });\r\n        var xml = parser.writeGeometryNode(this.feature.getGeometry());\r\n        //reemplazo todos los <loquesea por <gml:loquesea y </loquesea por </gml:loquesea\r\n        return new XMLSerializer().serializeToString(xml.firstChild).replace(/\\<\\/?\\w/gm, function (str) { var pos = str.indexOf(\"/\") > 0 ? str.indexOf(\"/\") + 1 : 1; return str.substring(0, pos) + \"gml:\" + str.substring(pos) })\r\n        //return new XMLSerializer().serializeToString(xml.firstChild).replace(/\\</gm, \"<gml:\");\r\n    };\r\n\r\n\r\n    TC.wrap.Feature.prototype.toGeoJSON = function () {\r\n        var parser = new ol.format.GeoJSON();\r\n        return parser.writeGeometry(this.feature.getGeometry());\r\n    };\r\n\r\n    TC.wrap.Geometry.write = function (options) {\r\n        options = options || {};\r\n        var geometry;\r\n        switch (options.format) {\r\n            default:\r\n                options.parser = new ol.format.GeoJSON();\r\n        };\r\n        switch (options.type) {\r\n            case TC.Consts.geom.POLYLINE:\r\n                geometry = new ol.geom.LineString(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.POLYGON:\r\n                geometry = new ol.geom.Polygon(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                geometry = new ol.geom.MultiPoint(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                geometry = new ol.geom.MultiLineString(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                geometry = new ol.geom.MultiPolygon(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n            default:\r\n                geometry = new ol.geom.Point(options.coordinates);\r\n                break;\r\n        };\r\n        return options.parser.writeGeometry(geometry);\r\n    };\r\n\r\n    TC.wrap.Geometry.toGeoJSON = function (options) {\r\n        return TC.wrap.Geometry.write(options);\r\n    };\r\n\r\n    return ol;\r\n});\r\n"]}