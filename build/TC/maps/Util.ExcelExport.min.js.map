{"version":3,"sources":["Util.ExcelExport.js"],"names":["TC","Util","ExcelExport","this","stringifyField","data","delimier","quoteText","replace","indexOf","stringify","responseData","options","characters","fromCharCode","String","INVALID_CHARACTER_ERR","document","createElement","error","window","btoa","string","a","b","b2","b3","b4","c","i","len","length","max","Math","result","charCodeAt","charAt","atob","chars","push","join","arrData","Array","isArray","isFunction","dataString","j","hasOwnProperty","ds","toLocaleString","navigator","language","substring","cls","item","value","num","Number","trim","isNaN","test","toString","rowspan","colspan","template","ctx","worksheet","workSheet","table","caption","title","m","p","prototype","Save","filename","rows","csvFile","processRow","row","finalVal","innerValue","Date","search","s","txtDelim","fieldSep","detectIE","execCommand","downloadWin","open","write","close","unescape","encodeURIComponent","downloadLink","setAttribute","body","appendChild","setTimeout","click","removeChild"],"mappings":"AAAAA,GAAGC,KAAKC,YAAc,WAWlBC,KAAKC,eAAiB,SAAUC,EAAMC,EAAUC,GAC5C,GAAoB,iBAATF,EAAmB,CAC1BA,EAAOA,EAAKG,QAAQ,KAAM,OACtBD,GAAaF,EAAKI,QAAQ,MAAQ,GAAKJ,EAAKI,QAAQ,OAAS,GAAKJ,EAAKI,QAAQ,OAAS,KAAGJ,EAAOC,EAAWD,EAAOC,GACxH,OAAOD,EAGX,MAAoB,kBAATA,EACAA,EAAO,OAAS,QAGpBA,GAYXF,KAAKO,UAAY,SAAUC,EAAcC,GAErC,IAIIC,EAAa,oEACbC,EAAeC,OAAOD,aACtBE,EAAyB,WAEzB,IACIC,SAASC,cAAc,KACzB,MAAOC,GACL,OAAOA,GALa,GAU5BC,OAAOC,OAASD,OAAOC,KAAO,SAAUC,GAGpC,IAFA,IAAIC,EAAGC,EAAOC,EAAIC,EAAIC,EAAIC,EAAGC,EAAI,EAAGC,EAAMR,EAAOS,OAAQC,EAAMC,KAAKD,IAAKE,EAAS,GAE3EL,EAAIC,GAAK,CAKZ,GAAIE,EAJJT,EAAID,EAAOa,WAAWN,MAAQ,EAC9BL,EAAIF,EAAOa,WAAWN,MAAQ,EAC9BD,EAAIN,EAAOa,WAAWN,MAAQ,GAEX,IACf,MAAMb,EAIVS,GAAW,EAAJF,IAAY,EAAOC,GAAK,EAAK,GACpCE,GAAW,GAAJF,IAAY,EAAOI,GAAK,EAAK,EACpCD,EAAS,GAAJC,EAEAJ,EAEOI,IACRD,EAAK,IAFLD,EAAKC,EAAK,GAIdO,GAAUrB,EAAWuB,OAVfb,GAAK,EAAK,IAUkBV,EAAWuB,OAAOX,GAAMZ,EAAWuB,OAAOV,GAAMb,EAAWuB,OAAOT,GAExG,OAAOO,IAIXd,OAAOiB,OAASjB,OAAOiB,KAAO,SAAUf,GAEpC,IAAIC,EAAGC,EAAOC,EAAIC,EAAQE,EAAGC,EAAI,EAAGC,GADpCR,EAASA,EAAOd,QAAQ,MAAO,KACkBuB,OAAQO,EAAQ,GAEjE,GAAIR,EAAM,GAAM,EACZ,MAAMd,EAEV,KAAOa,EAAIC,GAAK,CAMZP,GAAW,GALNV,EAAWJ,QAAQa,EAAOc,OAAOP,QAKlB,GAJpBJ,EAAKZ,EAAWJ,QAAQa,EAAOc,OAAOP,QAIL,EAAK,EACtCL,GAAW,GAALC,IAAa,GAJnBC,EAAKb,EAAWJ,QAAQa,EAAOc,OAAOP,QAIN,EAAK,GACrCD,GAAW,EAALF,IAAa,EAAW,GAJzBb,EAAWJ,QAAQa,EAAOc,OAAOP,MAMtCS,EAAMC,KAAKzB,EAAaS,IACxBC,GAAKc,EAAMC,KAAKzB,EAAaU,IAC7BI,GAAKU,EAAMC,KAAKzB,EAAac,IAEjC,OAAOU,EAAME,KAAK,MAGtB,IAAIC,EAAU,GAEVC,MAAMC,QAAQhC,GACd8B,EAAU9B,EAELX,GAAGC,KAAK2C,WAAWjC,KACxB8B,EAAU9B,KAId,IADA,IAAIkC,EAAa,uBACRhB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxBgB,GAAc,OACd,IAAK,IAAIC,KAAKL,EAAQZ,GACdY,EAAQZ,GAAGkB,eAAeD,KAC1BD,GAAc,OAASJ,EAAQZ,GAAGiB,GAAK,SAI/CD,GAAc,QAElBA,GAAc,WAEdA,GAAc,UAGd,IAAIG,EAAK,IAAMC,eAAeC,UAAUC,UAAUC,UAAU,EAAG,GAG/D,IAFS,IAAOH,eAAeC,UAAUC,UAAUC,UAAU,EAAG,GAEvDvB,EAAI,EAAGA,EAAIY,EAAQV,OAAQF,IAAK,CACrCgB,GAAc,OACd,IAASC,EAAI,EAAGA,EAAIL,EAAQZ,GAAGE,OAAQe,IACnC,GAAIL,EAAQZ,GAAGkB,eAAeD,GAAI,CAC9B,IAEIO,EAFAC,EAAOb,EAAQZ,GAAGiB,GAGtB,GAAa,OAATQ,GAAkC,iBAATA,GAAqC,iBAATA,EA4BrDD,EAAM,aA5BmE,CACrEC,EAAKC,QACLD,EAAOA,EAAKC,OAEhB,IAAiC,IAA5B,GAAKD,GAAM7C,QAAQ,KAAY,CAChC6C,EAAOA,EAAK9C,QAAQ,KAAM,KAAKA,QAAQ,QAASwC,GAChDK,EAAM,cACH,CACH,IAAIG,EAAM,EACNF,IACAE,EAAoB,iBAAPF,EAAkBA,EAAM,IAAKG,OAAOH,EAAK9C,QAAW8C,EAAK9C,QAAQ,MAAO,IAAIA,QAAQ,KAAM,KAAMkD,OAASJ,EAAKI,SAE/H,GAAKC,MAAMH,GASHH,EADA,0CAA0CO,KAAKN,GACzC,OAEA,aAXG,CACbA,EAAOE,EAAIK,WAAWrD,QAAQ,IAAKwC,GAE/BK,EADAG,EAAM,EAAI,EACJ,WAEA,WAatBX,GAAc,cAAgBQ,EAAM,IACpC,GAAIC,IAASA,EAAKP,eAAe,YAAcO,EAAKP,eAAe,YAAa,CACxEO,EAAKP,eAAe,aACpBF,GAAc,0BAA4BS,EAAKQ,QAAU,KAAOR,EAAKC,MAAQ,SAC3ED,EAAKP,eAAe,aACtBF,GAAc,aAAeS,EAAKS,QAAU,KAAOT,EAAKC,MAAQ,SAEpET,SAEAD,GAAc,KAAe,MAARS,EAAe,GAAKA,GAAQ,QAI7DT,GAAc,QAElBA,GAAc,WAEd,IAAImB,EAAW,ojBAEXA,GADO,MAAPhB,EACY,2FAEA,2FAChBgB,GAAY,4BACZA,GAAY,mHACZA,GAAY,8LACZ,IAA0BpC,EAEtBqC,EAAM,CAAEC,UAAWtD,EAAQuD,WAAa,QAASC,MAAOvB,EAAYwB,QAASzD,EAAQ0D,OAAS,IAGlG,OAL0B1C,EAGHqC,EAAVD,EAH2BxD,QAAQ,WAAY,SAAU+D,EAAGC,GAAK,OAAO5C,EAAE4C,OAS/FxE,GAAGC,KAAKC,YAAYuE,UAAUC,KAAO,SAAUC,EAAUC,EAAMN,GAmB3D,IAlBA,IAiBIO,EAjBAC,EAAa,SAAUC,GAEvB,IADA,IAAIC,EAAW,GACNlC,EAAI,EAAGA,EAAIiC,EAAIhD,OAAQe,IAAK,CACjC,IAAImC,EAAwB,OAAXF,EAAIjC,GAAc,GAAKiC,EAAIjC,GAAGe,WAC3CkB,EAAIjC,aAAcoC,OAClBD,EAAaF,EAAIjC,GAAGG,kBAExB,IAAIf,EAAS+C,EAAWzE,QAAQ,KAAM,MAClC0B,EAAOiD,OAAO,cAAgB,IAC9BjD,EAAS,IAAMA,EAAS,KACxBY,EAAI,IACJkC,GAAY,MAChBA,GAAY9C,EAEhB,OAAO8C,EAAW,MAIbnD,EAAI,EAAGA,EAAI+C,EAAK7C,OAAQF,IAC7BgD,GAAWC,EAAWF,EAAK/C,IAG/B,IAe2BuD,EAd3BP,EADe1E,KACIO,UAAUkE,EAAM,CAAES,SAAU,IAAMC,SAAU,IAAKhB,MAAOA,GAAS,KAGpF,GAAItE,GAAGC,KAAKsF,YACR,GAAItE,SAASuE,YAAa,CACtB,IAAIC,EAAcrE,OAAOsE,KAAK,cAAe,UAC7CD,EAAYxE,SAAS0E,MAAMd,GAC3BY,EAAYxE,SAAS2E,QAEPH,EAAYxE,SAASuE,YAAY,UAAU,EAAMb,GAC/Dc,EAAYG,aAEb,CAGHf,EAFU,yCACaO,EACAP,EADYzD,OAAOC,KAAKwE,SAASC,mBAAmBV,MAG3E,IAAIW,EAAe9E,SAASC,cAAc,KAC1C6E,EAAaC,aAAa,OAAQnB,GAClCkB,EAAaC,aAAa,WAAYrB,GAEtC1D,SAASgF,KAAKC,YAAYH,GAC1B3E,OAAO+E,WAAW,WACdJ,EAAaK,QACbnF,SAASgF,KAAKI,YAAYN,IAC3B","sourcesContent":["TC.Util.ExcelExport = function () {\r\n\r\n    var EOL = '\\r\\n';\r\n    var BOM = \"\\ufeff\";\r\n\r\n    /**\r\n     * Stringify one field\r\n     * @param data\r\n     * @param delimier\r\n     * @returns {*}\r\n     */\r\n    this.stringifyField = function (data, delimier, quoteText) {\r\n        if (typeof data === 'string') {\r\n            data = data.replace(/\"/g, '\"\"'); // Escape double qoutes\r\n            if (quoteText || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) data = delimier + data + delimier;\r\n            return data;\r\n        }\r\n\r\n        if (typeof data === 'boolean') {\r\n            return data ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * Creates a csv from a data array\r\n     * @param data\r\n     * @param options\r\n     *  * header - Provide the first row (optional)\r\n     *  * fieldSep - Field separator, default: ',',\r\n     *  * addByteOrderMarker - Add Byte order mark, default(false)\r\n     * @param callback\r\n     */\r\n    this.stringify = function (responseData, options) {\r\n\r\n        var that = this;\r\n        var csv = \"\";\r\n        var csvContent = \"\";\r\n\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n        var fromCharCode = String.fromCharCode;\r\n        var INVALID_CHARACTER_ERR = (function () {\r\n            // fabricate a suitable error object\r\n            try {\r\n                document.createElement('$');\r\n            } catch (error) {\r\n                return error;\r\n            }\r\n        }());\r\n\r\n        // encoder\r\n        window.btoa || (window.btoa = function (string) {\r\n            var a, b, b1, b2, b3, b4, c, i = 0, len = string.length, max = Math.max, result = '';\r\n\r\n            while (i < len) {\r\n                a = string.charCodeAt(i++) || 0;\r\n                b = string.charCodeAt(i++) || 0;\r\n                c = string.charCodeAt(i++) || 0;\r\n\r\n                if (max(a, b, c) > 0xFF) {\r\n                    throw INVALID_CHARACTER_ERR;\r\n                }\r\n\r\n                b1 = (a >> 2) & 0x3F;\r\n                b2 = ((a & 0x3) << 4) | ((b >> 4) & 0xF);\r\n                b3 = ((b & 0xF) << 2) | ((c >> 6) & 0x3);\r\n                b4 = c & 0x3F;\r\n\r\n                if (!b) {\r\n                    b3 = b4 = 64;\r\n                } else if (!c) {\r\n                    b4 = 64;\r\n                }\r\n                result += characters.charAt(b1) + characters.charAt(b2) + characters.charAt(b3) + characters.charAt(b4);\r\n            }\r\n            return result;\r\n        });\r\n\r\n        // decoder\r\n        window.atob || (window.atob = function (string) {\r\n            string = string.replace(/=+$/, '');\r\n            var a, b, b1, b2, b3, b4, c, i = 0, len = string.length, chars = [];\r\n\r\n            if (len % 4 === 1)\r\n                throw INVALID_CHARACTER_ERR;\r\n\r\n            while (i < len) {\r\n                b1 = characters.indexOf(string.charAt(i++));\r\n                b2 = characters.indexOf(string.charAt(i++));\r\n                b3 = characters.indexOf(string.charAt(i++));\r\n                b4 = characters.indexOf(string.charAt(i++));\r\n\r\n                a = ((b1 & 0x3F) << 2) | ((b2 >> 4) & 0x3);\r\n                b = ((b2 & 0xF) << 4) | ((b3 >> 2) & 0xF);\r\n                c = ((b3 & 0x3) << 6) | (b4 & 0x3F);\r\n\r\n                chars.push(fromCharCode(a));\r\n                b && chars.push(fromCharCode(b));\r\n                c && chars.push(fromCharCode(c));\r\n            }\r\n            return chars.join('');\r\n        });\r\n\r\n        var arrData = [];\r\n\r\n        if (Array.isArray(responseData)) {\r\n            arrData = responseData;\r\n        }\r\n        else if (TC.Util.isFunction(responseData)) {\r\n            arrData = responseData();\r\n        }\r\n\r\n        var dataString = '<thead valign=\"top\">';\r\n        for (var i = 0; i < 1; i++) {\r\n            dataString += '<tr>';\r\n            for (var j in arrData[i]) {\r\n                if (arrData[i].hasOwnProperty(j)) {\r\n                    dataString += '<th>' + arrData[i][j] + '</th>';\r\n                }\r\n            }\r\n\r\n            dataString += '</tr>';\r\n        }\r\n        dataString += '</thead>';\r\n\r\n        dataString += '<tbody>';\r\n\r\n        //detectamos separador de miles y de coma en función de la confugración regional de la máquina\r\n        var ds = (1.1).toLocaleString(navigator.language).substring(1, 2);\r\n        var ms = (1000).toLocaleString(navigator.language).substring(1, 2);\r\n\r\n        for (var i = 1; i < arrData.length; i++) {\r\n            dataString += '<tr>';\r\n            for (var j = 0; j < arrData[i].length; j++) {\r\n                if (arrData[i].hasOwnProperty(j)) {\r\n                    var item = arrData[i][j];\r\n                    // Calculo de formato para Excel\r\n                    var cls;\r\n                    if (item !== null && (typeof item === \"string\" || typeof item === \"number\")) {\r\n                        if (item.value) {\r\n                            item = item.value;\r\n                        }\r\n                        if ((\"\" + item).indexOf(\"%\") != -1) {\r\n                            item = item.replace(\" %\", \"%\").replace(/\\.|,/g, ds);\r\n                            cls = \"percent\";\r\n                        } else {\r\n                            var num = 0;\r\n                            if (item) {\r\n                                num = typeof item===\"number\" ? item: (new Number(item.replace ? (item.replace(/\\./g, \"\").replace(/,/g, \".\")).trim() : item.trim()));\r\n                            }\r\n                            if (!isNaN(num)) {\r\n                                item = num.toString().replace(\".\", ds)\r\n                                if (num % 1 > 0) {\r\n                                    cls = \"number2d\";\r\n                                } else {\r\n                                    cls = \"number\";\r\n                                }\r\n                            } else {\r\n                                if (/^\\d{1,2}([.\\/-])\\d{1,2}\\1(\\d{4}|\\d{2})$/.test(item)) {\r\n                                    cls = \"date\";\r\n                                } else {\r\n                                    cls = \"string\";\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        cls = \"string\";\r\n                    }\r\n                    dataString += '<td class=\"' + cls + '\"';\r\n                    if (item && (item.hasOwnProperty('rowspan') || item.hasOwnProperty('colspan'))) {\r\n                        if (item.hasOwnProperty('rowspan')) {\r\n                            dataString += ' valign=\"top\" rowspan=\"' + item.rowspan + '\">' + item.value + '</td>';\r\n                        } if (item.hasOwnProperty('colspan')) {\r\n                            dataString += ' colspan=\"' + item.colspan + '\">' + item.value + '</td>';\r\n                        }\r\n                        j++;\r\n                    } else {\r\n                        dataString += '>' + (item == null ? '' : item) + '</td>';\r\n                    }\r\n                }\r\n            }\r\n            dataString += '</tr>';\r\n        }\r\n        dataString += '</tbody>';\r\n\r\n        var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=ProgId content=Excel.Sheet><meta name=Generator content=\"Microsoft Excel 9\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><style>';\r\n        if (ds === ',')\r\n            template += '<!--table{mso-displayed-decimal-separator:\"\\,\"; mso-displayed-thousand-separator:\"\\.\";}'\r\n        else\r\n            template += '<!--table{mso-displayed-decimal-separator:\"\\.\"; mso-displayed-thousand-separator:\"\\,\";}'       \r\n        template += 'body {visibility:hidden;}';\r\n        template += '.number{mso-number-format:\"\\#\\,\\#\\#0\";} .number2d{mso-number-format:\"\\#\\,\\#\\#0\\.00\";} .percent{mso-number-format:0.00%;} ';\r\n        template += '.date{mso-number-format:\"dd\\/mm\\/yyyy\";} .string{mso-number-format:\"\\@\";} caption{text-align:left;}--></style></head><body><table><caption>{caption}</caption>{table}</table></body></html>';\r\n        var format = function (s, c) { return s.replace(/{(\\w+)}/g, function (m, p) { return c[p]; }) };\r\n\r\n        var ctx = { worksheet: options.workSheet || 'Hoja1', table: dataString, caption: options.title || \"\" };\r\n        csv = format(template, ctx);\r\n\r\n        return csv;\r\n    };\r\n\r\n};\r\nTC.Util.ExcelExport.prototype.Save = function (filename, rows, title) {\r\n    var processRow = function (row) {\r\n        var finalVal = '';\r\n        for (var j = 0; j < row.length; j++) {\r\n            var innerValue = row[j] === null ? '' : row[j].toString();\r\n            if (row[j] instanceof Date) {\r\n                innerValue = row[j].toLocaleString();\r\n            };\r\n            var result = innerValue.replace(/\"/g, '\"\"');\r\n            if (result.search(/(\"|,|\\n)/g) >= 0)\r\n                result = '\"' + result + '\"';\r\n            if (j > 0)\r\n                finalVal += '\\t';\r\n            finalVal += result;\r\n        }\r\n        return finalVal + '\\n';\r\n    };\r\n\r\n    var csvFile;\r\n    for (var i = 0; i < rows.length; i++) {\r\n        csvFile += processRow(rows[i]);\r\n    }\r\n\r\n    var exporter = this;\r\n    csvFile = exporter.stringify(rows, { txtDelim: \"\\\"\", fieldSep: \";\", title: title || \"\" });\r\n\r\n\r\n    if (TC.Util.detectIE()) { //IE\r\n        if (document.execCommand) {\r\n            var downloadWin = window.open(\"about:blank\", \"_blank\");\r\n            downloadWin.document.write(csvFile);\r\n            downloadWin.document.close();\r\n\r\n            var success = downloadWin.document.execCommand('SaveAs', true, filename)\r\n            downloadWin.close();\r\n        }\r\n    } else { //Resto de navegadores\r\n        var uri = 'data:application/vnd.ms-excel;base64,';\r\n        var base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) };\r\n        csvFile = uri + base64(csvFile);\r\n\r\n        var downloadLink = document.createElement('a');\r\n        downloadLink.setAttribute('href', csvFile);\r\n        downloadLink.setAttribute('download', filename);\r\n\r\n        document.body.appendChild(downloadLink);\r\n        window.setTimeout(function () {\r\n            downloadLink.click();\r\n            document.body.removeChild(downloadLink);\r\n        }, 0);\r\n    }\r\n};\r\n"]}