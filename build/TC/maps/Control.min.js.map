{"version":3,"sources":["Control.js"],"names":["TC","control","Control","EventTarget","call","this","map","isActive","isDisabled","len","arguments","length","options","$","extend","id","getUID","CLASS","substr","prototype","div","Util","getDiv","_$div","classList","add","template","exportsState","inherit","ctlProto","show","style","display","hide","render","callback","self","_set1stRenderPromise","renderData","addUIEventListeners","promise","_firstRender","processTemplates","ctl","data","templates","Promise","resolve","reject","htmlPromises","templateKeys","key","dust","cache","err","out","innerHTML","error","prom","ajax","url","method","responseType","push","isFunction","all","then","templateArray","forEach","idx","tpl","compile","loadSource","catch","console","Error","trigger","Consts","event","BEFORECONTROLRENDER","dataObject","classes","DISABLED","remove","loadJSInOrder","window","templating","tplProm","CONTROLRENDER","getRenderedHtml","templateId","html","log","register","active","activate","activeControl","previousActiveControl","deactivate","CONTROLACTIVATE","stopChain","nextControl","getDefaultControl","CONTROLDEACTIVATE","enable","disable","renderPromise","one","addUIEventListener","selector","listener","querySelectorAll","elm","addEventListener","isExclusive","getLocaleString","texts","locale","Cfg","exportState","importState","state"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\nTC.Control = function () {\r\n    const self = this;\r\n    TC.EventTarget.call(self);\r\n\r\n    self.map = null;\r\n    self.isActive = false;\r\n    self.isDisabled = false;\r\n\r\n    var len = arguments.length;\r\n\r\n    self.options = $.extend({}, len > 1 ? arguments[1] : arguments[0]);\r\n    self.id = self.options.id || TC.getUID(self.CLASS.substr(TC.Control.prototype.CLASS.length + 1) + '-');\r\n    self.div = TC.Util.getDiv(self.options.div ? self.options.div : arguments[0]);\r\n    self._$div = $(self.div);\r\n\r\n    // 12/03/2019 GLS https://developer.mozilla.org/es/docs/Web/API/Element/classList\r\n    // MÃºltiples argumentos para add() y remove() IE\tSin soporte\r\n    self.div.classList.add(TC.Control.prototype.CLASS);\r\n    self.div.classList.add(self.CLASS);    \r\n    \r\n    self.template = self.options.template || self.template;\r\n    self.exportsState = false;\r\n};\r\n\r\nTC.inherit(TC.Control, TC.EventTarget);\r\n\r\n(function () {\r\n    const ctlProto = TC.Control.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl';\r\n\r\n    ctlProto.template = '';\r\n\r\n    ctlProto.show = function () {\r\n        this.div.style.display = '';\r\n    };\r\n\r\n    ctlProto.hide = function () {\r\n        this.div.style.display = 'none';\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.renderData(null, function () {\r\n            self.addUIEventListeners();\r\n            if (typeof callback === 'function') {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto._set1stRenderPromise = function (promise) {\r\n        const self = this;\r\n        if (!self._firstRender) {\r\n            self._firstRender = promise;\r\n        }\r\n        return promise;\r\n    };\r\n\r\n    const processTemplates = function (ctl, data, templates) {\r\n        return new Promise(function (resolve, reject) {\r\n            const htmlPromises = [];\r\n            const templateKeys = [];\r\n            for (var key in templates) {\r\n                var template = templates[key];\r\n                if (typeof template === 'string') {\r\n                    if (dust.cache[ctl.CLASS]) {\r\n                        dust.render(ctl.CLASS, data, function (err, out) {\r\n                            ctl.div.innerHTML = out;\r\n                            if (err) {\r\n                                TC.error(err);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        var prom = TC.ajax({\r\n                            url: template,\r\n                            method: \"GET\",\r\n                            responseType: 'text'\r\n                        });\r\n                        htmlPromises.push(prom);\r\n                        templateKeys.push(key);\r\n                    }\r\n                }\r\n                else if ($.isFunction(template)) {\r\n                    template();\r\n                }\r\n            }\r\n\r\n            if (htmlPromises.length === 0) {\r\n                resolve();\r\n            }\r\n            else {\r\n                Promise.all(htmlPromises)\r\n                    .then(function (templateArray) {\r\n                        templateArray.forEach(function (template, idx) {\r\n                            const tpl = dust.compile(template, templateKeys[idx]);\r\n                            dust.loadSource(tpl);\r\n                        });\r\n                        resolve();\r\n                    })\r\n                    .catch(function (err) {\r\n                        console.error(\"Error fetching templates: \" + err);\r\n                        reject(err instanceof Error ? err : Error(err));\r\n                    });\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    ctlProto.renderData = function (data, callback) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.map) {\r\n                self.trigger(TC.Consts.event.BEFORECONTROLRENDER, { dataObject: data });\r\n            }\r\n            if (self.isDisabled) {\r\n                self.div.classList.add(TC.Consts.classes.DISABLED);\r\n            }\r\n            else {\r\n                self.div.classList.remove(TC.Consts.classes.DISABLED);\r\n            }\r\n\r\n            TC.loadJSInOrder(\r\n                !window.dust,\r\n                TC.url.templating,\r\n                function () {\r\n                    var tplProm;\r\n\r\n                    if (typeof self.template === 'object') {\r\n                        tplProm = processTemplates(self, data, self.template);\r\n                    }\r\n                    else {\r\n                        var templates = {};\r\n\r\n                        if (self.template) templates[self.CLASS] = self.template;\r\n\r\n\r\n                        tplProm = processTemplates(self, data, templates);\r\n                    }\r\n\r\n                    tplProm\r\n                        .then(function () {\r\n                            if (dust.cache[self.CLASS]) {\r\n                                dust.render(self.CLASS, data, function (err, out) {\r\n                                    self.div.innerHTML = out;\r\n                                    if (err) {\r\n                                        reject(Error(err));\r\n                                        TC.error(err);\r\n                                    }\r\n                                });\r\n                            }\r\n\r\n                            self.trigger(TC.Consts.event.CONTROLRENDER);\r\n                            if ($.isFunction(callback)) {\r\n                                callback();\r\n                            }\r\n                            resolve();\r\n                        })\r\n                        .catch(function (err) {\r\n                            reject(Error(err));\r\n                        });\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    ctlProto.getRenderedHtml = function (templateId, data, callback) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var render = function () {\r\n                if (dust.cache[templateId]) {\r\n                    dust.render(templateId, data, function (err, out) {\r\n                        if (err) {\r\n                            TC.error(err);\r\n                            reject(Error(err));\r\n                        }\r\n                        else {\r\n                            if ($.isFunction(callback)) {\r\n                                callback(out);\r\n                            }\r\n                            resolve(out);\r\n                        }\r\n                    });\r\n                }\r\n            };\r\n            TC.loadJSInOrder(\r\n                !window.dust,\r\n                TC.url.templating,\r\n                function () {\r\n                    if (!dust.cache[templateId]) {\r\n                        var template = self.template[templateId];\r\n                        if (typeof template === 'string') {\r\n                            TC.ajax({\r\n                                url: template,\r\n                                method: \"GET\",\r\n                                responseType: 'text'\r\n                            })\r\n                                .then(function (html) {\r\n                                    var tpl = dust.compile(html, templateId);\r\n                                    dust.loadSource(tpl);\r\n                                    render();\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(\"Error fetching template: \" + err)\r\n                                });\r\n                        }\r\n                        else if ($.isFunction(template)) {\r\n                            template();\r\n                            render();\r\n                        }\r\n                    }\r\n                    else {\r\n                        render();\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            self.map = map;\r\n            Promise.resolve(self.render()).then(function () {\r\n                if (self.options.active) {\r\n                    self.activate();\r\n                }\r\n                resolve(self);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        var self = this;\r\n        if (self.map && self.map.activeControl && self.map.activeControl != self) {\r\n            self.map.previousActiveControl = self.map.activeControl;\r\n            self.map.activeControl.deactivate();\r\n        }\r\n        self.isActive = true;\r\n        if (self.map) {\r\n            self.map.activeControl = self;\r\n            self.map.trigger(TC.Consts.event.CONTROLACTIVATE, { control: self });\r\n            self.trigger(TC.Consts.event.CONTROLACTIVATE, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.deactivate = function (stopChain) {\r\n        if (arguments.length == 0) stopChain = false;\r\n\r\n        var self = this;\r\n        self.isActive = false;\r\n        if (self.map) {\r\n            self.map.activeControl = null;\r\n\r\n            if (!stopChain) {\r\n                //determinar cuÃ¡l es el control predeterminado para reactivarlo\r\n                //salvo que sea yo mismo, claro\r\n                var nextControl = self.map.getDefaultControl();\r\n                if (nextControl == self) nextControl = null;\r\n                else if (self.map.previousActiveControl == self) // GLS: Validamos antes de activar que el control activo anterior sea distinto al control actual\r\n                    nextControl = null;\r\n                else if (!nextControl) {\r\n                    nextControl = self.map.previousActiveControl;\r\n                }\r\n\r\n                if (nextControl)\r\n                    nextControl.activate();\r\n            }\r\n            self.map.trigger(TC.Consts.event.CONTROLDEACTIVATE, { control: self });\r\n            self.trigger(TC.Consts.event.CONTROLDEACTIVATE, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.enable = function () {\r\n        var self = this;\r\n        self.isDisabled = false;\r\n        if (self.div) {\r\n            self.div.classList.remove(TC.Consts.classes.DISABLED);\r\n        }\r\n    };\r\n\r\n    ctlProto.disable = function () {\r\n        var self = this;\r\n        self.isDisabled = true;\r\n        if (self.div) {\r\n            self.div.classList.add(TC.Consts.classes.DISABLED);\r\n        }\r\n    };\r\n\r\n    ctlProto.renderPromise = function () {\r\n        const self = this;\r\n        return self._firstRender || new Promise(function (resolve, reject) {\r\n            self.one(TC.Consts.event.CONTROLRENDER, function () {\r\n                resolve(self);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.addUIEventListener = function (selector, event, listener) {\r\n        const self = this;\r\n        const elements = selector ? self.div.querySelectorAll(selector) : [self.div];\r\n        elements.forEach(function (elm) {\r\n            elm.addEventListener(event, listener);\r\n        });\r\n    };\r\n\r\n    ctlProto.addUIEventListeners = function () {\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return false;\r\n    };\r\n\r\n    ctlProto.getLocaleString = function (key, texts) {\r\n        var self = this;\r\n        var locale = self.map ? self.map.options.locale : TC.Cfg.locale;\r\n        return TC.Util.getLocaleString(locale, key, texts);\r\n    };\r\n\r\n    ctlProto.getUID = function () {\r\n        const self = this;\r\n        return TC.getUID(self.id + '-');\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState) {\r\n            return {};\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n    };\r\n})();"],"file":"../Control.min.js"}