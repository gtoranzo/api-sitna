{"version":3,"sources":["control/FeatureDownloadDialog.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","FeatureDownloadDialog","apply","this","arguments","title","options","cssClass","_selectors","ELEVATION_CHECKBOX","CLASS","INTERPOLATION_PANEL","INTERPOLATION_RADIO","INTERPOLATION_DISTANCE","inherit","ctlProto","prototype","displayElevation","_formats","interpolation","interpolationDistance","template","dust","register","body_0","chk","ctx","w","f","get","s","block","body_1","body_3","__dustBody","h","$key","x","body_2","body_4","key","getPath","body_5","value","body_6","body_7","body_8","body_9","body_10","render","callback","call","open","features","self","getRenderedHtml","Object","assign","checkboxId","getUID","elevation","formats","filter","item","excludedFormats","indexOf","html","document","createElement","innerHTML","modal","content","firstChild","body","appendChild","modalBody","getElementsByClassName","addEventListener","Consts","event","CLICK","EventTarget","listenerBySelector","e","resolution","parseFloat","querySelector","map","endExport","async","cancel","format","GEOJSON","WKT","Array","some","feat","attr","getData","data","confirm","getLocaleString","li","getLoadingIndicator","waitId","addWait","Util","closeModal","featureOrFeatures","isArray","Promise","resolve","reject","getGeometryStride","clone","getCoordsArray","forEach","coord","length","setCoords","geometry","mustInterpolate","featuresToAddElevation","elevOptions","crs","maxCoordQuantity","sampleNumber","tool","Elevation","setGeometry","then","processedFeatures","index","error","Error","fileName","toLowerCase","replace","getFormattedDate","Date","toString","exportFeatures","message","errors","MAX_COORD_QUANTITY_EXCEEDED","alert","finally","removeWait","target","dataset","GPX","feature","Polygon","hasLines","Polyline","MultiPolyline","hasPolygons","MultiPolygon","checked","classList","remove","classes","HIDDEN","querySelectorAll","ipPanel","toggle","showModal","closeCallback","parentElement","removeChild"],"mappings":"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","sourcesContent":["\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\n\r\nTC.control.FeatureDownloadDialog = function () {\r\n    var self = this;\r\n    TC.Control.apply(self, arguments);\r\n    self.title = self.options.title;\r\n    self.cssClass = self.options.cssClass || \"\";\r\n\r\n    self._selectors = {\r\n        ELEVATION_CHECKBOX: \".\" + self.CLASS + '-elev input[type=checkbox]',\r\n        INTERPOLATION_PANEL: \".\" + self.CLASS + '-ip',\r\n        INTERPOLATION_RADIO: 'input[type=radio][name=finfo-ip-coords]',\r\n        INTERPOLATION_DISTANCE: \".\" + self.CLASS + '-ip-m'\r\n    };\r\n};\r\n\r\nTC.inherit(TC.control.FeatureDownloadDialog, TC.Control);\r\n\r\n(function () {\r\n\r\n    const ctlProto = TC.control.FeatureDownloadDialog.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-dwn-dialog';\r\n\r\n    var _formats= [\"KML\", \"GML\", \"GeoJSON\", \"WKT\", \"GPX\"];\r\n\r\n    //if (window.JSZip) {\r\n    //    if (window.JSZip instanceof Promise)\r\n    //        window.JSZip.then(function () {\r\n    //            _formats.splice(1, 0, \"KMZ\");\r\n    //        });\r\n    //    else\r\n    //        _formats.splice(1, 0, \"KMZ\");\r\n    //}\r\n\r\n    var displayElevation, interpolation = false;\r\n    var interpolationDistance = null;\r\n\r\n    ctlProto.template = {};   \r\n\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/FeatureDownloadDialog.html\";\r\n\r\n    const addElevationAndInterpolation = function (featureOrFeatures, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const features = Array.isArray(featureOrFeatures) ? featureOrFeatures : [featureOrFeatures];\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            //si no se incluyen las elevaciones quito las Z de las geometrias que las tuvieran\r\n            if (!options.displayElevation) {\r\n                resolve(features.map(function (feat) {\r\n                    if (feat.getGeometryStride() > 2) {\r\n                        const f = feat.clone();\r\n                        f.getCoordsArray().forEach(coord => coord.length = 2);\r\n                        f.setCoords(f.geometry);\r\n                        return f;\r\n                    }\r\n                    return feat;\r\n                }));\r\n                return;\r\n            }\r\n\r\n            let mustInterpolate = options.elevation && options.elevation.resolution;\r\n            // Array con features sin altura y nulo donde habia feature con alturas\r\n            let featuresToAddElevation = mustInterpolate ? features.map(f => f.clone()) : features.map(f => f.getGeometryStride() > 2 ? null : f.clone());\r\n            \r\n            if (mustInterpolate || featuresToAddElevation.some(f => f !== null)) {\r\n                const elevOptions = {\r\n                    crs: self.map.crs,\r\n                    features: featuresToAddElevation,\r\n                    maxCoordQuantity: options.elevation && options.elevation.maxCoordQuantity,\r\n                    resolution: options.elevation.resolution,\r\n                    sampleNumber: options.elevation.sampleNumber || 0\r\n                };                    \r\n                (self.map.elevation || new TC.tool.Elevation(typeof self.options.elevation === 'boolean' ? {} : self.options.elevation)).setGeometry(elevOptions).then(\r\n                    function (processedFeatures) {\r\n                        // Recombinamos features procesadas y sin procesar\r\n                        processedFeatures.forEach((f, index) => {\r\n                            if (!f) {\r\n                                processedFeatures[index] = features[index];\r\n                            }\r\n                        });\r\n                        resolve(processedFeatures);\r\n                    },\r\n                    function (error) {\r\n                        reject(error instanceof Error ? error : Error(error));\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                resolve(features);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.render.call(self, callback);\r\n        return result;\r\n        \r\n    };\r\n\r\n    ctlProto.open = function (features, options) {\r\n        const self = this;\r\n\r\n        ctlProto.getRenderedHtml(ctlProto.CLASS, Object.assign({}, {\r\n            cssClass: self.cssClass,\r\n            checkboxId: self.getUID(),\r\n            elevation: options.elevation,//options.elevation ? (options.elevation instanceof Object ? options.elevation : self.map.elevation.options) : options.elevation,\r\n            formats: _formats.filter(function (item) {\r\n                return (options && options.excludedFormats && options.excludedFormats.indexOf(item) < 0) | (!options | !options.excludedFormats)\r\n            })\r\n        }, options), function (html) {\r\n            var template = document.createElement('template');\r\n            template.innerHTML = html;\r\n            var modal = template.content ? template.content.firstChild : template.firstChild;            \r\n            document.body.appendChild(modal);\r\n\r\n            var modalBody = modal.getElementsByClassName(\"tc-modal-body\")[0];\r\n            modalBody.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('button[data-format]', function (e) {\r\n\r\n                var resolution = displayElevation && interpolation ? parseFloat(modalBody.querySelector(self._selectors.INTERPOLATION_DISTANCE + ' input[type=number]').value) || (self.options.elevation || self.map.elevation.options).resolution : 0\r\n\r\n                const endExport = async (features) => {\r\n\r\n                    //checkear si son features con datos complejos\r\n                    var cancel = false;\r\n                    if (format !== TC.Consts.format.GEOJSON && options.format !== TC.Consts.format.WKT && (features instanceof Array ? features : [features]).some(function (feat) {\r\n                        for (var attr in feat.getData()) {\r\n                            if (feat.data[attr] instanceof Object)\r\n                                return true\r\n                        }\r\n                        return false;\r\n                    }))\r\n                        await TC.confirm(self.getLocaleString(\"dl.export.complexAttr\").format(format), null,\r\n                            function () {\r\n                                cancel = true\r\n                            });\r\n                    if (cancel) { return };\r\n\r\n                    const li = self.map.getLoadingIndicator();\r\n                    const waitId = li && li.addWait();\r\n\r\n\r\n                    TC.Util.closeModal();\r\n                    addElevationAndInterpolation.apply(self, [features,\r\n                        {\r\n                            displayElevation: displayElevation,\r\n                            elevation: displayElevation ? Object.assign({}, options.elevation || self.map.elevation.options, { resolution: resolution }) : null\r\n                        }]).then(\r\n                        function (features) {\r\n                            let fileName = (options ? (options.fileName || options.title.toLowerCase().replace(/ /g, '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true) || \"download_\" + TC.Util.getFormattedDate(new Date().toString(), true)) : (options.title.toLowerCase().replace(/ /g, '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true) || \"download_\" + TC.Util.getFormattedDate(new Date().toString(), true)));                            \r\n                            self.map.exportFeatures(features, {\r\n                                fileName: fileName,\r\n                                format: format\r\n                            });\r\n                        },\r\n                        function (error) {\r\n                            self.open(features, options)\r\n                            if (TC.tool.Elevation && error.message === TC.tool.Elevation.errors.MAX_COORD_QUANTITY_EXCEEDED) {\r\n                                TC.alert(self.getLocaleString('tooManyCoordinatesForElevation.warning'));\r\n                                return;\r\n                            }\r\n                            TC.error(self.getLocaleString('elevation.error'));\r\n                        }\r\n                        ).finally(function () {\r\n                            li && li.removeWait(waitId);\r\n                        });\r\n                }\r\n\r\n                const format = e.target.dataset.format;\r\n                if (format === TC.Consts.format.GPX) {\r\n\r\n                    if ((features instanceof Array ? features : [features]).some(function (feature) {\r\n                        return TC.feature.Polygon && feature instanceof TC.feature.Polygon;\r\n                    })) {\r\n                        TC.confirm(self.getLocaleString('gpxNotCompatible.confirm'), function () {\r\n                            endExport((features instanceof Array ? features : [features]).filter((f) => { return TC.feature.Polygon && !(f instanceof TC.feature.Polygon); }));\r\n                        });\r\n                    }\r\n                    else {\r\n                        endExport(features);\r\n                    }\r\n                }\r\n                else {\r\n                    endExport(features);\r\n                }\r\n\r\n\r\n            }));\r\n\r\n            const hasLines = (features instanceof Array ? features : [features]).some(function (feature) {\r\n                return (TC.feature.Polyline && feature instanceof TC.feature.Polyline) ||\r\n                    (TC.feature.MultiPolyline && feature instanceof TC.feature.MultiPolyline);\r\n            });\r\n            const hasPolygons = (features instanceof Array ? features : [features]).some(function (feature) {\r\n                return (TC.feature.Polygon && feature instanceof TC.feature.Polygon) ||\r\n                    (TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon);\r\n            });\r\n            if (options.elevation) {\r\n                modalBody.querySelector(self._selectors.ELEVATION_CHECKBOX).checked = (displayElevation == true);\r\n                if (displayElevation && (hasLines || hasPolygons) && options.elevation.resolution) {\r\n                    modalBody.querySelector(self._selectors.INTERPOLATION_PANEL).classList.remove(TC.Consts.classes.HIDDEN);                    \r\n                }\r\n                if (modalBody.querySelector(self._selectors.INTERPOLATION_PANEL)) {\r\n                    modalBody.querySelectorAll(self._selectors.INTERPOLATION_RADIO)[interpolation ? 1 : 0].checked = true;\r\n                    if (interpolation) {\r\n                        modalBody.querySelector(self._selectors.INTERPOLATION_DISTANCE).classList.remove(TC.Consts.classes.HIDDEN);\r\n                        modalBody.querySelector(self._selectors.INTERPOLATION_DISTANCE + \" input\").value = interpolationDistance || modalBody.querySelector(self._selectors.INTERPOLATION_DISTANCE + \" input\").value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            modalBody.addEventListener('change', TC.EventTarget.listenerBySelector(self._selectors.ELEVATION_CHECKBOX, function (e) {\r\n                //self.showDownloadDialog(); // Recalculamos todo el aspecto del diálogo de descarga\r\n                var ipPanel = modalBody.querySelector(self._selectors.INTERPOLATION_PANEL);\r\n                if (ipPanel) { ipPanel.classList.toggle(TC.Consts.classes.HIDDEN, displayElevation || !(hasLines || hasPolygons)); }\r\n                displayElevation = !displayElevation;\r\n            }));\r\n            modalBody.addEventListener('change', TC.EventTarget.listenerBySelector(self._selectors.INTERPOLATION_RADIO, function (e) {\r\n                const idDiv = modalBody.querySelector(self._selectors.INTERPOLATION_DISTANCE);\r\n                idDiv.classList.toggle(TC.Consts.classes.HIDDEN);\r\n                interpolation = !interpolation;\r\n                if (interpolation) modalBody.querySelector(self._selectors.INTERPOLATION_DISTANCE + \" input\").value = interpolationDistance || modalBody.querySelector(self._selectors.INTERPOLATION_DISTANCE + \" input\").value;\r\n            }));\r\n            modalBody.addEventListener('change', TC.EventTarget.listenerBySelector(self._selectors.INTERPOLATION_DISTANCE, function (e) {\r\n                interpolationDistance = e.target.value;\r\n            }));\r\n\r\n            TC.Util.showModal(modal, {\r\n                closeCallback: function () {\r\n                    modal.parentElement.removeChild(modal);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    \r\n})();"]}