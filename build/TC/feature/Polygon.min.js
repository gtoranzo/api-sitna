TC.feature=TC.feature||{};TC.Feature||TC.syncLoadJS(TC.apiLocation+"TC/Feature");TC.feature.Polygon=function(t,o){const e=this;TC.Feature.apply(e,arguments);if(!e.wrap.isNative(t)){o=e.options=TC.Util.extend(!0,e.options,TC.Cfg.styles.polygon,o);e.wrap.createPolygon(t,o)}};TC.inherit(TC.feature.Polygon,TC.Feature);TC.feature.Polygon.prototype.STYLETYPE=TC.Consts.geom.POLYGON;TC.feature.Polygon.prototype.CLASSNAME="TC.feature.Polygon";TC.feature.Polygon.prototype.getCoords=function(t){t=t||{};const o=TC.Feature.prototype.getCoords.call(this,t);return t.pointArray?[].concat.apply([],o):o};TC.feature.Polygon.prototype.setCoords=function(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Error("Coordinates not valid for polygon");Array.isArray(t[0][0])||(t=[t]);t.forEach(function(t){const o=t[0],e=t[t.length-1];o[0]===e[0]&&o[1]===e[1]||(t[t.length]=o)});return TC.Feature.prototype.setCoords.call(this,t)};TC.feature.Polygon.prototype.getLength=function(t){return this.wrap.getLength(t)};TC.feature.Polygon.prototype.getArea=function(t){return this.wrap.getArea(t)};
//# sourceMappingURL=../maps/feature/Polygon.min.js.map