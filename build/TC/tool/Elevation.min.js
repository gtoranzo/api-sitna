TC.tool=TC.tool||{};TC.tool.Elevation=function(e){const n=this;n.options=e||{};n._servicePromises=[];const o=n.options.services||["elevationServiceIDENA","elevationServiceIGNFr"],t=new Promise(function(e,n){TC.loadJS(!TC.tool.ElevationService,TC.apiLocation+"TC/tool/ElevationService",function(){e()})});o.forEach(function(e,o){n._servicePromises[o]=new Promise(function(n,o){const i="string"==typeof e?e:e.name,r=i.substr(0,1).toUpperCase()+i.substr(1),l=TC.apiLocation+"TC/tool/"+r,u="string"==typeof e?{}:e;TC.loadJS(!TC.tool[r],l,function(){t.then(function(){n(new TC.tool[r](u))})})})})};!function(){const e=TC.tool.Elevation.prototype;e.getService=function(e){return this._servicePromises[e]};const n=function(e){const n=e.length?e[0].length:0,o=new Array(n);if(n){const r=function(e){return function(n,o,t){const i=o[e],r=n;null===n[0]&&i&&(r[0]=i[0]);null===n[1]&&i&&(r[1]=i[1]);null===n[2]&&i&&(r[2]=i[2]);return r}};for(var t=0;t<n;t++){var i=r(t);o[t]=e.reduce(i,[null,null,null])}}return o};e.getElevation=function(e){const o=this;void 0===(e=e||{}).resolution&&(e.resolution=o.options.resolution);void 0===e.sampleNumber&&(e.sampleNumber=o.options.sampleNumber);let t,i;TC.Util.isFunction(e.partialCallback)&&(i=e.partialCallback);return new Promise(function(r,l){const u=function(e,n){l(e,n)};TC.loadJS(!TC.Geometry,TC.apiLocation+"TC/Geometry",function(){Promise.all(o._servicePromises).then(function(o){const l=new Array(o.length);o.forEach(function(o,r){l[r]=new Promise(function(n,t){o.request(e).then(function(t){n(o.parseResponse(t,e))},function(){n(null)})});i&&l[r].then(function(e){if(null!==e){t=t?n([t,e]):e;i(t)}})});Promise.all(l).then(function(e){r(n(e.filter(e=>null!==e)))},u)},u)})})};e.setGeometry=function(e){const n=this,o=(e=e||{}).features||[];if(o.length){const t=function(e,n,o){Promise.all(e).then(function(e){n(e)},function(e){o(e)})};return new Promise(function(i,r){if(e.maxCoordQuantity&&e.resolution){if(o.reduce(function(n,o){if(o){n+=o.getCoords({pointArray:!0}).length;switch(!0){case TC.feature.Polyline&&o instanceof TC.feature.Polyline:case TC.feature.Polygon&&o instanceof TC.feature.Polygon:case TC.feature.MultiPolyline&&o instanceof TC.feature.MultiPolyline:case TC.feature.MultiPolygon&&o instanceof TC.feature.MultiPolygon:n+=Math.floor(o.getLength()/e.resolution)}}return n},0)>e.maxCoordQuantity){r(Error(TC.tool.Elevation.errors.MAX_COORD_QUANTITY_EXCEEDED));return}}const l=e.resolution||0,u=function(n){return{crs:e.crs,coordinates:n,resolution:l,sampleNumber:0}},a=function(e){return n.getElevation(u(e))},s=o.map(function(e){return new Promise(function(o,i){switch(!0){case!e:o(null);break;case TC.feature&&TC.feature.MultiPolygon&&e instanceof TC.feature.MultiPolygon:const r=e.getCoords().map(function(e){return new Promise(function(n,o){t(e.map(a),n,o)})});t(r,o,i);break;case TC.feature&&TC.feature.Polygon&&e instanceof TC.feature.Polygon:case TC.feature&&TC.feature.MultiPolyline&&e instanceof TC.feature.MultiPolyline:const l=e.getCoords().map(a);t(l,o,i);break;case TC.feature&&TC.feature.Polyline&&e instanceof TC.feature.Polyline:n.getElevation(u(e.getCoords())).then(function(e){o(e)},function(e){i(Error(e))});break;case TC.feature&&TC.feature.Point&&e instanceof TC.feature.Point:n.getElevation(u(e.getCoords())).then(function(e){o(e[0])},function(e){i(Error(e))});break;default:i(Error("Geometry not supported"))}})});Promise.all(s).then(function(e){e.forEach(function(e,n){const t=o[n];if(t){console.log("Estableciendo elevaciones a geometr\xeda de tipo "+t.CLASSNAME);o[n].setCoords(e)}});i(o)},function(e){r(e)})})}return Promise.resolve([])}}();TC.tool.Elevation.errors={MAX_COORD_QUANTITY_EXCEEDED:"max_coord_quantity_exceeded",UNDEFINED:"undefined"};TC.tool.Elevation.getElevationGain=function(e){const n=(e=e||{}).coords;if(n&&n.length>0&&n[0].length>2){var o=0,t=0;const f=e.hillDeltaThreshold||0;for(var i,r,l,u=!0,a=0;a<n.length;a++){var s=n[a][2];if(null!==s){if(void 0===i){i=s;r=s;l=s}r=Math.min(r,s);l=Math.max(l,s);var c=s-i;if(c>f||c>0&&a==n.length-1){if(u)o+=c;else{t-=r-i;o+=s-r;u=!0}i=s;r=s;l=s}else if(c<-f||c<0&&a==n.length-1){if(u){o+=l-i;t-=s-l;u=!1}else t-=c;i=s;r=s;l=s}}}return{upHill:Math.round(o),downHill:Math.round(t)}}return null};
//# sourceMappingURL=../maps/tool/Elevation.min.js.map